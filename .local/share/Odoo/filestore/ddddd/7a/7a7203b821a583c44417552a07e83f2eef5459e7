
/* /web/static/src/module_loader.js */
(function(){"use strict";class ModuleLoader{factories=new Map();jobs=new Set();failed=new Set();modules=new Map();bus=new EventTarget();checkErrorProm=null;define(name,deps,factory){if(typeof name!=="string"){throw new Error(`Invalid name definition: ${name} (should be a string)"`);}
if(!(deps instanceof Array)){throw new Error(`Dependencies should be defined by an array: ${deps}`);}
if(typeof factory!=="function"){throw new Error(`Factory should be defined by a function ${factory}`);}
if(!this.factories.has(name)){this.factories.set(name,{deps,fn:factory,ignoreMissingDeps:globalThis.__odooIgnoreMissingDependencies,});this.addJob(name);this.checkErrorProm||=Promise.resolve().then(()=>{this.checkAndReportErrors();this.checkErrorProm=null;});}}
addJob(name){this.jobs.add(name);this.startModules();}
findJob(){for(const job of this.jobs){if(this.factories.get(job).deps.every((dep)=>this.modules.has(dep))){return job;}}
return null;}
startModules(){let job;while((job=this.findJob())){this.startModule(job);}}
startModule(name){const require=(name)=>this.modules.get(name);this.jobs.delete(name);const factory=this.factories.get(name);let value=null;try{value=factory.fn(require);}catch(error){this.failed.add(name);throw new Error(`Error while loading "${name}":\n${error}`);}
this.modules.set(name,value);this.bus.dispatchEvent(new CustomEvent("module-started",{detail:{moduleName:name,module:value}}));}
findErrors(){const dependencyGraph=new Map();for(const job of this.jobs){dependencyGraph.set(job,this.factories.get(job).deps);}
function visitJobs(jobs,visited=new Set()){for(const job of jobs){const result=visitJob(job,visited);if(result){return result;}}
return null;}
function visitJob(job,visited){if(visited.has(job)){const jobs=Array.from(visited).concat([job]);const index=jobs.indexOf(job);return jobs.slice(index).map((j)=>`"${j}"`).join(" => ");}
const deps=dependencyGraph.get(job);return deps?visitJobs(deps,new Set(visited).add(job)):null;}
const missing=new Set();for(const job of this.jobs){const factory=this.factories.get(job);if(factory.ignoreMissingDeps){continue;}
for(const dep of factory.deps){if(!this.factories.has(dep)){missing.add(dep);}}}
return{failed:[...this.failed],cycle:visitJobs(this.jobs),missing:[...missing],unloaded:[...this.jobs].filter((j)=>!this.factories.get(j).ignoreMissingDeps),};}
async checkAndReportErrors(){const{failed,cycle,missing,unloaded}=this.findErrors();if(!failed.length&&!unloaded.length){return;}
function domReady(cb){if(document.readyState==="complete"){cb();}else{document.addEventListener("DOMContentLoaded",cb);}}
function list(heading,names){const frag=document.createDocumentFragment();if(!names||!names.length){return frag;}
frag.textContent=heading;const ul=document.createElement("ul");for(const el of names){const li=document.createElement("li");li.textContent=el;ul.append(li);}
frag.appendChild(ul);return frag;}
domReady(()=>{while(document.body.childNodes.length){document.body.childNodes[0].remove();}
const container=document.createElement("div");container.className="o_module_error position-fixed w-100 h-100 d-flex align-items-center flex-column bg-white overflow-auto modal";container.style.zIndex="10000";const alert=document.createElement("div");alert.className="alert alert-danger o_error_detail fw-bold m-auto";container.appendChild(alert);alert.appendChild(list("The following modules failed to load because of an error, you may find more information in the devtools console:",failed));alert.appendChild(list("The following modules could not be loaded because they form a dependency cycle:",cycle&&[cycle]));alert.appendChild(list("The following modules are needed by other modules but have not been defined, they may not be present in the correct asset bundle:",missing));alert.appendChild(list("The following modules could not be loaded because they have unmet dependencies, this is a secondary error which is likely caused by one of the above problems:",unloaded));document.body.appendChild(container);});}}
if(!globalThis.odoo){globalThis.odoo={};}
const odoo=globalThis.odoo;if(odoo.debug&&!new URLSearchParams(location.search).has("debug")){odoo.debug="";}
const loader=new ModuleLoader();odoo.define=loader.define.bind(loader);odoo.loader=loader;})();;

/* /web/static/lib/luxon/luxon.js */
var luxon=(function(exports){'use strict';class LuxonError extends Error{}
class InvalidDateTimeError extends LuxonError{constructor(reason){super(`Invalid DateTime: ${reason.toMessage()}`);}}
class InvalidIntervalError extends LuxonError{constructor(reason){super(`Invalid Interval: ${reason.toMessage()}`);}}
class InvalidDurationError extends LuxonError{constructor(reason){super(`Invalid Duration: ${reason.toMessage()}`);}}
class ConflictingSpecificationError extends LuxonError{}
class InvalidUnitError extends LuxonError{constructor(unit){super(`Invalid unit ${unit}`);}}
class InvalidArgumentError extends LuxonError{}
class ZoneIsAbstractError extends LuxonError{constructor(){super("Zone is an abstract class");}}
const n="numeric",s="short",l="long";const DATE_SHORT={year:n,month:n,day:n,};const DATE_MED={year:n,month:s,day:n,};const DATE_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,};const DATE_FULL={year:n,month:l,day:n,};const DATE_HUGE={year:n,month:l,day:n,weekday:l,};const TIME_SIMPLE={hour:n,minute:n,};const TIME_WITH_SECONDS={hour:n,minute:n,second:n,};const TIME_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,timeZoneName:s,};const TIME_WITH_LONG_OFFSET={hour:n,minute:n,second:n,timeZoneName:l,};const TIME_24_SIMPLE={hour:n,minute:n,hourCycle:"h23",};const TIME_24_WITH_SECONDS={hour:n,minute:n,second:n,hourCycle:"h23",};const TIME_24_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:s,};const TIME_24_WITH_LONG_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:l,};const DATETIME_SHORT={year:n,month:n,day:n,hour:n,minute:n,};const DATETIME_SHORT_WITH_SECONDS={year:n,month:n,day:n,hour:n,minute:n,second:n,};const DATETIME_MED={year:n,month:s,day:n,hour:n,minute:n,};const DATETIME_MED_WITH_SECONDS={year:n,month:s,day:n,hour:n,minute:n,second:n,};const DATETIME_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,hour:n,minute:n,};const DATETIME_FULL={year:n,month:l,day:n,hour:n,minute:n,timeZoneName:s,};const DATETIME_FULL_WITH_SECONDS={year:n,month:l,day:n,hour:n,minute:n,second:n,timeZoneName:s,};const DATETIME_HUGE={year:n,month:l,day:n,weekday:l,hour:n,minute:n,timeZoneName:l,};const DATETIME_HUGE_WITH_SECONDS={year:n,month:l,day:n,weekday:l,hour:n,minute:n,second:n,timeZoneName:l,};class Zone{get type(){throw new ZoneIsAbstractError();}
get name(){throw new ZoneIsAbstractError();}
get ianaName(){return this.name;}
get isUniversal(){throw new ZoneIsAbstractError();}
offsetName(ts,opts){throw new ZoneIsAbstractError();}
formatOffset(ts,format){throw new ZoneIsAbstractError();}
offset(ts){throw new ZoneIsAbstractError();}
equals(otherZone){throw new ZoneIsAbstractError();}
get isValid(){throw new ZoneIsAbstractError();}}
let singleton$1=null;class SystemZone extends Zone{static get instance(){if(singleton$1===null){singleton$1=new SystemZone();}
return singleton$1;}
get type(){return"system";}
get name(){return new Intl.DateTimeFormat().resolvedOptions().timeZone;}
get isUniversal(){return false;}
offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale);}
formatOffset(ts,format){return formatOffset(this.offset(ts),format);}
offset(ts){return-new Date(ts).getTimezoneOffset();}
equals(otherZone){return otherZone.type==="system";}
get isValid(){return true;}}
let dtfCache={};function makeDTF(zone){if(!dtfCache[zone]){dtfCache[zone]=new Intl.DateTimeFormat("en-US",{hour12:false,timeZone:zone,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short",});}
return dtfCache[zone];}
const typeToPos={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6,};function hackyOffset(dtf,date){const formatted=dtf.format(date).replace(/\u200E/g,""),parsed=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(formatted),[,fMonth,fDay,fYear,fadOrBc,fHour,fMinute,fSecond]=parsed;return[fYear,fMonth,fDay,fadOrBc,fHour,fMinute,fSecond];}
function partsOffset(dtf,date){const formatted=dtf.formatToParts(date);const filled=[];for(let i=0;i<formatted.length;i++){const{type,value}=formatted[i];const pos=typeToPos[type];if(type==="era"){filled[pos]=value;}else if(!isUndefined(pos)){filled[pos]=parseInt(value,10);}}
return filled;}
let ianaZoneCache={};class IANAZone extends Zone{static create(name){if(!ianaZoneCache[name]){ianaZoneCache[name]=new IANAZone(name);}
return ianaZoneCache[name];}
static resetCache(){ianaZoneCache={};dtfCache={};}
static isValidSpecifier(s){return this.isValidZone(s);}
static isValidZone(zone){if(!zone){return false;}
try{new Intl.DateTimeFormat("en-US",{timeZone:zone}).format();return true;}catch(e){return false;}}
constructor(name){super();this.zoneName=name;this.valid=IANAZone.isValidZone(name);}
get type(){return"iana";}
get name(){return this.zoneName;}
get isUniversal(){return false;}
offsetName(ts,{format,locale}){return parseZoneInfo(ts,format,locale,this.name);}
formatOffset(ts,format){return formatOffset(this.offset(ts),format);}
offset(ts){const date=new Date(ts);if(isNaN(date))return NaN;const dtf=makeDTF(this.name);let[year,month,day,adOrBc,hour,minute,second]=dtf.formatToParts?partsOffset(dtf,date):hackyOffset(dtf,date);if(adOrBc==="BC"){year=-Math.abs(year)+1;}
const adjustedHour=hour===24?0:hour;const asUTC=objToLocalTS({year,month,day,hour:adjustedHour,minute,second,millisecond:0,});let asTS=+date;const over=asTS%1000;asTS-=over>=0?over:1000+over;return(asUTC-asTS)/(60*1000);}
equals(otherZone){return otherZone.type==="iana"&&otherZone.name===this.name;}
get isValid(){return this.valid;}}
let intlLFCache={};function getCachedLF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlLFCache[key];if(!dtf){dtf=new Intl.ListFormat(locString,opts);intlLFCache[key]=dtf;}
return dtf;}
let intlDTCache={};function getCachedDTF(locString,opts={}){const key=JSON.stringify([locString,opts]);let dtf=intlDTCache[key];if(!dtf){dtf=new Intl.DateTimeFormat(locString,opts);intlDTCache[key]=dtf;}
return dtf;}
let intlNumCache={};function getCachedINF(locString,opts={}){const key=JSON.stringify([locString,opts]);let inf=intlNumCache[key];if(!inf){inf=new Intl.NumberFormat(locString,opts);intlNumCache[key]=inf;}
return inf;}
let intlRelCache={};function getCachedRTF(locString,opts={}){const{base,...cacheKeyOpts}=opts;const key=JSON.stringify([locString,cacheKeyOpts]);let inf=intlRelCache[key];if(!inf){inf=new Intl.RelativeTimeFormat(locString,opts);intlRelCache[key]=inf;}
return inf;}
let sysLocaleCache=null;function systemLocale(){if(sysLocaleCache){return sysLocaleCache;}else{sysLocaleCache=new Intl.DateTimeFormat().resolvedOptions().locale;return sysLocaleCache;}}
function parseLocaleString(localeStr){const xIndex=localeStr.indexOf("-x-");if(xIndex!==-1){localeStr=localeStr.substring(0,xIndex);}
const uIndex=localeStr.indexOf("-u-");if(uIndex===-1){return[localeStr];}else{let options;let selectedStr;try{options=getCachedDTF(localeStr).resolvedOptions();selectedStr=localeStr;}catch(e){const smaller=localeStr.substring(0,uIndex);options=getCachedDTF(smaller).resolvedOptions();selectedStr=smaller;}
const{numberingSystem,calendar}=options;return[selectedStr,numberingSystem,calendar];}}
function intlConfigString(localeStr,numberingSystem,outputCalendar){if(outputCalendar||numberingSystem){if(!localeStr.includes("-u-")){localeStr+="-u";}
if(outputCalendar){localeStr+=`-ca-${outputCalendar}`;}
if(numberingSystem){localeStr+=`-nu-${numberingSystem}`;}
return localeStr;}else{return localeStr;}}
function mapMonths(f){const ms=[];for(let i=1;i<=12;i++){const dt=DateTime.utc(2009,i,1);ms.push(f(dt));}
return ms;}
function mapWeekdays(f){const ms=[];for(let i=1;i<=7;i++){const dt=DateTime.utc(2016,11,13+i);ms.push(f(dt));}
return ms;}
function listStuff(loc,length,englishFn,intlFn){const mode=loc.listingMode();if(mode==="error"){return null;}else if(mode==="en"){return englishFn(length);}else{return intlFn(length);}}
function supportsFastNumbers(loc){if(loc.numberingSystem&&loc.numberingSystem!=="latn"){return false;}else{return(loc.numberingSystem==="latn"||!loc.locale||loc.locale.startsWith("en")||new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem==="latn");}}
class PolyNumberFormatter{constructor(intl,forceSimple,opts){this.padTo=opts.padTo||0;this.floor=opts.floor||false;const{padTo,floor,...otherOpts}=opts;if(!forceSimple||Object.keys(otherOpts).length>0){const intlOpts={useGrouping:false,...opts};if(opts.padTo>0)intlOpts.minimumIntegerDigits=opts.padTo;this.inf=getCachedINF(intl,intlOpts);}}
format(i){if(this.inf){const fixed=this.floor?Math.floor(i):i;return this.inf.format(fixed);}else{const fixed=this.floor?Math.floor(i):roundTo(i,3);return padStart(fixed,this.padTo);}}}
class PolyDateFormatter{constructor(dt,intl,opts){this.opts=opts;this.originalZone=undefined;let z=undefined;if(this.opts.timeZone){this.dt=dt;}else if(dt.zone.type==="fixed"){const gmtOffset=-1*(dt.offset/60);const offsetZ=gmtOffset>=0?`Etc/GMT+${gmtOffset}`:`Etc/GMT${gmtOffset}`;if(dt.offset!==0&&IANAZone.create(offsetZ).valid){z=offsetZ;this.dt=dt;}else{z="UTC";this.dt=dt.offset===0?dt:dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}}else if(dt.zone.type==="system"){this.dt=dt;}else if(dt.zone.type==="iana"){this.dt=dt;z=dt.zone.name;}else{z="UTC";this.dt=dt.setZone("UTC").plus({minutes:dt.offset});this.originalZone=dt.zone;}
const intlOpts={...this.opts};intlOpts.timeZone=intlOpts.timeZone||z;this.dtf=getCachedDTF(intl,intlOpts);}
format(){if(this.originalZone){return this.formatToParts().map(({value})=>value).join("");}
return this.dtf.format(this.dt.toJSDate());}
formatToParts(){const parts=this.dtf.formatToParts(this.dt.toJSDate());if(this.originalZone){return parts.map((part)=>{if(part.type==="timeZoneName"){const offsetName=this.originalZone.offsetName(this.dt.ts,{locale:this.dt.locale,format:this.opts.timeZoneName,});return{...part,value:offsetName,};}else{return part;}});}
return parts;}
resolvedOptions(){return this.dtf.resolvedOptions();}}
class PolyRelFormatter{constructor(intl,isEnglish,opts){this.opts={style:"long",...opts};if(!isEnglish&&hasRelative()){this.rtf=getCachedRTF(intl,opts);}}
format(count,unit){if(this.rtf){return this.rtf.format(count,unit);}else{return formatRelativeTime(unit,count,this.opts.numeric,this.opts.style!=="long");}}
formatToParts(count,unit){if(this.rtf){return this.rtf.formatToParts(count,unit);}else{return[];}}}
class Locale{static fromOpts(opts){return Locale.create(opts.locale,opts.numberingSystem,opts.outputCalendar,opts.defaultToEN);}
static create(locale,numberingSystem,outputCalendar,defaultToEN=false){const specifiedLocale=locale||Settings.defaultLocale;const localeR=specifiedLocale||(defaultToEN?"en-US":systemLocale());const numberingSystemR=numberingSystem||Settings.defaultNumberingSystem;const outputCalendarR=outputCalendar||Settings.defaultOutputCalendar;return new Locale(localeR,numberingSystemR,outputCalendarR,specifiedLocale);}
static resetCache(){sysLocaleCache=null;intlDTCache={};intlNumCache={};intlRelCache={};}
static fromObject({locale,numberingSystem,outputCalendar}={}){return Locale.create(locale,numberingSystem,outputCalendar);}
constructor(locale,numbering,outputCalendar,specifiedLocale){const[parsedLocale,parsedNumberingSystem,parsedOutputCalendar]=parseLocaleString(locale);this.locale=parsedLocale;this.numberingSystem=numbering||parsedNumberingSystem||null;this.outputCalendar=outputCalendar||parsedOutputCalendar||null;this.intl=intlConfigString(this.locale,this.numberingSystem,this.outputCalendar);this.weekdaysCache={format:{},standalone:{}};this.monthsCache={format:{},standalone:{}};this.meridiemCache=null;this.eraCache={};this.specifiedLocale=specifiedLocale;this.fastNumbersCached=null;}
get fastNumbers(){if(this.fastNumbersCached==null){this.fastNumbersCached=supportsFastNumbers(this);}
return this.fastNumbersCached;}
listingMode(){const isActuallyEn=this.isEnglish();const hasNoWeirdness=(this.numberingSystem===null||this.numberingSystem==="latn")&&(this.outputCalendar===null||this.outputCalendar==="gregory");return isActuallyEn&&hasNoWeirdness?"en":"intl";}
clone(alts){if(!alts||Object.getOwnPropertyNames(alts).length===0){return this;}else{return Locale.create(alts.locale||this.specifiedLocale,alts.numberingSystem||this.numberingSystem,alts.outputCalendar||this.outputCalendar,alts.defaultToEN||false);}}
redefaultToEN(alts={}){return this.clone({...alts,defaultToEN:true});}
redefaultToSystem(alts={}){return this.clone({...alts,defaultToEN:false});}
months(length,format=false){return listStuff(this,length,months,()=>{const intl=format?{month:length,day:"numeric"}:{month:length},formatStr=format?"format":"standalone";if(!this.monthsCache[formatStr][length]){this.monthsCache[formatStr][length]=mapMonths((dt)=>this.extract(dt,intl,"month"));}
return this.monthsCache[formatStr][length];});}
weekdays(length,format=false){return listStuff(this,length,weekdays,()=>{const intl=format?{weekday:length,year:"numeric",month:"long",day:"numeric"}:{weekday:length},formatStr=format?"format":"standalone";if(!this.weekdaysCache[formatStr][length]){this.weekdaysCache[formatStr][length]=mapWeekdays((dt)=>this.extract(dt,intl,"weekday"));}
return this.weekdaysCache[formatStr][length];});}
meridiems(){return listStuff(this,undefined,()=>meridiems,()=>{if(!this.meridiemCache){const intl={hour:"numeric",hourCycle:"h12"};this.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map((dt)=>this.extract(dt,intl,"dayperiod"));}
return this.meridiemCache;});}
eras(length){return listStuff(this,length,eras,()=>{const intl={era:length};if(!this.eraCache[length]){this.eraCache[length]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map((dt)=>this.extract(dt,intl,"era"));}
return this.eraCache[length];});}
extract(dt,intlOpts,field){const df=this.dtFormatter(dt,intlOpts),results=df.formatToParts(),matching=results.find((m)=>m.type.toLowerCase()===field);return matching?matching.value:null;}
numberFormatter(opts={}){return new PolyNumberFormatter(this.intl,opts.forceSimple||this.fastNumbers,opts);}
dtFormatter(dt,intlOpts={}){return new PolyDateFormatter(dt,this.intl,intlOpts);}
relFormatter(opts={}){return new PolyRelFormatter(this.intl,this.isEnglish(),opts);}
listFormatter(opts={}){return getCachedLF(this.intl,opts);}
isEnglish(){return(this.locale==="en"||this.locale.toLowerCase()==="en-us"||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us"));}
equals(other){return(this.locale===other.locale&&this.numberingSystem===other.numberingSystem&&this.outputCalendar===other.outputCalendar);}}
let singleton=null;class FixedOffsetZone extends Zone{static get utcInstance(){if(singleton===null){singleton=new FixedOffsetZone(0);}
return singleton;}
static instance(offset){return offset===0?FixedOffsetZone.utcInstance:new FixedOffsetZone(offset);}
static parseSpecifier(s){if(s){const r=s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(r){return new FixedOffsetZone(signedOffset(r[1],r[2]));}}
return null;}
constructor(offset){super();this.fixed=offset;}
get type(){return"fixed";}
get name(){return this.fixed===0?"UTC":`UTC${formatOffset(this.fixed, "narrow")}`;}
get ianaName(){if(this.fixed===0){return"Etc/UTC";}else{return`Etc/GMT${formatOffset(-this.fixed, "narrow")}`;}}
offsetName(){return this.name;}
formatOffset(ts,format){return formatOffset(this.fixed,format);}
get isUniversal(){return true;}
offset(){return this.fixed;}
equals(otherZone){return otherZone.type==="fixed"&&otherZone.fixed===this.fixed;}
get isValid(){return true;}}
class InvalidZone extends Zone{constructor(zoneName){super();this.zoneName=zoneName;}
get type(){return"invalid";}
get name(){return this.zoneName;}
get isUniversal(){return false;}
offsetName(){return null;}
formatOffset(){return"";}
offset(){return NaN;}
equals(){return false;}
get isValid(){return false;}}
function normalizeZone(input,defaultZone){if(isUndefined(input)||input===null){return defaultZone;}else if(input instanceof Zone){return input;}else if(isString(input)){const lowered=input.toLowerCase();if(lowered==="default")return defaultZone;else if(lowered==="local"||lowered==="system")return SystemZone.instance;else if(lowered==="utc"||lowered==="gmt")return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered)||IANAZone.create(input);}else if(isNumber(input)){return FixedOffsetZone.instance(input);}else if(typeof input==="object"&&"offset"in input&&typeof input.offset==="function"){return input;}else{return new InvalidZone(input);}}
let now=()=>Date.now(),defaultZone="system",defaultLocale=null,defaultNumberingSystem=null,defaultOutputCalendar=null,twoDigitCutoffYear=60,throwOnInvalid;class Settings{static get now(){return now;}
static set now(n){now=n;}
static set defaultZone(zone){defaultZone=zone;}
static get defaultZone(){return normalizeZone(defaultZone,SystemZone.instance);}
static get defaultLocale(){return defaultLocale;}
static set defaultLocale(locale){defaultLocale=locale;}
static get defaultNumberingSystem(){return defaultNumberingSystem;}
static set defaultNumberingSystem(numberingSystem){defaultNumberingSystem=numberingSystem;}
static get defaultOutputCalendar(){return defaultOutputCalendar;}
static set defaultOutputCalendar(outputCalendar){defaultOutputCalendar=outputCalendar;}
static get twoDigitCutoffYear(){return twoDigitCutoffYear;}
static set twoDigitCutoffYear(cutoffYear){twoDigitCutoffYear=cutoffYear%100;}
static get throwOnInvalid(){return throwOnInvalid;}
static set throwOnInvalid(t){throwOnInvalid=t;}
static resetCaches(){Locale.resetCache();IANAZone.resetCache();}}
function isUndefined(o){return typeof o==="undefined";}
function isNumber(o){return typeof o==="number";}
function isInteger(o){return typeof o==="number"&&o%1===0;}
function isString(o){return typeof o==="string";}
function isDate(o){return Object.prototype.toString.call(o)==="[object Date]";}
function hasRelative(){try{return typeof Intl!=="undefined"&&!!Intl.RelativeTimeFormat;}catch(e){return false;}}
function maybeArray(thing){return Array.isArray(thing)?thing:[thing];}
function bestBy(arr,by,compare){if(arr.length===0){return undefined;}
return arr.reduce((best,next)=>{const pair=[by(next),next];if(!best){return pair;}else if(compare(best[0],pair[0])===best[0]){return best;}else{return pair;}},null)[1];}
function pick(obj,keys){return keys.reduce((a,k)=>{a[k]=obj[k];return a;},{});}
function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}
function integerBetween(thing,bottom,top){return isInteger(thing)&&thing>=bottom&&thing<=top;}
function floorMod(x,n){return x-n*Math.floor(x/n);}
function padStart(input,n=2){const isNeg=input<0;let padded;if(isNeg){padded="-"+(""+-input).padStart(n,"0");}else{padded=(""+input).padStart(n,"0");}
return padded;}
function parseInteger(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseInt(string,10);}}
function parseFloating(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseFloat(string);}}
function parseMillis(fraction){if(isUndefined(fraction)||fraction===null||fraction===""){return undefined;}else{const f=parseFloat("0."+fraction)*1000;return Math.floor(f);}}
function roundTo(number,digits,towardZero=false){const factor=10**digits,rounder=towardZero?Math.trunc:Math.round;return rounder(number*factor)/factor;}
function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysInYear(year){return isLeapYear(year)?366:365;}
function daysInMonth(year,month){const modMonth=floorMod(month-1,12)+1,modYear=year+(month-modMonth)/12;if(modMonth===2){return isLeapYear(modYear)?29:28;}else{return[31,null,31,30,31,30,31,31,30,31,30,31][modMonth-1];}}
function objToLocalTS(obj){let d=Date.UTC(obj.year,obj.month-1,obj.day,obj.hour,obj.minute,obj.second,obj.millisecond);if(obj.year<100&&obj.year>=0){d=new Date(d);d.setUTCFullYear(obj.year,obj.month-1,obj.day);}
return+d;}
function weeksInWeekYear(weekYear){const p1=(weekYear+
Math.floor(weekYear/4)-
Math.floor(weekYear/100)+
Math.floor(weekYear/400))%7,last=weekYear-1,p2=(last+Math.floor(last/4)-Math.floor(last/100)+Math.floor(last/400))%7;return p1===4||p2===3?53:52;}
function untruncateYear(year){if(year>99){return year;}else return year>Settings.twoDigitCutoffYear?1900+year:2000+year;}
function parseZoneInfo(ts,offsetFormat,locale,timeZone=null){const date=new Date(ts),intlOpts={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",};if(timeZone){intlOpts.timeZone=timeZone;}
const modified={timeZoneName:offsetFormat,...intlOpts};const parsed=new Intl.DateTimeFormat(locale,modified).formatToParts(date).find((m)=>m.type.toLowerCase()==="timezonename");return parsed?parsed.value:null;}
function signedOffset(offHourStr,offMinuteStr){let offHour=parseInt(offHourStr,10);if(Number.isNaN(offHour)){offHour=0;}
const offMin=parseInt(offMinuteStr,10)||0,offMinSigned=offHour<0||Object.is(offHour,-0)?-offMin:offMin;return offHour*60+offMinSigned;}
function asNumber(value){const numericValue=Number(value);if(typeof value==="boolean"||value===""||Number.isNaN(numericValue))
throw new InvalidArgumentError(`Invalid unit value ${value}`);return numericValue;}
function normalizeObject(obj,normalizer){const normalized={};for(const u in obj){if(hasOwnProperty(obj,u)){const v=obj[u];if(v===undefined||v===null)continue;normalized[normalizer(u)]=asNumber(v);}}
return normalized;}
function formatOffset(offset,format){const hours=Math.trunc(Math.abs(offset/60)),minutes=Math.trunc(Math.abs(offset%60)),sign=offset>=0?"+":"-";switch(format){case"short":return`${sign}${padStart(hours, 2)}:${padStart(minutes, 2)}`;case"narrow":return`${sign}${hours}${minutes > 0 ? `:${minutes}` : ""}`;case"techie":return`${sign}${padStart(hours, 2)}${padStart(minutes, 2)}`;default:throw new RangeError(`Value format ${format} is out of range for property format`);}}
function timeObject(obj){return pick(obj,["hour","minute","second","millisecond"]);}
const monthsLong=["January","February","March","April","May","June","July","August","September","October","November","December",];const monthsShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",];const monthsNarrow=["J","F","M","A","M","J","J","A","S","O","N","D"];function months(length){switch(length){case"narrow":return[...monthsNarrow];case"short":return[...monthsShort];case"long":return[...monthsLong];case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null;}}
const weekdaysLong=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday",];const weekdaysShort=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];const weekdaysNarrow=["M","T","W","T","F","S","S"];function weekdays(length){switch(length){case"narrow":return[...weekdaysNarrow];case"short":return[...weekdaysShort];case"long":return[...weekdaysLong];case"numeric":return["1","2","3","4","5","6","7"];default:return null;}}
const meridiems=["AM","PM"];const erasLong=["Before Christ","Anno Domini"];const erasShort=["BC","AD"];const erasNarrow=["B","A"];function eras(length){switch(length){case"narrow":return[...erasNarrow];case"short":return[...erasShort];case"long":return[...erasLong];default:return null;}}
function meridiemForDateTime(dt){return meridiems[dt.hour<12?0:1];}
function weekdayForDateTime(dt,length){return weekdays(length)[dt.weekday-1];}
function monthForDateTime(dt,length){return months(length)[dt.month-1];}
function eraForDateTime(dt,length){return eras(length)[dt.year<0?0:1];}
function formatRelativeTime(unit,count,numeric="always",narrow=false){const units={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."],};const lastable=["hours","minutes","seconds"].indexOf(unit)===-1;if(numeric==="auto"&&lastable){const isDay=unit==="days";switch(count){case 1:return isDay?"tomorrow":`next ${units[unit][0]}`;case-1:return isDay?"yesterday":`last ${units[unit][0]}`;case 0:return isDay?"today":`this ${units[unit][0]}`;}}
const isInPast=Object.is(count,-0)||count<0,fmtValue=Math.abs(count),singular=fmtValue===1,lilUnits=units[unit],fmtUnit=narrow?singular?lilUnits[1]:lilUnits[2]||lilUnits[1]:singular?units[unit][0]:unit;return isInPast?`${fmtValue} ${fmtUnit} ago`:`in ${fmtValue} ${fmtUnit}`;}
function stringifyTokens(splits,tokenToString){let s="";for(const token of splits){if(token.literal){s+=token.val;}else{s+=tokenToString(token.val);}}
return s;}
const macroTokenToFormatOpts={D:DATE_SHORT,DD:DATE_MED,DDD:DATE_FULL,DDDD:DATE_HUGE,t:TIME_SIMPLE,tt:TIME_WITH_SECONDS,ttt:TIME_WITH_SHORT_OFFSET,tttt:TIME_WITH_LONG_OFFSET,T:TIME_24_SIMPLE,TT:TIME_24_WITH_SECONDS,TTT:TIME_24_WITH_SHORT_OFFSET,TTTT:TIME_24_WITH_LONG_OFFSET,f:DATETIME_SHORT,ff:DATETIME_MED,fff:DATETIME_FULL,ffff:DATETIME_HUGE,F:DATETIME_SHORT_WITH_SECONDS,FF:DATETIME_MED_WITH_SECONDS,FFF:DATETIME_FULL_WITH_SECONDS,FFFF:DATETIME_HUGE_WITH_SECONDS,};class Formatter{static create(locale,opts={}){return new Formatter(locale,opts);}
static parseFormat(fmt){let current=null,currentFull="",bracketed=false;const splits=[];for(let i=0;i<fmt.length;i++){const c=fmt.charAt(i);if(c==="'"){if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}
current=null;currentFull="";bracketed=!bracketed;}else if(bracketed){currentFull+=c;}else if(c===current){currentFull+=c;}else{if(currentFull.length>0){splits.push({literal:/^\s+$/.test(currentFull),val:currentFull});}
currentFull=c;current=c;}}
if(currentFull.length>0){splits.push({literal:bracketed||/^\s+$/.test(currentFull),val:currentFull});}
return splits;}
static macroTokenToFormatOpts(token){return macroTokenToFormatOpts[token];}
constructor(locale,formatOpts){this.opts=formatOpts;this.loc=locale;this.systemLoc=null;}
formatWithSystemDefault(dt,opts){if(this.systemLoc===null){this.systemLoc=this.loc.redefaultToSystem();}
const df=this.systemLoc.dtFormatter(dt,{...this.opts,...opts});return df.format();}
dtFormatter(dt,opts={}){return this.loc.dtFormatter(dt,{...this.opts,...opts});}
formatDateTime(dt,opts){return this.dtFormatter(dt,opts).format();}
formatDateTimeParts(dt,opts){return this.dtFormatter(dt,opts).formatToParts();}
formatInterval(interval,opts){const df=this.dtFormatter(interval.start,opts);return df.dtf.formatRange(interval.start.toJSDate(),interval.end.toJSDate());}
resolvedOptions(dt,opts){return this.dtFormatter(dt,opts).resolvedOptions();}
num(n,p=0){if(this.opts.forceSimple){return padStart(n,p);}
const opts={...this.opts};if(p>0){opts.padTo=p;}
return this.loc.numberFormatter(opts).format(n);}
formatDateTimeFromString(dt,fmt){const knownEnglish=this.loc.listingMode()==="en",useDateTimeFormatter=this.loc.outputCalendar&&this.loc.outputCalendar!=="gregory",string=(opts,extract)=>this.loc.extract(dt,opts,extract),formatOffset=(opts)=>{if(dt.isOffsetFixed&&dt.offset===0&&opts.allowZ){return"Z";}
return dt.isValid?dt.zone.formatOffset(dt.ts,opts.format):"";},meridiem=()=>knownEnglish?meridiemForDateTime(dt):string({hour:"numeric",hourCycle:"h12"},"dayperiod"),month=(length,standalone)=>knownEnglish?monthForDateTime(dt,length):string(standalone?{month:length}:{month:length,day:"numeric"},"month"),weekday=(length,standalone)=>knownEnglish?weekdayForDateTime(dt,length):string(standalone?{weekday:length}:{weekday:length,month:"long",day:"numeric"},"weekday"),maybeMacro=(token)=>{const formatOpts=Formatter.macroTokenToFormatOpts(token);if(formatOpts){return this.formatWithSystemDefault(dt,formatOpts);}else{return token;}},era=(length)=>knownEnglish?eraForDateTime(dt,length):string({era:length},"era"),tokenToString=(token)=>{switch(token){case"S":return this.num(dt.millisecond);case"u":case"SSS":return this.num(dt.millisecond,3);case"s":return this.num(dt.second);case"ss":return this.num(dt.second,2);case"uu":return this.num(Math.floor(dt.millisecond/10),2);case"uuu":return this.num(Math.floor(dt.millisecond/100));case"m":return this.num(dt.minute);case"mm":return this.num(dt.minute,2);case"h":return this.num(dt.hour%12===0?12:dt.hour%12);case"hh":return this.num(dt.hour%12===0?12:dt.hour%12,2);case"H":return this.num(dt.hour);case"HH":return this.num(dt.hour,2);case"Z":return formatOffset({format:"narrow",allowZ:this.opts.allowZ});case"ZZ":return formatOffset({format:"short",allowZ:this.opts.allowZ});case"ZZZ":return formatOffset({format:"techie",allowZ:this.opts.allowZ});case"ZZZZ":return dt.zone.offsetName(dt.ts,{format:"short",locale:this.loc.locale});case"ZZZZZ":return dt.zone.offsetName(dt.ts,{format:"long",locale:this.loc.locale});case"z":return dt.zoneName;case"a":return meridiem();case"d":return useDateTimeFormatter?string({day:"numeric"},"day"):this.num(dt.day);case"dd":return useDateTimeFormatter?string({day:"2-digit"},"day"):this.num(dt.day,2);case"c":return this.num(dt.weekday);case"ccc":return weekday("short",true);case"cccc":return weekday("long",true);case"ccccc":return weekday("narrow",true);case"E":return this.num(dt.weekday);case"EEE":return weekday("short",false);case"EEEE":return weekday("long",false);case"EEEEE":return weekday("narrow",false);case"L":return useDateTimeFormatter?string({month:"numeric",day:"numeric"},"month"):this.num(dt.month);case"LL":return useDateTimeFormatter?string({month:"2-digit",day:"numeric"},"month"):this.num(dt.month,2);case"LLL":return month("short",true);case"LLLL":return month("long",true);case"LLLLL":return month("narrow",true);case"M":return useDateTimeFormatter?string({month:"numeric"},"month"):this.num(dt.month);case"MM":return useDateTimeFormatter?string({month:"2-digit"},"month"):this.num(dt.month,2);case"MMM":return month("short",false);case"MMMM":return month("long",false);case"MMMMM":return month("narrow",false);case"y":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year);case"yy":return useDateTimeFormatter?string({year:"2-digit"},"year"):this.num(dt.year.toString().slice(-2),2);case"yyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,4);case"yyyyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):this.num(dt.year,6);case"G":return era("short");case"GG":return era("long");case"GGGGG":return era("narrow");case"kk":return this.num(dt.weekYear.toString().slice(-2),2);case"kkkk":return this.num(dt.weekYear,4);case"W":return this.num(dt.weekNumber);case"WW":return this.num(dt.weekNumber,2);case"o":return this.num(dt.ordinal);case"ooo":return this.num(dt.ordinal,3);case"q":return this.num(dt.quarter);case"qq":return this.num(dt.quarter,2);case"X":return this.num(Math.floor(dt.ts/1000));case"x":return this.num(dt.ts);default:return maybeMacro(token);}};return stringifyTokens(Formatter.parseFormat(fmt),tokenToString);}
formatDurationFromString(dur,fmt){const tokenToField=(token)=>{switch(token[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null;}},tokenToString=(lildur)=>(token)=>{const mapped=tokenToField(token);if(mapped){return this.num(lildur.get(mapped),token.length);}else{return token;}},tokens=Formatter.parseFormat(fmt),realTokens=tokens.reduce((found,{literal,val})=>(literal?found:found.concat(val)),[]),collapsed=dur.shiftTo(...realTokens.map(tokenToField).filter((t)=>t));return stringifyTokens(tokens,tokenToString(collapsed));}}
class Invalid{constructor(reason,explanation){this.reason=reason;this.explanation=explanation;}
toMessage(){if(this.explanation){return`${this.reason}: ${this.explanation}`;}else{return this.reason;}}}
const ianaRegex=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;function combineRegexes(...regexes){const full=regexes.reduce((f,r)=>f+r.source,"");return RegExp(`^${full}$`);}
function combineExtractors(...extractors){return(m)=>extractors.reduce(([mergedVals,mergedZone,cursor],ex)=>{const[val,zone,next]=ex(m,cursor);return[{...mergedVals,...val},zone||mergedZone,next];},[{},null,1]).slice(0,2);}
function parse(s,...patterns){if(s==null){return[null,null];}
for(const[regex,extractor]of patterns){const m=regex.exec(s);if(m){return extractor(m);}}
return[null,null];}
function simpleParse(...keys){return(match,cursor)=>{const ret={};let i;for(i=0;i<keys.length;i++){ret[keys[i]]=parseInteger(match[cursor+i]);}
return[ret,null,cursor+i];};}
const offsetRegex=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;const isoExtendedZone=`(?:${offsetRegex.source}?(?:\\[(${ianaRegex.source})\\])?)?`;const isoTimeBaseRegex=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;const isoTimeRegex=RegExp(`${isoTimeBaseRegex.source}${isoExtendedZone}`);const isoTimeExtensionRegex=RegExp(`(?:T${isoTimeRegex.source})?`);const isoYmdRegex=/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;const isoWeekRegex=/(\d{4})-?W(\d\d)(?:-?(\d))?/;const isoOrdinalRegex=/(\d{4})-?(\d{3})/;const extractISOWeekData=simpleParse("weekYear","weekNumber","weekDay");const extractISOOrdinalData=simpleParse("year","ordinal");const sqlYmdRegex=/(\d{4})-(\d\d)-(\d\d)/;const sqlTimeRegex=RegExp(`${isoTimeBaseRegex.source} ?(?:${offsetRegex.source}|(${ianaRegex.source}))?`);const sqlTimeExtensionRegex=RegExp(`(?: ${sqlTimeRegex.source})?`);function int(match,pos,fallback){const m=match[pos];return isUndefined(m)?fallback:parseInteger(m);}
function extractISOYmd(match,cursor){const item={year:int(match,cursor),month:int(match,cursor+1,1),day:int(match,cursor+2,1),};return[item,null,cursor+3];}
function extractISOTime(match,cursor){const item={hours:int(match,cursor,0),minutes:int(match,cursor+1,0),seconds:int(match,cursor+2,0),milliseconds:parseMillis(match[cursor+3]),};return[item,null,cursor+4];}
function extractISOOffset(match,cursor){const local=!match[cursor]&&!match[cursor+1],fullOffset=signedOffset(match[cursor+1],match[cursor+2]),zone=local?null:FixedOffsetZone.instance(fullOffset);return[{},zone,cursor+3];}
function extractIANAZone(match,cursor){const zone=match[cursor]?IANAZone.create(match[cursor]):null;return[{},zone,cursor+1];}
const isoTimeOnly=RegExp(`^T?${isoTimeBaseRegex.source}$`);const isoDuration=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function extractISODuration(match){const[s,yearStr,monthStr,weekStr,dayStr,hourStr,minuteStr,secondStr,millisecondsStr]=match;const hasNegativePrefix=s[0]==="-";const negativeSeconds=secondStr&&secondStr[0]==="-";const maybeNegate=(num,force=false)=>num!==undefined&&(force||(num&&hasNegativePrefix))?-num:num;return[{years:maybeNegate(parseFloating(yearStr)),months:maybeNegate(parseFloating(monthStr)),weeks:maybeNegate(parseFloating(weekStr)),days:maybeNegate(parseFloating(dayStr)),hours:maybeNegate(parseFloating(hourStr)),minutes:maybeNegate(parseFloating(minuteStr)),seconds:maybeNegate(parseFloating(secondStr),secondStr==="-0"),milliseconds:maybeNegate(parseMillis(millisecondsStr),negativeSeconds),},];}
const obsOffsets={GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60,};function fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){const result={year:yearStr.length===2?untruncateYear(parseInteger(yearStr)):parseInteger(yearStr),month:monthsShort.indexOf(monthStr)+1,day:parseInteger(dayStr),hour:parseInteger(hourStr),minute:parseInteger(minuteStr),};if(secondStr)result.second=parseInteger(secondStr);if(weekdayStr){result.weekday=weekdayStr.length>3?weekdaysLong.indexOf(weekdayStr)+1:weekdaysShort.indexOf(weekdayStr)+1;}
return result;}
const rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function extractRFC2822(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr,obsOffset,milOffset,offHourStr,offMinuteStr,]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);let offset;if(obsOffset){offset=obsOffsets[obsOffset];}else if(milOffset){offset=0;}else{offset=signedOffset(offHourStr,offMinuteStr);}
return[result,new FixedOffsetZone(offset)];}
function preprocessRFC2822(s){return s.replace(/\([^()]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim();}
const rfc1123=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rfc850=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,ascii=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function extractRFC1123Or850(match){const[,weekdayStr,dayStr,monthStr,yearStr,hourStr,minuteStr,secondStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
function extractASCII(match){const[,weekdayStr,monthStr,dayStr,hourStr,minuteStr,secondStr,yearStr]=match,result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
const isoYmdWithTimeExtensionRegex=combineRegexes(isoYmdRegex,isoTimeExtensionRegex);const isoWeekWithTimeExtensionRegex=combineRegexes(isoWeekRegex,isoTimeExtensionRegex);const isoOrdinalWithTimeExtensionRegex=combineRegexes(isoOrdinalRegex,isoTimeExtensionRegex);const isoTimeCombinedRegex=combineRegexes(isoTimeRegex);const extractISOYmdTimeAndOffset=combineExtractors(extractISOYmd,extractISOTime,extractISOOffset,extractIANAZone);const extractISOWeekTimeAndOffset=combineExtractors(extractISOWeekData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOOrdinalDateAndTime=combineExtractors(extractISOOrdinalData,extractISOTime,extractISOOffset,extractIANAZone);const extractISOTimeAndOffset=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseISODate(s){return parse(s,[isoYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[isoWeekWithTimeExtensionRegex,extractISOWeekTimeAndOffset],[isoOrdinalWithTimeExtensionRegex,extractISOOrdinalDateAndTime],[isoTimeCombinedRegex,extractISOTimeAndOffset]);}
function parseRFC2822Date(s){return parse(preprocessRFC2822(s),[rfc2822,extractRFC2822]);}
function parseHTTPDate(s){return parse(s,[rfc1123,extractRFC1123Or850],[rfc850,extractRFC1123Or850],[ascii,extractASCII]);}
function parseISODuration(s){return parse(s,[isoDuration,extractISODuration]);}
const extractISOTimeOnly=combineExtractors(extractISOTime);function parseISOTimeOnly(s){return parse(s,[isoTimeOnly,extractISOTimeOnly]);}
const sqlYmdWithTimeExtensionRegex=combineRegexes(sqlYmdRegex,sqlTimeExtensionRegex);const sqlTimeCombinedRegex=combineRegexes(sqlTimeRegex);const extractISOTimeOffsetAndIANAZone=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseSQL(s){return parse(s,[sqlYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[sqlTimeCombinedRegex,extractISOTimeOffsetAndIANAZone]);}
const INVALID$2="Invalid Duration";const lowOrderMatrix={weeks:{days:7,hours:7*24,minutes:7*24*60,seconds:7*24*60*60,milliseconds:7*24*60*60*1000,},days:{hours:24,minutes:24*60,seconds:24*60*60,milliseconds:24*60*60*1000,},hours:{minutes:60,seconds:60*60,milliseconds:60*60*1000},minutes:{seconds:60,milliseconds:60*1000},seconds:{milliseconds:1000},},casualMatrix={years:{quarters:4,months:12,weeks:52,days:365,hours:365*24,minutes:365*24*60,seconds:365*24*60*60,milliseconds:365*24*60*60*1000,},quarters:{months:3,weeks:13,days:91,hours:91*24,minutes:91*24*60,seconds:91*24*60*60,milliseconds:91*24*60*60*1000,},months:{weeks:4,days:30,hours:30*24,minutes:30*24*60,seconds:30*24*60*60,milliseconds:30*24*60*60*1000,},...lowOrderMatrix,},daysInYearAccurate=146097.0/400,daysInMonthAccurate=146097.0/4800,accurateMatrix={years:{quarters:4,months:12,weeks:daysInYearAccurate/7,days:daysInYearAccurate,hours:daysInYearAccurate*24,minutes:daysInYearAccurate*24*60,seconds:daysInYearAccurate*24*60*60,milliseconds:daysInYearAccurate*24*60*60*1000,},quarters:{months:3,weeks:daysInYearAccurate/28,days:daysInYearAccurate/4,hours:(daysInYearAccurate*24)/4,minutes:(daysInYearAccurate*24*60)/4,seconds:(daysInYearAccurate*24*60*60)/4,milliseconds:(daysInYearAccurate*24*60*60*1000)/4,},months:{weeks:daysInMonthAccurate/7,days:daysInMonthAccurate,hours:daysInMonthAccurate*24,minutes:daysInMonthAccurate*24*60,seconds:daysInMonthAccurate*24*60*60,milliseconds:daysInMonthAccurate*24*60*60*1000,},...lowOrderMatrix,};const orderedUnits$1=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds",];const reverseUnits=orderedUnits$1.slice(0).reverse();function clone$1(dur,alts,clear=false){const conf={values:clear?alts.values:{...dur.values,...(alts.values||{})},loc:dur.loc.clone(alts.loc),conversionAccuracy:alts.conversionAccuracy||dur.conversionAccuracy,matrix:alts.matrix||dur.matrix,};return new Duration(conf);}
function durationToMillis(matrix,vals){let sum=vals.milliseconds??0;for(const unit of reverseUnits.slice(1)){if(vals[unit]){sum+=vals[unit]*matrix[unit]["milliseconds"];}}
return sum;}
function normalizeValues(matrix,vals){const factor=durationToMillis(matrix,vals)<0?-1:1;reverseUnits.reduce((previous,current)=>{if(!isUndefined(vals[current])){if(previous){const previousVal=vals[previous]*factor;const conv=matrix[current][previous];const rollUp=Math.floor(previousVal/conv);vals[current]+=rollUp*factor;vals[previous]-=rollUp*conv*factor;}
return current;}else{return previous;}},null);}
function removeZeroes(vals){const newVals={};for(const[key,value]of Object.entries(vals)){if(value!==0){newVals[key]=value;}}
return newVals;}
class Duration{constructor(config){const accurate=config.conversionAccuracy==="longterm"||false;let matrix=accurate?accurateMatrix:casualMatrix;if(config.matrix){matrix=config.matrix;}
this.values=config.values;this.loc=config.loc||Locale.create();this.conversionAccuracy=accurate?"longterm":"casual";this.invalid=config.invalid||null;this.matrix=matrix;this.isLuxonDuration=true;}
static fromMillis(count,opts){return Duration.fromObject({milliseconds:count},opts);}
static fromObject(obj,opts={}){if(obj==null||typeof obj!=="object"){throw new InvalidArgumentError(`Duration.fromObject: argument expected to be an object, got ${obj === null ? "null" : typeof obj
          }`);}
return new Duration({values:normalizeObject(obj,Duration.normalizeUnit),loc:Locale.fromObject(opts),conversionAccuracy:opts.conversionAccuracy,matrix:opts.matrix,});}
static fromDurationLike(durationLike){if(isNumber(durationLike)){return Duration.fromMillis(durationLike);}else if(Duration.isDuration(durationLike)){return durationLike;}else if(typeof durationLike==="object"){return Duration.fromObject(durationLike);}else{throw new InvalidArgumentError(`Unknown duration argument ${durationLike} of type ${typeof durationLike}`);}}
static fromISO(text,opts){const[parsed]=parseISODuration(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}
static fromISOTime(text,opts){const[parsed]=parseISOTimeOnly(text);if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Duration is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDurationError(invalid);}else{return new Duration({invalid});}}
static normalizeUnit(unit){const normalized={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds",}[unit?unit.toLowerCase():unit];if(!normalized)throw new InvalidUnitError(unit);return normalized;}
static isDuration(o){return(o&&o.isLuxonDuration)||false;}
get locale(){return this.isValid?this.loc.locale:null;}
get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}
toFormat(fmt,opts={}){const fmtOpts={...opts,floor:opts.round!==false&&opts.floor!==false,};return this.isValid?Formatter.create(this.loc,fmtOpts).formatDurationFromString(this,fmt):INVALID$2;}
toHuman(opts={}){if(!this.isValid)return INVALID$2;const l=orderedUnits$1.map((unit)=>{const val=this.values[unit];if(isUndefined(val)){return null;}
return this.loc.numberFormatter({style:"unit",unitDisplay:"long",...opts,unit:unit.slice(0,-1)}).format(val);}).filter((n)=>n);return this.loc.listFormatter({type:"conjunction",style:opts.listStyle||"narrow",...opts}).format(l);}
toObject(){if(!this.isValid)return{};return{...this.values};}
toISO(){if(!this.isValid)return null;let s="P";if(this.years!==0)s+=this.years+"Y";if(this.months!==0||this.quarters!==0)s+=this.months+this.quarters*3+"M";if(this.weeks!==0)s+=this.weeks+"W";if(this.days!==0)s+=this.days+"D";if(this.hours!==0||this.minutes!==0||this.seconds!==0||this.milliseconds!==0)
s+="T";if(this.hours!==0)s+=this.hours+"H";if(this.minutes!==0)s+=this.minutes+"M";if(this.seconds!==0||this.milliseconds!==0)
s+=roundTo(this.seconds+this.milliseconds/1000,3)+"S";if(s==="P")s+="T0S";return s;}
toISOTime(opts={}){if(!this.isValid)return null;const millis=this.toMillis();if(millis<0||millis>=86400000)return null;opts={suppressMilliseconds:false,suppressSeconds:false,includePrefix:false,format:"extended",...opts,includeOffset:false,};const dateTime=DateTime.fromMillis(millis,{zone:"UTC"});return dateTime.toISOTime(opts);}
toJSON(){return this.toISO();}
toString(){return this.toISO();}
toMillis(){if(!this.isValid)return NaN;return durationToMillis(this.matrix,this.values);}
valueOf(){return this.toMillis();}
plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration),result={};for(const k of orderedUnits$1){if(hasOwnProperty(dur.values,k)||hasOwnProperty(this.values,k)){result[k]=dur.get(k)+this.get(k);}}
return clone$1(this,{values:result},true);}
minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return this.plus(dur.negate());}
mapUnits(fn){if(!this.isValid)return this;const result={};for(const k of Object.keys(this.values)){result[k]=asNumber(fn(this.values[k],k));}
return clone$1(this,{values:result},true);}
get(unit){return this[Duration.normalizeUnit(unit)];}
set(values){if(!this.isValid)return this;const mixed={...this.values,...normalizeObject(values,Duration.normalizeUnit)};return clone$1(this,{values:mixed});}
reconfigure({locale,numberingSystem,conversionAccuracy,matrix}={}){const loc=this.loc.clone({locale,numberingSystem});const opts={loc,matrix,conversionAccuracy};return clone$1(this,opts);}
as(unit){return this.isValid?this.shiftTo(unit).get(unit):NaN;}
normalize(){if(!this.isValid)return this;const vals=this.toObject();normalizeValues(this.matrix,vals);return clone$1(this,{values:vals},true);}
rescale(){if(!this.isValid)return this;const vals=removeZeroes(this.normalize().shiftToAll().toObject());return clone$1(this,{values:vals},true);}
shiftTo(...units){if(!this.isValid)return this;if(units.length===0){return this;}
units=units.map((u)=>Duration.normalizeUnit(u));const built={},accumulated={},vals=this.toObject();let lastUnit;for(const k of orderedUnits$1){if(units.indexOf(k)>=0){lastUnit=k;let own=0;for(const ak in accumulated){own+=this.matrix[ak][k]*accumulated[ak];accumulated[ak]=0;}
if(isNumber(vals[k])){own+=vals[k];}
const i=Math.trunc(own);built[k]=i;accumulated[k]=(own*1000-i*1000)/1000;}else if(isNumber(vals[k])){accumulated[k]=vals[k];}}
for(const key in accumulated){if(accumulated[key]!==0){built[lastUnit]+=key===lastUnit?accumulated[key]:accumulated[key]/this.matrix[lastUnit][key];}}
normalizeValues(this.matrix,built);return clone$1(this,{values:built},true);}
shiftToAll(){if(!this.isValid)return this;return this.shiftTo("years","months","weeks","days","hours","minutes","seconds","milliseconds");}
negate(){if(!this.isValid)return this;const negated={};for(const k of Object.keys(this.values)){negated[k]=this.values[k]===0?0:-this.values[k];}
return clone$1(this,{values:negated},true);}
get years(){return this.isValid?this.values.years||0:NaN;}
get quarters(){return this.isValid?this.values.quarters||0:NaN;}
get months(){return this.isValid?this.values.months||0:NaN;}
get weeks(){return this.isValid?this.values.weeks||0:NaN;}
get days(){return this.isValid?this.values.days||0:NaN;}
get hours(){return this.isValid?this.values.hours||0:NaN;}
get minutes(){return this.isValid?this.values.minutes||0:NaN;}
get seconds(){return this.isValid?this.values.seconds||0:NaN;}
get milliseconds(){return this.isValid?this.values.milliseconds||0:NaN;}
get isValid(){return this.invalid===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
equals(other){if(!this.isValid||!other.isValid){return false;}
if(!this.loc.equals(other.loc)){return false;}
function eq(v1,v2){if(v1===undefined||v1===0)return v2===undefined||v2===0;return v1===v2;}
for(const u of orderedUnits$1){if(!eq(this.values[u],other.values[u])){return false;}}
return true;}}
const INVALID$1="Invalid Interval";function validateStartEnd(start,end){if(!start||!start.isValid){return Interval.invalid("missing or invalid start");}else if(!end||!end.isValid){return Interval.invalid("missing or invalid end");}else if(end<start){return Interval.invalid("end before start",`The end of an interval must be after its start, but you had start=${start.toISO()} and end=${end.toISO()}`);}else{return null;}}
class Interval{constructor(config){this.s=config.start;this.e=config.end;this.invalid=config.invalid||null;this.isLuxonInterval=true;}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the Interval is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidIntervalError(invalid);}else{return new Interval({invalid});}}
static fromDateTimes(start,end){const builtStart=friendlyDateTime(start),builtEnd=friendlyDateTime(end);const validateError=validateStartEnd(builtStart,builtEnd);if(validateError==null){return new Interval({start:builtStart,end:builtEnd,});}else{return validateError;}}
static after(start,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(start);return Interval.fromDateTimes(dt,dt.plus(dur));}
static before(end,duration){const dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(end);return Interval.fromDateTimes(dt.minus(dur),dt);}
static fromISO(text,opts){const[s,e]=(text||"").split("/",2);if(s&&e){let start,startIsValid;try{start=DateTime.fromISO(s,opts);startIsValid=start.isValid;}catch(e){startIsValid=false;}
let end,endIsValid;try{end=DateTime.fromISO(e,opts);endIsValid=end.isValid;}catch(e){endIsValid=false;}
if(startIsValid&&endIsValid){return Interval.fromDateTimes(start,end);}
if(startIsValid){const dur=Duration.fromISO(e,opts);if(dur.isValid){return Interval.after(start,dur);}}else if(endIsValid){const dur=Duration.fromISO(s,opts);if(dur.isValid){return Interval.before(end,dur);}}}
return Interval.invalid("unparsable",`the input "${text}" can't be parsed as ISO 8601`);}
static isInterval(o){return(o&&o.isLuxonInterval)||false;}
get start(){return this.isValid?this.s:null;}
get end(){return this.isValid?this.e:null;}
get isValid(){return this.invalidReason===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
length(unit="milliseconds"){return this.isValid?this.toDuration(...[unit]).get(unit):NaN;}
count(unit="milliseconds"){if(!this.isValid)return NaN;const start=this.start.startOf(unit),end=this.end.startOf(unit);return Math.floor(end.diff(start,unit).get(unit))+(end.valueOf()!==this.end.valueOf());}
hasSame(unit){return this.isValid?this.isEmpty()||this.e.minus(1).hasSame(this.s,unit):false;}
isEmpty(){return this.s.valueOf()===this.e.valueOf();}
isAfter(dateTime){if(!this.isValid)return false;return this.s>dateTime;}
isBefore(dateTime){if(!this.isValid)return false;return this.e<=dateTime;}
contains(dateTime){if(!this.isValid)return false;return this.s<=dateTime&&this.e>dateTime;}
set({start,end}={}){if(!this.isValid)return this;return Interval.fromDateTimes(start||this.s,end||this.e);}
splitAt(...dateTimes){if(!this.isValid)return[];const sorted=dateTimes.map(friendlyDateTime).filter((d)=>this.contains(d)).sort(),results=[];let{s}=this,i=0;while(s<this.e){const added=sorted[i]||this.e,next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;i+=1;}
return results;}
splitBy(duration){const dur=Duration.fromDurationLike(duration);if(!this.isValid||!dur.isValid||dur.as("milliseconds")===0){return[];}
let{s}=this,idx=1,next;const results=[];while(s<this.e){const added=this.start.plus(dur.mapUnits((x)=>x*idx));next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;idx+=1;}
return results;}
divideEqually(numberOfParts){if(!this.isValid)return[];return this.splitBy(this.length()/numberOfParts).slice(0,numberOfParts);}
overlaps(other){return this.e>other.s&&this.s<other.e;}
abutsStart(other){if(!this.isValid)return false;return+this.e===+other.s;}
abutsEnd(other){if(!this.isValid)return false;return+other.e===+this.s;}
engulfs(other){if(!this.isValid)return false;return this.s<=other.s&&this.e>=other.e;}
equals(other){if(!this.isValid||!other.isValid){return false;}
return this.s.equals(other.s)&&this.e.equals(other.e);}
intersection(other){if(!this.isValid)return this;const s=this.s>other.s?this.s:other.s,e=this.e<other.e?this.e:other.e;if(s>=e){return null;}else{return Interval.fromDateTimes(s,e);}}
union(other){if(!this.isValid)return this;const s=this.s<other.s?this.s:other.s,e=this.e>other.e?this.e:other.e;return Interval.fromDateTimes(s,e);}
static merge(intervals){const[found,final]=intervals.sort((a,b)=>a.s-b.s).reduce(([sofar,current],item)=>{if(!current){return[sofar,item];}else if(current.overlaps(item)||current.abutsStart(item)){return[sofar,current.union(item)];}else{return[sofar.concat([current]),item];}},[[],null]);if(final){found.push(final);}
return found;}
static xor(intervals){let start=null,currentCount=0;const results=[],ends=intervals.map((i)=>[{time:i.s,type:"s"},{time:i.e,type:"e"},]),flattened=Array.prototype.concat(...ends),arr=flattened.sort((a,b)=>a.time-b.time);for(const i of arr){currentCount+=i.type==="s"?1:-1;if(currentCount===1){start=i.time;}else{if(start&&+start!==+i.time){results.push(Interval.fromDateTimes(start,i.time));}
start=null;}}
return Interval.merge(results);}
difference(...intervals){return Interval.xor([this].concat(intervals)).map((i)=>this.intersection(i)).filter((i)=>i&&!i.isEmpty());}
toString(){if(!this.isValid)return INVALID$1;return`[${this.s.toISO()} – ${this.e.toISO()})`;}
toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.s.loc.clone(opts),formatOpts).formatInterval(this):INVALID$1;}
toISO(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISO(opts)}/${this.e.toISO(opts)}`;}
toISODate(){if(!this.isValid)return INVALID$1;return`${this.s.toISODate()}/${this.e.toISODate()}`;}
toISOTime(opts){if(!this.isValid)return INVALID$1;return`${this.s.toISOTime(opts)}/${this.e.toISOTime(opts)}`;}
toFormat(dateFormat,{separator=" – "}={}){if(!this.isValid)return INVALID$1;return`${this.s.toFormat(dateFormat)}${separator}${this.e.toFormat(dateFormat)}`;}
toDuration(unit,opts){if(!this.isValid){return Duration.invalid(this.invalidReason);}
return this.e.diff(this.s,unit,opts);}
mapEndpoints(mapFn){return Interval.fromDateTimes(mapFn(this.s),mapFn(this.e));}}
class Info{static hasDST(zone=Settings.defaultZone){const proto=DateTime.now().setZone(zone).set({month:12});return!zone.isUniversal&&proto.offset!==proto.set({month:6}).offset;}
static isValidIANAZone(zone){return IANAZone.isValidZone(zone);}
static normalizeZone(input){return normalizeZone(input,Settings.defaultZone);}
static months(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length);}
static monthsFormat(length="long",{locale=null,numberingSystem=null,locObj=null,outputCalendar="gregory"}={}){return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length,true);}
static weekdays(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length);}
static weekdaysFormat(length="long",{locale=null,numberingSystem=null,locObj=null}={}){return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length,true);}
static meridiems({locale=null}={}){return Locale.create(locale).meridiems();}
static eras(length="short",{locale=null}={}){return Locale.create(locale,null,"gregory").eras(length);}
static features(){return{relative:hasRelative()};}}
function dayDiff(earlier,later){const utcDayStart=(dt)=>dt.toUTC(0,{keepLocalTime:true}).startOf("day").valueOf(),ms=utcDayStart(later)-utcDayStart(earlier);return Math.floor(Duration.fromMillis(ms).as("days"));}
function highOrderDiffs(cursor,later,units){const differs=[["years",(a,b)=>b.year-a.year],["quarters",(a,b)=>b.quarter-a.quarter+(b.year-a.year)*4],["months",(a,b)=>b.month-a.month+(b.year-a.year)*12],["weeks",(a,b)=>{const days=dayDiff(a,b);return(days-(days%7))/7;},],["days",dayDiff],];const results={};const earlier=cursor;let lowestOrder,highWater;for(const[unit,differ]of differs){if(units.indexOf(unit)>=0){lowestOrder=unit;results[unit]=differ(cursor,later);highWater=earlier.plus(results);if(highWater>later){results[unit]--;cursor=earlier.plus(results);if(cursor>later){highWater=cursor;results[unit]--;cursor=earlier.plus(results);}}else{cursor=highWater;}}}
return[cursor,results,highWater,lowestOrder];}
function diff(earlier,later,units,opts){let[cursor,results,highWater,lowestOrder]=highOrderDiffs(earlier,later,units);const remainingMillis=later-cursor;const lowerOrderUnits=units.filter((u)=>["hours","minutes","seconds","milliseconds"].indexOf(u)>=0);if(lowerOrderUnits.length===0){if(highWater<later){highWater=cursor.plus({[lowestOrder]:1});}
if(highWater!==cursor){results[lowestOrder]=(results[lowestOrder]||0)+remainingMillis/(highWater-cursor);}}
const duration=Duration.fromObject(results,opts);if(lowerOrderUnits.length>0){return Duration.fromMillis(remainingMillis,opts).shiftTo(...lowerOrderUnits).plus(duration);}else{return duration;}}
const numberingSystems={arab:"[\u0660-\u0669]",arabext:"[\u06F0-\u06F9]",bali:"[\u1B50-\u1B59]",beng:"[\u09E6-\u09EF]",deva:"[\u0966-\u096F]",fullwide:"[\uFF10-\uFF19]",gujr:"[\u0AE6-\u0AEF]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[\u17E0-\u17E9]",knda:"[\u0CE6-\u0CEF]",laoo:"[\u0ED0-\u0ED9]",limb:"[\u1946-\u194F]",mlym:"[\u0D66-\u0D6F]",mong:"[\u1810-\u1819]",mymr:"[\u1040-\u1049]",orya:"[\u0B66-\u0B6F]",tamldec:"[\u0BE6-\u0BEF]",telu:"[\u0C66-\u0C6F]",thai:"[\u0E50-\u0E59]",tibt:"[\u0F20-\u0F29]",latn:"\\d",};const numberingSystemsUTF16={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881],};const hanidecChars=numberingSystems.hanidec.replace(/[\[|\]]/g,"").split("");function parseDigits(str){let value=parseInt(str,10);if(isNaN(value)){value="";for(let i=0;i<str.length;i++){const code=str.charCodeAt(i);if(str[i].search(numberingSystems.hanidec)!==-1){value+=hanidecChars.indexOf(str[i]);}else{for(const key in numberingSystemsUTF16){const[min,max]=numberingSystemsUTF16[key];if(code>=min&&code<=max){value+=code-min;}}}}
return parseInt(value,10);}else{return value;}}
function digitRegex({numberingSystem},append=""){return new RegExp(`${numberingSystems[numberingSystem || "latn"]}${append}`);}
const MISSING_FTP="missing Intl.DateTimeFormat.formatToParts support";function intUnit(regex,post=(i)=>i){return{regex,deser:([s])=>post(parseDigits(s))};}
const NBSP=String.fromCharCode(160);const spaceOrNBSP=`[ ${NBSP}]`;const spaceOrNBSPRegExp=new RegExp(spaceOrNBSP,"g");function fixListRegex(s){return s.replace(/\./g,"\\.?").replace(spaceOrNBSPRegExp,spaceOrNBSP);}
function stripInsensitivities(s){return s.replace(/\./g,"").replace(spaceOrNBSPRegExp," ").toLowerCase();}
function oneOf(strings,startIndex){if(strings===null){return null;}else{return{regex:RegExp(strings.map(fixListRegex).join("|")),deser:([s])=>strings.findIndex((i)=>stripInsensitivities(s)===stripInsensitivities(i))+startIndex,};}}
function offset(regex,groups){return{regex,deser:([,h,m])=>signedOffset(h,m),groups};}
function simple(regex){return{regex,deser:([s])=>s};}
function escapeToken(value){return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");}
function unitForToken(token,loc){const one=digitRegex(loc),two=digitRegex(loc,"{2}"),three=digitRegex(loc,"{3}"),four=digitRegex(loc,"{4}"),six=digitRegex(loc,"{6}"),oneOrTwo=digitRegex(loc,"{1,2}"),oneToThree=digitRegex(loc,"{1,3}"),oneToSix=digitRegex(loc,"{1,6}"),oneToNine=digitRegex(loc,"{1,9}"),twoToFour=digitRegex(loc,"{2,4}"),fourToSix=digitRegex(loc,"{4,6}"),literal=(t)=>({regex:RegExp(escapeToken(t.val)),deser:([s])=>s,literal:true}),unitate=(t)=>{if(token.literal){return literal(t);}
switch(t.val){case"G":return oneOf(loc.eras("short"),0);case"GG":return oneOf(loc.eras("long"),0);case"y":return intUnit(oneToSix);case"yy":return intUnit(twoToFour,untruncateYear);case"yyyy":return intUnit(four);case"yyyyy":return intUnit(fourToSix);case"yyyyyy":return intUnit(six);case"M":return intUnit(oneOrTwo);case"MM":return intUnit(two);case"MMM":return oneOf(loc.months("short",true),1);case"MMMM":return oneOf(loc.months("long",true),1);case"L":return intUnit(oneOrTwo);case"LL":return intUnit(two);case"LLL":return oneOf(loc.months("short",false),1);case"LLLL":return oneOf(loc.months("long",false),1);case"d":return intUnit(oneOrTwo);case"dd":return intUnit(two);case"o":return intUnit(oneToThree);case"ooo":return intUnit(three);case"HH":return intUnit(two);case"H":return intUnit(oneOrTwo);case"hh":return intUnit(two);case"h":return intUnit(oneOrTwo);case"mm":return intUnit(two);case"m":return intUnit(oneOrTwo);case"q":return intUnit(oneOrTwo);case"qq":return intUnit(two);case"s":return intUnit(oneOrTwo);case"ss":return intUnit(two);case"S":return intUnit(oneToThree);case"SSS":return intUnit(three);case"u":return simple(oneToNine);case"uu":return simple(oneOrTwo);case"uuu":return intUnit(one);case"a":return oneOf(loc.meridiems(),0);case"kkkk":return intUnit(four);case"kk":return intUnit(twoToFour,untruncateYear);case"W":return intUnit(oneOrTwo);case"WW":return intUnit(two);case"E":case"c":return intUnit(one);case"EEE":return oneOf(loc.weekdays("short",false),1);case"EEEE":return oneOf(loc.weekdays("long",false),1);case"ccc":return oneOf(loc.weekdays("short",true),1);case"cccc":return oneOf(loc.weekdays("long",true),1);case"Z":case"ZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(?::(${two.source}))?`),2);case"ZZZ":return offset(new RegExp(`([+-]${oneOrTwo.source})(${two.source})?`),2);case"z":return simple(/[a-z_+-/]{1,256}?/i);case" ":return simple(/[^\S\n\r]/);default:return literal(t);}};const unit=unitate(token)||{invalidReason:MISSING_FTP,};unit.token=token;return unit;}
const partTypeStyleToTokenVal={year:{"2-digit":"yy",numeric:"yyyyy",},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM",},day:{numeric:"d","2-digit":"dd",},weekday:{short:"EEE",long:"EEEE",},dayperiod:"a",dayPeriod:"a",hour12:{numeric:"h","2-digit":"hh",},hour24:{numeric:"H","2-digit":"HH",},minute:{numeric:"m","2-digit":"mm",},second:{numeric:"s","2-digit":"ss",},timeZoneName:{long:"ZZZZZ",short:"ZZZ",},};function tokenForPart(part,formatOpts,resolvedOpts){const{type,value}=part;if(type==="literal"){const isSpace=/^\s+$/.test(value);return{literal:!isSpace,val:isSpace?" ":value,};}
const style=formatOpts[type];let actualType=type;if(type==="hour"){if(formatOpts.hour12!=null){actualType=formatOpts.hour12?"hour12":"hour24";}else if(formatOpts.hourCycle!=null){if(formatOpts.hourCycle==="h11"||formatOpts.hourCycle==="h12"){actualType="hour12";}else{actualType="hour24";}}else{actualType=resolvedOpts.hour12?"hour12":"hour24";}}
let val=partTypeStyleToTokenVal[actualType];if(typeof val==="object"){val=val[style];}
if(val){return{literal:false,val,};}
return undefined;}
function buildRegex(units){const re=units.map((u)=>u.regex).reduce((f,r)=>`${f}(${r.source})`,"");return[`^${re}$`,units];}
function match(input,regex,handlers){const matches=input.match(regex);if(matches){const all={};let matchIndex=1;for(const i in handlers){if(hasOwnProperty(handlers,i)){const h=handlers[i],groups=h.groups?h.groups+1:1;if(!h.literal&&h.token){all[h.token.val[0]]=h.deser(matches.slice(matchIndex,matchIndex+groups));}
matchIndex+=groups;}}
return[matches,all];}else{return[matches,{}];}}
function dateTimeFromMatches(matches){const toField=(token)=>{switch(token){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null;}};let zone=null;let specificOffset;if(!isUndefined(matches.z)){zone=IANAZone.create(matches.z);}
if(!isUndefined(matches.Z)){if(!zone){zone=new FixedOffsetZone(matches.Z);}
specificOffset=matches.Z;}
if(!isUndefined(matches.q)){matches.M=(matches.q-1)*3+1;}
if(!isUndefined(matches.h)){if(matches.h<12&&matches.a===1){matches.h+=12;}else if(matches.h===12&&matches.a===0){matches.h=0;}}
if(matches.G===0&&matches.y){matches.y=-matches.y;}
if(!isUndefined(matches.u)){matches.S=parseMillis(matches.u);}
const vals=Object.keys(matches).reduce((r,k)=>{const f=toField(k);if(f){r[f]=matches[k];}
return r;},{});return[vals,zone,specificOffset];}
let dummyDateTimeCache=null;function getDummyDateTime(){if(!dummyDateTimeCache){dummyDateTimeCache=DateTime.fromMillis(1555555555555);}
return dummyDateTimeCache;}
function maybeExpandMacroToken(token,locale){if(token.literal){return token;}
const formatOpts=Formatter.macroTokenToFormatOpts(token.val);const tokens=formatOptsToTokens(formatOpts,locale);if(tokens==null||tokens.includes(undefined)){return token;}
return tokens;}
function expandMacroTokens(tokens,locale){return Array.prototype.concat(...tokens.map((t)=>maybeExpandMacroToken(t,locale)));}
function explainFromTokens(locale,input,format){const tokens=expandMacroTokens(Formatter.parseFormat(format),locale),units=tokens.map((t)=>unitForToken(t,locale)),disqualifyingUnit=units.find((t)=>t.invalidReason);if(disqualifyingUnit){return{input,tokens,invalidReason:disqualifyingUnit.invalidReason};}else{const[regexString,handlers]=buildRegex(units),regex=RegExp(regexString,"i"),[rawMatches,matches]=match(input,regex,handlers),[result,zone,specificOffset]=matches?dateTimeFromMatches(matches):[null,null,undefined];if(hasOwnProperty(matches,"a")&&hasOwnProperty(matches,"H")){throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");}
return{input,tokens,regex,rawMatches,matches,result,zone,specificOffset};}}
function parseFromTokens(locale,input,format){const{result,zone,specificOffset,invalidReason}=explainFromTokens(locale,input,format);return[result,zone,specificOffset,invalidReason];}
function formatOptsToTokens(formatOpts,locale){if(!formatOpts){return null;}
const formatter=Formatter.create(locale,formatOpts);const df=formatter.dtFormatter(getDummyDateTime());const parts=df.formatToParts();const resolvedOpts=df.resolvedOptions();return parts.map((p)=>tokenForPart(p,formatOpts,resolvedOpts));}
const nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334],leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];function unitOutOfRange(unit,value){return new Invalid("unit out of range",`you specified ${value} (of type ${typeof value}) as a ${unit}, which is invalid`);}
function dayOfWeek(year,month,day){const d=new Date(Date.UTC(year,month-1,day));if(year<100&&year>=0){d.setUTCFullYear(d.getUTCFullYear()-1900);}
const js=d.getUTCDay();return js===0?7:js;}
function computeOrdinal(year,month,day){return day+(isLeapYear(year)?leapLadder:nonLeapLadder)[month-1];}
function uncomputeOrdinal(year,ordinal){const table=isLeapYear(year)?leapLadder:nonLeapLadder,month0=table.findIndex((i)=>i<ordinal),day=ordinal-table[month0];return{month:month0+1,day};}
function gregorianToWeek(gregObj){const{year,month,day}=gregObj,ordinal=computeOrdinal(year,month,day),weekday=dayOfWeek(year,month,day);let weekNumber=Math.floor((ordinal-weekday+10)/7),weekYear;if(weekNumber<1){weekYear=year-1;weekNumber=weeksInWeekYear(weekYear);}else if(weekNumber>weeksInWeekYear(year)){weekYear=year+1;weekNumber=1;}else{weekYear=year;}
return{weekYear,weekNumber,weekday,...timeObject(gregObj)};}
function weekToGregorian(weekData){const{weekYear,weekNumber,weekday}=weekData,weekdayOfJan4=dayOfWeek(weekYear,1,4),yearInDays=daysInYear(weekYear);let ordinal=weekNumber*7+weekday-weekdayOfJan4-3,year;if(ordinal<1){year=weekYear-1;ordinal+=daysInYear(year);}else if(ordinal>yearInDays){year=weekYear+1;ordinal-=daysInYear(weekYear);}else{year=weekYear;}
const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(weekData)};}
function gregorianToOrdinal(gregData){const{year,month,day}=gregData;const ordinal=computeOrdinal(year,month,day);return{year,ordinal,...timeObject(gregData)};}
function ordinalToGregorian(ordinalData){const{year,ordinal}=ordinalData;const{month,day}=uncomputeOrdinal(year,ordinal);return{year,month,day,...timeObject(ordinalData)};}
function hasInvalidWeekData(obj){const validYear=isInteger(obj.weekYear),validWeek=integerBetween(obj.weekNumber,1,weeksInWeekYear(obj.weekYear)),validWeekday=integerBetween(obj.weekday,1,7);if(!validYear){return unitOutOfRange("weekYear",obj.weekYear);}else if(!validWeek){return unitOutOfRange("week",obj.week);}else if(!validWeekday){return unitOutOfRange("weekday",obj.weekday);}else return false;}
function hasInvalidOrdinalData(obj){const validYear=isInteger(obj.year),validOrdinal=integerBetween(obj.ordinal,1,daysInYear(obj.year));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validOrdinal){return unitOutOfRange("ordinal",obj.ordinal);}else return false;}
function hasInvalidGregorianData(obj){const validYear=isInteger(obj.year),validMonth=integerBetween(obj.month,1,12),validDay=integerBetween(obj.day,1,daysInMonth(obj.year,obj.month));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validMonth){return unitOutOfRange("month",obj.month);}else if(!validDay){return unitOutOfRange("day",obj.day);}else return false;}
function hasInvalidTimeData(obj){const{hour,minute,second,millisecond}=obj;const validHour=integerBetween(hour,0,23)||(hour===24&&minute===0&&second===0&&millisecond===0),validMinute=integerBetween(minute,0,59),validSecond=integerBetween(second,0,59),validMillisecond=integerBetween(millisecond,0,999);if(!validHour){return unitOutOfRange("hour",hour);}else if(!validMinute){return unitOutOfRange("minute",minute);}else if(!validSecond){return unitOutOfRange("second",second);}else if(!validMillisecond){return unitOutOfRange("millisecond",millisecond);}else return false;}
const INVALID="Invalid DateTime";const MAX_DATE=8.64e15;function unsupportedZone(zone){return new Invalid("unsupported zone",`the zone "${zone.name}" is not supported`);}
function possiblyCachedWeekData(dt){if(dt.weekData===null){dt.weekData=gregorianToWeek(dt.c);}
return dt.weekData;}
function clone(inst,alts){const current={ts:inst.ts,zone:inst.zone,c:inst.c,o:inst.o,loc:inst.loc,invalid:inst.invalid,};return new DateTime({...current,...alts,old:current});}
function fixOffset(localTS,o,tz){let utcGuess=localTS-o*60*1000;const o2=tz.offset(utcGuess);if(o===o2){return[utcGuess,o];}
utcGuess-=(o2-o)*60*1000;const o3=tz.offset(utcGuess);if(o2===o3){return[utcGuess,o2];}
return[localTS-Math.min(o2,o3)*60*1000,Math.max(o2,o3)];}
function tsToObj(ts,offset){ts+=offset*60*1000;const d=new Date(ts);return{year:d.getUTCFullYear(),month:d.getUTCMonth()+1,day:d.getUTCDate(),hour:d.getUTCHours(),minute:d.getUTCMinutes(),second:d.getUTCSeconds(),millisecond:d.getUTCMilliseconds(),};}
function objToTS(obj,offset,zone){return fixOffset(objToLocalTS(obj),offset,zone);}
function adjustTime(inst,dur){const oPre=inst.o,year=inst.c.year+Math.trunc(dur.years),month=inst.c.month+Math.trunc(dur.months)+Math.trunc(dur.quarters)*3,c={...inst.c,year,month,day:Math.min(inst.c.day,daysInMonth(year,month))+
Math.trunc(dur.days)+
Math.trunc(dur.weeks)*7,},millisToAdd=Duration.fromObject({years:dur.years-Math.trunc(dur.years),quarters:dur.quarters-Math.trunc(dur.quarters),months:dur.months-Math.trunc(dur.months),weeks:dur.weeks-Math.trunc(dur.weeks),days:dur.days-Math.trunc(dur.days),hours:dur.hours,minutes:dur.minutes,seconds:dur.seconds,milliseconds:dur.milliseconds,}).as("milliseconds"),localTS=objToLocalTS(c);let[ts,o]=fixOffset(localTS,oPre,inst.zone);if(millisToAdd!==0){ts+=millisToAdd;o=inst.zone.offset(ts);}
return{ts,o};}
function parseDataToDateTime(parsed,parsedZone,opts,format,text,specificOffset){const{setZone,zone}=opts;if((parsed&&Object.keys(parsed).length!==0)||parsedZone){const interpretationZone=parsedZone||zone,inst=DateTime.fromObject(parsed,{...opts,zone:interpretationZone,specificOffset,});return setZone?inst:inst.setZone(zone);}else{return DateTime.invalid(new Invalid("unparsable",`the input "${text}" can't be parsed as ${format}`));}}
function toTechFormat(dt,format,allowZ=true){return dt.isValid?Formatter.create(Locale.create("en-US"),{allowZ,forceSimple:true,}).formatDateTimeFromString(dt,format):null;}
function toISODate(o,extended){const longFormat=o.c.year>9999||o.c.year<0;let c="";if(longFormat&&o.c.year>=0)c+="+";c+=padStart(o.c.year,longFormat?6:4);if(extended){c+="-";c+=padStart(o.c.month);c+="-";c+=padStart(o.c.day);}else{c+=padStart(o.c.month);c+=padStart(o.c.day);}
return c;}
function toISOTime(o,extended,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone){let c=padStart(o.c.hour);if(extended){c+=":";c+=padStart(o.c.minute);if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=":";}}else{c+=padStart(o.c.minute);}
if(o.c.millisecond!==0||o.c.second!==0||!suppressSeconds){c+=padStart(o.c.second);if(o.c.millisecond!==0||!suppressMilliseconds){c+=".";c+=padStart(o.c.millisecond,3);}}
if(includeOffset){if(o.isOffsetFixed&&o.offset===0&&!extendedZone){c+="Z";}else if(o.o<0){c+="-";c+=padStart(Math.trunc(-o.o/60));c+=":";c+=padStart(Math.trunc(-o.o%60));}else{c+="+";c+=padStart(Math.trunc(o.o/60));c+=":";c+=padStart(Math.trunc(o.o%60));}}
if(extendedZone){c+="["+o.zone.ianaName+"]";}
return c;}
const defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0,},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0,},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0,};const orderedUnits=["year","month","day","hour","minute","second","millisecond"],orderedWeekUnits=["weekYear","weekNumber","weekday","hour","minute","second","millisecond",],orderedOrdinalUnits=["year","ordinal","hour","minute","second","millisecond"];function normalizeUnit(unit){const normalized={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal",}[unit.toLowerCase()];if(!normalized)throw new InvalidUnitError(unit);return normalized;}
function quickDT(obj,opts){const zone=normalizeZone(opts.zone,Settings.defaultZone),loc=Locale.fromObject(opts),tsNow=Settings.now();let ts,o;if(!isUndefined(obj.year)){for(const u of orderedUnits){if(isUndefined(obj[u])){obj[u]=defaultUnitValues[u];}}
const invalid=hasInvalidGregorianData(obj)||hasInvalidTimeData(obj);if(invalid){return DateTime.invalid(invalid);}
const offsetProvis=zone.offset(tsNow);[ts,o]=objToTS(obj,offsetProvis,zone);}else{ts=tsNow;}
return new DateTime({ts,zone,loc,o});}
function diffRelative(start,end,opts){const round=isUndefined(opts.round)?true:opts.round,format=(c,unit)=>{c=roundTo(c,round||opts.calendary?0:2,true);const formatter=end.loc.clone(opts).relFormatter(opts);return formatter.format(c,unit);},differ=(unit)=>{if(opts.calendary){if(!end.hasSame(start,unit)){return end.startOf(unit).diff(start.startOf(unit),unit).get(unit);}else return 0;}else{return end.diff(start,unit).get(unit);}};if(opts.unit){return format(differ(opts.unit),opts.unit);}
for(const unit of opts.units){const count=differ(unit);if(Math.abs(count)>=1){return format(count,unit);}}
return format(start>end?-0:0,opts.units[opts.units.length-1]);}
function lastOpts(argList){let opts={},args;if(argList.length>0&&typeof argList[argList.length-1]==="object"){opts=argList[argList.length-1];args=Array.from(argList).slice(0,argList.length-1);}else{args=Array.from(argList);}
return[opts,args];}
class DateTime{constructor(config){const zone=config.zone||Settings.defaultZone;let invalid=config.invalid||(Number.isNaN(config.ts)?new Invalid("invalid input"):null)||(!zone.isValid?unsupportedZone(zone):null);this.ts=isUndefined(config.ts)?Settings.now():config.ts;let c=null,o=null;if(!invalid){const unchanged=config.old&&config.old.ts===this.ts&&config.old.zone.equals(zone);if(unchanged){[c,o]=[config.old.c,config.old.o];}else{const ot=zone.offset(this.ts);c=tsToObj(this.ts,ot);invalid=Number.isNaN(c.year)?new Invalid("invalid input"):null;c=invalid?null:c;o=invalid?null:ot;}}
this._zone=zone;this.loc=config.loc||Locale.create();this.invalid=invalid;this.weekData=null;this.c=c;this.o=o;this.isLuxonDateTime=true;}
static now(){return new DateTime({});}
static local(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}
static utc(){const[opts,args]=lastOpts(arguments),[year,month,day,hour,minute,second,millisecond]=args;opts.zone=FixedOffsetZone.utcInstance;return quickDT({year,month,day,hour,minute,second,millisecond},opts);}
static fromJSDate(date,options={}){const ts=isDate(date)?date.valueOf():NaN;if(Number.isNaN(ts)){return DateTime.invalid("invalid input");}
const zoneToUse=normalizeZone(options.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
return new DateTime({ts:ts,zone:zoneToUse,loc:Locale.fromObject(options),});}
static fromMillis(milliseconds,options={}){if(!isNumber(milliseconds)){throw new InvalidArgumentError(`fromMillis requires a numerical input, but received a ${typeof milliseconds} with value ${milliseconds}`);}else if(milliseconds<-MAX_DATE||milliseconds>MAX_DATE){return DateTime.invalid("Timestamp out of range");}else{return new DateTime({ts:milliseconds,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options),});}}
static fromSeconds(seconds,options={}){if(!isNumber(seconds)){throw new InvalidArgumentError("fromSeconds requires a numerical input");}else{return new DateTime({ts:seconds*1000,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options),});}}
static fromObject(obj,opts={}){obj=obj||{};const zoneToUse=normalizeZone(opts.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
const tsNow=Settings.now(),offsetProvis=!isUndefined(opts.specificOffset)?opts.specificOffset:zoneToUse.offset(tsNow),normalized=normalizeObject(obj,normalizeUnit),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber,loc=Locale.fromObject(opts);if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
const useWeekData=definiteWeekDef||(normalized.weekday&&!containsGregor);let units,defaultValues,objNow=tsToObj(tsNow,offsetProvis);if(useWeekData){units=orderedWeekUnits;defaultValues=defaultWeekUnitValues;objNow=gregorianToWeek(objNow);}else if(containsOrdinal){units=orderedOrdinalUnits;defaultValues=defaultOrdinalUnitValues;objNow=gregorianToOrdinal(objNow);}else{units=orderedUnits;defaultValues=defaultUnitValues;}
let foundFirst=false;for(const u of units){const v=normalized[u];if(!isUndefined(v)){foundFirst=true;}else if(foundFirst){normalized[u]=defaultValues[u];}else{normalized[u]=objNow[u];}}
const higherOrderInvalid=useWeekData?hasInvalidWeekData(normalized):containsOrdinal?hasInvalidOrdinalData(normalized):hasInvalidGregorianData(normalized),invalid=higherOrderInvalid||hasInvalidTimeData(normalized);if(invalid){return DateTime.invalid(invalid);}
const gregorian=useWeekData?weekToGregorian(normalized):containsOrdinal?ordinalToGregorian(normalized):normalized,[tsFinal,offsetFinal]=objToTS(gregorian,offsetProvis,zoneToUse),inst=new DateTime({ts:tsFinal,zone:zoneToUse,o:offsetFinal,loc,});if(normalized.weekday&&containsGregor&&obj.weekday!==inst.weekday){return DateTime.invalid("mismatched weekday",`you can't specify both a weekday of ${normalized.weekday} and a date of ${inst.toISO()}`);}
return inst;}
static fromISO(text,opts={}){const[vals,parsedZone]=parseISODate(text);return parseDataToDateTime(vals,parsedZone,opts,"ISO 8601",text);}
static fromRFC2822(text,opts={}){const[vals,parsedZone]=parseRFC2822Date(text);return parseDataToDateTime(vals,parsedZone,opts,"RFC 2822",text);}
static fromHTTP(text,opts={}){const[vals,parsedZone]=parseHTTPDate(text);return parseDataToDateTime(vals,parsedZone,opts,"HTTP",opts);}
static fromFormat(text,fmt,opts={}){if(isUndefined(text)||isUndefined(fmt)){throw new InvalidArgumentError("fromFormat requires an input string and a format");}
const{locale=null,numberingSystem=null}=opts,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true,}),[vals,parsedZone,specificOffset,invalid]=parseFromTokens(localeToUse,text,fmt);if(invalid){return DateTime.invalid(invalid);}else{return parseDataToDateTime(vals,parsedZone,opts,`format ${fmt}`,text,specificOffset);}}
static fromString(text,fmt,opts={}){return DateTime.fromFormat(text,fmt,opts);}
static fromSQL(text,opts={}){const[vals,parsedZone]=parseSQL(text);return parseDataToDateTime(vals,parsedZone,opts,"SQL",text);}
static invalid(reason,explanation=null){if(!reason){throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");}
const invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDateTimeError(invalid);}else{return new DateTime({invalid});}}
static isDateTime(o){return(o&&o.isLuxonDateTime)||false;}
static parseFormatForOpts(formatOpts,localeOpts={}){const tokenList=formatOptsToTokens(formatOpts,Locale.fromObject(localeOpts));return!tokenList?null:tokenList.map((t)=>(t?t.val:null)).join("");}
static expandFormat(fmt,localeOpts={}){const expanded=expandMacroTokens(Formatter.parseFormat(fmt),Locale.fromObject(localeOpts));return expanded.map((t)=>t.val).join("");}
get(unit){return this[unit];}
get isValid(){return this.invalid===null;}
get invalidReason(){return this.invalid?this.invalid.reason:null;}
get invalidExplanation(){return this.invalid?this.invalid.explanation:null;}
get locale(){return this.isValid?this.loc.locale:null;}
get numberingSystem(){return this.isValid?this.loc.numberingSystem:null;}
get outputCalendar(){return this.isValid?this.loc.outputCalendar:null;}
get zone(){return this._zone;}
get zoneName(){return this.isValid?this.zone.name:null;}
get year(){return this.isValid?this.c.year:NaN;}
get quarter(){return this.isValid?Math.ceil(this.c.month/3):NaN;}
get month(){return this.isValid?this.c.month:NaN;}
get day(){return this.isValid?this.c.day:NaN;}
get hour(){return this.isValid?this.c.hour:NaN;}
get minute(){return this.isValid?this.c.minute:NaN;}
get second(){return this.isValid?this.c.second:NaN;}
get millisecond(){return this.isValid?this.c.millisecond:NaN;}
get weekYear(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN;}
get weekNumber(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN;}
get weekday(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN;}
get ordinal(){return this.isValid?gregorianToOrdinal(this.c).ordinal:NaN;}
get monthShort(){return this.isValid?Info.months("short",{locObj:this.loc})[this.month-1]:null;}
get monthLong(){return this.isValid?Info.months("long",{locObj:this.loc})[this.month-1]:null;}
get weekdayShort(){return this.isValid?Info.weekdays("short",{locObj:this.loc})[this.weekday-1]:null;}
get weekdayLong(){return this.isValid?Info.weekdays("long",{locObj:this.loc})[this.weekday-1]:null;}
get offset(){return this.isValid?+this.o:NaN;}
get offsetNameShort(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"short",locale:this.locale,});}else{return null;}}
get offsetNameLong(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"long",locale:this.locale,});}else{return null;}}
get isOffsetFixed(){return this.isValid?this.zone.isUniversal:null;}
get isInDST(){if(this.isOffsetFixed){return false;}else{return(this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset);}}
getPossibleOffsets(){if(!this.isValid||this.isOffsetFixed){return[this];}
const dayMs=86400000;const minuteMs=60000;const localTS=objToLocalTS(this.c);const oEarlier=this.zone.offset(localTS-dayMs);const oLater=this.zone.offset(localTS+dayMs);const o1=this.zone.offset(localTS-oEarlier*minuteMs);const o2=this.zone.offset(localTS-oLater*minuteMs);if(o1===o2){return[this];}
const ts1=localTS-o1*minuteMs;const ts2=localTS-o2*minuteMs;const c1=tsToObj(ts1,o1);const c2=tsToObj(ts2,o2);if(c1.hour===c2.hour&&c1.minute===c2.minute&&c1.second===c2.second&&c1.millisecond===c2.millisecond){return[clone(this,{ts:ts1}),clone(this,{ts:ts2})];}
return[this];}
get isInLeapYear(){return isLeapYear(this.year);}
get daysInMonth(){return daysInMonth(this.year,this.month);}
get daysInYear(){return this.isValid?daysInYear(this.year):NaN;}
get weeksInWeekYear(){return this.isValid?weeksInWeekYear(this.weekYear):NaN;}
resolvedLocaleOptions(opts={}){const{locale,numberingSystem,calendar}=Formatter.create(this.loc.clone(opts),opts).resolvedOptions(this);return{locale,numberingSystem,outputCalendar:calendar};}
toUTC(offset=0,opts={}){return this.setZone(FixedOffsetZone.instance(offset),opts);}
toLocal(){return this.setZone(Settings.defaultZone);}
setZone(zone,{keepLocalTime=false,keepCalendarTime=false}={}){zone=normalizeZone(zone,Settings.defaultZone);if(zone.equals(this.zone)){return this;}else if(!zone.isValid){return DateTime.invalid(unsupportedZone(zone));}else{let newTS=this.ts;if(keepLocalTime||keepCalendarTime){const offsetGuess=zone.offset(this.ts);const asObj=this.toObject();[newTS]=objToTS(asObj,offsetGuess,zone);}
return clone(this,{ts:newTS,zone});}}
reconfigure({locale,numberingSystem,outputCalendar}={}){const loc=this.loc.clone({locale,numberingSystem,outputCalendar});return clone(this,{loc});}
setLocale(locale){return this.reconfigure({locale});}
set(values){if(!this.isValid)return this;const normalized=normalizeObject(values,normalizeUnit),settingWeekStuff=!isUndefined(normalized.weekYear)||!isUndefined(normalized.weekNumber)||!isUndefined(normalized.weekday),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
let mixed;if(settingWeekStuff){mixed=weekToGregorian({...gregorianToWeek(this.c),...normalized});}else if(!isUndefined(normalized.ordinal)){mixed=ordinalToGregorian({...gregorianToOrdinal(this.c),...normalized});}else{mixed={...this.toObject(),...normalized};if(isUndefined(normalized.day)){mixed.day=Math.min(daysInMonth(mixed.year,mixed.month),mixed.day);}}
const[ts,o]=objToTS(mixed,this.o,this.zone);return clone(this,{ts,o});}
plus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration);return clone(this,adjustTime(this,dur));}
minus(duration){if(!this.isValid)return this;const dur=Duration.fromDurationLike(duration).negate();return clone(this,adjustTime(this,dur));}
startOf(unit){if(!this.isValid)return this;const o={},normalizedUnit=Duration.normalizeUnit(unit);switch(normalizedUnit){case"years":o.month=1;case"quarters":case"months":o.day=1;case"weeks":case"days":o.hour=0;case"hours":o.minute=0;case"minutes":o.second=0;case"seconds":o.millisecond=0;break;}
if(normalizedUnit==="weeks"){o.weekday=1;}
if(normalizedUnit==="quarters"){const q=Math.ceil(this.month/3);o.month=(q-1)*3+1;}
return this.set(o);}
endOf(unit){return this.isValid?this.plus({[unit]:1}).startOf(unit).minus(1):this;}
toFormat(fmt,opts={}){return this.isValid?Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this,fmt):INVALID;}
toLocaleString(formatOpts=DATE_SHORT,opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),formatOpts).formatDateTime(this):INVALID;}
toLocaleParts(opts={}){return this.isValid?Formatter.create(this.loc.clone(opts),opts).formatDateTimeParts(this):[];}
toISO({format="extended",suppressSeconds=false,suppressMilliseconds=false,includeOffset=true,extendedZone=false,}={}){if(!this.isValid){return null;}
const ext=format==="extended";let c=toISODate(this,ext);c+="T";c+=toISOTime(this,ext,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);return c;}
toISODate({format="extended"}={}){if(!this.isValid){return null;}
return toISODate(this,format==="extended");}
toISOWeekDate(){return toTechFormat(this,"kkkk-'W'WW-c");}
toISOTime({suppressMilliseconds=false,suppressSeconds=false,includeOffset=true,includePrefix=false,extendedZone=false,format="extended",}={}){if(!this.isValid){return null;}
let c=includePrefix?"T":"";return(c+
toISOTime(this,format==="extended",suppressSeconds,suppressMilliseconds,includeOffset,extendedZone));}
toRFC2822(){return toTechFormat(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",false);}
toHTTP(){return toTechFormat(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'");}
toSQLDate(){if(!this.isValid){return null;}
return toISODate(this,true);}
toSQLTime({includeOffset=true,includeZone=false,includeOffsetSpace=true}={}){let fmt="HH:mm:ss.SSS";if(includeZone||includeOffset){if(includeOffsetSpace){fmt+=" ";}
if(includeZone){fmt+="z";}else if(includeOffset){fmt+="ZZ";}}
return toTechFormat(this,fmt,true);}
toSQL(opts={}){if(!this.isValid){return null;}
return`${this.toSQLDate()} ${this.toSQLTime(opts)}`;}
toString(){return this.isValid?this.toISO():INVALID;}
valueOf(){return this.toMillis();}
toMillis(){return this.isValid?this.ts:NaN;}
toSeconds(){return this.isValid?this.ts/1000:NaN;}
toUnixInteger(){return this.isValid?Math.floor(this.ts/1000):NaN;}
toJSON(){return this.toISO();}
toBSON(){return this.toJSDate();}
toObject(opts={}){if(!this.isValid)return{};const base={...this.c};if(opts.includeConfig){base.outputCalendar=this.outputCalendar;base.numberingSystem=this.loc.numberingSystem;base.locale=this.loc.locale;}
return base;}
toJSDate(){return new Date(this.isValid?this.ts:NaN);}
diff(otherDateTime,unit="milliseconds",opts={}){if(!this.isValid||!otherDateTime.isValid){return Duration.invalid("created by diffing an invalid DateTime");}
const durOpts={locale:this.locale,numberingSystem:this.numberingSystem,...opts};const units=maybeArray(unit).map(Duration.normalizeUnit),otherIsLater=otherDateTime.valueOf()>this.valueOf(),earlier=otherIsLater?this:otherDateTime,later=otherIsLater?otherDateTime:this,diffed=diff(earlier,later,units,durOpts);return otherIsLater?diffed.negate():diffed;}
diffNow(unit="milliseconds",opts={}){return this.diff(DateTime.now(),unit,opts);}
until(otherDateTime){return this.isValid?Interval.fromDateTimes(this,otherDateTime):this;}
hasSame(otherDateTime,unit){if(!this.isValid)return false;const inputMs=otherDateTime.valueOf();const adjustedToZone=this.setZone(otherDateTime.zone,{keepLocalTime:true});return adjustedToZone.startOf(unit)<=inputMs&&inputMs<=adjustedToZone.endOf(unit);}
equals(other){return(this.isValid&&other.isValid&&this.valueOf()===other.valueOf()&&this.zone.equals(other.zone)&&this.loc.equals(other.loc));}
toRelative(options={}){if(!this.isValid)return null;const base=options.base||DateTime.fromObject({},{zone:this.zone}),padding=options.padding?(this<base?-options.padding:options.padding):0;let units=["years","months","days","hours","minutes","seconds"];let unit=options.unit;if(Array.isArray(options.unit)){units=options.unit;unit=undefined;}
return diffRelative(base,this.plus(padding),{...options,numeric:"always",units,unit,});}
toRelativeCalendar(options={}){if(!this.isValid)return null;return diffRelative(options.base||DateTime.fromObject({},{zone:this.zone}),this,{...options,numeric:"auto",units:["years","months","days"],calendary:true,});}
static min(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("min requires all arguments be DateTimes");}
return bestBy(dateTimes,(i)=>i.valueOf(),Math.min);}
static max(...dateTimes){if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("max requires all arguments be DateTimes");}
return bestBy(dateTimes,(i)=>i.valueOf(),Math.max);}
static fromFormatExplain(text,fmt,options={}){const{locale=null,numberingSystem=null}=options,localeToUse=Locale.fromOpts({locale,numberingSystem,defaultToEN:true,});return explainFromTokens(localeToUse,text,fmt);}
static fromStringExplain(text,fmt,options={}){return DateTime.fromFormatExplain(text,fmt,options);}
static get DATE_SHORT(){return DATE_SHORT;}
static get DATE_MED(){return DATE_MED;}
static get DATE_MED_WITH_WEEKDAY(){return DATE_MED_WITH_WEEKDAY;}
static get DATE_FULL(){return DATE_FULL;}
static get DATE_HUGE(){return DATE_HUGE;}
static get TIME_SIMPLE(){return TIME_SIMPLE;}
static get TIME_WITH_SECONDS(){return TIME_WITH_SECONDS;}
static get TIME_WITH_SHORT_OFFSET(){return TIME_WITH_SHORT_OFFSET;}
static get TIME_WITH_LONG_OFFSET(){return TIME_WITH_LONG_OFFSET;}
static get TIME_24_SIMPLE(){return TIME_24_SIMPLE;}
static get TIME_24_WITH_SECONDS(){return TIME_24_WITH_SECONDS;}
static get TIME_24_WITH_SHORT_OFFSET(){return TIME_24_WITH_SHORT_OFFSET;}
static get TIME_24_WITH_LONG_OFFSET(){return TIME_24_WITH_LONG_OFFSET;}
static get DATETIME_SHORT(){return DATETIME_SHORT;}
static get DATETIME_SHORT_WITH_SECONDS(){return DATETIME_SHORT_WITH_SECONDS;}
static get DATETIME_MED(){return DATETIME_MED;}
static get DATETIME_MED_WITH_SECONDS(){return DATETIME_MED_WITH_SECONDS;}
static get DATETIME_MED_WITH_WEEKDAY(){return DATETIME_MED_WITH_WEEKDAY;}
static get DATETIME_FULL(){return DATETIME_FULL;}
static get DATETIME_FULL_WITH_SECONDS(){return DATETIME_FULL_WITH_SECONDS;}
static get DATETIME_HUGE(){return DATETIME_HUGE;}
static get DATETIME_HUGE_WITH_SECONDS(){return DATETIME_HUGE_WITH_SECONDS;}}
function friendlyDateTime(dateTimeish){if(DateTime.isDateTime(dateTimeish)){return dateTimeish;}else if(dateTimeish&&dateTimeish.valueOf&&isNumber(dateTimeish.valueOf())){return DateTime.fromJSDate(dateTimeish);}else if(dateTimeish&&typeof dateTimeish==="object"){return DateTime.fromObject(dateTimeish);}else{throw new InvalidArgumentError(`Unknown datetime argument: ${dateTimeish}, of type ${typeof dateTimeish}`);}}
const VERSION="3.4.2";exports.DateTime=DateTime;exports.Duration=Duration;exports.FixedOffsetZone=FixedOffsetZone;exports.IANAZone=IANAZone;exports.Info=Info;exports.Interval=Interval;exports.InvalidZone=InvalidZone;exports.Settings=Settings;exports.SystemZone=SystemZone;exports.VERSION=VERSION;exports.Zone=Zone;Object.defineProperty(exports,'__esModule',{value:true});return exports;})({});luxon.DateTime.prototype[Symbol.toStringTag]="LuxonDateTime";luxon.Duration.prototype[Symbol.toStringTag]="LuxonDuration";luxon.Interval.prototype[Symbol.toStringTag]="LuxonInterval";luxon.Settings.prototype[Symbol.toStringTag]="LuxonSettings";luxon.Info.prototype[Symbol.toStringTag]="LuxonInfo";luxon.Zone.prototype[Symbol.toStringTag]="LuxonZone";;

/* /web/static/lib/owl/owl.js */
(function(exports){'use strict';function filterOutModifiersFromData(dataList){dataList=dataList.slice();const modifiers=[];let elm;while((elm=dataList[0])&&typeof elm==="string"){modifiers.push(dataList.shift());}
return{modifiers,data:dataList};}
const config={shouldNormalizeDom:true,mainEventHandler:(data,ev,currentTarget)=>{if(typeof data==="function"){data(ev);}
else if(Array.isArray(data)){data=filterOutModifiersFromData(data).data;data[0](data[1],ev);}
return false;},};class VToggler{constructor(key,child){this.key=key;this.child=child;}
mount(parent,afterNode){this.parentEl=parent;this.child.mount(parent,afterNode);}
moveBeforeDOMNode(node,parent){this.child.moveBeforeDOMNode(node,parent);}
moveBeforeVNode(other,afterNode){this.moveBeforeDOMNode((other&&other.firstNode())||afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
let child1=this.child;let child2=other.child;if(this.key===other.key){child1.patch(child2,withBeforeRemove);}
else{child2.mount(this.parentEl,child1.firstNode());if(withBeforeRemove){child1.beforeRemove();}
child1.remove();this.child=child2;this.key=other.key;}}
beforeRemove(){this.child.beforeRemove();}
remove(){this.child.remove();}
firstNode(){return this.child.firstNode();}
toString(){return this.child.toString();}}
function toggler(key,child){return new VToggler(key,child);}
class OwlError extends Error{}
const{setAttribute:elemSetAttribute,removeAttribute}=Element.prototype;const tokenList=DOMTokenList.prototype;const tokenListAdd=tokenList.add;const tokenListRemove=tokenList.remove;const isArray=Array.isArray;const{split,trim}=String.prototype;const wordRegexp=/\s+/;function setAttribute(key,value){switch(value){case false:case undefined:removeAttribute.call(this,key);break;case true:elemSetAttribute.call(this,key,"");break;default:elemSetAttribute.call(this,key,value);}}
function createAttrUpdater(attr){return function(value){setAttribute.call(this,attr,value);};}
function attrsSetter(attrs){if(isArray(attrs)){if(attrs[0]==="class"){setClass.call(this,attrs[1]);}
else{setAttribute.call(this,attrs[0],attrs[1]);}}
else{for(let k in attrs){if(k==="class"){setClass.call(this,attrs[k]);}
else{setAttribute.call(this,k,attrs[k]);}}}}
function attrsUpdater(attrs,oldAttrs){if(isArray(attrs)){const name=attrs[0];const val=attrs[1];if(name===oldAttrs[0]){if(val===oldAttrs[1]){return;}
if(name==="class"){updateClass.call(this,val,oldAttrs[1]);}
else{setAttribute.call(this,name,val);}}
else{removeAttribute.call(this,oldAttrs[0]);setAttribute.call(this,name,val);}}
else{for(let k in oldAttrs){if(!(k in attrs)){if(k==="class"){updateClass.call(this,"",oldAttrs[k]);}
else{removeAttribute.call(this,k);}}}
for(let k in attrs){const val=attrs[k];if(val!==oldAttrs[k]){if(k==="class"){updateClass.call(this,val,oldAttrs[k]);}
else{setAttribute.call(this,k,val);}}}}}
function toClassObj(expr){const result={};switch(typeof expr){case"string":const str=trim.call(expr);if(!str){return{};}
let words=split.call(str,wordRegexp);for(let i=0,l=words.length;i<l;i++){result[words[i]]=true;}
return result;case"object":for(let key in expr){const value=expr[key];if(value){key=trim.call(key);if(!key){continue;}
const words=split.call(key,wordRegexp);for(let word of words){result[word]=value;}}}
return result;case"undefined":return{};case"number":return{[expr]:true};default:return{[expr]:true};}}
function setClass(val){val=val===""?{}:toClassObj(val);const cl=this.classList;for(let c in val){tokenListAdd.call(cl,c);}}
function updateClass(val,oldVal){oldVal=oldVal===""?{}:toClassObj(oldVal);val=val===""?{}:toClassObj(val);const cl=this.classList;for(let c in oldVal){if(!(c in val)){tokenListRemove.call(cl,c);}}
for(let c in val){if(!(c in oldVal)){tokenListAdd.call(cl,c);}}}
function batched(callback){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await Promise.resolve();scheduled=false;callback(...args);}};}
function inOwnerDocument(el){if(!el){return false;}
if(el.ownerDocument.contains(el)){return true;}
const rootNode=el.getRootNode();return rootNode instanceof ShadowRoot&&el.ownerDocument.contains(rootNode.host);}
function validateTarget(target){const document=target&&target.ownerDocument;if(document){const HTMLElement=document.defaultView.HTMLElement;if(target instanceof HTMLElement||target instanceof ShadowRoot){if(!document.body.contains(target instanceof HTMLElement?target:target.host)){throw new OwlError("Cannot mount a component on a detached dom node");}
return;}}
throw new OwlError("Cannot mount component: the target is not a valid DOM element");}
class EventBus extends EventTarget{trigger(name,payload){this.dispatchEvent(new CustomEvent(name,{detail:payload}));}}
function whenReady(fn){return new Promise(function(resolve){if(document.readyState!=="loading"){resolve(true);}
else{document.addEventListener("DOMContentLoaded",resolve,false);}}).then(fn||function(){});}
async function loadFile(url){const result=await fetch(url);if(!result.ok){throw new OwlError("Error while fetching xml templates");}
return await result.text();}
class Markup extends String{}
function markup(value){return new Markup(value);}
function createEventHandler(rawEvent){const eventName=rawEvent.split(".")[0];const capture=rawEvent.includes(".capture");if(rawEvent.includes(".synthetic")){return createSyntheticHandler(eventName,capture);}
else{return createElementHandler(eventName,capture);}}
let nextNativeEventId=1;function createElementHandler(evName,capture=false){let eventKey=`__event__${evName}_${nextNativeEventId++}`;if(capture){eventKey=`${eventKey}_capture`;}
function listener(ev){const currentTarget=ev.currentTarget;if(!currentTarget||!inOwnerDocument(currentTarget))
return;const data=currentTarget[eventKey];if(!data)
return;config.mainEventHandler(data,ev,currentTarget);}
function setup(data){this[eventKey]=data;this.addEventListener(evName,listener,{capture});}
function remove(){delete this[eventKey];this.removeEventListener(evName,listener,{capture});}
function update(data){this[eventKey]=data;}
return{setup,update,remove};}
let nextSyntheticEventId=1;function createSyntheticHandler(evName,capture=false){let eventKey=`__event__synthetic_${evName}`;if(capture){eventKey=`${eventKey}_capture`;}
setupSyntheticEvent(evName,eventKey,capture);const currentId=nextSyntheticEventId++;function setup(data){const _data=this[eventKey]||{};_data[currentId]=data;this[eventKey]=_data;}
function remove(){delete this[eventKey];}
return{setup,update:setup,remove};}
function nativeToSyntheticEvent(eventKey,event){let dom=event.target;while(dom!==null){const _data=dom[eventKey];if(_data){for(const data of Object.values(_data)){const stopped=config.mainEventHandler(data,event,dom);if(stopped)
return;}}
dom=dom.parentNode;}}
const CONFIGURED_SYNTHETIC_EVENTS={};function setupSyntheticEvent(evName,eventKey,capture=false){if(CONFIGURED_SYNTHETIC_EVENTS[eventKey]){return;}
document.addEventListener(evName,(event)=>nativeToSyntheticEvent(eventKey,event),{capture,});CONFIGURED_SYNTHETIC_EVENTS[eventKey]=true;}
const getDescriptor$3=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$4=Node.prototype;const nodeInsertBefore$3=nodeProto$4.insertBefore;const nodeSetTextContent$1=getDescriptor$3(nodeProto$4,"textContent").set;const nodeRemoveChild$3=nodeProto$4.removeChild;class VMulti{constructor(children){this.children=children;}
mount(parent,afterNode){const children=this.children;const l=children.length;const anchors=new Array(l);for(let i=0;i<l;i++){let child=children[i];if(child){child.mount(parent,afterNode);}
else{const childAnchor=document.createTextNode("");anchors[i]=childAnchor;nodeInsertBefore$3.call(parent,childAnchor,afterNode);}}
this.anchors=anchors;this.parentEl=parent;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;const children=this.children;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){let child=children[i];if(child){child.moveBeforeDOMNode(node,parent);}
else{const anchor=anchors[i];nodeInsertBefore$3.call(parent,anchor,node);}}}
moveBeforeVNode(other,afterNode){if(other){const next=other.children[0];afterNode=(next?next.firstNode():other.anchors[0])||null;}
const children=this.children;const parent=this.parentEl;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){let child=children[i];if(child){child.moveBeforeVNode(null,afterNode);}
else{const anchor=anchors[i];nodeInsertBefore$3.call(parent,anchor,afterNode);}}}
patch(other,withBeforeRemove){if(this===other){return;}
const children1=this.children;const children2=other.children;const anchors=this.anchors;const parentEl=this.parentEl;for(let i=0,l=children1.length;i<l;i++){const vn1=children1[i];const vn2=children2[i];if(vn1){if(vn2){vn1.patch(vn2,withBeforeRemove);}
else{const afterNode=vn1.firstNode();const anchor=document.createTextNode("");anchors[i]=anchor;nodeInsertBefore$3.call(parentEl,anchor,afterNode);if(withBeforeRemove){vn1.beforeRemove();}
vn1.remove();children1[i]=undefined;}}
else if(vn2){children1[i]=vn2;const anchor=anchors[i];vn2.mount(parentEl,anchor);nodeRemoveChild$3.call(parentEl,anchor);}}}
beforeRemove(){const children=this.children;for(let i=0,l=children.length;i<l;i++){const child=children[i];if(child){child.beforeRemove();}}}
remove(){const parentEl=this.parentEl;if(this.isOnlyChild){nodeSetTextContent$1.call(parentEl,"");}
else{const children=this.children;const anchors=this.anchors;for(let i=0,l=children.length;i<l;i++){const child=children[i];if(child){child.remove();}
else{nodeRemoveChild$3.call(parentEl,anchors[i]);}}}}
firstNode(){const child=this.children[0];return child?child.firstNode():this.anchors[0];}
toString(){return this.children.map((c)=>(c?c.toString():"")).join("");}}
function multi(children){return new VMulti(children);}
const getDescriptor$2=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$3=Node.prototype;const characterDataProto$1=CharacterData.prototype;const nodeInsertBefore$2=nodeProto$3.insertBefore;const characterDataSetData$1=getDescriptor$2(characterDataProto$1,"data").set;const nodeRemoveChild$2=nodeProto$3.removeChild;class VSimpleNode{constructor(text){this.text=text;}
mountNode(node,parent,afterNode){this.parentEl=parent;nodeInsertBefore$2.call(parent,node,afterNode);this.el=node;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;nodeInsertBefore$2.call(parent,this.el,node);}
moveBeforeVNode(other,afterNode){nodeInsertBefore$2.call(this.parentEl,this.el,other?other.el:afterNode);}
beforeRemove(){}
remove(){nodeRemoveChild$2.call(this.parentEl,this.el);}
firstNode(){return this.el;}
toString(){return this.text;}}
class VText$1 extends VSimpleNode{mount(parent,afterNode){this.mountNode(document.createTextNode(toText(this.text)),parent,afterNode);}
patch(other){const text2=other.text;if(this.text!==text2){characterDataSetData$1.call(this.el,toText(text2));this.text=text2;}}}
class VComment extends VSimpleNode{mount(parent,afterNode){this.mountNode(document.createComment(toText(this.text)),parent,afterNode);}
patch(){}}
function text(str){return new VText$1(str);}
function comment(str){return new VComment(str);}
function toText(value){switch(typeof value){case"string":return value;case"number":return String(value);case"boolean":return value?"true":"false";default:return value||"";}}
const getDescriptor$1=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$2=Node.prototype;const elementProto=Element.prototype;const characterDataProto=CharacterData.prototype;const characterDataSetData=getDescriptor$1(characterDataProto,"data").set;const nodeGetFirstChild=getDescriptor$1(nodeProto$2,"firstChild").get;const nodeGetNextSibling=getDescriptor$1(nodeProto$2,"nextSibling").get;const NO_OP=()=>{};function makePropSetter(name){return function setProp(value){this[name]=value===0?0:value?value.valueOf():"";};}
const cache$1={};function createBlock(str){if(str in cache$1){return cache$1[str];}
const doc=new DOMParser().parseFromString(`<t>${str}</t>`,"text/xml");const node=doc.firstChild.firstChild;if(config.shouldNormalizeDom){normalizeNode(node);}
const tree=buildTree(node);const context=buildContext(tree);const template=tree.el;const Block=buildBlock(template,context);cache$1[str]=Block;return Block;}
function normalizeNode(node){if(node.nodeType===Node.TEXT_NODE){if(!/\S/.test(node.textContent)){node.remove();return;}}
if(node.nodeType===Node.ELEMENT_NODE){if(node.tagName==="pre"){return;}}
for(let i=node.childNodes.length-1;i>=0;--i){normalizeNode(node.childNodes.item(i));}}
function buildTree(node,parent=null,domParentTree=null){switch(node.nodeType){case Node.ELEMENT_NODE:{let currentNS=domParentTree&&domParentTree.currentNS;const tagName=node.tagName;let el=undefined;const info=[];if(tagName.startsWith("block-text-")){const index=parseInt(tagName.slice(11),10);info.push({type:"text",idx:index});el=document.createTextNode("");}
if(tagName.startsWith("block-child-")){if(!domParentTree.isRef){addRef(domParentTree);}
const index=parseInt(tagName.slice(12),10);info.push({type:"child",idx:index});el=document.createTextNode("");}
currentNS||(currentNS=node.namespaceURI);if(!el){el=currentNS?document.createElementNS(currentNS,tagName):document.createElement(tagName);}
if(el instanceof Element){if(!domParentTree){const fragment=document.createElement("template").content;fragment.appendChild(el);}
const attrs=node.attributes;for(let i=0;i<attrs.length;i++){const attrName=attrs[i].name;const attrValue=attrs[i].value;if(attrName.startsWith("block-handler-")){const idx=parseInt(attrName.slice(14),10);info.push({type:"handler",idx,event:attrValue,});}
else if(attrName.startsWith("block-attribute-")){const idx=parseInt(attrName.slice(16),10);info.push({type:"attribute",idx,name:attrValue,tag:tagName,});}
else if(attrName.startsWith("block-property-")){const idx=parseInt(attrName.slice(15),10);info.push({type:"property",idx,name:attrValue,tag:tagName,});}
else if(attrName==="block-attributes"){info.push({type:"attributes",idx:parseInt(attrValue,10),});}
else if(attrName==="block-ref"){info.push({type:"ref",idx:parseInt(attrValue,10),});}
else{el.setAttribute(attrs[i].name,attrValue);}}}
const tree={parent,firstChild:null,nextSibling:null,el,info,refN:0,currentNS,};if(node.firstChild){const childNode=node.childNodes[0];if(node.childNodes.length===1&&childNode.nodeType===Node.ELEMENT_NODE&&childNode.tagName.startsWith("block-child-")){const tagName=childNode.tagName;const index=parseInt(tagName.slice(12),10);info.push({idx:index,type:"child",isOnlyChild:true});}
else{tree.firstChild=buildTree(node.firstChild,tree,tree);el.appendChild(tree.firstChild.el);let curNode=node.firstChild;let curTree=tree.firstChild;while((curNode=curNode.nextSibling)){curTree.nextSibling=buildTree(curNode,curTree,tree);el.appendChild(curTree.nextSibling.el);curTree=curTree.nextSibling;}}}
if(tree.info.length){addRef(tree);}
return tree;}
case Node.TEXT_NODE:case Node.COMMENT_NODE:{const el=node.nodeType===Node.TEXT_NODE?document.createTextNode(node.textContent):document.createComment(node.textContent);return{parent:parent,firstChild:null,nextSibling:null,el,info:[],refN:0,currentNS:null,};}}
throw new OwlError("boom");}
function addRef(tree){tree.isRef=true;do{tree.refN++;}while((tree=tree.parent));}
function parentTree(tree){let parent=tree.parent;while(parent&&parent.nextSibling===tree){tree=parent;parent=parent.parent;}
return parent;}
function buildContext(tree,ctx,fromIdx){if(!ctx){const children=new Array(tree.info.filter((v)=>v.type==="child").length);ctx={collectors:[],locations:[],children,cbRefs:[],refN:tree.refN,refList:[]};fromIdx=0;}
if(tree.refN){const initialIdx=fromIdx;const isRef=tree.isRef;const firstChild=tree.firstChild?tree.firstChild.refN:0;const nextSibling=tree.nextSibling?tree.nextSibling.refN:0;if(isRef){for(let info of tree.info){info.refIdx=initialIdx;}
tree.refIdx=initialIdx;updateCtx(ctx,tree);fromIdx++;}
if(nextSibling){const idx=fromIdx+firstChild;ctx.collectors.push({idx,prevIdx:initialIdx,getVal:nodeGetNextSibling});buildContext(tree.nextSibling,ctx,idx);}
if(firstChild){ctx.collectors.push({idx:fromIdx,prevIdx:initialIdx,getVal:nodeGetFirstChild});buildContext(tree.firstChild,ctx,fromIdx);}}
return ctx;}
function updateCtx(ctx,tree){for(let info of tree.info){switch(info.type){case"text":ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:setText,updateData:setText,});break;case"child":if(info.isOnlyChild){ctx.children[info.idx]={parentRefIdx:info.refIdx,isOnlyChild:true,};}
else{ctx.children[info.idx]={parentRefIdx:parentTree(tree).refIdx,afterRefIdx:info.refIdx,};}
break;case"property":{const refIdx=info.refIdx;const setProp=makePropSetter(info.name);ctx.locations.push({idx:info.idx,refIdx,setData:setProp,updateData:setProp,});break;}
case"attribute":{const refIdx=info.refIdx;let updater;let setter;if(info.name==="class"){setter=setClass;updater=updateClass;}
else{setter=createAttrUpdater(info.name);updater=setter;}
ctx.locations.push({idx:info.idx,refIdx,setData:setter,updateData:updater,});break;}
case"attributes":ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:attrsSetter,updateData:attrsUpdater,});break;case"handler":{const{setup,update}=createEventHandler(info.event);ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:setup,updateData:update,});break;}
case"ref":const index=ctx.cbRefs.push(info.idx)-1;ctx.locations.push({idx:info.idx,refIdx:info.refIdx,setData:makeRefSetter(index,ctx.refList),updateData:NO_OP,});}}}
function buildBlock(template,ctx){let B=createBlockClass(template,ctx);if(ctx.cbRefs.length){const cbRefs=ctx.cbRefs;const refList=ctx.refList;let cbRefsNumber=cbRefs.length;B=class extends B{mount(parent,afterNode){refList.push(new Array(cbRefsNumber));super.mount(parent,afterNode);for(let cbRef of refList.pop()){cbRef();}}
remove(){super.remove();for(let cbRef of cbRefs){let fn=this.data[cbRef];fn(null);}}};}
if(ctx.children.length){B=class extends B{constructor(data,children){super(data);this.children=children;}};B.prototype.beforeRemove=VMulti.prototype.beforeRemove;return(data,children=[])=>new B(data,children);}
return(data)=>new B(data);}
function createBlockClass(template,ctx){const{refN,collectors,children}=ctx;const colN=collectors.length;ctx.locations.sort((a,b)=>a.idx-b.idx);const locations=ctx.locations.map((loc)=>({refIdx:loc.refIdx,setData:loc.setData,updateData:loc.updateData,}));const locN=locations.length;const childN=children.length;const childrenLocs=children;const isDynamic=refN>0;const nodeCloneNode=nodeProto$2.cloneNode;const nodeInsertBefore=nodeProto$2.insertBefore;const elementRemove=elementProto.remove;class Block{constructor(data){this.data=data;}
beforeRemove(){}
remove(){elementRemove.call(this.el);}
firstNode(){return this.el;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;nodeInsertBefore.call(parent,this.el,node);}
moveBeforeVNode(other,afterNode){nodeInsertBefore.call(this.parentEl,this.el,other?other.el:afterNode);}
toString(){const div=document.createElement("div");this.mount(div,null);return div.innerHTML;}
mount(parent,afterNode){const el=nodeCloneNode.call(template,true);nodeInsertBefore.call(parent,el,afterNode);this.el=el;this.parentEl=parent;}
patch(other,withBeforeRemove){}}
if(isDynamic){Block.prototype.mount=function mount(parent,afterNode){const el=nodeCloneNode.call(template,true);const refs=new Array(refN);this.refs=refs;refs[0]=el;for(let i=0;i<colN;i++){const w=collectors[i];refs[w.idx]=w.getVal.call(refs[w.prevIdx]);}
if(locN){const data=this.data;for(let i=0;i<locN;i++){const loc=locations[i];loc.setData.call(refs[loc.refIdx],data[i]);}}
nodeInsertBefore.call(parent,el,afterNode);if(childN){const children=this.children;for(let i=0;i<childN;i++){const child=children[i];if(child){const loc=childrenLocs[i];const afterNode=loc.afterRefIdx?refs[loc.afterRefIdx]:null;child.isOnlyChild=loc.isOnlyChild;child.mount(refs[loc.parentRefIdx],afterNode);}}}
this.el=el;this.parentEl=parent;};Block.prototype.patch=function patch(other,withBeforeRemove){if(this===other){return;}
const refs=this.refs;if(locN){const data1=this.data;const data2=other.data;for(let i=0;i<locN;i++){const val1=data1[i];const val2=data2[i];if(val1!==val2){const loc=locations[i];loc.updateData.call(refs[loc.refIdx],val2,val1);}}
this.data=data2;}
if(childN){let children1=this.children;const children2=other.children;for(let i=0;i<childN;i++){const child1=children1[i];const child2=children2[i];if(child1){if(child2){child1.patch(child2,withBeforeRemove);}
else{if(withBeforeRemove){child1.beforeRemove();}
child1.remove();children1[i]=undefined;}}
else if(child2){const loc=childrenLocs[i];const afterNode=loc.afterRefIdx?refs[loc.afterRefIdx]:null;child2.mount(refs[loc.parentRefIdx],afterNode);children1[i]=child2;}}}};}
return Block;}
function setText(value){characterDataSetData.call(this,toText(value));}
function makeRefSetter(index,refs){return function setRef(fn){refs[refs.length-1][index]=()=>fn(this);};}
const getDescriptor=(o,p)=>Object.getOwnPropertyDescriptor(o,p);const nodeProto$1=Node.prototype;const nodeInsertBefore$1=nodeProto$1.insertBefore;const nodeAppendChild=nodeProto$1.appendChild;const nodeRemoveChild$1=nodeProto$1.removeChild;const nodeSetTextContent=getDescriptor(nodeProto$1,"textContent").set;class VList{constructor(children){this.children=children;}
mount(parent,afterNode){const children=this.children;const _anchor=document.createTextNode("");this.anchor=_anchor;nodeInsertBefore$1.call(parent,_anchor,afterNode);const l=children.length;if(l){const mount=children[0].mount;for(let i=0;i<l;i++){mount.call(children[i],parent,_anchor);}}
this.parentEl=parent;}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].moveBeforeDOMNode(node,parent);}
parent.insertBefore(this.anchor,node);}
moveBeforeVNode(other,afterNode){if(other){const next=other.children[0];afterNode=(next?next.firstNode():other.anchor)||null;}
const children=this.children;for(let i=0,l=children.length;i<l;i++){children[i].moveBeforeVNode(null,afterNode);}
this.parentEl.insertBefore(this.anchor,afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
const ch1=this.children;const ch2=other.children;if(ch2.length===0&&ch1.length===0){return;}
this.children=ch2;const proto=ch2[0]||ch1[0];const{mount:cMount,patch:cPatch,remove:cRemove,beforeRemove,moveBeforeVNode:cMoveBefore,firstNode:cFirstNode,}=proto;const _anchor=this.anchor;const isOnlyChild=this.isOnlyChild;const parent=this.parentEl;if(ch2.length===0&&isOnlyChild){if(withBeforeRemove){for(let i=0,l=ch1.length;i<l;i++){beforeRemove.call(ch1[i]);}}
nodeSetTextContent.call(parent,"");nodeAppendChild.call(parent,_anchor);return;}
let startIdx1=0;let startIdx2=0;let startVn1=ch1[0];let startVn2=ch2[0];let endIdx1=ch1.length-1;let endIdx2=ch2.length-1;let endVn1=ch1[endIdx1];let endVn2=ch2[endIdx2];let mapping=undefined;while(startIdx1<=endIdx1&&startIdx2<=endIdx2){if(startVn1===null){startVn1=ch1[++startIdx1];continue;}
if(endVn1===null){endVn1=ch1[--endIdx1];continue;}
let startKey1=startVn1.key;let startKey2=startVn2.key;if(startKey1===startKey2){cPatch.call(startVn1,startVn2,withBeforeRemove);ch2[startIdx2]=startVn1;startVn1=ch1[++startIdx1];startVn2=ch2[++startIdx2];continue;}
let endKey1=endVn1.key;let endKey2=endVn2.key;if(endKey1===endKey2){cPatch.call(endVn1,endVn2,withBeforeRemove);ch2[endIdx2]=endVn1;endVn1=ch1[--endIdx1];endVn2=ch2[--endIdx2];continue;}
if(startKey1===endKey2){cPatch.call(startVn1,endVn2,withBeforeRemove);ch2[endIdx2]=startVn1;const nextChild=ch2[endIdx2+1];cMoveBefore.call(startVn1,nextChild,_anchor);startVn1=ch1[++startIdx1];endVn2=ch2[--endIdx2];continue;}
if(endKey1===startKey2){cPatch.call(endVn1,startVn2,withBeforeRemove);ch2[startIdx2]=endVn1;const nextChild=ch1[startIdx1];cMoveBefore.call(endVn1,nextChild,_anchor);endVn1=ch1[--endIdx1];startVn2=ch2[++startIdx2];continue;}
mapping=mapping||createMapping(ch1,startIdx1,endIdx1);let idxInOld=mapping[startKey2];if(idxInOld===undefined){cMount.call(startVn2,parent,cFirstNode.call(startVn1)||null);}
else{const elmToMove=ch1[idxInOld];cMoveBefore.call(elmToMove,startVn1,null);cPatch.call(elmToMove,startVn2,withBeforeRemove);ch2[startIdx2]=elmToMove;ch1[idxInOld]=null;}
startVn2=ch2[++startIdx2];}
if(startIdx1<=endIdx1||startIdx2<=endIdx2){if(startIdx1>endIdx1){const nextChild=ch2[endIdx2+1];const anchor=nextChild?cFirstNode.call(nextChild)||null:_anchor;for(let i=startIdx2;i<=endIdx2;i++){cMount.call(ch2[i],parent,anchor);}}
else{for(let i=startIdx1;i<=endIdx1;i++){let ch=ch1[i];if(ch){if(withBeforeRemove){beforeRemove.call(ch);}
cRemove.call(ch);}}}}}
beforeRemove(){const children=this.children;const l=children.length;if(l){const beforeRemove=children[0].beforeRemove;for(let i=0;i<l;i++){beforeRemove.call(children[i]);}}}
remove(){const{parentEl,anchor}=this;if(this.isOnlyChild){nodeSetTextContent.call(parentEl,"");}
else{const children=this.children;const l=children.length;if(l){const remove=children[0].remove;for(let i=0;i<l;i++){remove.call(children[i]);}}
nodeRemoveChild$1.call(parentEl,anchor);}}
firstNode(){const child=this.children[0];return child?child.firstNode():undefined;}
toString(){return this.children.map((c)=>c.toString()).join("");}}
function list(children){return new VList(children);}
function createMapping(ch1,startIdx1,endIdx2){let mapping={};for(let i=startIdx1;i<=endIdx2;i++){mapping[ch1[i].key]=i;}
return mapping;}
const nodeProto=Node.prototype;const nodeInsertBefore=nodeProto.insertBefore;const nodeRemoveChild=nodeProto.removeChild;class VHtml{constructor(html){this.content=[];this.html=html;}
mount(parent,afterNode){this.parentEl=parent;const template=document.createElement("template");template.innerHTML=this.html;this.content=[...template.content.childNodes];for(let elem of this.content){nodeInsertBefore.call(parent,elem,afterNode);}
if(!this.content.length){const textNode=document.createTextNode("");this.content.push(textNode);nodeInsertBefore.call(parent,textNode,afterNode);}}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;for(let elem of this.content){nodeInsertBefore.call(parent,elem,node);}}
moveBeforeVNode(other,afterNode){const target=other?other.content[0]:afterNode;this.moveBeforeDOMNode(target);}
patch(other){if(this===other){return;}
const html2=other.html;if(this.html!==html2){const parent=this.parentEl;const afterNode=this.content[0];const template=document.createElement("template");template.innerHTML=html2;const content=[...template.content.childNodes];for(let elem of content){nodeInsertBefore.call(parent,elem,afterNode);}
if(!content.length){const textNode=document.createTextNode("");content.push(textNode);nodeInsertBefore.call(parent,textNode,afterNode);}
this.remove();this.content=content;this.html=other.html;}}
beforeRemove(){}
remove(){const parent=this.parentEl;for(let elem of this.content){nodeRemoveChild.call(parent,elem);}}
firstNode(){return this.content[0];}
toString(){return this.html;}}
function html(str){return new VHtml(str);}
function createCatcher(eventsSpec){const n=Object.keys(eventsSpec).length;class VCatcher{constructor(child,handlers){this.handlerFns=[];this.afterNode=null;this.child=child;this.handlerData=handlers;}
mount(parent,afterNode){this.parentEl=parent;this.child.mount(parent,afterNode);this.afterNode=document.createTextNode("");parent.insertBefore(this.afterNode,afterNode);this.wrapHandlerData();for(let name in eventsSpec){const index=eventsSpec[name];const handler=createEventHandler(name);this.handlerFns[index]=handler;handler.setup.call(parent,this.handlerData[index]);}}
wrapHandlerData(){for(let i=0;i<n;i++){let handler=this.handlerData[i];let idx=handler.length-2;let origFn=handler[idx];const self=this;handler[idx]=function(ev){const target=ev.target;let currentNode=self.child.firstNode();const afterNode=self.afterNode;while(currentNode&&currentNode!==afterNode){if(currentNode.contains(target)){return origFn.call(this,ev);}
currentNode=currentNode.nextSibling;}};}}
moveBeforeDOMNode(node,parent=this.parentEl){this.parentEl=parent;this.child.moveBeforeDOMNode(node,parent);parent.insertBefore(this.afterNode,node);}
moveBeforeVNode(other,afterNode){if(other){afterNode=other.firstNode()||afterNode;}
this.child.moveBeforeVNode(other?other.child:null,afterNode);this.parentEl.insertBefore(this.afterNode,afterNode);}
patch(other,withBeforeRemove){if(this===other){return;}
this.handlerData=other.handlerData;this.wrapHandlerData();for(let i=0;i<n;i++){this.handlerFns[i].update.call(this.parentEl,this.handlerData[i]);}
this.child.patch(other.child,withBeforeRemove);}
beforeRemove(){this.child.beforeRemove();}
remove(){for(let i=0;i<n;i++){this.handlerFns[i].remove.call(this.parentEl);}
this.child.remove();this.afterNode.remove();}
firstNode(){return this.child.firstNode();}
toString(){return this.child.toString();}}
return function(child,handlers){return new VCatcher(child,handlers);};}
function mount$1(vnode,fixture,afterNode=null){vnode.mount(fixture,afterNode);}
function patch(vnode1,vnode2,withBeforeRemove=false){vnode1.patch(vnode2,withBeforeRemove);}
function remove(vnode,withBeforeRemove=false){if(withBeforeRemove){vnode.beforeRemove();}
vnode.remove();}
const fibersInError=new WeakMap();const nodeErrorHandlers=new WeakMap();function _handleError(node,error){if(!node){return false;}
const fiber=node.fiber;if(fiber){fibersInError.set(fiber,error);}
const errorHandlers=nodeErrorHandlers.get(node);if(errorHandlers){let handled=false;for(let i=errorHandlers.length-1;i>=0;i--){try{errorHandlers[i](error);handled=true;break;}
catch(e){error=e;}}
if(handled){return true;}}
return _handleError(node.parent,error);}
function handleError(params){let{error}=params;if(!(error instanceof OwlError)){error=Object.assign(new OwlError(`An error occured in the owl lifecycle (see this Error's "cause" property)`),{cause:error});}
const node="node"in params?params.node:params.fiber.node;const fiber="fiber"in params?params.fiber:node.fiber;if(fiber){let current=fiber;do{current.node.fiber=current;current=current.parent;}while(current);fibersInError.set(fiber.root,error);}
const handled=_handleError(node,error);if(!handled){console.warn(`[Owl] Unhandled error. Destroying the root component`);try{node.app.destroy();}
catch(e){console.error(e);}
throw error;}}
function makeChildFiber(node,parent){let current=node.fiber;if(current){cancelFibers(current.children);current.root=null;}
return new Fiber(node,parent);}
function makeRootFiber(node){let current=node.fiber;if(current){let root=current.root;root.locked=true;root.setCounter(root.counter+1-cancelFibers(current.children));root.locked=false;current.children=[];current.childrenMap={};current.bdom=null;if(fibersInError.has(current)){fibersInError.delete(current);fibersInError.delete(root);current.appliedToDom=false;}
return current;}
const fiber=new RootFiber(node,null);if(node.willPatch.length){fiber.willPatch.push(fiber);}
if(node.patched.length){fiber.patched.push(fiber);}
return fiber;}
function throwOnRender(){throw new OwlError("Attempted to render cancelled fiber");}
function cancelFibers(fibers){let result=0;for(let fiber of fibers){let node=fiber.node;fiber.render=throwOnRender;if(node.status===0){node.cancel();}
node.fiber=null;if(fiber.bdom){node.forceNextRender=true;}
else{result++;}
result+=cancelFibers(fiber.children);}
return result;}
class Fiber{constructor(node,parent){this.bdom=null;this.children=[];this.appliedToDom=false;this.deep=false;this.childrenMap={};this.node=node;this.parent=parent;if(parent){this.deep=parent.deep;const root=parent.root;root.setCounter(root.counter+1);this.root=root;parent.children.push(this);}
else{this.root=this;}}
render(){let prev=this.root.node;let scheduler=prev.app.scheduler;let current=prev.parent;while(current){if(current.fiber){let root=current.fiber.root;if(root.counter===0&&prev.parentKey in current.fiber.childrenMap){current=root.node;}
else{scheduler.delayedRenders.push(this);return;}}
prev=current;current=current.parent;}
this._render();}
_render(){const node=this.node;const root=this.root;if(root){try{this.bdom=true;this.bdom=node.renderFn();}
catch(e){node.app.handleError({node,error:e});}
root.setCounter(root.counter-1);}}}
class RootFiber extends Fiber{constructor(){super(...arguments);this.counter=1;this.willPatch=[];this.patched=[];this.mounted=[];this.locked=false;}
complete(){const node=this.node;this.locked=true;let current=undefined;try{for(current of this.willPatch){let node=current.node;if(node.fiber===current){const component=node.component;for(let cb of node.willPatch){cb.call(component);}}}
current=undefined;node._patch();this.locked=false;let mountedFibers=this.mounted;while((current=mountedFibers.pop())){current=current;if(current.appliedToDom){for(let cb of current.node.mounted){cb();}}}
let patchedFibers=this.patched;while((current=patchedFibers.pop())){current=current;if(current.appliedToDom){for(let cb of current.node.patched){cb();}}}}
catch(e){this.locked=false;node.app.handleError({fiber:current||this,error:e});}}
setCounter(newValue){this.counter=newValue;if(newValue===0){this.node.app.scheduler.flush();}}}
class MountFiber extends RootFiber{constructor(node,target,options={}){super(node,null);this.target=target;this.position=options.position||"last-child";}
complete(){let current=this;try{const node=this.node;node.children=this.childrenMap;node.app.constructor.validateTarget(this.target);if(node.bdom){node.updateDom();}
else{node.bdom=this.bdom;if(this.position==="last-child"||this.target.childNodes.length===0){mount$1(node.bdom,this.target);}
else{const firstChild=this.target.childNodes[0];mount$1(node.bdom,this.target,firstChild);}}
node.fiber=null;node.status=1;this.appliedToDom=true;let mountedFibers=this.mounted;while((current=mountedFibers.pop())){if(current.appliedToDom){for(let cb of current.node.mounted){cb();}}}}
catch(e){this.node.app.handleError({fiber:current,error:e});}}}
const KEYCHANGES=Symbol("Key changes");const NO_CALLBACK=()=>{throw new Error("Called NO_CALLBACK. Owl is broken, please report this to the maintainers.");};const objectToString=Object.prototype.toString;const objectHasOwnProperty=Object.prototype.hasOwnProperty;const SUPPORTED_RAW_TYPES=["Object","Array","Set","Map","WeakMap"];const COLLECTION_RAW_TYPES=["Set","Map","WeakMap"];function rawType(obj){return objectToString.call(toRaw(obj)).slice(8,-1);}
function canBeMadeReactive(value){if(typeof value!=="object"){return false;}
return SUPPORTED_RAW_TYPES.includes(rawType(value));}
function possiblyReactive(val,cb){return canBeMadeReactive(val)?reactive(val,cb):val;}
const skipped=new WeakSet();function markRaw(value){skipped.add(value);return value;}
function toRaw(value){return targets.has(value)?targets.get(value):value;}
const targetToKeysToCallbacks=new WeakMap();function observeTargetKey(target,key,callback){if(callback===NO_CALLBACK){return;}
if(!targetToKeysToCallbacks.get(target)){targetToKeysToCallbacks.set(target,new Map());}
const keyToCallbacks=targetToKeysToCallbacks.get(target);if(!keyToCallbacks.get(key)){keyToCallbacks.set(key,new Set());}
keyToCallbacks.get(key).add(callback);if(!callbacksToTargets.has(callback)){callbacksToTargets.set(callback,new Set());}
callbacksToTargets.get(callback).add(target);}
function notifyReactives(target,key){const keyToCallbacks=targetToKeysToCallbacks.get(target);if(!keyToCallbacks){return;}
const callbacks=keyToCallbacks.get(key);if(!callbacks){return;}
for(const callback of[...callbacks]){clearReactivesForCallback(callback);callback();}}
const callbacksToTargets=new WeakMap();function clearReactivesForCallback(callback){const targetsToClear=callbacksToTargets.get(callback);if(!targetsToClear){return;}
for(const target of targetsToClear){const observedKeys=targetToKeysToCallbacks.get(target);if(!observedKeys){continue;}
for(const[key,callbacks]of observedKeys.entries()){callbacks.delete(callback);if(!callbacks.size){observedKeys.delete(key);}}}
targetsToClear.clear();}
function getSubscriptions(callback){const targets=callbacksToTargets.get(callback)||[];return[...targets].map((target)=>{const keysToCallbacks=targetToKeysToCallbacks.get(target);let keys=[];if(keysToCallbacks){for(const[key,cbs]of keysToCallbacks){if(cbs.has(callback)){keys.push(key);}}}
return{target,keys};});}
const targets=new WeakMap();const reactiveCache=new WeakMap();function reactive(target,callback=NO_CALLBACK){if(!canBeMadeReactive(target)){throw new OwlError(`Cannot make the given value reactive`);}
if(skipped.has(target)){return target;}
if(targets.has(target)){return reactive(targets.get(target),callback);}
if(!reactiveCache.has(target)){reactiveCache.set(target,new WeakMap());}
const reactivesForTarget=reactiveCache.get(target);if(!reactivesForTarget.has(callback)){const targetRawType=rawType(target);const handler=COLLECTION_RAW_TYPES.includes(targetRawType)?collectionsProxyHandler(target,callback,targetRawType):basicProxyHandler(callback);const proxy=new Proxy(target,handler);reactivesForTarget.set(callback,proxy);targets.set(proxy,target);}
return reactivesForTarget.get(callback);}
function basicProxyHandler(callback){return{get(target,key,receiver){const desc=Object.getOwnPropertyDescriptor(target,key);if(desc&&!desc.writable&&!desc.configurable){return Reflect.get(target,key,receiver);}
observeTargetKey(target,key,callback);return possiblyReactive(Reflect.get(target,key,receiver),callback);},set(target,key,value,receiver){const hadKey=objectHasOwnProperty.call(target,key);const originalValue=Reflect.get(target,key,receiver);const ret=Reflect.set(target,key,toRaw(value),receiver);if(!hadKey&&objectHasOwnProperty.call(target,key)){notifyReactives(target,KEYCHANGES);}
if(originalValue!==Reflect.get(target,key,receiver)||(key==="length"&&Array.isArray(target))){notifyReactives(target,key);}
return ret;},deleteProperty(target,key){const ret=Reflect.deleteProperty(target,key);notifyReactives(target,KEYCHANGES);notifyReactives(target,key);return ret;},ownKeys(target){observeTargetKey(target,KEYCHANGES,callback);return Reflect.ownKeys(target);},has(target,key){observeTargetKey(target,KEYCHANGES,callback);return Reflect.has(target,key);},};}
function makeKeyObserver(methodName,target,callback){return(key)=>{key=toRaw(key);observeTargetKey(target,key,callback);return possiblyReactive(target[methodName](key),callback);};}
function makeIteratorObserver(methodName,target,callback){return function*(){observeTargetKey(target,KEYCHANGES,callback);const keys=target.keys();for(const item of target[methodName]()){const key=keys.next().value;observeTargetKey(target,key,callback);yield possiblyReactive(item,callback);}};}
function makeForEachObserver(target,callback){return function forEach(forEachCb,thisArg){observeTargetKey(target,KEYCHANGES,callback);target.forEach(function(val,key,targetObj){observeTargetKey(target,key,callback);forEachCb.call(thisArg,possiblyReactive(val,callback),possiblyReactive(key,callback),possiblyReactive(targetObj,callback));},thisArg);};}
function delegateAndNotify(setterName,getterName,target){return(key,value)=>{key=toRaw(key);const hadKey=target.has(key);const originalValue=target[getterName](key);const ret=target[setterName](key,value);const hasKey=target.has(key);if(hadKey!==hasKey){notifyReactives(target,KEYCHANGES);}
if(originalValue!==target[getterName](key)){notifyReactives(target,key);}
return ret;};}
function makeClearNotifier(target){return()=>{const allKeys=[...target.keys()];target.clear();notifyReactives(target,KEYCHANGES);for(const key of allKeys){notifyReactives(target,key);}};}
const rawTypeToFuncHandlers={Set:(target,callback)=>({has:makeKeyObserver("has",target,callback),add:delegateAndNotify("add","has",target),delete:delegateAndNotify("delete","has",target),keys:makeIteratorObserver("keys",target,callback),values:makeIteratorObserver("values",target,callback),entries:makeIteratorObserver("entries",target,callback),[Symbol.iterator]:makeIteratorObserver(Symbol.iterator,target,callback),forEach:makeForEachObserver(target,callback),clear:makeClearNotifier(target),get size(){observeTargetKey(target,KEYCHANGES,callback);return target.size;},}),Map:(target,callback)=>({has:makeKeyObserver("has",target,callback),get:makeKeyObserver("get",target,callback),set:delegateAndNotify("set","get",target),delete:delegateAndNotify("delete","has",target),keys:makeIteratorObserver("keys",target,callback),values:makeIteratorObserver("values",target,callback),entries:makeIteratorObserver("entries",target,callback),[Symbol.iterator]:makeIteratorObserver(Symbol.iterator,target,callback),forEach:makeForEachObserver(target,callback),clear:makeClearNotifier(target),get size(){observeTargetKey(target,KEYCHANGES,callback);return target.size;},}),WeakMap:(target,callback)=>({has:makeKeyObserver("has",target,callback),get:makeKeyObserver("get",target,callback),set:delegateAndNotify("set","get",target),delete:delegateAndNotify("delete","has",target),}),};function collectionsProxyHandler(target,callback,targetRawType){const specialHandlers=rawTypeToFuncHandlers[targetRawType](target,callback);return Object.assign(basicProxyHandler(callback),{get(target,key){if(objectHasOwnProperty.call(specialHandlers,key)){return specialHandlers[key];}
observeTargetKey(target,key,callback);return possiblyReactive(target[key],callback);},});}
let currentNode=null;function getCurrent(){if(!currentNode){throw new OwlError("No active component (a hook function should only be called in 'setup')");}
return currentNode;}
function useComponent(){return currentNode.component;}
function applyDefaultProps(props,defaultProps){for(let propName in defaultProps){if(props[propName]===undefined){props[propName]=defaultProps[propName];}}}
const batchedRenderFunctions=new WeakMap();function useState(state){const node=getCurrent();let render=batchedRenderFunctions.get(node);if(!render){render=batched(node.render.bind(node,false));batchedRenderFunctions.set(node,render);node.willDestroy.push(clearReactivesForCallback.bind(null,render));}
return reactive(state,render);}
class ComponentNode{constructor(C,props,app,parent,parentKey){this.fiber=null;this.bdom=null;this.status=0;this.forceNextRender=false;this.nextProps=null;this.children=Object.create(null);this.refs={};this.willStart=[];this.willUpdateProps=[];this.willUnmount=[];this.mounted=[];this.willPatch=[];this.patched=[];this.willDestroy=[];currentNode=this;this.app=app;this.parent=parent;this.props=props;this.parentKey=parentKey;const defaultProps=C.defaultProps;props=Object.assign({},props);if(defaultProps){applyDefaultProps(props,defaultProps);}
const env=(parent&&parent.childEnv)||app.env;this.childEnv=env;for(const key in props){const prop=props[key];if(prop&&typeof prop==="object"&&targets.has(prop)){props[key]=useState(prop);}}
this.component=new C(props,env,this);const ctx=Object.assign(Object.create(this.component),{this:this.component});this.renderFn=app.getTemplate(C.template).bind(this.component,ctx,this);this.component.setup();currentNode=null;}
mountComponent(target,options){const fiber=new MountFiber(this,target,options);this.app.scheduler.addFiber(fiber);this.initiateRender(fiber);}
async initiateRender(fiber){this.fiber=fiber;if(this.mounted.length){fiber.root.mounted.push(fiber);}
const component=this.component;try{await Promise.all(this.willStart.map((f)=>f.call(component)));}
catch(e){this.app.handleError({node:this,error:e});return;}
if(this.status===0&&this.fiber===fiber){fiber.render();}}
async render(deep){if(this.status>=2){return;}
let current=this.fiber;if(current&&(current.root.locked||current.bdom===true)){await Promise.resolve();current=this.fiber;}
if(current){if(!current.bdom&&!fibersInError.has(current)){if(deep){current.deep=deep;}
return;}
deep=deep||current.deep;}
else if(!this.bdom){return;}
const fiber=makeRootFiber(this);fiber.deep=deep;this.fiber=fiber;this.app.scheduler.addFiber(fiber);await Promise.resolve();if(this.status>=2){return;}
if(this.fiber===fiber&&(current||!fiber.parent)){fiber.render();}}
cancel(){this._cancel();delete this.parent.children[this.parentKey];this.app.scheduler.scheduleDestroy(this);}
_cancel(){this.status=2;const children=this.children;for(let childKey in children){children[childKey]._cancel();}}
destroy(){let shouldRemove=this.status===1;this._destroy();if(shouldRemove){this.bdom.remove();}}
_destroy(){const component=this.component;if(this.status===1){for(let cb of this.willUnmount){cb.call(component);}}
for(let child of Object.values(this.children)){child._destroy();}
if(this.willDestroy.length){try{for(let cb of this.willDestroy){cb.call(component);}}
catch(e){this.app.handleError({error:e,node:this});}}
this.status=3;}
async updateAndRender(props,parentFiber){this.nextProps=props;props=Object.assign({},props);const fiber=makeChildFiber(this,parentFiber);this.fiber=fiber;const component=this.component;const defaultProps=component.constructor.defaultProps;if(defaultProps){applyDefaultProps(props,defaultProps);}
currentNode=this;for(const key in props){const prop=props[key];if(prop&&typeof prop==="object"&&targets.has(prop)){props[key]=useState(prop);}}
currentNode=null;const prom=Promise.all(this.willUpdateProps.map((f)=>f.call(component,props)));await prom;if(fiber!==this.fiber){return;}
component.props=props;fiber.render();const parentRoot=parentFiber.root;if(this.willPatch.length){parentRoot.willPatch.push(fiber);}
if(this.patched.length){parentRoot.patched.push(fiber);}}
updateDom(){if(!this.fiber){return;}
if(this.bdom===this.fiber.bdom){for(let k in this.children){const child=this.children[k];child.updateDom();}}
else{this.bdom.patch(this.fiber.bdom,false);this.fiber.appliedToDom=true;this.fiber=null;}}
setRef(name,el){if(el){this.refs[name]=el;}}
firstNode(){const bdom=this.bdom;return bdom?bdom.firstNode():undefined;}
mount(parent,anchor){const bdom=this.fiber.bdom;this.bdom=bdom;bdom.mount(parent,anchor);this.status=1;this.fiber.appliedToDom=true;this.children=this.fiber.childrenMap;this.fiber=null;}
moveBeforeDOMNode(node,parent){this.bdom.moveBeforeDOMNode(node,parent);}
moveBeforeVNode(other,afterNode){this.bdom.moveBeforeVNode(other?other.bdom:null,afterNode);}
patch(){if(this.fiber&&this.fiber.parent){this._patch();this.props=this.nextProps;}}
_patch(){let hasChildren=false;for(let _k in this.children){hasChildren=true;break;}
const fiber=this.fiber;this.children=fiber.childrenMap;this.bdom.patch(fiber.bdom,hasChildren);fiber.appliedToDom=true;this.fiber=null;}
beforeRemove(){this._destroy();}
remove(){this.bdom.remove();}
get name(){return this.component.constructor.name;}
get subscriptions(){const render=batchedRenderFunctions.get(this);return render?getSubscriptions(render):[];}}
const TIMEOUT=Symbol("timeout");function wrapError(fn,hookName){const error=new OwlError(`The following error occurred in ${hookName}: `);const timeoutError=new OwlError(`${hookName}'s promise hasn't resolved after 3 seconds`);const node=getCurrent();return(...args)=>{const onError=(cause)=>{error.cause=cause;if(cause instanceof Error){error.message+=`"${cause.message}"`;}
else{error.message=`Something that is not an Error was thrown in ${hookName} (see this Error's "cause" property)`;}
throw error;};try{const result=fn(...args);if(result instanceof Promise){if(hookName==="onWillStart"||hookName==="onWillUpdateProps"){const fiber=node.fiber;Promise.race([result.catch(()=>{}),new Promise((resolve)=>setTimeout(()=>resolve(TIMEOUT),3000)),]).then((res)=>{if(res===TIMEOUT&&node.fiber===fiber&&node.status<=2){console.log(timeoutError);}});}
return result.catch(onError);}
return result;}
catch(cause){onError(cause);}};}
function onWillStart(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willStart.push(decorate(fn.bind(node.component),"onWillStart"));}
function onWillUpdateProps(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willUpdateProps.push(decorate(fn.bind(node.component),"onWillUpdateProps"));}
function onMounted(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.mounted.push(decorate(fn.bind(node.component),"onMounted"));}
function onWillPatch(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willPatch.unshift(decorate(fn.bind(node.component),"onWillPatch"));}
function onPatched(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.patched.push(decorate(fn.bind(node.component),"onPatched"));}
function onWillUnmount(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willUnmount.unshift(decorate(fn.bind(node.component),"onWillUnmount"));}
function onWillDestroy(fn){const node=getCurrent();const decorate=node.app.dev?wrapError:(fn)=>fn;node.willDestroy.push(decorate(fn.bind(node.component),"onWillDestroy"));}
function onWillRender(fn){const node=getCurrent();const renderFn=node.renderFn;const decorate=node.app.dev?wrapError:(fn)=>fn;fn=decorate(fn.bind(node.component),"onWillRender");node.renderFn=()=>{fn();return renderFn();};}
function onRendered(fn){const node=getCurrent();const renderFn=node.renderFn;const decorate=node.app.dev?wrapError:(fn)=>fn;fn=decorate(fn.bind(node.component),"onRendered");node.renderFn=()=>{const result=renderFn();fn();return result;};}
function onError(callback){const node=getCurrent();let handlers=nodeErrorHandlers.get(node);if(!handlers){handlers=[];nodeErrorHandlers.set(node,handlers);}
handlers.push(callback.bind(node.component));}
class Component{constructor(props,env,node){this.props=props;this.env=env;this.__owl__=node;}
setup(){}
render(deep=false){this.__owl__.render(deep===true);}}
Component.template="";const VText=text("").constructor;class VPortal extends VText{constructor(selector,content){super("");this.target=null;this.selector=selector;this.content=content;}
mount(parent,anchor){super.mount(parent,anchor);this.target=document.querySelector(this.selector);if(this.target){this.content.mount(this.target,null);}
else{this.content.mount(parent,anchor);}}
beforeRemove(){this.content.beforeRemove();}
remove(){if(this.content){super.remove();this.content.remove();this.content=null;}}
patch(other){super.patch(other);if(this.content){this.content.patch(other.content,true);}
else{this.content=other.content;this.content.mount(this.target,null);}}}
function portalTemplate(app,bdom,helpers){let{callSlot}=helpers;return function template(ctx,node,key=""){return new VPortal(ctx.props.target,callSlot(ctx,node,key,"default",false,null));};}
class Portal extends Component{setup(){const node=this.__owl__;onMounted(()=>{const portal=node.bdom;if(!portal.target){const target=document.querySelector(this.props.target);if(target){portal.content.moveBeforeDOMNode(target.firstChild,target);}
else{throw new OwlError("invalid portal target");}}});onWillUnmount(()=>{const portal=node.bdom;portal.remove();});}}
Portal.template="__portal__";Portal.props={target:{type:String,},slots:true,};const isUnionType=(t)=>Array.isArray(t);const isBaseType=(t)=>typeof t!=="object";const isValueType=(t)=>typeof t==="object"&&t&&"value"in t;function isOptional(t){return typeof t==="object"&&"optional"in t?t.optional||false:false;}
function describeType(type){return type==="*"||type===true?"value":type.name.toLowerCase();}
function describe(info){if(isBaseType(info)){return describeType(info);}
else if(isUnionType(info)){return info.map(describe).join(" or ");}
else if(isValueType(info)){return String(info.value);}
if("element"in info){return`list of ${describe({ type: info.element, optional: false })}s`;}
if("shape"in info){return`object`;}
return describe(info.type||"*");}
function toSchema(spec){return Object.fromEntries(spec.map((e)=>e.endsWith("?")?[e.slice(0,-1),{optional:true}]:[e,{type:"*",optional:false}]));}
function validate(obj,spec){let errors=validateSchema(obj,spec);if(errors.length){throw new OwlError("Invalid object: "+errors.join(", "));}}
function validateSchema(obj,schema){if(Array.isArray(schema)){schema=toSchema(schema);}
obj=toRaw(obj);let errors=[];for(let key in obj){if(key in schema){let result=validateType(key,obj[key],schema[key]);if(result){errors.push(result);}}
else if(!("*"in schema)){errors.push(`unknown key '${key}'`);}}
for(let key in schema){const spec=schema[key];if(key!=="*"&&!isOptional(spec)&&!(key in obj)){const isObj=typeof spec==="object"&&!Array.isArray(spec);const isAny=spec==="*"||(isObj&&"type"in spec?spec.type==="*":isObj);let detail=isAny?"":` (should be a ${describe(spec)})`;errors.push(`'${key}' is missing${detail}`);}}
return errors;}
function validateBaseType(key,value,type){if(typeof type==="function"){if(typeof value==="object"){if(!(value instanceof type)){return`'${key}' is not a ${describeType(type)}`;}}
else if(typeof value!==type.name.toLowerCase()){return`'${key}' is not a ${describeType(type)}`;}}
return null;}
function validateArrayType(key,value,descr){if(!Array.isArray(value)){return`'${key}' is not a list of ${describe(descr)}s`;}
for(let i=0;i<value.length;i++){const error=validateType(`${key}[${i}]`,value[i],descr);if(error){return error;}}
return null;}
function validateType(key,value,descr){if(value===undefined){return isOptional(descr)?null:`'${key}' is undefined (should be a ${describe(descr)})`;}
else if(isBaseType(descr)){return validateBaseType(key,value,descr);}
else if(isValueType(descr)){return value===descr.value?null:`'${key}' is not equal to '${descr.value}'`;}
else if(isUnionType(descr)){let validDescr=descr.find((p)=>!validateType(key,value,p));return validDescr?null:`'${key}' is not a ${describe(descr)}`;}
let result=null;if("element"in descr){result=validateArrayType(key,value,descr.element);}
else if("shape"in descr){if(typeof value!=="object"||Array.isArray(value)){result=`'${key}' is not an object`;}
else{const errors=validateSchema(value,descr.shape);if(errors.length){result=`'${key}' doesn't have the correct shape (${errors.join(", ")})`;}}}
else if("values"in descr){if(typeof value!=="object"||Array.isArray(value)){result=`'${key}' is not an object`;}
else{const errors=Object.entries(value).map(([key,value])=>validateType(key,value,descr.values)).filter(Boolean);if(errors.length){result=`some of the values in '${key}' are invalid (${errors.join(", ")})`;}}}
if("type"in descr&&!result){result=validateType(key,value,descr.type);}
if("validate"in descr&&!result){result=!descr.validate(value)?`'${key}' is not valid`:null;}
return result;}
const ObjectCreate=Object.create;function withDefault(value,defaultValue){return value===undefined||value===null||value===false?defaultValue:value;}
function callSlot(ctx,parent,key,name,dynamic,extra,defaultContent){key=key+"__slot_"+name;const slots=ctx.props.slots||{};const{__render,__ctx,__scope}=slots[name]||{};const slotScope=ObjectCreate(__ctx||{});if(__scope){slotScope[__scope]=extra;}
const slotBDom=__render?__render(slotScope,parent,key):null;if(defaultContent){let child1=undefined;let child2=undefined;if(slotBDom){child1=dynamic?toggler(name,slotBDom):slotBDom;}
else{child2=defaultContent(ctx,parent,key);}
return multi([child1,child2]);}
return slotBDom||text("");}
function capture(ctx){const result=ObjectCreate(ctx);for(let k in ctx){result[k]=ctx[k];}
return result;}
function withKey(elem,k){elem.key=k;return elem;}
function prepareList(collection){let keys;let values;if(Array.isArray(collection)){keys=collection;values=collection;}
else if(collection instanceof Map){keys=[...collection.keys()];values=[...collection.values()];}
else if(Symbol.iterator in Object(collection)){keys=[...collection];values=keys;}
else if(collection&&typeof collection==="object"){values=Object.values(collection);keys=Object.keys(collection);}
else{throw new OwlError(`Invalid loop expression: "${collection}" is not iterable`);}
const n=values.length;return[keys,values,n,new Array(n)];}
const isBoundary=Symbol("isBoundary");function setContextValue(ctx,key,value){const ctx0=ctx;while(!ctx.hasOwnProperty(key)&&!ctx.hasOwnProperty(isBoundary)){const newCtx=ctx.__proto__;if(!newCtx){ctx=ctx0;break;}
ctx=newCtx;}
ctx[key]=value;}
function toNumber(val){const n=parseFloat(val);return isNaN(n)?val:n;}
function shallowEqual(l1,l2){for(let i=0,l=l1.length;i<l;i++){if(l1[i]!==l2[i]){return false;}}
return true;}
class LazyValue{constructor(fn,ctx,component,node,key){this.fn=fn;this.ctx=capture(ctx);this.component=component;this.node=node;this.key=key;}
evaluate(){return this.fn.call(this.component,this.ctx,this.node,this.key);}
toString(){return this.evaluate().toString();}}
function safeOutput(value,defaultValue){if(value===undefined||value===null){return defaultValue?toggler("default",defaultValue):toggler("undefined",text(""));}
let safeKey;let block;switch(typeof value){case"object":if(value instanceof Markup){safeKey=`string_safe`;block=html(value);}
else if(value instanceof LazyValue){safeKey=`lazy_value`;block=value.evaluate();}
else if(value instanceof String){safeKey="string_unsafe";block=text(value);}
else{safeKey="block_safe";block=value;}
break;case"string":safeKey="string_unsafe";block=text(value);break;default:safeKey="string_unsafe";block=text(String(value));}
return toggler(safeKey,block);}
function validateProps(name,props,comp){const ComponentClass=typeof name!=="string"?name:comp.constructor.components[name];if(!ComponentClass){return;}
const schema=ComponentClass.props;if(!schema){if(comp.__owl__.app.warnIfNoStaticProps){console.warn(`Component '${ComponentClass.name}' does not have a static props description`);}
return;}
const defaultProps=ComponentClass.defaultProps;if(defaultProps){let isMandatory=(name)=>Array.isArray(schema)?schema.includes(name):name in schema&&!("*"in schema)&&!isOptional(schema[name]);for(let p in defaultProps){if(isMandatory(p)){throw new OwlError(`A default value cannot be defined for a mandatory prop (name: '${p}', component: ${ComponentClass.name})`);}}}
const errors=validateSchema(props,schema);if(errors.length){throw new OwlError(`Invalid props for component '${ComponentClass.name}': `+errors.join(", "));}}
function makeRefWrapper(node){let refNames=new Set();return(name,fn)=>{if(refNames.has(name)){throw new OwlError(`Cannot set the same ref more than once in the same component, ref "${name}" was set multiple times in ${node.name}`);}
refNames.add(name);return fn;};}
const helpers={withDefault,zero:Symbol("zero"),isBoundary,callSlot,capture,withKey,prepareList,setContextValue,shallowEqual,toNumber,validateProps,LazyValue,safeOutput,createCatcher,markRaw,OwlError,makeRefWrapper,};function parseXML(xml){const parser=new DOMParser();const doc=parser.parseFromString(xml,"text/xml");if(doc.getElementsByTagName("parsererror").length){let msg="Invalid XML in template.";const parsererrorText=doc.getElementsByTagName("parsererror")[0].textContent;if(parsererrorText){msg+="\nThe parser has produced the following error message:\n"+parsererrorText;const re=/\d+/g;const firstMatch=re.exec(parsererrorText);if(firstMatch){const lineNumber=Number(firstMatch[0]);const line=xml.split("\n")[lineNumber-1];const secondMatch=re.exec(parsererrorText);if(line&&secondMatch){const columnIndex=Number(secondMatch[0])-1;if(line[columnIndex]){msg+=`\nThe error might be located at xml line ${lineNumber} column ${columnIndex}\n`+`${line}\n${"-".repeat(columnIndex - 1)}^`;}}}}
throw new OwlError(msg);}
return doc;}
const bdom={text,createBlock,list,multi,html,toggler,comment};class TemplateSet{constructor(config={}){this.rawTemplates=Object.create(globalTemplates);this.templates={};this.Portal=Portal;this.dev=config.dev||false;this.translateFn=config.translateFn;this.translatableAttributes=config.translatableAttributes;if(config.templates){if(config.templates instanceof Document||typeof config.templates==="string"){this.addTemplates(config.templates);}
else{for(const name in config.templates){this.addTemplate(name,config.templates[name]);}}}
this.getRawTemplate=config.getTemplate;}
static registerTemplate(name,fn){globalTemplates[name]=fn;}
addTemplate(name,template){if(name in this.rawTemplates){if(!this.dev){return;}
const rawTemplate=this.rawTemplates[name];const currentAsString=typeof rawTemplate==="string"?rawTemplate:rawTemplate instanceof Element?rawTemplate.outerHTML:rawTemplate.toString();const newAsString=typeof template==="string"?template:template.outerHTML;if(currentAsString===newAsString){return;}
throw new OwlError(`Template ${name} already defined with different content`);}
this.rawTemplates[name]=template;}
addTemplates(xml){if(!xml){return;}
xml=xml instanceof Document?xml:parseXML(xml);for(const template of xml.querySelectorAll("[t-name]")){const name=template.getAttribute("t-name");this.addTemplate(name,template);}}
getTemplate(name){var _a;if(!(name in this.templates)){const rawTemplate=((_a=this.getRawTemplate)===null||_a===void 0?void 0:_a.call(this,name))||this.rawTemplates[name];if(rawTemplate===undefined){let extraInfo="";try{const componentName=getCurrent().component.constructor.name;extraInfo=` (for component "${componentName}")`;}
catch{}
throw new OwlError(`Missing template: "${name}"${extraInfo}`);}
const isFn=typeof rawTemplate==="function"&&!(rawTemplate instanceof Element);const templateFn=isFn?rawTemplate:this._compileTemplate(name,rawTemplate);const templates=this.templates;this.templates[name]=function(context,parent){return templates[name].call(this,context,parent);};const template=templateFn(this,bdom,helpers);this.templates[name]=template;}
return this.templates[name];}
_compileTemplate(name,template){throw new OwlError(`Unable to compile a template. Please use owl full build instead`);}
callTemplate(owner,subTemplate,ctx,parent,key){const template=this.getTemplate(subTemplate);return toggler(subTemplate,template.call(owner,ctx,parent,key+subTemplate));}}
const globalTemplates={};function xml(...args){const name=`__template__${xml.nextId++}`;const value=String.raw(...args);globalTemplates[name]=value;return name;}
xml.nextId=1;TemplateSet.registerTemplate("__portal__",portalTemplate);const RESERVED_WORDS="true,false,NaN,null,undefined,debugger,console,window,in,instanceof,new,function,return,eval,void,Math,RegExp,Array,Object,Date".split(",");const WORD_REPLACEMENT=Object.assign(Object.create(null),{and:"&&",or:"||",gt:">",gte:">=",lt:"<",lte:"<=",});const STATIC_TOKEN_MAP=Object.assign(Object.create(null),{"{":"LEFT_BRACE","}":"RIGHT_BRACE","[":"LEFT_BRACKET","]":"RIGHT_BRACKET",":":"COLON",",":"COMMA","(":"LEFT_PAREN",")":"RIGHT_PAREN",});const OPERATORS="...,.,===,==,+,!==,!=,!,||,&&,>=,>,<=,<,?,-,*,/,%,typeof ,=>,=,;,in ,new ,|,&,^,~".split(",");let tokenizeString=function(expr){let s=expr[0];let start=s;if(s!=="'"&&s!=='"'&&s!=="`"){return false;}
let i=1;let cur;while(expr[i]&&expr[i]!==start){cur=expr[i];s+=cur;if(cur==="\\"){i++;cur=expr[i];if(!cur){throw new OwlError("Invalid expression");}
s+=cur;}
i++;}
if(expr[i]!==start){throw new OwlError("Invalid expression");}
s+=start;if(start==="`"){return{type:"TEMPLATE_STRING",value:s,replace(replacer){return s.replace(/\$\{(.*?)\}/g,(match,group)=>{return"${"+replacer(group)+"}";});},};}
return{type:"VALUE",value:s};};let tokenizeNumber=function(expr){let s=expr[0];if(s&&s.match(/[0-9]/)){let i=1;while(expr[i]&&expr[i].match(/[0-9]|\./)){s+=expr[i];i++;}
return{type:"VALUE",value:s};}
else{return false;}};let tokenizeSymbol=function(expr){let s=expr[0];if(s&&s.match(/[a-zA-Z_\$]/)){let i=1;while(expr[i]&&expr[i].match(/\w/)){s+=expr[i];i++;}
if(s in WORD_REPLACEMENT){return{type:"OPERATOR",value:WORD_REPLACEMENT[s],size:s.length};}
return{type:"SYMBOL",value:s};}
else{return false;}};const tokenizeStatic=function(expr){const char=expr[0];if(char&&char in STATIC_TOKEN_MAP){return{type:STATIC_TOKEN_MAP[char],value:char};}
return false;};const tokenizeOperator=function(expr){for(let op of OPERATORS){if(expr.startsWith(op)){return{type:"OPERATOR",value:op};}}
return false;};const TOKENIZERS=[tokenizeString,tokenizeNumber,tokenizeOperator,tokenizeSymbol,tokenizeStatic,];function tokenize(expr){const result=[];let token=true;let error;let current=expr;try{while(token){current=current.trim();if(current){for(let tokenizer of TOKENIZERS){token=tokenizer(current);if(token){result.push(token);current=current.slice(token.size||token.value.length);break;}}}
else{token=false;}}}
catch(e){error=e;}
if(current.length||error){throw new OwlError(`Tokenizer error: could not tokenize \`${expr}\``);}
return result;}
const isLeftSeparator=(token)=>token&&(token.type==="LEFT_BRACE"||token.type==="COMMA");const isRightSeparator=(token)=>token&&(token.type==="RIGHT_BRACE"||token.type==="COMMA");function compileExprToArray(expr){const localVars=new Set();const tokens=tokenize(expr);let i=0;let stack=[];while(i<tokens.length){let token=tokens[i];let prevToken=tokens[i-1];let nextToken=tokens[i+1];let groupType=stack[stack.length-1];switch(token.type){case"LEFT_BRACE":case"LEFT_BRACKET":case"LEFT_PAREN":stack.push(token.type);break;case"RIGHT_BRACE":case"RIGHT_BRACKET":case"RIGHT_PAREN":stack.pop();}
let isVar=token.type==="SYMBOL"&&!RESERVED_WORDS.includes(token.value);if(token.type==="SYMBOL"&&!RESERVED_WORDS.includes(token.value)){if(prevToken){if(groupType==="LEFT_BRACE"&&isLeftSeparator(prevToken)&&isRightSeparator(nextToken)){tokens.splice(i+1,0,{type:"COLON",value:":"},{...token});nextToken=tokens[i+1];}
if(prevToken.type==="OPERATOR"&&prevToken.value==="."){isVar=false;}
else if(prevToken.type==="LEFT_BRACE"||prevToken.type==="COMMA"){if(nextToken&&nextToken.type==="COLON"){isVar=false;}}}}
if(token.type==="TEMPLATE_STRING"){token.value=token.replace((expr)=>compileExpr(expr));}
if(nextToken&&nextToken.type==="OPERATOR"&&nextToken.value==="=>"){if(token.type==="RIGHT_PAREN"){let j=i-1;while(j>0&&tokens[j].type!=="LEFT_PAREN"){if(tokens[j].type==="SYMBOL"&&tokens[j].originalValue){tokens[j].value=tokens[j].originalValue;localVars.add(tokens[j].value);}
j--;}}
else{localVars.add(token.value);}}
if(isVar){token.varName=token.value;if(!localVars.has(token.value)){token.originalValue=token.value;token.value=`ctx['${token.value}']`;}}
i++;}
for(const token of tokens){if(token.type==="SYMBOL"&&token.varName&&localVars.has(token.value)){token.originalValue=token.value;token.value=`_${token.value}`;token.isLocal=true;}}
return tokens;}
const paddedValues=new Map([["in "," in "]]);function compileExpr(expr){return compileExprToArray(expr).map((t)=>paddedValues.get(t.value)||t.value).join("");}
const INTERP_REGEXP=/\{\{.*?\}\}|\#\{.*?\}/g;function replaceDynamicParts(s,replacer){let matches=s.match(INTERP_REGEXP);if(matches&&matches[0].length===s.length){return`(${replacer(s.slice(2, matches[0][0] === "{" ? -2 : -1))})`;}
let r=s.replace(INTERP_REGEXP,(s)=>"${"+replacer(s.slice(2,s[0]==="{"?-2:-1))+"}");return"`"+r+"`";}
function interpolate(s){return replaceDynamicParts(s,compileExpr);}
const whitespaceRE=/\s+/g;const xmlDoc=document.implementation.createDocument(null,null,null);const MODS=new Set(["stop","capture","prevent","self","synthetic"]);let nextDataIds={};function generateId(prefix=""){nextDataIds[prefix]=(nextDataIds[prefix]||0)+1;return prefix+nextDataIds[prefix];}
function isProp(tag,key){switch(tag){case"input":return(key==="checked"||key==="indeterminate"||key==="value"||key==="readonly"||key==="readOnly"||key==="disabled");case"option":return key==="selected"||key==="disabled";case"textarea":return key==="value"||key==="readonly"||key==="readOnly"||key==="disabled";case"select":return key==="value"||key==="disabled";case"button":case"optgroup":return key==="disabled";}
return false;}
function toStringExpression(str){return`\`${str.replace(/\\/g, "\\\\").replace(/`/g,"\\`").replace(/\$\{/,"\\${")}\``;}
class BlockDescription{constructor(target,type){this.dynamicTagName=null;this.isRoot=false;this.hasDynamicChildren=false;this.children=[];this.data=[];this.childNumber=0;this.parentVar="";this.id=BlockDescription.nextBlockId++;this.varName="b"+this.id;this.blockName="block"+this.id;this.target=target;this.type=type;}
insertData(str,prefix="d"){const id=generateId(prefix);this.target.addLine(`let ${id} = ${str};`);return this.data.push(id)-1;}
insert(dom){if(this.currentDom){this.currentDom.appendChild(dom);}
else{this.dom=dom;}}
generateExpr(expr){if(this.type==="block"){const hasChildren=this.children.length;let params=this.data.length?`[${this.data.join(", ")}]`:hasChildren?"[]":"";if(hasChildren){params+=", ["+this.children.map((c)=>c.varName).join(", ")+"]";}
if(this.dynamicTagName){return`toggler(${this.dynamicTagName}, ${this.blockName}(${this.dynamicTagName})(${params}))`;}
return`${this.blockName}(${params})`;}
else if(this.type==="list"){return`list(c_block${this.id})`;}
return expr;}
asXmlString(){const t=xmlDoc.createElement("t");t.appendChild(this.dom);return t.innerHTML;}}
BlockDescription.nextBlockId=1;function createContext(parentCtx,params){return Object.assign({block:null,index:0,forceNewBlock:true,translate:parentCtx.translate,tKeyExpr:null,nameSpace:parentCtx.nameSpace,tModelSelectedExpr:parentCtx.tModelSelectedExpr,},params);}
class CodeTarget{constructor(name,on){this.indentLevel=0;this.loopLevel=0;this.code=[];this.hasRoot=false;this.hasCache=false;this.shouldProtectScope=false;this.hasRefWrapper=false;this.name=name;this.on=on||null;}
addLine(line,idx){const prefix=new Array(this.indentLevel+2).join("  ");if(idx===undefined){this.code.push(prefix+line);}
else{this.code.splice(idx,0,prefix+line);}}
generateCode(){let result=[];result.push(`function ${this.name}(ctx, node, key = "") {`);if(this.shouldProtectScope){result.push(`  ctx = Object.create(ctx);`);result.push(`  ctx[isBoundary] = 1`);}
if(this.hasRefWrapper){result.push(`  let refWrapper = makeRefWrapper(this.__owl__);`);}
if(this.hasCache){result.push(`  let cache = ctx.cache || {};`);result.push(`  let nextCache = ctx.cache = {};`);}
for(let line of this.code){result.push(line);}
if(!this.hasRoot){result.push(`return text('');`);}
result.push(`}`);return result.join("\n  ");}
currentKey(ctx){let key=this.loopLevel?`key${this.loopLevel}`:"key";if(ctx.tKeyExpr){key=`${ctx.tKeyExpr} + ${key}`;}
return key;}}
const TRANSLATABLE_ATTRS=["label","title","placeholder","alt"];const translationRE=/^(\s*)([\s\S]+?)(\s*)$/;class CodeGenerator{constructor(ast,options){this.blocks=[];this.nextBlockId=1;this.isDebug=false;this.targets=[];this.target=new CodeTarget("template");this.translatableAttributes=TRANSLATABLE_ATTRS;this.staticDefs=[];this.slotNames=new Set();this.helpers=new Set();this.translateFn=options.translateFn||((s)=>s);if(options.translatableAttributes){const attrs=new Set(TRANSLATABLE_ATTRS);for(let attr of options.translatableAttributes){if(attr.startsWith("-")){attrs.delete(attr.slice(1));}
else{attrs.add(attr);}}
this.translatableAttributes=[...attrs];}
this.hasSafeContext=options.hasSafeContext||false;this.dev=options.dev||false;this.ast=ast;this.templateName=options.name;}
generateCode(){const ast=this.ast;this.isDebug=ast.type===12;BlockDescription.nextBlockId=1;nextDataIds={};this.compileAST(ast,{block:null,index:0,forceNewBlock:false,isLast:true,translate:true,tKeyExpr:null,});let mainCode=[`  let { text, createBlock, list, multi, html, toggler, comment } = bdom;`];if(this.helpers.size){mainCode.push(`let { ${[...this.helpers].join(", ")} } = helpers;`);}
if(this.templateName){mainCode.push(`// Template name: "${this.templateName}"`);}
for(let{id,expr}of this.staticDefs){mainCode.push(`const ${id} = ${expr};`);}
if(this.blocks.length){mainCode.push(``);for(let block of this.blocks){if(block.dom){let xmlString=toStringExpression(block.asXmlString());if(block.dynamicTagName){xmlString=xmlString.replace(/^`<\w+/,`\`<\${tag || '${block.dom.nodeName}'}`);xmlString=xmlString.replace(/\w+>`$/,`\${tag || '${block.dom.nodeName}'}>\``);mainCode.push(`let ${block.blockName} = tag => createBlock(${xmlString});`);}
else{mainCode.push(`let ${block.blockName} = createBlock(${xmlString});`);}}}}
if(this.targets.length){for(let fn of this.targets){mainCode.push("");mainCode=mainCode.concat(fn.generateCode());}}
mainCode.push("");mainCode=mainCode.concat("return "+this.target.generateCode());const code=mainCode.join("\n  ");if(this.isDebug){const msg=`[Owl Debug]\n${code}`;console.log(msg);}
return code;}
compileInNewTarget(prefix,ast,ctx,on){const name=generateId(prefix);const initialTarget=this.target;const target=new CodeTarget(name,on);this.targets.push(target);this.target=target;this.compileAST(ast,createContext(ctx));this.target=initialTarget;return name;}
addLine(line,idx){this.target.addLine(line,idx);}
define(varName,expr){this.addLine(`const ${varName} = ${expr};`);}
insertAnchor(block,index=block.children.length){const tag=`block-child-${index}`;const anchor=xmlDoc.createElement(tag);block.insert(anchor);}
createBlock(parentBlock,type,ctx){const hasRoot=this.target.hasRoot;const block=new BlockDescription(this.target,type);if(!hasRoot){this.target.hasRoot=true;block.isRoot=true;}
if(parentBlock){parentBlock.children.push(block);if(parentBlock.type==="list"){block.parentVar=`c_block${parentBlock.id}`;}}
return block;}
insertBlock(expression,block,ctx){let blockExpr=block.generateExpr(expression);if(block.parentVar){let key=this.target.currentKey(ctx);this.helpers.add("withKey");this.addLine(`${block.parentVar}[${ctx.index}] = withKey(${blockExpr}, ${key});`);return;}
if(ctx.tKeyExpr){blockExpr=`toggler(${ctx.tKeyExpr}, ${blockExpr})`;}
if(block.isRoot){if(this.target.on){blockExpr=this.wrapWithEventCatcher(blockExpr,this.target.on);}
this.addLine(`return ${blockExpr};`);}
else{this.define(block.varName,blockExpr);}}
captureExpression(expr,forceCapture=false){if(!forceCapture&&!expr.includes("=>")){return compileExpr(expr);}
const tokens=compileExprToArray(expr);const mapping=new Map();return tokens.map((tok)=>{if(tok.varName&&!tok.isLocal){if(!mapping.has(tok.varName)){const varId=generateId("v");mapping.set(tok.varName,varId);this.define(varId,tok.value);}
tok.value=mapping.get(tok.varName);}
return tok.value;}).join("");}
translate(str){const match=translationRE.exec(str);return match[1]+this.translateFn(match[2])+match[3];}
compileAST(ast,ctx){switch(ast.type){case 1:return this.compileComment(ast,ctx);case 0:return this.compileText(ast,ctx);case 2:return this.compileTDomNode(ast,ctx);case 4:return this.compileTEsc(ast,ctx);case 8:return this.compileTOut(ast,ctx);case 5:return this.compileTIf(ast,ctx);case 9:return this.compileTForeach(ast,ctx);case 10:return this.compileTKey(ast,ctx);case 3:return this.compileMulti(ast,ctx);case 7:return this.compileTCall(ast,ctx);case 15:return this.compileTCallBlock(ast,ctx);case 6:return this.compileTSet(ast,ctx);case 11:return this.compileComponent(ast,ctx);case 12:return this.compileDebug(ast,ctx);case 13:return this.compileLog(ast,ctx);case 14:return this.compileTSlot(ast,ctx);case 16:return this.compileTTranslation(ast,ctx);case 17:return this.compileTPortal(ast,ctx);}}
compileDebug(ast,ctx){this.addLine(`debugger;`);if(ast.content){return this.compileAST(ast.content,ctx);}
return null;}
compileLog(ast,ctx){this.addLine(`console.log(${compileExpr(ast.expr)});`);if(ast.content){return this.compileAST(ast.content,ctx);}
return null;}
compileComment(ast,ctx){let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock;if(isNewBlock){block=this.createBlock(block,"comment",ctx);this.insertBlock(`comment(${toStringExpression(ast.value)})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block,});}
else{const text=xmlDoc.createComment(ast.value);block.insert(text);}
return block.varName;}
compileText(ast,ctx){let{block,forceNewBlock}=ctx;let value=ast.value;if(value&&ctx.translate!==false){value=this.translate(value);}
if(!ctx.inPreTag){value=value.replace(whitespaceRE," ");}
if(!block||forceNewBlock){block=this.createBlock(block,"text",ctx);this.insertBlock(`text(${toStringExpression(value)})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block,});}
else{const createFn=ast.type===0?xmlDoc.createTextNode:xmlDoc.createComment;block.insert(createFn.call(xmlDoc,value));}
return block.varName;}
generateHandlerCode(rawEvent,handler){const modifiers=rawEvent.split(".").slice(1).map((m)=>{if(!MODS.has(m)){throw new OwlError(`Unknown event modifier: '${m}'`);}
return`"${m}"`;});let modifiersCode="";if(modifiers.length){modifiersCode=`${modifiers.join(",")}, `;}
return`[${modifiersCode}${this.captureExpression(handler)}, ctx]`;}
compileTDomNode(ast,ctx){let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock||ast.dynamicTag!==null||ast.ns;let codeIdx=this.target.code.length;if(isNewBlock){if((ast.dynamicTag||ctx.tKeyExpr||ast.ns)&&ctx.block){this.insertAnchor(ctx.block);}
block=this.createBlock(block,"block",ctx);this.blocks.push(block);if(ast.dynamicTag){const tagExpr=generateId("tag");this.define(tagExpr,compileExpr(ast.dynamicTag));block.dynamicTagName=tagExpr;}}
const attrs={};for(let key in ast.attrs){let expr,attrName;if(key.startsWith("t-attf")){expr=interpolate(ast.attrs[key]);const idx=block.insertData(expr,"attr");attrName=key.slice(7);attrs["block-attribute-"+idx]=attrName;}
else if(key.startsWith("t-att")){attrName=key==="t-att"?null:key.slice(6);expr=compileExpr(ast.attrs[key]);if(attrName&&isProp(ast.tag,attrName)){if(attrName==="readonly"){attrName="readOnly";}
if(attrName==="value"){expr=`new String((${expr}) === 0 ? 0 : ((${expr}) || ""))`;}
else{expr=`new Boolean(${expr})`;}
const idx=block.insertData(expr,"prop");attrs[`block-property-${idx}`]=attrName;}
else{const idx=block.insertData(expr,"attr");if(key==="t-att"){attrs[`block-attributes`]=String(idx);}
else{attrs[`block-attribute-${idx}`]=attrName;}}}
else if(this.translatableAttributes.includes(key)){attrs[key]=this.translateFn(ast.attrs[key]);}
else{expr=`"${ast.attrs[key]}"`;attrName=key;attrs[key]=ast.attrs[key];}
if(attrName==="value"&&ctx.tModelSelectedExpr){let selectedId=block.insertData(`${ctx.tModelSelectedExpr} === ${expr}`,"attr");attrs[`block-attribute-${selectedId}`]="selected";}}
let tModelSelectedExpr;if(ast.model){const{hasDynamicChildren,baseExpr,expr,eventType,shouldNumberize,shouldTrim,targetAttr,specialInitTargetAttr,}=ast.model;const baseExpression=compileExpr(baseExpr);const bExprId=generateId("bExpr");this.define(bExprId,baseExpression);const expression=compileExpr(expr);const exprId=generateId("expr");this.define(exprId,expression);const fullExpression=`${bExprId}[${exprId}]`;let idx;if(specialInitTargetAttr){let targetExpr=targetAttr in attrs&&`'${attrs[targetAttr]}'`;if(!targetExpr&&ast.attrs){const dynamicTgExpr=ast.attrs[`t-att-${targetAttr}`];if(dynamicTgExpr){targetExpr=compileExpr(dynamicTgExpr);}}
idx=block.insertData(`${fullExpression} === ${targetExpr}`,"prop");attrs[`block-property-${idx}`]=specialInitTargetAttr;}
else if(hasDynamicChildren){const bValueId=generateId("bValue");tModelSelectedExpr=`${bValueId}`;this.define(tModelSelectedExpr,fullExpression);}
else{idx=block.insertData(`${fullExpression}`,"prop");attrs[`block-property-${idx}`]=targetAttr;}
this.helpers.add("toNumber");let valueCode=`ev.target.${targetAttr}`;valueCode=shouldTrim?`${valueCode}.trim()`:valueCode;valueCode=shouldNumberize?`toNumber(${valueCode})`:valueCode;const handler=`[(ev) => { ${fullExpression} = ${valueCode}; }]`;idx=block.insertData(handler,"hdlr");attrs[`block-handler-${idx}`]=eventType;}
for(let ev in ast.on){const name=this.generateHandlerCode(ev,ast.on[ev]);const idx=block.insertData(name,"hdlr");attrs[`block-handler-${idx}`]=ev;}
if(ast.ref){if(this.dev){this.helpers.add("makeRefWrapper");this.target.hasRefWrapper=true;}
const isDynamic=INTERP_REGEXP.test(ast.ref);let name=`\`${ast.ref}\``;if(isDynamic){name=replaceDynamicParts(ast.ref,(expr)=>this.captureExpression(expr,true));}
let setRefStr=`(el) => this.__owl__.setRef((${name}), el)`;if(this.dev){setRefStr=`refWrapper(${name}, ${setRefStr})`;}
const idx=block.insertData(setRefStr,"ref");attrs["block-ref"]=String(idx);}
const nameSpace=ast.ns||ctx.nameSpace;const dom=nameSpace?xmlDoc.createElementNS(nameSpace,ast.tag):xmlDoc.createElement(ast.tag);for(const[attr,val]of Object.entries(attrs)){if(!(attr==="class"&&val==="")){dom.setAttribute(attr,val);}}
block.insert(dom);if(ast.content.length){const initialDom=block.currentDom;block.currentDom=dom;const children=ast.content;for(let i=0;i<children.length;i++){const child=ast.content[i];const subCtx=createContext(ctx,{block,index:block.childNumber,forceNewBlock:false,isLast:ctx.isLast&&i===children.length-1,tKeyExpr:ctx.tKeyExpr,nameSpace,tModelSelectedExpr,inPreTag:ctx.inPreTag||ast.tag==="pre",});this.compileAST(child,subCtx);}
block.currentDom=initialDom;}
if(isNewBlock){this.insertBlock(`${block.blockName}(ddd)`,block,ctx);if(block.children.length&&block.hasDynamicChildren){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}}
return block.varName;}
compileTEsc(ast,ctx){let{block,forceNewBlock}=ctx;let expr;if(ast.expr==="0"){this.helpers.add("zero");expr=`ctx[zero]`;}
else{expr=compileExpr(ast.expr);if(ast.defaultValue){this.helpers.add("withDefault");expr=`withDefault(${expr}, ${toStringExpression(ast.defaultValue)})`;}}
if(!block||forceNewBlock){block=this.createBlock(block,"text",ctx);this.insertBlock(`text(${expr})`,block,{...ctx,forceNewBlock:forceNewBlock&&!block});}
else{const idx=block.insertData(expr,"txt");const text=xmlDoc.createElement(`block-text-${idx}`);block.insert(text);}
return block.varName;}
compileTOut(ast,ctx){let{block}=ctx;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"html",ctx);let blockStr;if(ast.expr==="0"){this.helpers.add("zero");blockStr=`ctx[zero]`;}
else if(ast.body){let bodyValue=null;bodyValue=BlockDescription.nextBlockId;const subCtx=createContext(ctx);this.compileAST({type:3,content:ast.body},subCtx);this.helpers.add("safeOutput");blockStr=`safeOutput(${compileExpr(ast.expr)}, b${bodyValue})`;}
else{this.helpers.add("safeOutput");blockStr=`safeOutput(${compileExpr(ast.expr)})`;}
this.insertBlock(blockStr,block,ctx);return block.varName;}
compileTIfBranch(content,block,ctx){this.target.indentLevel++;let childN=block.children.length;this.compileAST(content,createContext(ctx,{block,index:ctx.index}));if(block.children.length>childN){this.insertAnchor(block,childN);}
this.target.indentLevel--;}
compileTIf(ast,ctx,nextNode){let{block,forceNewBlock}=ctx;const codeIdx=this.target.code.length;const isNewBlock=!block||(block.type!=="multi"&&forceNewBlock);if(block){block.hasDynamicChildren=true;}
if(!block||(block.type!=="multi"&&forceNewBlock)){block=this.createBlock(block,"multi",ctx);}
this.addLine(`if (${compileExpr(ast.condition)}) {`);this.compileTIfBranch(ast.content,block,ctx);if(ast.tElif){for(let clause of ast.tElif){this.addLine(`} else if (${compileExpr(clause.condition)}) {`);this.compileTIfBranch(clause.content,block,ctx);}}
if(ast.tElse){this.addLine(`} else {`);this.compileTIfBranch(ast.tElse,block,ctx);}
this.addLine("}");if(isNewBlock){if(block.children.length){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}
const args=block.children.map((c)=>c.varName).join(", ");this.insertBlock(`multi([${args}])`,block,ctx);}
return block.varName;}
compileTForeach(ast,ctx){let{block}=ctx;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"list",ctx);this.target.loopLevel++;const loopVar=`i${this.target.loopLevel}`;this.addLine(`ctx = Object.create(ctx);`);const vals=`v_block${block.id}`;const keys=`k_block${block.id}`;const l=`l_block${block.id}`;const c=`c_block${block.id}`;this.helpers.add("prepareList");this.define(`[${keys}, ${vals}, ${l}, ${c}]`,`prepareList(${compileExpr(ast.collection)});`);if(this.dev){this.define(`keys${block.id}`,`new Set()`);}
this.addLine(`for (let ${loopVar} = 0; ${loopVar} < ${l}; ${loopVar}++) {`);this.target.indentLevel++;this.addLine(`ctx[\`${ast.elem}\`] = ${keys}[${loopVar}];`);if(!ast.hasNoFirst){this.addLine(`ctx[\`${ast.elem}_first\`] = ${loopVar} === 0;`);}
if(!ast.hasNoLast){this.addLine(`ctx[\`${ast.elem}_last\`] = ${loopVar} === ${keys}.length - 1;`);}
if(!ast.hasNoIndex){this.addLine(`ctx[\`${ast.elem}_index\`] = ${loopVar};`);}
if(!ast.hasNoValue){this.addLine(`ctx[\`${ast.elem}_value\`] = ${vals}[${loopVar}];`);}
this.define(`key${this.target.loopLevel}`,ast.key?compileExpr(ast.key):loopVar);if(this.dev){this.helpers.add("OwlError");this.addLine(`if (keys${block.id}.has(String(key${this.target.loopLevel}))) { throw new OwlError(\`Got duplicate key in t-foreach: \${key${this.target.loopLevel}}\`)}`);this.addLine(`keys${block.id}.add(String(key${this.target.loopLevel}));`);}
let id;if(ast.memo){this.target.hasCache=true;id=generateId();this.define(`memo${id}`,compileExpr(ast.memo));this.define(`vnode${id}`,`cache[key${this.target.loopLevel}];`);this.addLine(`if (vnode${id}) {`);this.target.indentLevel++;this.addLine(`if (shallowEqual(vnode${id}.memo, memo${id})) {`);this.target.indentLevel++;this.addLine(`${c}[${loopVar}] = vnode${id};`);this.addLine(`nextCache[key${this.target.loopLevel}] = vnode${id};`);this.addLine(`continue;`);this.target.indentLevel--;this.addLine("}");this.target.indentLevel--;this.addLine("}");}
const subCtx=createContext(ctx,{block,index:loopVar});this.compileAST(ast.body,subCtx);if(ast.memo){this.addLine(`nextCache[key${this.target.loopLevel}] = Object.assign(${c}[${loopVar}], {memo: memo${id}});`);}
this.target.indentLevel--;this.target.loopLevel--;this.addLine(`}`);if(!ctx.isLast){this.addLine(`ctx = ctx.__proto__;`);}
this.insertBlock("l",block,ctx);return block.varName;}
compileTKey(ast,ctx){const tKeyExpr=generateId("tKey_");this.define(tKeyExpr,compileExpr(ast.expr));ctx=createContext(ctx,{tKeyExpr,block:ctx.block,index:ctx.index,});return this.compileAST(ast.content,ctx);}
compileMulti(ast,ctx){let{block,forceNewBlock}=ctx;const isNewBlock=!block||forceNewBlock;let codeIdx=this.target.code.length;if(isNewBlock){const n=ast.content.filter((c)=>c.type!==6).length;let result=null;if(n<=1){for(let child of ast.content){const blockName=this.compileAST(child,ctx);result=result||blockName;}
return result;}
block=this.createBlock(block,"multi",ctx);}
let index=0;for(let i=0,l=ast.content.length;i<l;i++){const child=ast.content[i];const isTSet=child.type===6;const subCtx=createContext(ctx,{block,index,forceNewBlock:!isTSet,isLast:ctx.isLast&&i===l-1,});this.compileAST(child,subCtx);if(!isTSet){index++;}}
if(isNewBlock){if(block.hasDynamicChildren&&block.children.length){const code=this.target.code;const children=block.children.slice();let current=children.shift();for(let i=codeIdx;i<code.length;i++){if(code[i].trimStart().startsWith(`const ${current.varName} `)){code[i]=code[i].replace(`const ${current.varName}`,current.varName);current=children.shift();if(!current)
break;}}
this.addLine(`let ${block.children.map((c) => c.varName).join(", ")};`,codeIdx);}
const args=block.children.map((c)=>c.varName).join(", ");this.insertBlock(`multi([${args}])`,block,ctx);}
return block.varName;}
compileTCall(ast,ctx){let{block,forceNewBlock}=ctx;let ctxVar=ctx.ctxVar||"ctx";if(ast.context){ctxVar=generateId("ctx");this.addLine(`let ${ctxVar} = ${compileExpr(ast.context)};`);}
const isDynamic=INTERP_REGEXP.test(ast.name);const subTemplate=isDynamic?interpolate(ast.name):"`"+ast.name+"`";if(block&&!forceNewBlock){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);if(ast.body){this.addLine(`${ctxVar} = Object.create(${ctxVar});`);this.addLine(`${ctxVar}[isBoundary] = 1;`);this.helpers.add("isBoundary");const subCtx=createContext(ctx,{ctxVar});const bl=this.compileMulti({type:3,content:ast.body},subCtx);if(bl){this.helpers.add("zero");this.addLine(`${ctxVar}[zero] = ${bl};`);}}
const key=this.generateComponentKey();if(isDynamic){const templateVar=generateId("template");if(!this.staticDefs.find((d)=>d.id==="call")){this.staticDefs.push({id:"call",expr:`app.callTemplate.bind(app)`});}
this.define(templateVar,subTemplate);this.insertBlock(`call(this, ${templateVar}, ${ctxVar}, node, ${key})`,block,{...ctx,forceNewBlock:!block,});}
else{const id=generateId(`callTemplate_`);this.staticDefs.push({id,expr:`app.getTemplate(${subTemplate})`});this.insertBlock(`${id}.call(this, ${ctxVar}, node, ${key})`,block,{...ctx,forceNewBlock:!block,});}
if(ast.body&&!ctx.isLast){this.addLine(`${ctxVar} = ${ctxVar}.__proto__;`);}
return block.varName;}
compileTCallBlock(ast,ctx){let{block,forceNewBlock}=ctx;if(block){if(!forceNewBlock){this.insertAnchor(block);}}
block=this.createBlock(block,"multi",ctx);this.insertBlock(compileExpr(ast.name),block,{...ctx,forceNewBlock:!block});return block.varName;}
compileTSet(ast,ctx){this.target.shouldProtectScope=true;this.helpers.add("isBoundary").add("withDefault");const expr=ast.value?compileExpr(ast.value||""):"null";if(ast.body){this.helpers.add("LazyValue");const bodyAst={type:3,content:ast.body};const name=this.compileInNewTarget("value",bodyAst,ctx);let key=this.target.currentKey(ctx);let value=`new LazyValue(${name}, ctx, this, node, ${key})`;value=ast.value?(value?`withDefault(${expr}, ${value})`:expr):value;this.addLine(`ctx[\`${ast.name}\`] = ${value};`);}
else{let value;if(ast.defaultValue){const defaultValue=toStringExpression(ctx.translate?this.translate(ast.defaultValue):ast.defaultValue);if(ast.value){value=`withDefault(${expr}, ${defaultValue})`;}
else{value=defaultValue;}}
else{value=expr;}
this.helpers.add("setContextValue");this.addLine(`setContextValue(${ctx.ctxVar || "ctx"}, "${ast.name}", ${value});`);}
return null;}
generateComponentKey(currentKey="key"){const parts=[generateId("__")];for(let i=0;i<this.target.loopLevel;i++){parts.push(`\${key${i + 1}}`);}
return`${currentKey} + \`${parts.join("__")}\``;}
formatProp(name,value){if(name.endsWith(".translate")){value=toStringExpression(this.translateFn(value));}
else{value=this.captureExpression(value);}
if(name.includes(".")){let[_name,suffix]=name.split(".");name=_name;switch(suffix){case"bind":value=`(${value}).bind(this)`;break;case"alike":case"translate":break;default:throw new OwlError("Invalid prop suffix");}}
name=/^[a-z_]+$/i.test(name)?name:`'${name}'`;return`${name}: ${value || undefined}`;}
formatPropObject(obj){return Object.entries(obj).map(([k,v])=>this.formatProp(k,v));}
getPropString(props,dynProps){let propString=`{${props.join(",")}}`;if(dynProps){propString=`Object.assign({}, ${compileExpr(dynProps)}${props.length ? ", " + propString : ""})`;}
return propString;}
compileComponent(ast,ctx){let{block}=ctx;const hasSlotsProp="slots"in(ast.props||{});const props=ast.props?this.formatPropObject(ast.props):[];let slotDef="";if(ast.slots){let ctxStr="ctx";if(this.target.loopLevel||!this.hasSafeContext){ctxStr=generateId("ctx");this.helpers.add("capture");this.define(ctxStr,`capture(ctx)`);}
let slotStr=[];for(let slotName in ast.slots){const slotAst=ast.slots[slotName];const params=[];if(slotAst.content){const name=this.compileInNewTarget("slot",slotAst.content,ctx,slotAst.on);params.push(`__render: ${name}.bind(this), __ctx: ${ctxStr}`);}
const scope=ast.slots[slotName].scope;if(scope){params.push(`__scope: "${scope}"`);}
if(ast.slots[slotName].attrs){params.push(...this.formatPropObject(ast.slots[slotName].attrs));}
const slotInfo=`{${params.join(", ")}}`;slotStr.push(`'${slotName}': ${slotInfo}`);}
slotDef=`{${slotStr.join(", ")}}`;}
if(slotDef&&!(ast.dynamicProps||hasSlotsProp)){this.helpers.add("markRaw");props.push(`slots: markRaw(${slotDef})`);}
let propString=this.getPropString(props,ast.dynamicProps);let propVar;if((slotDef&&(ast.dynamicProps||hasSlotsProp))||this.dev){propVar=generateId("props");this.define(propVar,propString);propString=propVar;}
if(slotDef&&(ast.dynamicProps||hasSlotsProp)){this.helpers.add("markRaw");this.addLine(`${propVar}.slots = markRaw(Object.assign(${slotDef}, ${propVar}.slots))`);}
let expr;if(ast.isDynamic){expr=generateId("Comp");this.define(expr,compileExpr(ast.name));}
else{expr=`\`${ast.name}\``;}
if(this.dev){this.addLine(`helpers.validateProps(${expr}, ${propVar}, this);`);}
if(block&&(ctx.forceNewBlock===false||ctx.tKeyExpr)){this.insertAnchor(block);}
let keyArg=this.generateComponentKey();if(ctx.tKeyExpr){keyArg=`${ctx.tKeyExpr} + ${keyArg}`;}
let id=generateId("comp");const propList=[];for(let p in ast.props||{}){let[name,suffix]=p.split(".");if(!suffix){propList.push(`"${name}"`);}}
this.staticDefs.push({id,expr:`app.createComponent(${ast.isDynamic ? null : expr}, ${!ast.isDynamic}, ${!!ast.slots}, ${!!ast.dynamicProps}, [${propList}])`,});if(ast.isDynamic){keyArg=`(${expr}).name + ${keyArg}`;}
let blockExpr=`${id}(${propString}, ${keyArg}, node, this, ${ast.isDynamic ? expr : null})`;if(ast.isDynamic){blockExpr=`toggler(${expr}, ${blockExpr})`;}
if(ast.on){blockExpr=this.wrapWithEventCatcher(blockExpr,ast.on);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockExpr,block,ctx);return block.varName;}
wrapWithEventCatcher(expr,on){this.helpers.add("createCatcher");let name=generateId("catcher");let spec={};let handlers=[];for(let ev in on){let handlerId=generateId("hdlr");let idx=handlers.push(handlerId)-1;spec[ev]=idx;const handler=this.generateHandlerCode(ev,on[ev]);this.define(handlerId,handler);}
this.staticDefs.push({id:name,expr:`createCatcher(${JSON.stringify(spec)})`});return`${name}(${expr}, [${handlers.join(",")}])`;}
compileTSlot(ast,ctx){this.helpers.add("callSlot");let{block}=ctx;let blockString;let slotName;let dynamic=false;let isMultiple=false;if(ast.name.match(INTERP_REGEXP)){dynamic=true;isMultiple=true;slotName=interpolate(ast.name);}
else{slotName="'"+ast.name+"'";isMultiple=isMultiple||this.slotNames.has(ast.name);this.slotNames.add(ast.name);}
const dynProps=ast.attrs?ast.attrs["t-props"]:null;if(ast.attrs){delete ast.attrs["t-props"];}
let key=this.target.loopLevel?`key${this.target.loopLevel}`:"key";if(isMultiple){key=this.generateComponentKey(key);}
const props=ast.attrs?this.formatPropObject(ast.attrs):[];const scope=this.getPropString(props,dynProps);if(ast.defaultContent){const name=this.compileInNewTarget("defaultContent",ast.defaultContent,ctx);blockString=`callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope}, ${name}.bind(this))`;}
else{if(dynamic){let name=generateId("slot");this.define(name,slotName);blockString=`toggler(${name}, callSlot(ctx, node, ${key}, ${name}, ${dynamic}, ${scope}))`;}
else{blockString=`callSlot(ctx, node, ${key}, ${slotName}, ${dynamic}, ${scope})`;}}
if(ast.on){blockString=this.wrapWithEventCatcher(blockString,ast.on);}
if(block){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockString,block,{...ctx,forceNewBlock:false});return block.varName;}
compileTTranslation(ast,ctx){if(ast.content){return this.compileAST(ast.content,Object.assign({},ctx,{translate:false}));}
return null;}
compileTPortal(ast,ctx){if(!this.staticDefs.find((d)=>d.id==="Portal")){this.staticDefs.push({id:"Portal",expr:`app.Portal`});}
let{block}=ctx;const name=this.compileInNewTarget("slot",ast.content,ctx);let ctxStr="ctx";if(this.target.loopLevel||!this.hasSafeContext){ctxStr=generateId("ctx");this.helpers.add("capture");this.define(ctxStr,`capture(ctx)`);}
let id=generateId("comp");this.staticDefs.push({id,expr:`app.createComponent(null, false, true, false, false)`,});const target=compileExpr(ast.target);const key=this.generateComponentKey();const blockString=`${id}({target: ${target},slots: {'default': {__render: ${name}.bind(this), __ctx: ${ctxStr}}}}, ${key}, node, ctx, Portal)`;if(block){this.insertAnchor(block);}
block=this.createBlock(block,"multi",ctx);this.insertBlock(blockString,block,{...ctx,forceNewBlock:false});return block.varName;}}
const cache=new WeakMap();function parse(xml){if(typeof xml==="string"){const elem=parseXML(`<t>${xml}</t>`).firstChild;return _parse(elem);}
let ast=cache.get(xml);if(!ast){ast=_parse(xml.cloneNode(true));cache.set(xml,ast);}
return ast;}
function _parse(xml){normalizeXML(xml);const ctx={inPreTag:false};return parseNode(xml,ctx)||{type:0,value:""};}
function parseNode(node,ctx){if(!(node instanceof Element)){return parseTextCommentNode(node,ctx);}
return(parseTDebugLog(node,ctx)||parseTForEach(node,ctx)||parseTIf(node,ctx)||parseTPortal(node,ctx)||parseTCall(node,ctx)||parseTCallBlock(node)||parseTEscNode(node,ctx)||parseTOutNode(node,ctx)||parseTKey(node,ctx)||parseTTranslation(node,ctx)||parseTSlot(node,ctx)||parseComponent(node,ctx)||parseDOMNode(node,ctx)||parseTSetNode(node,ctx)||parseTNode(node,ctx));}
function parseTNode(node,ctx){if(node.tagName!=="t"){return null;}
return parseChildNodes(node,ctx);}
const lineBreakRE=/[\r\n]/;function parseTextCommentNode(node,ctx){if(node.nodeType===Node.TEXT_NODE){let value=node.textContent||"";if(!ctx.inPreTag&&lineBreakRE.test(value)&&!value.trim()){return null;}
return{type:0,value};}
else if(node.nodeType===Node.COMMENT_NODE){return{type:1,value:node.textContent||""};}
return null;}
function parseTDebugLog(node,ctx){if(node.hasAttribute("t-debug")){node.removeAttribute("t-debug");return{type:12,content:parseNode(node,ctx),};}
if(node.hasAttribute("t-log")){const expr=node.getAttribute("t-log");node.removeAttribute("t-log");return{type:13,expr,content:parseNode(node,ctx),};}
return null;}
const hasDotAtTheEnd=/\.[\w_]+\s*$/;const hasBracketsAtTheEnd=/\[[^\[]+\]\s*$/;const ROOT_SVG_TAGS=new Set(["svg","g","path"]);function parseDOMNode(node,ctx){const{tagName}=node;const dynamicTag=node.getAttribute("t-tag");node.removeAttribute("t-tag");if(tagName==="t"&&!dynamicTag){return null;}
if(tagName.startsWith("block-")){throw new OwlError(`Invalid tag name: '${tagName}'`);}
ctx=Object.assign({},ctx);if(tagName==="pre"){ctx.inPreTag=true;}
let ns=!ctx.nameSpace&&ROOT_SVG_TAGS.has(tagName)?"http://www.w3.org/2000/svg":null;const ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const nodeAttrsNames=node.getAttributeNames();let attrs=null;let on=null;let model=null;for(let attr of nodeAttrsNames){const value=node.getAttribute(attr);if(attr==="t-on"||attr==="t-on-"){throw new OwlError("Missing event name with t-on directive");}
if(attr.startsWith("t-on-")){on=on||{};on[attr.slice(5)]=value;}
else if(attr.startsWith("t-model")){if(!["input","select","textarea"].includes(tagName)){throw new OwlError("The t-model directive only works with <input>, <textarea> and <select>");}
let baseExpr,expr;if(hasDotAtTheEnd.test(value)){const index=value.lastIndexOf(".");baseExpr=value.slice(0,index);expr=`'${value.slice(index + 1)}'`;}
else if(hasBracketsAtTheEnd.test(value)){const index=value.lastIndexOf("[");baseExpr=value.slice(0,index);expr=value.slice(index+1,-1);}
else{throw new OwlError(`Invalid t-model expression: "${value}" (it should be assignable)`);}
const typeAttr=node.getAttribute("type");const isInput=tagName==="input";const isSelect=tagName==="select";const isCheckboxInput=isInput&&typeAttr==="checkbox";const isRadioInput=isInput&&typeAttr==="radio";const hasTrimMod=attr.includes(".trim");const hasLazyMod=hasTrimMod||attr.includes(".lazy");const hasNumberMod=attr.includes(".number");const eventType=isRadioInput?"click":isSelect||hasLazyMod?"change":"input";model={baseExpr,expr,targetAttr:isCheckboxInput?"checked":"value",specialInitTargetAttr:isRadioInput?"checked":null,eventType,hasDynamicChildren:false,shouldTrim:hasTrimMod,shouldNumberize:hasNumberMod,};if(isSelect){ctx=Object.assign({},ctx);ctx.tModelInfo=model;}}
else if(attr.startsWith("block-")){throw new OwlError(`Invalid attribute: '${attr}'`);}
else if(attr==="xmlns"){ns=value;}
else if(attr!=="t-name"){if(attr.startsWith("t-")&&!attr.startsWith("t-att")){throw new OwlError(`Unknown QWeb directive: '${attr}'`);}
const tModel=ctx.tModelInfo;if(tModel&&["t-att-value","t-attf-value"].includes(attr)){tModel.hasDynamicChildren=true;}
attrs=attrs||{};attrs[attr]=value;}}
if(ns){ctx.nameSpace=ns;}
const children=parseChildren(node,ctx);return{type:2,tag:tagName,dynamicTag,attrs,on,ref,content:children,model,ns,};}
function parseTEscNode(node,ctx){if(!node.hasAttribute("t-esc")){return null;}
const escValue=node.getAttribute("t-esc");node.removeAttribute("t-esc");const tesc={type:4,expr:escValue,defaultValue:node.textContent||"",};let ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const ast=parseNode(node,ctx);if(!ast){return tesc;}
if(ast.type===2){return{...ast,ref,content:[tesc],};}
return tesc;}
function parseTOutNode(node,ctx){if(!node.hasAttribute("t-out")&&!node.hasAttribute("t-raw")){return null;}
if(node.hasAttribute("t-raw")){console.warn(`t-raw has been deprecated in favor of t-out. If the value to render is not wrapped by the "markup" function, it will be escaped`);}
const expr=(node.getAttribute("t-out")||node.getAttribute("t-raw"));node.removeAttribute("t-out");node.removeAttribute("t-raw");const tOut={type:8,expr,body:null};const ref=node.getAttribute("t-ref");node.removeAttribute("t-ref");const ast=parseNode(node,ctx);if(!ast){return tOut;}
if(ast.type===2){tOut.body=ast.content.length?ast.content:null;return{...ast,ref,content:[tOut],};}
return tOut;}
function parseTForEach(node,ctx){if(!node.hasAttribute("t-foreach")){return null;}
const html=node.outerHTML;const collection=node.getAttribute("t-foreach");node.removeAttribute("t-foreach");const elem=node.getAttribute("t-as")||"";node.removeAttribute("t-as");const key=node.getAttribute("t-key");if(!key){throw new OwlError(`"Directive t-foreach should always be used with a t-key!" (expression: t-foreach="${collection}" t-as="${elem}")`);}
node.removeAttribute("t-key");const memo=node.getAttribute("t-memo")||"";node.removeAttribute("t-memo");const body=parseNode(node,ctx);if(!body){return null;}
const hasNoTCall=!html.includes("t-call");const hasNoFirst=hasNoTCall&&!html.includes(`${elem}_first`);const hasNoLast=hasNoTCall&&!html.includes(`${elem}_last`);const hasNoIndex=hasNoTCall&&!html.includes(`${elem}_index`);const hasNoValue=hasNoTCall&&!html.includes(`${elem}_value`);return{type:9,collection,elem,body,memo,key,hasNoFirst,hasNoLast,hasNoIndex,hasNoValue,};}
function parseTKey(node,ctx){if(!node.hasAttribute("t-key")){return null;}
const key=node.getAttribute("t-key");node.removeAttribute("t-key");const body=parseNode(node,ctx);if(!body){return null;}
return{type:10,expr:key,content:body};}
function parseTCall(node,ctx){if(!node.hasAttribute("t-call")){return null;}
const subTemplate=node.getAttribute("t-call");const context=node.getAttribute("t-call-context");node.removeAttribute("t-call");node.removeAttribute("t-call-context");if(node.tagName!=="t"){const ast=parseNode(node,ctx);const tcall={type:7,name:subTemplate,body:null,context};if(ast&&ast.type===2){ast.content=[tcall];return ast;}
if(ast&&ast.type===11){return{...ast,slots:{default:{content:tcall,scope:null,on:null,attrs:null}},};}}
const body=parseChildren(node,ctx);return{type:7,name:subTemplate,body:body.length?body:null,context,};}
function parseTCallBlock(node,ctx){if(!node.hasAttribute("t-call-block")){return null;}
const name=node.getAttribute("t-call-block");return{type:15,name,};}
function parseTIf(node,ctx){if(!node.hasAttribute("t-if")){return null;}
const condition=node.getAttribute("t-if");node.removeAttribute("t-if");const content=parseNode(node,ctx)||{type:0,value:""};let nextElement=node.nextElementSibling;const tElifs=[];while(nextElement&&nextElement.hasAttribute("t-elif")){const condition=nextElement.getAttribute("t-elif");nextElement.removeAttribute("t-elif");const tElif=parseNode(nextElement,ctx);const next=nextElement.nextElementSibling;nextElement.remove();nextElement=next;if(tElif){tElifs.push({condition,content:tElif});}}
let tElse=null;if(nextElement&&nextElement.hasAttribute("t-else")){nextElement.removeAttribute("t-else");tElse=parseNode(nextElement,ctx);nextElement.remove();}
return{type:5,condition,content,tElif:tElifs.length?tElifs:null,tElse,};}
function parseTSetNode(node,ctx){if(!node.hasAttribute("t-set")){return null;}
const name=node.getAttribute("t-set");const value=node.getAttribute("t-value")||null;const defaultValue=node.innerHTML===node.textContent?node.textContent||null:null;let body=null;if(node.textContent!==node.innerHTML){body=parseChildren(node,ctx);}
return{type:6,name,value,defaultValue,body};}
const directiveErrorMap=new Map([["t-ref","t-ref is no longer supported on components. Consider exposing only the public part of the component's API through a callback prop.",],["t-att","t-att makes no sense on component: props are already treated as expressions"],["t-attf","t-attf is not supported on components: use template strings for string interpolation in props",],]);function parseComponent(node,ctx){let name=node.tagName;const firstLetter=name[0];let isDynamic=node.hasAttribute("t-component");if(isDynamic&&name!=="t"){throw new OwlError(`Directive 't-component' can only be used on <t> nodes (used on a <${name}>)`);}
if(!(firstLetter===firstLetter.toUpperCase()||isDynamic)){return null;}
if(isDynamic){name=node.getAttribute("t-component");node.removeAttribute("t-component");}
const dynamicProps=node.getAttribute("t-props");node.removeAttribute("t-props");const defaultSlotScope=node.getAttribute("t-slot-scope");node.removeAttribute("t-slot-scope");let on=null;let props=null;for(let name of node.getAttributeNames()){const value=node.getAttribute(name);if(name.startsWith("t-")){if(name.startsWith("t-on-")){on=on||{};on[name.slice(5)]=value;}
else{const message=directiveErrorMap.get(name.split("-").slice(0,2).join("-"));throw new OwlError(message||`unsupported directive on Component: ${name}`);}}
else{props=props||{};props[name]=value;}}
let slots=null;if(node.hasChildNodes()){const clone=node.cloneNode(true);const slotNodes=Array.from(clone.querySelectorAll("[t-set-slot]"));for(let slotNode of slotNodes){if(slotNode.tagName!=="t"){throw new OwlError(`Directive 't-set-slot' can only be used on <t> nodes (used on a <${slotNode.tagName}>)`);}
const name=slotNode.getAttribute("t-set-slot");let el=slotNode.parentElement;let isInSubComponent=false;while(el&&el!==clone){if(el.hasAttribute("t-component")||el.tagName[0]===el.tagName[0].toUpperCase()){isInSubComponent=true;break;}
el=el.parentElement;}
if(isInSubComponent||!el){continue;}
slotNode.removeAttribute("t-set-slot");slotNode.remove();const slotAst=parseNode(slotNode,ctx);let on=null;let attrs=null;let scope=null;for(let attributeName of slotNode.getAttributeNames()){const value=slotNode.getAttribute(attributeName);if(attributeName==="t-slot-scope"){scope=value;continue;}
else if(attributeName.startsWith("t-on-")){on=on||{};on[attributeName.slice(5)]=value;}
else{attrs=attrs||{};attrs[attributeName]=value;}}
slots=slots||{};slots[name]={content:slotAst,on,attrs,scope};}
const defaultContent=parseChildNodes(clone,ctx);slots=slots||{};if(defaultContent&&!slots.default){slots.default={content:defaultContent,on,attrs:null,scope:defaultSlotScope};}}
return{type:11,name,isDynamic,dynamicProps,props,slots,on};}
function parseTSlot(node,ctx){if(!node.hasAttribute("t-slot")){return null;}
const name=node.getAttribute("t-slot");node.removeAttribute("t-slot");let attrs=null;let on=null;for(let attributeName of node.getAttributeNames()){const value=node.getAttribute(attributeName);if(attributeName.startsWith("t-on-")){on=on||{};on[attributeName.slice(5)]=value;}
else{attrs=attrs||{};attrs[attributeName]=value;}}
return{type:14,name,attrs,on,defaultContent:parseChildNodes(node,ctx),};}
function parseTTranslation(node,ctx){if(node.getAttribute("t-translation")!=="off"){return null;}
node.removeAttribute("t-translation");return{type:16,content:parseNode(node,ctx),};}
function parseTPortal(node,ctx){if(!node.hasAttribute("t-portal")){return null;}
const target=node.getAttribute("t-portal");node.removeAttribute("t-portal");const content=parseNode(node,ctx);if(!content){return{type:0,value:"",};}
return{type:17,target,content,};}
function parseChildren(node,ctx){const children=[];for(let child of node.childNodes){const childAst=parseNode(child,ctx);if(childAst){if(childAst.type===3){children.push(...childAst.content);}
else{children.push(childAst);}}}
return children;}
function parseChildNodes(node,ctx){const children=parseChildren(node,ctx);switch(children.length){case 0:return null;case 1:return children[0];default:return{type:3,content:children};}}
function normalizeTIf(el){let tbranch=el.querySelectorAll("[t-elif], [t-else]");for(let i=0,ilen=tbranch.length;i<ilen;i++){let node=tbranch[i];let prevElem=node.previousElementSibling;let pattr=(name)=>prevElem.getAttribute(name);let nattr=(name)=>+!!node.getAttribute(name);if(prevElem&&(pattr("t-if")||pattr("t-elif"))){if(pattr("t-foreach")){throw new OwlError("t-if cannot stay at the same level as t-foreach when using t-elif or t-else");}
if(["t-if","t-elif","t-else"].map(nattr).reduce(function(a,b){return a+b;})>1){throw new OwlError("Only one conditional branching directive is allowed per node");}
let textNode;while((textNode=node.previousSibling)!==prevElem){if(textNode.nodeValue.trim().length&&textNode.nodeType!==8){throw new OwlError("text is not allowed between branching directives");}
textNode.remove();}}
else{throw new OwlError("t-elif and t-else directives must be preceded by a t-if or t-elif directive");}}}
function normalizeTEscTOut(el){for(const d of["t-esc","t-out"]){const elements=[...el.querySelectorAll(`[${d}]`)].filter((el)=>el.tagName[0]===el.tagName[0].toUpperCase()||el.hasAttribute("t-component"));for(const el of elements){if(el.childNodes.length){throw new OwlError(`Cannot have ${d} on a component that already has content`);}
const value=el.getAttribute(d);el.removeAttribute(d);const t=el.ownerDocument.createElement("t");if(value!=null){t.setAttribute(d,value);}
el.appendChild(t);}}}
function normalizeXML(el){normalizeTIf(el);normalizeTEscTOut(el);}
function compile(template,options={}){const ast=parse(template);const hasSafeContext=template instanceof Node?!(template instanceof Element)||template.querySelector("[t-set], [t-call]")===null:!template.includes("t-set")&&!template.includes("t-call");const codeGenerator=new CodeGenerator(ast,{...options,hasSafeContext});const code=codeGenerator.generateCode();try{return new Function("app, bdom, helpers",code);}
catch(originalError){const{name}=options;const nameStr=name?`template "${name}"`:"anonymous template";const err=new OwlError(`Failed to compile ${nameStr}: ${originalError.message}\n\ngenerated code:\nfunction(app, bdom, helpers) {\n${code}\n}`);err.cause=originalError;throw err;}}
const version="2.3.1";class Scheduler{constructor(){this.tasks=new Set();this.frame=0;this.delayedRenders=[];this.cancelledNodes=new Set();this.requestAnimationFrame=Scheduler.requestAnimationFrame;}
addFiber(fiber){this.tasks.add(fiber.root);}
scheduleDestroy(node){this.cancelledNodes.add(node);if(this.frame===0){this.frame=this.requestAnimationFrame(()=>this.processTasks());}}
flush(){if(this.delayedRenders.length){let renders=this.delayedRenders;this.delayedRenders=[];for(let f of renders){if(f.root&&f.node.status!==3&&f.node.fiber===f){f.render();}}}
if(this.frame===0){this.frame=this.requestAnimationFrame(()=>this.processTasks());}}
processTasks(){this.frame=0;for(let node of this.cancelledNodes){node._destroy();}
this.cancelledNodes.clear();for(let task of this.tasks){this.processFiber(task);}
for(let task of this.tasks){if(task.node.status===3){this.tasks.delete(task);}}}
processFiber(fiber){if(fiber.root!==fiber){this.tasks.delete(fiber);return;}
const hasError=fibersInError.has(fiber);if(hasError&&fiber.counter!==0){this.tasks.delete(fiber);return;}
if(fiber.node.status===3){this.tasks.delete(fiber);return;}
if(fiber.counter===0){if(!hasError){fiber.complete();}
this.tasks.delete(fiber);}}}
Scheduler.requestAnimationFrame=window.requestAnimationFrame.bind(window);let hasBeenLogged=false;const DEV_MSG=()=>{const hash=window.owl?window.owl.__info__.hash:"master";return`Owl is running in 'dev' mode.

This is not suitable for production use.
See https://github.com/odoo/owl/blob/${hash}/doc/reference/app.md#configuration for more information.`;};const apps=new Set();window.__OWL_DEVTOOLS__||(window.__OWL_DEVTOOLS__={apps,Fiber,RootFiber,toRaw,reactive});class App extends TemplateSet{constructor(Root,config={}){super(config);this.scheduler=new Scheduler();this.root=null;this.name=config.name||"";this.Root=Root;apps.add(this);if(config.test){this.dev=true;}
this.warnIfNoStaticProps=config.warnIfNoStaticProps||false;if(this.dev&&!config.test&&!hasBeenLogged){console.info(DEV_MSG());hasBeenLogged=true;}
const env=config.env||{};const descrs=Object.getOwnPropertyDescriptors(env);this.env=Object.freeze(Object.create(Object.getPrototypeOf(env),descrs));this.props=config.props||{};}
mount(target,options){App.validateTarget(target);if(this.dev){validateProps(this.Root,this.props,{__owl__:{app:this}});}
const node=this.makeNode(this.Root,this.props);const prom=this.mountNode(node,target,options);this.root=node;return prom;}
makeNode(Component,props){return new ComponentNode(Component,props,this,null,null);}
mountNode(node,target,options){const promise=new Promise((resolve,reject)=>{let isResolved=false;node.mounted.push(()=>{resolve(node.component);isResolved=true;});let handlers=nodeErrorHandlers.get(node);if(!handlers){handlers=[];nodeErrorHandlers.set(node,handlers);}
handlers.unshift((e)=>{if(!isResolved){reject(e);}
throw e;});});node.mountComponent(target,options);return promise;}
destroy(){if(this.root){this.root.destroy();this.scheduler.processTasks();}
apps.delete(this);}
createComponent(name,isStatic,hasSlotsProp,hasDynamicPropList,propList){const isDynamic=!isStatic;let arePropsDifferent;const hasNoProp=propList.length===0;if(hasSlotsProp){arePropsDifferent=(_1,_2)=>true;}
else if(hasDynamicPropList){arePropsDifferent=function(props1,props2){for(let k in props1){if(props1[k]!==props2[k]){return true;}}
return Object.keys(props1).length!==Object.keys(props2).length;};}
else if(hasNoProp){arePropsDifferent=(_1,_2)=>false;}
else{arePropsDifferent=function(props1,props2){for(let p of propList){if(props1[p]!==props2[p]){return true;}}
return false;};}
const updateAndRender=ComponentNode.prototype.updateAndRender;const initiateRender=ComponentNode.prototype.initiateRender;return(props,key,ctx,parent,C)=>{let children=ctx.children;let node=children[key];if(isDynamic&&node&&node.component.constructor!==C){node=undefined;}
const parentFiber=ctx.fiber;if(node){if(arePropsDifferent(node.props,props)||parentFiber.deep||node.forceNextRender){node.forceNextRender=false;updateAndRender.call(node,props,parentFiber);}}
else{if(isStatic){const components=parent.constructor.components;if(!components){throw new OwlError(`Cannot find the definition of component "${name}", missing static components key in parent`);}
C=components[name];if(!C){throw new OwlError(`Cannot find the definition of component "${name}"`);}
else if(!(C.prototype instanceof Component)){throw new OwlError(`"${name}" is not a Component. It must inherit from the Component class`);}}
node=new ComponentNode(C,props,this,ctx,key);children[key]=node;initiateRender.call(node,new Fiber(node,parentFiber));}
parentFiber.childrenMap[key]=node;return node;};}
handleError(...args){return handleError(...args);}}
App.validateTarget=validateTarget;App.apps=apps;App.version=version;async function mount(C,target,config={}){return new App(C,config).mount(target,config);}
const mainEventHandler=(data,ev,currentTarget)=>{const{data:_data,modifiers}=filterOutModifiersFromData(data);data=_data;let stopped=false;if(modifiers.length){let selfMode=false;const isSelf=ev.target===currentTarget;for(const mod of modifiers){switch(mod){case"self":selfMode=true;if(isSelf){continue;}
else{return stopped;}
case"prevent":if((selfMode&&isSelf)||!selfMode)
ev.preventDefault();continue;case"stop":if((selfMode&&isSelf)||!selfMode)
ev.stopPropagation();stopped=true;continue;}}}
if(Object.hasOwnProperty.call(data,0)){const handler=data[0];if(typeof handler!=="function"){throw new OwlError(`Invalid handler (expected a function, received: '${handler}')`);}
let node=data[1]?data[1].__owl__:null;if(node?node.status===1:true){handler.call(node?node.component:null,ev);}}
return stopped;};function status(component){switch(component.__owl__.status){case 0:return"new";case 2:return"cancelled";case 1:return"mounted";case 3:return"destroyed";}}
function useRef(name){const node=getCurrent();const refs=node.refs;return{get el(){const el=refs[name];return inOwnerDocument(el)?el:null;},};}
function useEnv(){return getCurrent().component.env;}
function extendEnv(currentEnv,extension){const env=Object.create(currentEnv);const descrs=Object.getOwnPropertyDescriptors(extension);return Object.freeze(Object.defineProperties(env,descrs));}
function useSubEnv(envExtension){const node=getCurrent();node.component.env=extendEnv(node.component.env,envExtension);useChildSubEnv(envExtension);}
function useChildSubEnv(envExtension){const node=getCurrent();node.childEnv=extendEnv(node.childEnv,envExtension);}
function useEffect(effect,computeDependencies=()=>[NaN]){let cleanup;let dependencies;onMounted(()=>{dependencies=computeDependencies();cleanup=effect(...dependencies);});onPatched(()=>{const newDeps=computeDependencies();const shouldReapply=newDeps.some((val,i)=>val!==dependencies[i]);if(shouldReapply){dependencies=newDeps;if(cleanup){cleanup();}
cleanup=effect(...dependencies);}});onWillUnmount(()=>cleanup&&cleanup());}
function useExternalListener(target,eventName,handler,eventParams){const node=getCurrent();const boundHandler=handler.bind(node.component);onMounted(()=>target.addEventListener(eventName,boundHandler,eventParams));onWillUnmount(()=>target.removeEventListener(eventName,boundHandler,eventParams));}
config.shouldNormalizeDom=false;config.mainEventHandler=mainEventHandler;const blockDom={config,mount:mount$1,patch,remove,list,multi,text,toggler,createBlock,html,comment,};const __info__={version:App.version,};TemplateSet.prototype._compileTemplate=function _compileTemplate(name,template){return compile(template,{name,dev:this.dev,translateFn:this.translateFn,translatableAttributes:this.translatableAttributes,});};exports.App=App;exports.Component=Component;exports.EventBus=EventBus;exports.OwlError=OwlError;exports.__info__=__info__;exports.batched=batched;exports.blockDom=blockDom;exports.loadFile=loadFile;exports.markRaw=markRaw;exports.markup=markup;exports.mount=mount;exports.onError=onError;exports.onMounted=onMounted;exports.onPatched=onPatched;exports.onRendered=onRendered;exports.onWillDestroy=onWillDestroy;exports.onWillPatch=onWillPatch;exports.onWillRender=onWillRender;exports.onWillStart=onWillStart;exports.onWillUnmount=onWillUnmount;exports.onWillUpdateProps=onWillUpdateProps;exports.reactive=reactive;exports.status=status;exports.toRaw=toRaw;exports.useChildSubEnv=useChildSubEnv;exports.useComponent=useComponent;exports.useEffect=useEffect;exports.useEnv=useEnv;exports.useExternalListener=useExternalListener;exports.useRef=useRef;exports.useState=useState;exports.useSubEnv=useSubEnv;exports.validate=validate;exports.validateType=validateType;exports.whenReady=whenReady;exports.xml=xml;Object.defineProperty(exports,'__esModule',{value:true});__info__.date='2024-08-14T14:25:23.038Z';__info__.hash='9c2d957';__info__.url='https://github.com/odoo/owl';})(this.owl=this.owl||{});;

/* /web/static/lib/owl/odoo_module.js */
odoo.define("@odoo/owl",[],function(){"use strict";return owl;});;

/* /web/static/src/env.js */
odoo.define('@web/env',['@web/core/registry','@web/core/assets','@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{templates}=require("@web/core/assets");const{App,EventBus}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");__exports.makeEnv=makeEnv;function makeEnv(){return{bus:new EventBus(),services:{},debug:odoo.debug,get isSmall(){throw new Error("UI service not initialized!");},};}
const serviceRegistry=registry.category("services");const SERVICES_METADATA=__exports.SERVICES_METADATA={};let startServicesPromise=null;__exports.startServices=startServices;async function startServices(env){await Promise.resolve();const toStart=new Set();serviceRegistry.addEventListener("UPDATE",async(ev)=>{await Promise.resolve();const{operation,key:name,value:service}=ev.detail;if(operation==="delete"){return;}
if(toStart.size){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}else{await _startServices(env,toStart);}});await _startServices(env,toStart);}
async function _startServices(env,toStart){if(startServicesPromise){return startServicesPromise.then(()=>_startServices(env,toStart));}
const services=env.services;for(const[name,service]of serviceRegistry.getEntries()){if(!(name in services)){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}}
async function start(){let service=null;const proms=[];while((service=findNext())){const name=service.name;toStart.delete(service);const entries=(service.dependencies||[]).map((dep)=>[dep,services[dep]]);const dependencies=Object.fromEntries(entries);let value;try{value=service.start(env,dependencies);}catch(e){value=e;console.error(e);}
if("async"in service){SERVICES_METADATA[name]=service.async;}
if(value instanceof Promise){proms.push(new Promise((resolve)=>{value.then((val)=>{services[name]=val||null;}).catch((error)=>{services[name]=error;console.error("Can't load service '"+name+"' because:",error);}).finally(resolve);}));}else{services[service.name]=value||null;}}
await Promise.all(proms);if(proms.length){return start();}}
startServicesPromise=start();await startServicesPromise;startServicesPromise=null;if(toStart.size){const names=[...toStart].map((s)=>s.name);const missingDeps=new Set();[...toStart].forEach((s)=>s.dependencies.forEach((dep)=>{if(!(dep in services)&&!names.includes(dep)){missingDeps.add(dep);}}));const depNames=[...missingDeps].join(", ");throw new Error(`Some services could not be started: ${names}. Missing dependencies: ${depNames}`);}
function findNext(){for(const s of toStart){if(s.dependencies){if(s.dependencies.every((d)=>d in services)){return s;}}else{return s;}}
return null;}}
__exports.mountComponent=mountComponent;async function mountComponent(component,target,appConfig={}){let{env}=appConfig;const isRoot=!env;if(isRoot){env=await makeEnv();await startServices(env);}
const app=new App(component,{env,templates,dev:env.debug,warnIfNoStaticProps:true,name:component.constructor.name,translatableAttributes:["data-tooltip"],translateFn:_t,...appConfig,});const root=await app.mount(target);if(isRoot){odoo.__WOWL_DEBUG__={root};}
return app;}
return __exports;});;

/* /web/static/src/session.js */
odoo.define('@web/session',[],function(require){'use strict';let __exports={};const session=__exports.session=odoo.__session_info__||{};delete odoo.__session_info__;return __exports;});;

/* /web/static/src/core/action_swiper/action_swiper.js */
odoo.define('@web/core/action_swiper/action_swiper',['@web/core/browser/browser','@web/core/l10n/localization','@web/core/utils/numbers','@odoo/owl','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{clamp}=require("@web/core/utils/numbers");const{Component,onMounted,onWillUnmount,useRef,useState}=require("@odoo/owl");const{Deferred}=require("@web/core/utils/concurrency");const isScrollSwipable=(scrollables)=>{return{left:!scrollables.filter((e)=>e.scrollLeft!==0).length,right:!scrollables.filter((e)=>e.scrollLeft+Math.round(e.getBoundingClientRect().width)!==e.scrollWidth).length,};};const ActionSwiper=__exports.ActionSwiper=class ActionSwiper extends Component{setup(){this.actionTimeoutId=null;this.resetTimeoutId=null;this.defaultState={containerStyle:"",isSwiping:false,width:undefined,};this.root=useRef("root");this.targetContainer=useRef("targetContainer");this.state=useState({...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;onMounted(()=>{if(this.targetContainer.el){this.state.width=this.targetContainer.el.getBoundingClientRect().width;}
if(this.props.onLeftSwipe||this.props.onRightSwipe){const classes=new Set(this.root.el.classList);classes.delete("o_actionswiper");for(const className of classes){this.targetContainer.el.firstChild.classList.add(className);this.root.el.classList.remove(className);}}});onWillUnmount(()=>{browser.clearTimeout(this.actionTimeoutId);browser.clearTimeout(this.resetTimeoutId);});}
get localizedProps(){return{onLeftSwipe:localization.direction==="rtl"?this.props.onRightSwipe:this.props.onLeftSwipe,onRightSwipe:localization.direction==="rtl"?this.props.onLeftSwipe:this.props.onRightSwipe,};}
_onTouchEndSwipe(){if(this.state.isSwiping){this.state.isSwiping=false;if(this.localizedProps.onRightSwipe&&this.swipedDistance>this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=this.state.width;this.handleSwipe(this.localizedProps.onRightSwipe.action);}else if(this.localizedProps.onLeftSwipe&&this.swipedDistance<-this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=-this.state.width;this.handleSwipe(this.localizedProps.onLeftSwipe.action);}else{this.state.containerStyle="";}}}
_onTouchMoveSwipe(ev){if(this.state.isSwiping){if(this.props.swipeInvalid&&this.props.swipeInvalid()){this.state.isSwiping=false;return;}
const{onLeftSwipe,onRightSwipe}=this.localizedProps;this.swipedDistance=clamp(ev.touches[0].clientX-this.startX,onLeftSwipe?-this.state.width:0,onRightSwipe?this.state.width:0);if(Math.abs(this.swipedDistance)>40){ev.preventDefault();}
if(!this.isScrollValidated&&this.scrollables&&!isScrollSwipable(this.scrollables)[this.swipedDistance>0?"left":"right"]){return this._reset();}
this.isScrollValidated=true;if(this.props.animationOnMove){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;}}}
_onTouchStartSwipe(ev){this.scrollables=ev.composedPath().filter((e)=>e.nodeType===1&&this.targetContainer.el.contains(e)&&e.scrollWidth>e.getBoundingClientRect().width&&["auto","scroll"].includes(window.getComputedStyle(e)["overflow-x"]));if(!this.state.width){this.state.width=this.targetContainer&&this.targetContainer.el.getBoundingClientRect().width;}
this.state.isSwiping=true;this.isScrollValidated=false;this.startX=ev.touches[0].clientX;}
_reset(){Object.assign(this.state,{...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;}
handleSwipe(action){if(this.props.animationType==="bounce"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(async()=>{await action(Promise.resolve());this._reset();},500);}else if(this.props.animationType==="forwards"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(async()=>{const prom=new Deferred();await action(prom);this.state.isSwiping=true;this.state.containerStyle=`transform: translateX(${-this.swipedDistance}px)`;this.resetTimeoutId=browser.setTimeout(()=>{prom.resolve();this._reset();},100);},100);}else{return action(Promise.resolve());}}}
ActionSwiper.props={onLeftSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},onRightSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},slots:Object,animationOnMove:{type:Boolean,optional:true},animationType:{type:String,optional:true},swipeDistanceRatio:{type:Number,optional:true},swipeInvalid:{type:Function,optional:true},};ActionSwiper.defaultProps={onLeftSwipe:undefined,onRightSwipe:undefined,animationOnMove:true,animationType:"bounce",swipeDistanceRatio:2,};ActionSwiper.template="web.ActionSwiper";return __exports;});;

/* /web/static/src/core/assets.js */
odoo.define('@web/core/assets',['@web/core/utils/functions','@web/core/browser/browser','@web/core/registry','@web/session','@odoo/owl'],function(require){'use strict';let __exports={};const{memoize}=require("@web/core/utils/functions");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{Component,xml,onWillStart,App}=require("@odoo/owl");const assets=__exports.assets={retries:{count:3,delay:5000,extraDelay:2500,},};class AssetsLoadingError extends Error{}
assets.loadJS=memoize(function loadJS(url){if(document.querySelector(`script[src="${url}"]`)){return Promise.resolve();}
const scriptEl=document.createElement("script");scriptEl.type="text/javascript";scriptEl.src=url;document.head.appendChild(scriptEl);return new Promise((resolve,reject)=>{scriptEl.addEventListener("load",()=>resolve(true));scriptEl.addEventListener("error",()=>{reject(new AssetsLoadingError(`The loading of ${url} failed`));});});});assets.loadCSS=memoize(function loadCSS(url,retryCount=0){if(document.querySelector(`link[href="${url}"]`)){return Promise.resolve();}
const linkEl=document.createElement("link");linkEl.type="text/css";linkEl.rel="stylesheet";linkEl.href=url;const promise=new Promise((resolve,reject)=>{linkEl.addEventListener("load",()=>resolve(true));linkEl.addEventListener("error",async()=>{if(retryCount<assets.retries.count){await new Promise((resolve)=>setTimeout(resolve,assets.retries.delay+assets.retries.extraDelay*retryCount));linkEl.remove();loadCSS(url,retryCount+1).then(resolve).catch(reject);}else{reject(new AssetsLoadingError(`The loading of ${url} failed`));}});});document.head.appendChild(linkEl);return promise;});assets.getBundle=memoize(async function getBundle(bundleName){const url=new URL(`/web/bundle/${bundleName}`,location.origin);for(const[key,value]of Object.entries(session.bundle_params||{})){url.searchParams.set(key,value);}
const response=await browser.fetch(url.href);const json=await response.json();const assets={cssLibs:[],cssContents:[],jsLibs:[],jsContents:[],};for(const key in json){const file=json[key];if(file.type==="link"){assets.cssLibs.push(file.src);}else if(file.type==="style"){assets.cssContents.push(file.content);}else{if(file.src){assets.jsLibs.push(file.src);}else{assets.jsContents.push(file.content);}}}
return assets;});assets.loadBundle=async function loadBundle(desc){if(typeof desc==="string"){desc=await assets.getBundle(desc);}
const promiseCSS=Promise.all((desc.cssLibs||[]).map(assets.loadCSS)).then(()=>{if(desc.cssContents&&desc.cssContents.length){const style=document.createElement("style");style.textContent=desc.cssContents.join("\n");document.head.appendChild(style);}});for(const urlData of desc.jsLibs||[]){if(typeof urlData==="string"){await assets.loadJS(urlData);}else{await Promise.all(urlData.map(loadJS));}}
if(desc.jsContents&&desc.jsContents.length){const script=document.createElement("script");script.type="text/javascript";script.textContent=desc.jsContents.join("\n");document.head.appendChild(script);}
await promiseCSS;for(const bundleName of desc.assetLibs||[]){if(typeof bundleName==="string"){await assets.loadBundle(bundleName);}else{await Promise.all(bundleName.map(async(bundleName)=>{return assets.loadBundle(bundleName);}));}}
odoo.loader.checkAndReportErrors();};const loadJS=__exports.loadJS=function(url){return assets.loadJS(url);};const loadCSS=__exports.loadCSS=function(url){return assets.loadCSS(url);};const getBundle=__exports.getBundle=function(bundleName){return assets.getBundle(bundleName);};const loadBundle=__exports.loadBundle=function(desc){return assets.loadBundle(desc);};const templates=__exports.templates=new DOMParser().parseFromString("<odoo/>","text/xml");registry.category("xml_templates").addEventListener("UPDATE",(ev)=>{const{operation,value}=ev.detail;if(operation==="add"){const doc=new DOMParser().parseFromString(value,"text/xml");if(doc.querySelector("parsererror")){let strError="";const nodes=doc.querySelectorAll("parsererror");for(const node of nodes){strError+=node.textContent.trim()+"\n";}
throw new Error(strError);}
for(const element of doc.querySelectorAll("templates > [t-name]")){templates.documentElement.appendChild(element);}
for(const app of App.apps){app.addTemplates(templates,app);}}});const LazyComponent=__exports.LazyComponent=class LazyComponent extends Component{setup(){onWillStart(async()=>{await loadBundle(this.props.bundle);this.Component=registry.category("lazy_components").get(this.props.Component);});}}
LazyComponent.template=xml`<t t-component="Component" t-props="props.props"/>`;LazyComponent.props={Component:String,bundle:String,props:{type:Object,optional:true},};return __exports;});;

/* /web/static/src/core/autocomplete/autocomplete.js */
odoo.define('@web/core/autocomplete/autocomplete',['@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/timing','@web/core/hotkeys/hotkey_service','@web/core/position_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{Deferred}=require("@web/core/utils/concurrency");const{useAutofocus,useForwardRefToParent,useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{usePosition}=require("@web/core/position_hook");const{Component,onWillUpdateProps,useExternalListener,useRef,useState}=require("@odoo/owl");const AutoComplete=__exports.AutoComplete=class AutoComplete extends Component{setup(){this.nextSourceId=0;this.nextOptionId=0;this.sources=[];this.inEdition=false;this.state=useState({navigationRev:0,optionsRev:0,open:false,activeSourceOption:null,value:this.props.value,});this.inputRef=useForwardRefToParent("input");if(this.props.autofocus){useAutofocus({refName:"input"});}
this.root=useRef("root");this.debouncedProcessInput=useDebounced(async()=>{const currentPromise=this.pendingPromise;this.pendingPromise=null;this.props.onInput({inputValue:this.inputRef.el.value,});try{await this.open(true);currentPromise.resolve();}catch{currentPromise.reject();}finally{if(currentPromise===this.loadingPromise){this.loadingPromise=null;}}},this.constructor.timeout);useExternalListener(window,"scroll",this.externalClose,true);useExternalListener(window,"pointerdown",this.externalClose,true);this.hotkey=useService("hotkey");this.hotkeysToRemove=[];onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value||this.forceValFromProp){this.forceValFromProp=false;if(!this.inEdition){this.state.value=nextProps.value;this.inputRef.el.value=nextProps.value;}
this.close();}});if(this.props.dropdown){usePosition("sourcesList",()=>this.targetDropdown,this.dropdownOptions);}else{this.open(false);}}
get targetDropdown(){return this.inputRef.el;}
get activeSourceOptionId(){if(!this.isOpened||!this.state.activeSourceOption){return undefined;}
const[sourceIndex,optionIndex]=this.state.activeSourceOption;const source=this.sources[sourceIndex];return`${this.props.id || "autocomplete"}_${sourceIndex}_${source.isLoading ? "loading" : optionIndex}`;}
get dropdownOptions(){return{position:"bottom-start",};}
get isOpened(){return this.state.open;}
get hasOptions(){for(const source of this.sources){if(source.isLoading||source.options.length){return true;}}
return false;}
open(useInput=false){this.state.open=true;return this.loadSources(useInput);}
close(){this.state.open=false;this.state.activeSourceOption=null;}
cancel(){if(this.inputRef.el.value.length){if(this.props.autoSelect){this.inputRef.el.value=this.props.value;this.props.onCancel();}}
this.close();}
async loadSources(useInput){this.sources=[];this.state.activeSourceOption=null;const proms=[];for(const pSource of this.props.sources){const source=this.makeSource(pSource);this.sources.push(source);const options=this.loadOptions(pSource.options,useInput?this.inputRef.el.value.trim():"");if(options instanceof Promise){source.isLoading=true;const prom=options.then((options)=>{source.options=options.map((option)=>this.makeOption(option));source.isLoading=false;this.state.optionsRev++;});proms.push(prom);}else{source.options=options.map((option)=>this.makeOption(option));}}
await Promise.all(proms);this.navigate(0);}
get displayOptions(){return!this.props.dropdown||(this.isOpened&&this.hasOptions);}
loadOptions(options,request){if(typeof options==="function"){return options(request);}else{return options;}}
makeOption(option){return Object.assign(Object.create(option),{id:++this.nextOptionId,});}
makeSource(source){return{id:++this.nextSourceId,options:[],isLoading:false,placeholder:source.placeholder,optionTemplate:source.optionTemplate,};}
isActiveSourceOption([sourceIndex,optionIndex]){return(this.state.activeSourceOption&&this.state.activeSourceOption[0]===sourceIndex&&this.state.activeSourceOption[1]===optionIndex);}
selectOption(indices,params={}){const option=this.sources[indices[0]].options[indices[1]];this.inEdition=false;if(option.unselectable){this.inputRef.el.value="";this.close();return;}
if(this.props.resetOnSelect){this.inputRef.el.value="";}
this.forceValFromProp=true;this.props.onSelect(option,{...params,input:this.inputRef.el,});this.close();}
navigate(direction){let step=Math.sign(direction);if(!step){this.state.activeSourceOption=null;step=1;}else{this.state.navigationRev++;}
if(this.state.activeSourceOption){let[sourceIndex,optionIndex]=this.state.activeSourceOption;let source=this.sources[sourceIndex];optionIndex+=step;if(0>optionIndex||optionIndex>=source.options.length){sourceIndex+=step;source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){optionIndex=step<0?source.options.length-1:0;}}
this.state.activeSourceOption=source?[sourceIndex,optionIndex]:null;}else{let sourceIndex=step<0?this.sources.length-1:0;let source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){const optionIndex=step<0?source.options.length-1:0;if(optionIndex<source.options.length){this.state.activeSourceOption=[sourceIndex,optionIndex];}}}}
onInputBlur(){if(this.ignoreBlur){this.ignoreBlur=false;return;}
this.props.onBlur({inputValue:this.inputRef.el.value,});this.inEdition=false;}
onInputClick(){if(!this.isOpened){this.open(this.inputRef.el.value.trim()!==this.props.value);}else{this.close();}}
onInputChange(ev){if(this.ignoreBlur){ev.stopImmediatePropagation();}
this.props.onChange({inputValue:this.inputRef.el.value,});}
async onInput(){this.inEdition=true;this.pendingPromise=this.pendingPromise||new Deferred();this.loadingPromise=this.pendingPromise;this.debouncedProcessInput();}
onInputFocus(ev){this.inputRef.el.setSelectionRange(0,this.inputRef.el.value.length);this.props.onFocus(ev);}
get autoCompleteRootClass(){let classList="";if(this.props.class){classList+=this.props.class;}
if(this.props.dropdown){classList+=" dropdown";}
return classList;}
get ulDropdownClass(){let classList="";if(this.props.dropdown){classList+=" dropdown-menu ui-autocomplete";}else{classList+=" list-group";}
return classList;}
async onInputKeydown(ev){const hotkey=getActiveHotkey(ev);const isSelectKey=hotkey==="enter"||hotkey==="tab";if(this.loadingPromise&&isSelectKey){if(hotkey==="enter"){ev.stopPropagation();ev.preventDefault();}
await this.loadingPromise;}
switch(hotkey){case"enter":if(!this.isOpened||!this.state.activeSourceOption){return;}
this.selectOption(this.state.activeSourceOption);break;case"escape":if(!this.isOpened){return;}
this.cancel();break;case"tab":if(!this.isOpened){return;}
if(this.props.autoSelect&&this.state.activeSourceOption&&(this.state.navigationRev>0||this.inputRef.el.value.length>0)){this.selectOption(this.state.activeSourceOption);}
this.close();return;case"arrowup":this.navigate(-1);if(!this.isOpened){this.open(true);}
break;case"arrowdown":this.navigate(+1);if(!this.isOpened){this.open(true);}
break;default:return;}
ev.stopPropagation();ev.preventDefault();}
onOptionMouseEnter(indices){this.state.activeSourceOption=indices;}
onOptionMouseLeave(){this.state.activeSourceOption=null;}
onOptionClick(indices){this.selectOption(indices);this.inputRef.el.focus();}
externalClose(ev){if(this.isOpened&&!this.root.el.contains(ev.target)){this.cancel();}}}
Object.assign(AutoComplete,{template:"web.AutoComplete",props:{value:{type:String,optional:true},id:{type:String,optional:true},onSelect:{type:Function},sources:{type:Array,element:{type:Object,shape:{placeholder:{type:String,optional:true},optionTemplate:{type:String,optional:true},options:[Array,Function],},},},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},resetOnSelect:{type:Boolean,optional:true},onCancel:{type:Function,optional:true},onInput:{type:Function,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},onFocus:{type:Function,optional:true},input:{type:Function,optional:true},dropdown:{type:Boolean,optional:true},autofocus:{type:Boolean,optional:true},class:{type:String,optional:true},},defaultProps:{value:"",placeholder:"",autoSelect:false,dropdown:true,onCancel:()=>{},onInput:()=>{},onChange:()=>{},onBlur:()=>{},onFocus:()=>{},},timeout:250,});return __exports;});;

/* /web/static/src/core/browser/browser.js */
odoo.define('@web/core/browser/browser',[],function(require){'use strict';let __exports={};let sessionStorage=window.sessionStorage;let localStorage=window.localStorage;try{localStorage.setItem("__localStorage__","true");localStorage.removeItem("__localStorage__");}catch{localStorage=makeRAMLocalStorage();sessionStorage=makeRAMLocalStorage();}
const browser=__exports.browser={addEventListener:window.addEventListener.bind(window),dispatchEvent:window.dispatchEvent.bind(window),AnalyserNode:window.AnalyserNode,Audio:window.Audio,AudioBufferSourceNode:window.AudioBufferSourceNode,AudioContext:window.AudioContext,AudioWorkletNode:window.AudioWorkletNode,BeforeInstallPromptEvent:window.BeforeInstallPromptEvent?.bind(window),GainNode:window.GainNode,MediaStreamAudioSourceNode:window.MediaStreamAudioSourceNode,removeEventListener:window.removeEventListener.bind(window),setTimeout:window.setTimeout.bind(window),clearTimeout:window.clearTimeout.bind(window),setInterval:window.setInterval.bind(window),clearInterval:window.clearInterval.bind(window),performance:window.performance,requestAnimationFrame:window.requestAnimationFrame.bind(window),cancelAnimationFrame:window.cancelAnimationFrame.bind(window),console:window.console,history:window.history,matchMedia:window.matchMedia.bind(window),navigator,Notification:window.Notification,open:window.open.bind(window),SharedWorker:window.SharedWorker,Worker:window.Worker,XMLHttpRequest:window.XMLHttpRequest,localStorage,sessionStorage,fetch:window.fetch.bind(window),innerHeight:window.innerHeight,innerWidth:window.innerWidth,ontouchstart:window.ontouchstart,BroadcastChannel:window.BroadcastChannel,};Object.defineProperty(browser,"location",{set(val){window.location=val;},get(){return window.location;},configurable:true,});Object.defineProperty(browser,"innerHeight",{get:()=>window.innerHeight,configurable:true,});Object.defineProperty(browser,"innerWidth",{get:()=>window.innerWidth,configurable:true,});__exports.makeRAMLocalStorage=makeRAMLocalStorage;function makeRAMLocalStorage(){let store={};return{setItem(key,value){const newValue=String(value);store[key]=newValue;window.dispatchEvent(new StorageEvent("storage",{key,newValue}));},getItem(key){return store[key];},clear(){store={};},removeItem(key){delete store[key];window.dispatchEvent(new StorageEvent("storage",{key,newValue:null}));},get length(){return Object.keys(store).length;},key(){return"";},};}
return __exports;});;

/* /web/static/src/core/browser/cookie.js */
odoo.define('@web/core/browser/cookie',[],function(require){'use strict';let __exports={};const COOKIE_TTL=24*60*60*365;const cookie=__exports.cookie={get _cookieMonster(){return document.cookie;},set _cookieMonster(value){document.cookie=value;},get(str){const parts=this._cookieMonster.split("; ");for(const part of parts){const[key,value]=part.split(/=(.*)/);if(key===str){return value||"";}}},set(key,value,ttl=COOKIE_TTL){let fullCookie=[];if(value!==undefined){fullCookie.push(`${key}=${value}`);}
fullCookie=fullCookie.concat(["path=/",`max-age=${ttl}`]);this._cookieMonster=fullCookie.join("; ");},delete(key){this.set(key,"kill",0);},};return __exports;});;

/* /web/static/src/core/browser/feature_detection.js */
odoo.define('@web/core/browser/feature_detection',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.isBrowserChrome=isBrowserChrome;function isBrowserChrome(){return/Chrome/i.test(browser.navigator.userAgent);}
__exports.isBrowserFirefox=isBrowserFirefox;function isBrowserFirefox(){return/Firefox/i.test(browser.navigator.userAgent);}
__exports.isBrowserSafari=isBrowserSafari;function isBrowserSafari(){return!isBrowserChrome()&&browser.navigator.userAgent.includes("Safari");}
__exports.isAndroid=isAndroid;function isAndroid(){return/Android/i.test(browser.navigator.userAgent);}
__exports.isIOS=isIOS;function isIOS(){return(/(iPad|iPhone|iPod)/i.test(browser.navigator.userAgent)||(browser.navigator.platform==="MacIntel"&&maxTouchPoints()>1));}
__exports.isOtherMobileOS=isOtherMobileOS;function isOtherMobileOS(){return/(webOS|BlackBerry|Windows Phone)/i.test(browser.navigator.userAgent);}
__exports.isMacOS=isMacOS;function isMacOS(){return/Mac/i.test(browser.navigator.userAgent);}
__exports.isMobileOS=isMobileOS;function isMobileOS(){return isAndroid()||isIOS()||isOtherMobileOS();}
__exports.isIosApp=isIosApp;function isIosApp(){return/OdooMobile \(iOS\)/i.test(browser.navigator.userAgent);}
__exports.isAndroidApp=isAndroidApp;function isAndroidApp(){return/OdooMobile.+Android/i.test(browser.navigator.userAgent);}
__exports.isDisplayStandalone=isDisplayStandalone;function isDisplayStandalone(){return browser.matchMedia("(display-mode: standalone)").matches;}
__exports.hasTouch=hasTouch;function hasTouch(){return browser.ontouchstart!==undefined||browser.matchMedia("(pointer:coarse)").matches;}
__exports.maxTouchPoints=maxTouchPoints;function maxTouchPoints(){return browser.navigator.maxTouchPoints||1;}
return __exports;});;

/* /web/static/src/core/browser/router_service.js */
odoo.define('@web/core/browser/router_service',['@web/core/registry','@web/core/utils/objects','@web/core/utils/urls','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{shallowEqual}=require("@web/core/utils/objects");const{objectToUrlEncodedString}=require("@web/core/utils/urls");const{browser}=require("@web/core/browser/browser");function cast(value){return!value||isNaN(value)?value:Number(value);}
function parseString(str){const parts=str.split("&");const result={};for(const part of parts){const[key,value]=part.split("=");const decoded=decodeURIComponent(value||"");result[key]=cast(decoded);}
return result;}
function applyLocking(lockedKeys,hash,currentHash,options={}){const newHash={};for(const key in hash){if("lock"in options){options.lock?lockedKeys.add(key):lockedKeys.delete(key);}else if(lockedKeys.has(key)){continue;}
newHash[key]=hash[key];}
for(const key in currentHash){if(lockedKeys.has(key)&&!(key in newHash)){newHash[key]=currentHash[key];}}
return newHash;}
function computeNewRoute(hash,replace,currentRoute){if(!replace){hash=Object.assign({},currentRoute.hash,hash);}
hash=sanitizeHash(hash);if(!shallowEqual(currentRoute.hash,hash)){return Object.assign({},currentRoute,{hash});}
return false;}
function sanitizeHash(hash){return Object.fromEntries(Object.entries(hash).filter(([,v])=>v!==undefined).map(([k,v])=>[k,cast(v)]));}
__exports.parseHash=parseHash;function parseHash(hash){return hash&&hash!=="#"?parseString(hash.slice(1)):{};}
__exports.parseSearchQuery=parseSearchQuery;function parseSearchQuery(search){return search?parseString(search.slice(1)):{};}
__exports.routeToUrl=routeToUrl;function routeToUrl(route){const search=objectToUrlEncodedString(route.search);const hash=objectToUrlEncodedString(route.hash);return route.pathname+(search?"?"+search:"")+(hash?"#"+hash:"");}
function getRoute(urlObj){const{pathname,search,hash}=urlObj;const searchQuery=parseSearchQuery(search);const hashQuery=parseHash(hash);return{pathname,search:searchQuery,hash:hashQuery};}
function makeRouter(env){const bus=env.bus;const lockedKeys=new Set();let current=getRoute(browser.location);let pushTimeout;browser.addEventListener("hashchange",(ev)=>{browser.clearTimeout(pushTimeout);const loc=new URL(ev.newURL);current=getRoute(loc);bus.trigger("ROUTE_CHANGE");});function makeDebouncedPush(mode){let allPushArgs=[];function doPush(){const replace=allPushArgs.some(([,options])=>options&&options.replace);const newHash=allPushArgs.reduce((finalHash,[hash,options])=>{hash=applyLocking(lockedKeys,hash,current.hash,options);if(finalHash){hash=applyLocking(lockedKeys,hash,finalHash,options);}
return Object.assign(finalHash||{},hash);},null);const newRoute=computeNewRoute(newHash,replace,current);if(!newRoute){return;}
const url=browser.location.origin+routeToUrl(newRoute);if(mode==="push"){browser.history.pushState({},"",url);}else{browser.history.replaceState({},"",url);}
current=getRoute(browser.location);}
return function pushOrReplaceState(hash,options){allPushArgs.push([hash,options]);browser.clearTimeout(pushTimeout);pushTimeout=browser.setTimeout(()=>{doPush();pushTimeout=null;allPushArgs=[];});};}
return{get current(){return current;},pushState:makeDebouncedPush("push"),replaceState:makeDebouncedPush("replace"),cancelPushes:()=>browser.clearTimeout(pushTimeout),};}
const routerService=__exports.routerService={start(env){return makeRouter(env);},};__exports.objectToQuery=objectToQuery;function objectToQuery(obj){const query={};Object.entries(obj).forEach(([k,v])=>{query[k]=v?String(v):v;});return query;}
registry.category("services").add("router",routerService);return __exports;});;

/* /web/static/src/core/browser/title_service.js */
odoo.define('@web/core/browser/title_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const titleService=__exports.titleService={start(){const titleParts={};function getParts(){return Object.assign({},titleParts);}
function setParts(parts){for(const key in parts){const val=parts[key];if(!val){delete titleParts[key];}else{titleParts[key]=val;}}
document.title=Object.values(titleParts).join(" - ");}
return{get current(){return document.title;},getParts,setParts,};},};registry.category("services").add("title",titleService);return __exports;});;

/* /web/static/src/core/checkbox/checkbox.js */
odoo.define('@web/core/checkbox/checkbox',['@web/core/hotkeys/hotkey_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{Component,useRef}=require("@odoo/owl");const CheckBox=__exports.CheckBox=class CheckBox extends Component{setup(){this.id=`checkbox-comp-${CheckBox.nextId++}`;this.rootRef=useRef("root");useHotkey("Enter",({area})=>{const oldValue=area.querySelector("input").checked;this.props.onChange(!oldValue);},{area:()=>this.rootRef.el,bypassEditableProtection:true});}
onClick(ev){if(ev.composedPath().find((el)=>["INPUT","LABEL"].includes(el.tagName))){ev.stopPropagation();return;}
const input=this.rootRef.el.querySelector("input");input.focus();if(!this.props.disabled){ev.stopPropagation();input.checked=!input.checked;this.props.onChange(input.checked);}}
onChange(ev){if(!this.props.disabled){this.props.onChange(ev.target.checked);}}}
CheckBox.template="web.CheckBox";CheckBox.nextId=1;CheckBox.defaultProps={onChange:()=>{},};CheckBox.props={id:{type:true,optional:true,},disabled:{type:Boolean,optional:true,},value:{type:Boolean,optional:true,},slots:{type:Object,optional:true,},onChange:{type:Function,optional:true,},className:{type:String,optional:true,},name:{type:String,optional:true,},};return __exports;});;

/* /web/static/src/core/code_editor/code_editor.js */
odoo.define('@web/core/code_editor/code_editor',['@odoo/owl','@web/core/assets','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,onWillDestroy,onWillStart,useEffect,useRef}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{useDebounced}=require("@web/core/utils/timing");function onResized(ref,callback){const _ref=typeof ref==="string"?useRef(ref):ref;const resizeObserver=new ResizeObserver(callback);useEffect((el)=>{if(el){resizeObserver.observe(el);return()=>resizeObserver.unobserve(el);}},()=>[_ref.el]);onWillDestroy(()=>{resizeObserver.disconnect();});}
const CodeEditor=__exports.CodeEditor=class CodeEditor extends Component{static template="web.CodeEditor";static components={};static props={mode:{type:String,optional:true,validate:(mode)=>CodeEditor.MODES.includes(mode),},value:{validate:(v)=>typeof v==="string",optional:true},readonly:{type:Boolean,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},class:{type:String,optional:true},theme:{type:String,optional:true,validate:(theme)=>CodeEditor.THEMES.includes(theme),},maxLines:{type:Number,optional:true},sessionId:{type:[Number,String],optional:true},};static defaultProps={readonly:false,value:"",onChange:()=>{},class:"",theme:"",sessionId:1,};static MODES=["js","xml","qweb","scss","python"];static THEMES=["","monokai"];setup(){this.editorRef=useRef("editorRef");onWillStart(async()=>await loadBundle("web.ace_lib"));const sessions={};let ignoredAceChange=false;useEffect((el)=>{if(!el){return;}
const aceEditor=window.ace.edit(el);this.aceEditor=aceEditor;this.aceEditor.setOptions({maxLines:this.props.maxLines,showPrintMargin:false,useWorker:false,});this.aceEditor.$blockScrolling=true;const session=aceEditor.getSession();if(!sessions[this.props.sessionId]){sessions[this.props.sessionId]=session;}
session.setValue(this.props.value);session.on("change",()=>{if(this.props.onChange&&!ignoredAceChange){this.props.onChange(this.aceEditor.getValue());}});this.aceEditor.on("blur",()=>{if(this.props.onBlur){this.props.onBlur();}});return()=>{aceEditor.destroy();};},()=>[this.editorRef.el]);useEffect((theme)=>this.aceEditor.setTheme(theme?`ace/theme/${theme}`:""),()=>[this.props.theme]);useEffect((readonly)=>{this.aceEditor.setOptions({readOnly:readonly,highlightActiveLine:!readonly,highlightGutterLine:!readonly,});this.aceEditor.renderer.setOptions({displayIndentGuides:!readonly,showGutter:!readonly,});this.aceEditor.renderer.$cursorLayer.element.style.display=readonly?"none":"block";},()=>[this.props.readonly]);useEffect((sessionId,mode,value)=>{let session=sessions[sessionId];if(session){if(session.getValue()!==value){ignoredAceChange=true;session.setValue(value);ignoredAceChange=false;}}else{session=new window.ace.EditSession(value);session.setUndoManager(new window.ace.UndoManager());session.setOptions({useWorker:false,tabSize:2,useSoftTabs:true,});session.on("change",()=>{if(this.props.onChange&&!ignoredAceChange){this.props.onChange(this.aceEditor.getValue());}});sessions[sessionId]=session;}
session.setMode(mode?`ace/mode/${mode}`:"");this.aceEditor.setSession(session);},()=>[this.props.sessionId,this.props.mode,this.props.value]);const debouncedResize=useDebounced(()=>{if(this.aceEditor){this.aceEditor.resize();}},250);onResized(this.editorRef,debouncedResize);}}
return __exports;});;

/* /web/static/src/core/colorlist/colorlist.js */
odoo.define('@web/core/colorlist/colorlist',['@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef,useState,useExternalListener}=require("@odoo/owl");const ColorList=__exports.ColorList=class ColorList extends Component{setup(){this.colorlistRef=useRef("colorlist");this.state=useState({isExpanded:this.props.isExpanded});useExternalListener(window,"click",this.onOutsideClick);}
get colors(){return this.constructor.COLORS;}
onColorSelected(id){this.props.onColorSelected(id);if(!this.props.forceExpanded){this.state.isExpanded=false;}}
onOutsideClick(ev){if(this.colorlistRef.el.contains(ev.target)||this.props.forceExpanded){return;}
this.state.isExpanded=false;}
onToggle(ev){if(this.props.canToggle){ev.preventDefault();ev.stopPropagation();this.state.isExpanded=!this.state.isExpanded;this.colorlistRef.el.firstElementChild.focus();}}}
ColorList.COLORS=[_t("No color"),_t("Red"),_t("Orange"),_t("Yellow"),_t("Cyan"),_t("Purple"),_t("Almond"),_t("Teal"),_t("Blue"),_t("Raspberry"),_t("Green"),_t("Violet"),];ColorList.template="web.ColorList";ColorList.defaultProps={forceExpanded:false,isExpanded:false,};ColorList.props={canToggle:{type:Boolean,optional:true},colors:Array,forceExpanded:{type:Boolean,optional:true},isExpanded:{type:Boolean,optional:true},onColorSelected:Function,selectedColor:{type:Number,optional:true},};return __exports;});;

/* /web/static/src/core/colorpicker/colorpicker.js */
odoo.define('@web/core/colorpicker/colorpicker',['@web/core/utils/colors','@web/core/utils/functions','@web/core/utils/numbers','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{convertCSSColorToRgba,convertRgbaToCSSColor,convertRgbToHsl,convertHslToRgb,}=require("@web/core/utils/colors");const{uniqueId}=require("@web/core/utils/functions");const{clamp}=require("@web/core/utils/numbers");const{throttleForAnimation,debounce}=require("@web/core/utils/timing");const{Component,useRef,onWillStart,onMounted,onWillUpdateProps,onWillDestroy,}=require("@odoo/owl");const Colorpicker=__exports.Colorpicker=class Colorpicker extends Component{static template="web.Colorpicker";static props={document:{type:true,optional:true},defaultColor:{type:String,optional:true},selectedColor:{type:String,optional:true},noTransparency:{type:Boolean,optional:true},colorPreview:{type:Boolean,optional:true},stopClickPropagation:{type:Boolean,optional:true},onColorSelect:{type:Function,optional:true},onColorPreview:{type:Function,optional:true},onInputEnter:{type:Function,optional:true},};static defaultProps={document:window.document,defaultColor:"#FF0000",noTransparency:false,colorPreview:false,stopClickPropagation:false,onColorSelect:()=>{},onColorPreview:()=>{},onInputEnter:()=>{},};elRef=useRef("el");setup(){onWillStart(()=>{this.init();});onMounted(async()=>{if(!this.elRef.el){await new Promise((resolve)=>{const observer=new MutationObserver(()=>{if(this.elRef.el){observer.disconnect();resolve();}});observer.observe(document.body,{childList:true,subtree:true});});}
this.el=this.elRef.el;this.$el=$(this.el);this.$el.on("click",this._onClick.bind(this));this.$el.on("keypress",this._onKeypress.bind(this));this.$el.on("mousedown",".o_color_pick_area",this._onMouseDownPicker.bind(this));this.$el.on("mousedown",".o_color_slider",this._onMouseDownSlider.bind(this));this.$el.on("mousedown",".o_opacity_slider",this._onMouseDownOpacitySlider.bind(this));const debouncedOnChangeInputs=debounce(this._onChangeInputs.bind(this),10,true);this.$el.on("change",".o_color_picker_inputs",debouncedOnChangeInputs);this.start();});onWillUpdateProps((newProps)=>{if(!this.el){return;}
if(newProps.selectedColor){this.setSelectedColor(newProps.selectedColor);}});onWillDestroy(()=>{this.destroy();});}
init(){this.pickerFlag=false;this.sliderFlag=false;this.opacitySliderFlag=false;this.colorComponents={};this.uniqueId=uniqueId("colorpicker");this.selectedHexValue="";}
start(){this.$colorpickerArea=this.$el.find(".o_color_pick_area");this.$colorpickerPointer=this.$el.find(".o_picker_pointer");this.$colorSlider=this.$el.find(".o_color_slider");this.$colorSliderPointer=this.$el.find(".o_slider_pointer");this.$opacitySlider=this.$el.find(".o_opacity_slider");this.$opacitySliderPointer=this.$el.find(".o_opacity_pointer");const rgba=convertCSSColorToRgba(this.props.defaultColor);if(rgba){this._updateRgba(rgba.red,rgba.green,rgba.blue,rgba.opacity);}
Object.entries(this.colorComponents).forEach(([component,value])=>{const input=this.el.querySelector(`.o_${component}_input`);if(input){input.value=value;}});const resizeObserver=new window.ResizeObserver(()=>{this._updateUI();});resizeObserver.observe(this.el);this.$documents=$([window.top,...Array.from(window.top.frames).filter((frame)=>{try{const document=frame.document;return!!document;}catch{return false;}}),].map((w)=>w.document));this.throttleOnMouseMove=throttleForAnimation((ev)=>{this._onMouseMovePicker(ev);this._onMouseMoveSlider(ev);this._onMouseMoveOpacitySlider(ev);});this.$documents.on(`mousemove.${this.uniqueId}`,this.throttleOnMouseMove);this.$documents.on(`mouseup.${this.uniqueId}`,()=>{if(this.pickerFlag||this.sliderFlag||this.opacitySliderFlag){this._colorSelected();}
this.pickerFlag=false;this.sliderFlag=false;this.opacitySliderFlag=false;});this.previewActive=true;}
destroy(){if(this.throttleOnMouseMove){this.$documents.off(`.${this.uniqueId}`);this.throttleOnMouseMove.cancel();}}
setSelectedColor(color){const rgba=convertCSSColorToRgba(color);if(rgba){const oldPreviewActive=this.previewActive;this.previewActive=false;this._updateRgba(rgba.red,rgba.green,rgba.blue,rgba.opacity);this.previewActive=oldPreviewActive;this._updateUI();}}
_updateUI(){for(const[color,value]of Object.entries(this.colorComponents)){this.$el.find(`.o_${color}_input`).val(value);}
this.$el.find(".o_color_preview").css("background-color",this.colorComponents.cssColor);this.$colorpickerArea.css("background-color",`hsl(${this.colorComponents.hue}, 100%, 50%)`);const top=((100-this.colorComponents.lightness)*this.$colorpickerArea.height())/100;const left=(this.colorComponents.saturation*this.$colorpickerArea.width())/100;this.$colorpickerPointer.css({top:top-5+"px",left:left-5+"px",});const height=this.$colorSlider.height();const y=(this.colorComponents.hue*height)/360;this.$colorSliderPointer.css("top",Math.round(y-2));if(!this.props.noTransparency){const heightOpacity=this.$opacitySlider.height();const z=heightOpacity*(1-this.colorComponents.opacity/100.0);this.$opacitySliderPointer.css("top",Math.round(z-2));this.$opacitySlider.css("background","linear-gradient("+this.colorComponents.hex+" 0%, transparent 100%)");}}
_updateHex(hex){const rgb=convertCSSColorToRgba(hex);if(!rgb){return;}
Object.assign(this.colorComponents,{hex:hex},rgb,convertRgbToHsl(rgb.red,rgb.green,rgb.blue));this._updateCssColor();}
_updateRgba(r,g,b,a){const opacity=a||this.colorComponents.opacity;if(opacity<0.1&&(r>0.1||g>0.1||b>0.1)){a=100;}
const hex=convertRgbaToCSSColor(r,g,b);if(!hex){return;}
Object.assign(this.colorComponents,{red:r,green:g,blue:b},a===undefined?{}:{opacity:a},{hex:hex},convertRgbToHsl(r,g,b));this._updateCssColor();}
_updateHsl(h,s,l){let a=this.colorComponents.opacity;if(a<0.1&&l>0.1){a=100;}
const rgb=convertHslToRgb(h,s,l);if(!rgb){return;}
const hex=convertRgbaToCSSColor(rgb.red,rgb.green,rgb.blue);Object.assign(this.colorComponents,{hue:h,saturation:s,lightness:l},rgb,{hex:hex},{opacity:a});this._updateCssColor();}
_updateOpacity(a){if(a<0||a>100){return;}
Object.assign(this.colorComponents,{opacity:a});this._updateCssColor();}
_colorSelected(){this.props.onColorSelect(this.colorComponents);}
_updateCssColor(){const r=this.colorComponents.red;const g=this.colorComponents.green;const b=this.colorComponents.blue;const a=this.colorComponents.opacity;Object.assign(this.colorComponents,{cssColor:convertRgbaToCSSColor(r,g,b,a)});if(this.previewActive){this.props.onColorPreview(this.colorComponents);}}
_onKeypress(ev){if(ev.key==="Enter"){if(ev.target.tagName==="INPUT"){this._onChangeInputs(ev);}
ev.preventDefault();this.props.onInputEnter(ev);}}
_onClick(ev){if(this.props.stopClickPropagation){ev.stopPropagation();}
ev.originalEvent.__isColorpickerClick=true;$(ev.target).find("> .o_opacity_pointer, > .o_slider_pointer, > .o_picker_pointer").addBack(".o_opacity_pointer, .o_slider_pointer, .o_picker_pointer").focus();if(ev.target.dataset.colorMethod==="hex"&&!this.selectedHexValue){ev.target.select();this.selectedHexValue=ev.target.value;return;}
this.selectedHexValue="";}
_onMouseDownPicker(ev){this.pickerFlag=true;ev.preventDefault();this._onMouseMovePicker(ev);}
_onMouseMovePicker(ev){if(!this.pickerFlag){return;}
const offset=this.$colorpickerArea.offset();const top=ev.pageY-offset.top;const left=ev.pageX-offset.left;let saturation=Math.round((100*left)/this.$colorpickerArea.width());let lightness=Math.round((100*(this.$colorpickerArea.height()-top))/this.$colorpickerArea.height());saturation=clamp(saturation,0,100);lightness=clamp(lightness,0,100);this._updateHsl(this.colorComponents.hue,saturation,lightness);this._updateUI();}
_onMouseDownSlider(ev){this.sliderFlag=true;ev.preventDefault();this._onMouseMoveSlider(ev);}
_onMouseMoveSlider(ev){if(!this.sliderFlag){return;}
const y=ev.pageY-this.$colorSlider.offset().top;let hue=Math.round((360*y)/this.$colorSlider.height());hue=clamp(hue,0,360);this._updateHsl(hue,this.colorComponents.saturation,this.colorComponents.lightness);this._updateUI();}
_onMouseDownOpacitySlider(ev){this.opacitySliderFlag=true;ev.preventDefault();this._onMouseMoveOpacitySlider(ev);}
_onMouseMoveOpacitySlider(ev){if(!this.opacitySliderFlag||this.props.noTransparency){return;}
const y=ev.pageY-this.$opacitySlider.offset().top;let opacity=Math.round(100*(1-y/this.$opacitySlider.height()));opacity=clamp(opacity,0,100);this._updateOpacity(opacity);this._updateUI();}
_onChangeInputs(ev){switch($(ev.target).data("colorMethod")){case"hex":return;case"rgb":this._updateRgba(parseInt(this.$el.find(".o_red_input").val()),parseInt(this.$el.find(".o_green_input").val()),parseInt(this.$el.find(".o_blue_input").val()));break;case"hsl":this._updateHsl(parseInt(this.$el.find(".o_hue_input").val()),parseInt(this.$el.find(".o_saturation_input").val()),parseInt(this.$el.find(".o_lightness_input").val()));break;case"opacity":this._updateOpacity(parseInt(this.$el.find(".o_opacity_input").val()));break;}
this._updateUI();this._colorSelected();}
_onHexColorInput(ev){const hexColorValue=ev.target.value.replaceAll("#","");if(hexColorValue.length===6){this._updateHex(`#${hexColorValue}`);this._updateUI();this._colorSelected();}}}
return __exports;});;

/* /web/static/src/core/colors/colors.js */
odoo.define('@web/core/colors/colors',[],function(require){'use strict';let __exports={};const COLORS_BRIGHT=["#1f77b4","#ff7f0e","#aec7e8","#ffbb78","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5","#875a7b","#c49c94","#e377c2","#dcd0d9","#7f7f7f","#c7c7c7","#bcbd22","#dbdb8d","#17becf","#a5d8d7",];const COLORS_DARK=["#00ffff","#ff6347","#00ced1","#ffd700","#29ef29","#c5fabb","#fe4b4c","#ffb6c1","#ba87e9","#eadbf6","#c568af","#ecc1b8","#fda9e3","#BB86FC","#808080","#f2e8e8","#fcfe2d","#f8f8bc","#17becf","#10efed",];__exports.getColors=getColors;function getColors(colorScheme){return colorScheme==="dark"?COLORS_DARK:COLORS_BRIGHT;}
__exports.getColor=getColor;function getColor(index,colorScheme){const colors=getColors(colorScheme);return colors[index%colors.length];}
const DEFAULT_BG=__exports.DEFAULT_BG="#d3d3d3";__exports.getBorderWhite=getBorderWhite;function getBorderWhite(colorScheme){return colorScheme==="dark"?"rgba(0, 0, 0, 0.6)":"rgba(255,255,255,0.6)";}
const RGB_REGEX=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;__exports.hexToRGBA=hexToRGBA;function hexToRGBA(hex,opacity){const rgb=RGB_REGEX.exec(hex).slice(1,4).map((n)=>parseInt(n,16)).join(",");return`rgba(${rgb},${opacity})`;}
return __exports;});;

/* /web/static/src/core/commands/command_category.js */
odoo.define('@web/core/commands/command_category',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("app",{},{sequence:10}).add("smart_action",{},{sequence:15}).add("actions",{},{sequence:30}).add("default",{},{sequence:50}).add("view_switcher",{},{sequence:100}).add("debug",{},{sequence:110}).add("disabled",{});return __exports;});;

/* /web/static/src/core/commands/command_hook.js */
odoo.define('@web/core/commands/command_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useCommand=useCommand;function useCommand(name,action,options={}){const commandService=useService("command");useEffect(()=>commandService.add(name,action,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/commands/command_palette.js */
odoo.define('@web/core/commands/command_palette',['@web/core/dialog/dialog','@web/core/hotkeys/hotkey_hook','@web/core/l10n/translation','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/scrolling','@web/core/utils/search','@web/core/utils/timing','@web/core/browser/feature_detection','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_t}=require("@web/core/l10n/translation");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{debounce}=require("@web/core/utils/timing");const{isMacOS,isMobileOS}=require("@web/core/browser/feature_detection");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,onWillStart,onWillDestroy,EventBus,useRef,useState,markRaw,useExternalListener,}=require("@odoo/owl");const DEFAULT_PLACEHOLDER=_t("Search...");const DEFAULT_EMPTY_MESSAGE=_t("No result found");const FUZZY_NAMESPACES=["default"];function commandsWithinCategory(categoryName,categories){return(cmd)=>{const inCurrentCategory=categoryName===cmd.category;const fallbackCategory=categoryName==="default"&&!categories.includes(cmd.category);return inCurrentCategory||fallbackCategory;};}
__exports.splitCommandName=splitCommandName;function splitCommandName(name,searchValue){if(name){const splitName=name.split(new RegExp(`(${escapeRegExp(searchValue)})`,"ig"));return searchValue.length&&splitName.length>1?splitName:[name];}
return[];}
const DefaultCommandItem=__exports.DefaultCommandItem=class DefaultCommandItem extends Component{}
DefaultCommandItem.template="web.DefaultCommandItem";DefaultCommandItem.props={slots:{type:Object,optional:true},hotkey:{type:String,optional:true},hotkeyOptions:{type:String,optional:true},name:{type:String,optional:true},searchValue:{type:String,optional:true},executeCommand:{type:Function,optional:true},};const CommandPalette=__exports.CommandPalette=class CommandPalette extends Component{setup(){if(this.props.bus){const setConfig=({detail})=>this.setCommandPaletteConfig(detail);this.props.bus.addEventListener(`SET-CONFIG`,setConfig);onWillDestroy(()=>this.props.bus.removeEventListener(`SET-CONFIG`,setConfig));}
this.keyId=1;this.race=new Race();this.keepLast=new KeepLast();this._sessionId=CommandPalette.lastSessionId++;this.DefaultCommandItem=DefaultCommandItem;this.activeElement=useService("ui").activeElement;this.inputRef=useAutofocus();useHotkey("Enter",()=>this.executeSelectedCommand(),{bypassEditableProtection:true});useHotkey("Control+Enter",()=>this.executeSelectedCommand(true),{bypassEditableProtection:true,});useHotkey("ArrowUp",()=>this.selectCommandAndScrollTo("PREV"),{bypassEditableProtection:true,allowRepeat:true,});useHotkey("ArrowDown",()=>this.selectCommandAndScrollTo("NEXT"),{bypassEditableProtection:true,allowRepeat:true,});useExternalListener(window,"mousedown",this.onWindowMouseDown);this.state=useState({});this.root=useRef("root");this.listboxRef=useRef("listbox");onWillStart(()=>this.setCommandPaletteConfig(this.props.config));}
get commandsByCategory(){const categories=[];for(const category of this.categoryKeys){const commands=this.state.commands.filter(commandsWithinCategory(category,this.categoryKeys));if(commands.length){categories.push({commands,name:this.categoryNames[category],keyId:category,});}}
return categories;}
async setCommandPaletteConfig(config){this.configByNamespace=config.configByNamespace||{};this.state.FooterComponent=config.FooterComponent;this.providersByNamespace={default:[]};for(const provider of config.providers){const namespace=provider.namespace||"default";if(namespace in this.providersByNamespace){this.providersByNamespace[namespace].push(provider);}else{this.providersByNamespace[namespace]=[provider];}}
const{namespace,searchValue}=this.processSearchValue(config.searchValue||"");this.switchNamespace(namespace);this.state.searchValue=searchValue;await this.race.add(this.search(searchValue));}
async setCommands(namespace,options={}){this.categoryKeys=["default"];this.categoryNames={};const proms=this.providersByNamespace[namespace].map((provider)=>{const{provide}=provider;const result=provide(this.env,options);return result;});let commands=(await this.keepLast.add(Promise.all(proms))).flat();const namespaceConfig=this.configByNamespace[namespace]||{};if(options.searchValue&&FUZZY_NAMESPACES.includes(namespace)){commands=fuzzyLookup(options.searchValue,commands,(c)=>c.name);}else{if(namespaceConfig.categories){let commandsSorted=[];this.categoryKeys=namespaceConfig.categories;this.categoryNames=namespaceConfig.categoryNames||{};if(!this.categoryKeys.includes("default")){this.categoryKeys.push("default");}
for(const category of this.categoryKeys){commandsSorted=commandsSorted.concat(commands.filter(commandsWithinCategory(category,this.categoryKeys)));}
commands=commandsSorted;}}
this.state.commands=markRaw(commands.slice(0,100).map((command)=>({...command,keyId:this.keyId++,splitName:splitCommandName(command.name,options.searchValue),})));this.selectCommand(this.state.commands.length?0:-1);this.mouseSelectionActive=false;this.state.emptyMessage=(namespaceConfig.emptyMessage||DEFAULT_EMPTY_MESSAGE).toString();}
selectCommand(index){if(index===-1||index>=this.state.commands.length){this.state.selectedCommand=null;return;}
this.state.selectedCommand=markRaw(this.state.commands[index]);}
selectCommandAndScrollTo(type){this.mouseSelectionActive=false;const index=this.state.commands.indexOf(this.state.selectedCommand);if(index===-1){return;}
let nextIndex;if(type==="NEXT"){nextIndex=index<this.state.commands.length-1?index+1:0;}else if(type==="PREV"){nextIndex=index>0?index-1:this.state.commands.length-1;}
this.selectCommand(nextIndex);const command=this.listboxRef.el.querySelector(`#o_command_${nextIndex}`);scrollTo(command,{scrollable:this.listboxRef.el});}
onCommandClicked(event,index){event.preventDefault();this.selectCommand(index);const ctrlKey=isMacOS()?event.metaKey:event.ctrlKey;this.executeSelectedCommand(ctrlKey);}
async executeCommand(command){const config=await command.action();if(config){this.setCommandPaletteConfig(config);}else{this.props.close();}}
async executeSelectedCommand(ctrlKey){await this.searchValuePromise;const selectedCommand=this.state.selectedCommand;if(selectedCommand){if(!ctrlKey){this.executeCommand(selectedCommand);}else if(selectedCommand.href){window.open(selectedCommand.href,"_blank");}}}
onCommandMouseEnter(index){if(this.mouseSelectionActive){this.selectCommand(index);}else{this.mouseSelectionActive=true;}}
async search(searchValue){await this.setCommands(this.state.namespace,{searchValue,activeElement:this.activeElement,sessionId:this._sessionId,});if(this.inputRef.el){this.inputRef.el.focus();}}
debounceSearch(value){const{namespace,searchValue}=this.processSearchValue(value);if(namespace!=="default"&&this.state.namespace!==namespace){this.switchNamespace(namespace);}
this.state.searchValue=searchValue;this.searchValuePromise=this.lastDebounceSearch(searchValue).catch(()=>{this.searchValuePromise=null;});}
onSearchInput(ev){this.debounceSearch(ev.target.value);}
onKeyDown(ev){if(ev.key.toLowerCase()==="backspace"&&!ev.target.value.length&&!ev.repeat){this.switchNamespace("default");this.state.searchValue="";this.searchValuePromise=this.lastDebounceSearch("").catch(()=>{this.searchValuePromise=null;});}}
onWindowMouseDown(ev){if(!this.root.el.contains(ev.target)){this.props.close();}}
switchNamespace(namespace){if(this.lastDebounceSearch){this.lastDebounceSearch.cancel();}
const namespaceConfig=this.configByNamespace[namespace]||{};this.lastDebounceSearch=debounce((value)=>this.search(value),namespaceConfig.debounceDelay||0);this.state.namespace=namespace;this.state.placeholder=namespaceConfig.placeholder||DEFAULT_PLACEHOLDER.toString();}
processSearchValue(searchValue){let namespace="default";if(searchValue.length&&this.providersByNamespace[searchValue[0]]){namespace=searchValue[0];searchValue=searchValue.slice(1);}
return{namespace,searchValue};}
get isMacOS(){return isMacOS();}
get isMobileOS(){return isMobileOS();}}
CommandPalette.lastSessionId=0;CommandPalette.props={bus:{type:EventBus,optional:true},close:Function,config:Object,closeMe:{type:Function,optional:true},};CommandPalette.template="web.CommandPalette";CommandPalette.components={Dialog};return __exports;});;

/* /web/static/src/core/commands/command_service.js */
odoo.define('@web/core/commands/command_service',['@web/core/registry','@web/core/commands/command_palette','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CommandPalette}=require("@web/core/commands/command_palette");const{Component,EventBus}=require("@odoo/owl");const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");const commandSetupRegistry=registry.category("command_setup");class DefaultFooter extends Component{setup(){this.elements=commandSetupRegistry.getEntries().map((el)=>({namespace:el[0],name:el[1].name})).filter((el)=>el.name);}
onClick(namespace){this.props.switchNamespace(namespace);}}
DefaultFooter.template="web.DefaultFooter";const commandService=__exports.commandService={dependencies:["dialog","hotkey","ui"],start(env,{dialog,hotkey:hotkeyService,ui}){const registeredCommands=new Map();let nextToken=0;let isPaletteOpened=false;const bus=new EventBus();hotkeyService.add("control+k",openMainPalette,{bypassEditableProtection:true,global:true,});function openMainPalette(config={},onClose){const configByNamespace={};for(const provider of commandProviderRegistry.getAll()){const namespace=provider.namespace||"default";if(!configByNamespace[namespace]){configByNamespace[namespace]={categories:[],categoryNames:{},};}}
for(const[category,el]of commandCategoryRegistry.getEntries()){const namespace=el.namespace||"default";const name=el.name;if(namespace in configByNamespace){configByNamespace[namespace].categories.push(category);configByNamespace[namespace].categoryNames[category]=name;}}
for(const[namespace,{emptyMessage,debounceDelay,placeholder},]of commandSetupRegistry.getEntries()){if(namespace in configByNamespace){if(emptyMessage){configByNamespace[namespace].emptyMessage=emptyMessage;}
if(debounceDelay!==undefined){configByNamespace[namespace].debounceDelay=debounceDelay;}
if(placeholder){configByNamespace[namespace].placeholder=placeholder;}}}
config=Object.assign({configByNamespace,FooterComponent:DefaultFooter,providers:commandProviderRegistry.getAll(),},config);return openPalette(config,onClose);}
function openPalette(config,onClose){if(isPaletteOpened){bus.trigger("SET-CONFIG",config);return;}
isPaletteOpened=true;dialog.add(CommandPalette,{config,bus,},{onClose:()=>{isPaletteOpened=false;if(onClose){onClose();}},});}
function registerCommand(command,options){if(!command.name||!command.action||typeof command.action!=="function"){throw new Error("A Command must have a name and an action function.");}
const registration=Object.assign({},command,options);if(registration.identifier){const commandsArray=Array.from(registeredCommands.values());const sameName=commandsArray.find((com)=>com.name===registration.name);if(sameName){if(registration.identifier!==sameName.identifier){registration.name+=` (${registration.identifier})`;sameName.name+=` (${sameName.identifier})`;}}else{const sameFullName=commandsArray.find((com)=>com.name===registration.name+`(${registration.identifier})`);if(sameFullName){registration.name+=` (${registration.identifier})`;}}}
if(registration.hotkey){const action=async()=>{const commandService=env.services.command;const config=await command.action();if(!isPaletteOpened&&config){commandService.openPalette(config);}};registration.removeHotkey=hotkeyService.add(registration.hotkey,action,{...options.hotkeyOptions,global:registration.global,isAvailable:(...args)=>{let available=true;if(registration.isAvailable){available=registration.isAvailable(...args);}
if(available&&options.hotkeyOptions?.isAvailable){available=options.hotkeyOptions?.isAvailable(...args);}
return available;},});}
const token=nextToken++;registeredCommands.set(token,registration);if(!options.activeElement){Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});}
return token;}
function unregisterCommand(token){const cmd=registeredCommands.get(token);if(cmd&&cmd.removeHotkey){cmd.removeHotkey();}
registeredCommands.delete(token);}
return{add(name,action,options={}){const token=registerCommand({name,action},options);return()=>{unregisterCommand(token);};},getCommands(activeElement){return[...registeredCommands.values()].filter((command)=>command.activeElement===activeElement||command.global);},openMainPalette,openPalette,};},};registry.category("services").add("command",commandService);return __exports;});;

/* /web/static/src/core/commands/default_providers.js */
odoo.define('@web/core/commands/default_providers',['@web/core/browser/feature_detection','@web/core/hotkeys/hotkey_hook','@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/core/utils/ui','@web/core/commands/command_palette','@odoo/owl'],function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{capitalize}=require("@web/core/utils/strings");const{getVisibleElements}=require("@web/core/utils/ui");const{DefaultCommandItem}=require("@web/core/commands/command_palette");const{Component}=require("@odoo/owl");const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("default",{emptyMessage:_t("No command found"),placeholder:_t("Search for a command..."),});const HotkeyCommandItem=__exports.HotkeyCommandItem=class HotkeyCommandItem extends Component{setup(){useHotkey(this.props.hotkey,this.props.executeCommand);}
getKeysToPress(command){const{hotkey}=command;let result=hotkey.split("+");if(isMacOS()){result=result.map((x)=>x.replace("control","command")).map((x)=>x.replace("alt","control"));}
return result.map((key)=>key.toUpperCase());}}
HotkeyCommandItem.template="web.HotkeyCommandItem";const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("command",{provide:(env,options={})=>{const commands=env.services.command.getCommands(options.activeElement).map((cmd)=>{cmd.category=commandCategoryRegistry.contains(cmd.category)?cmd.category:"default";return cmd;}).filter((command)=>command.isAvailable===undefined||command.isAvailable());const uniqueCommands=commands.filter((obj,index)=>{return(index===commands.findIndex((o)=>obj.name===o.name&&obj.category===o.category));});return uniqueCommands.map((command)=>({Component:command.hotkey?HotkeyCommandItem:DefaultCommandItem,action:command.action,category:command.category,name:command.name,props:{hotkey:command.hotkey,hotkeyOptions:command.hotkeyOptions,},}));},});commandProviderRegistry.add("data-hotkeys",{provide:(env,options={})=>{const commands=[];const overlayModifier=registry.category("services").get("hotkey").overlayModifier;for(const el of getVisibleElements(options.activeElement,"[data-hotkey]:not(:disabled)")){const closest=el.closest("[data-command-category]");const category=closest?closest.dataset.commandCategory:"default";if(category==="disabled"){continue;}
const description=el.title||el.dataset.bsOriginalTitle||el.dataset.tooltip||el.placeholder||(el.innerText&&`${el.innerText.slice(0, 50)}${el.innerText.length > 50 ? "..." : ""}`)||_t("no description provided");commands.push({Component:HotkeyCommandItem,action:()=>{el.focus();el.click();},category,name:capitalize(description.trim().toLowerCase()),props:{hotkey:`${overlayModifier}+${el.dataset.hotkey}`,},});}
return commands;},});return __exports;});;

/* /web/static/src/core/confirmation_dialog/confirmation_dialog.js */
odoo.define('@web/core/confirmation_dialog/confirmation_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useChildRef}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const deleteConfirmationMessage=__exports.deleteConfirmationMessage=_t(`Ready to make your record disappear into thin air? Are you sure?
It will be gone forever!

Think twice before you click that 'Delete' button!`);const ConfirmationDialog=__exports.ConfirmationDialog=class ConfirmationDialog extends Component{setup(){this.env.dialogData.dismiss=()=>this._dismiss();this.modalRef=useChildRef();this.isProcess=false;}
async _cancel(){return this.execButton(this.props.cancel);}
async _confirm(){return this.execButton(this.props.confirm);}
async _dismiss(){return this.execButton(this.props.dismiss||this.props.cancel);}
setButtonsDisabled(disabled){this.isProcess=disabled;if(!this.modalRef.el){return;}
for(const button of[...this.modalRef.el.querySelectorAll(".modal-footer button")]){button.disabled=disabled;}}
async execButton(callback){if(this.isProcess){return;}
this.setButtonsDisabled(true);if(callback){let shouldClose;try{shouldClose=await callback();}catch(e){this.props.close();throw e;}
if(shouldClose===false){this.setButtonsDisabled(false);return;}}
this.props.close();}}
ConfirmationDialog.template="web.ConfirmationDialog";ConfirmationDialog.components={Dialog};ConfirmationDialog.props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},body:String,confirm:{type:Function,optional:true},confirmLabel:{type:String,optional:true},confirmClass:{type:String,optional:true},cancel:{type:Function,optional:true},cancelLabel:{type:String,optional:true},dismiss:{type:Function,optional:true},};ConfirmationDialog.defaultProps={confirmLabel:_t("Ok"),cancelLabel:_t("Cancel"),confirmClass:"btn-primary",title:_t("Confirmation"),};const AlertDialog=__exports.AlertDialog=class AlertDialog extends ConfirmationDialog{}
AlertDialog.template="web.AlertDialog";AlertDialog.props={...ConfirmationDialog.props,contentClass:{type:String,optional:true},};AlertDialog.defaultProps={...ConfirmationDialog.defaultProps,title:_t("Alert"),};return __exports;});;

/* /web/static/src/core/context.js */
odoo.define('@web/core/context',['@web/core/py_js/py','@web/core/py_js/py_interpreter'],function(require){'use strict';let __exports={};const{evaluateExpr,parseExpr}=require("@web/core/py_js/py");const{evaluate}=require("@web/core/py_js/py_interpreter");__exports.makeContext=makeContext;function makeContext(contexts,initialEvaluationContext){const evaluationContext=Object.assign({},initialEvaluationContext);const context={};for(let ctx of contexts){if(ctx!==""){ctx=typeof ctx==="string"?evaluateExpr(ctx,evaluationContext):ctx;Object.assign(context,ctx);Object.assign(evaluationContext,context);}}
return context;}
__exports.evalPartialContext=evalPartialContext;function evalPartialContext(_context,evaluationContext={}){const ast=parseExpr(_context);const context={};for(const key in ast.value){const value=ast.value[key];try{context[key]=evaluate(value,evaluationContext);}catch{}}
return context;}
return __exports;});;

/* /web/static/src/core/currency.js */
odoo.define('@web/core/currency',['@web/core/utils/numbers','@web/session','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{formatFloat,humanNumber}=require("@web/core/utils/numbers");const{session}=require("@web/session");const{nbsp}=require("@web/core/utils/strings");const currencies=__exports.currencies=session.currencies||{};delete session.currencies;__exports.getCurrency=getCurrency;function getCurrency(id){return currencies[id];}
__exports.formatCurrency=formatCurrency;function formatCurrency(amount,currencyId,options={}){const currency=getCurrency(currencyId);const digits=options.digits||(currency&&currency.digits);let formattedAmount;if(options.humanReadable){formattedAmount=humanNumber(amount,{decimals:digits?digits[1]:2});}else{formattedAmount=formatFloat(amount,{digits});}
if(!currency||options.noSymbol){return formattedAmount;}
const formatted=[currency.symbol,formattedAmount];if(currency.position==="after"){formatted.reverse();}
return formatted.join(nbsp);}
return __exports;});;

/* /web/static/src/core/datetime/datetime_hook.js */
odoo.define('@web/core/datetime/datetime_hook',['@odoo/owl','@web/core/popover/popover_hook','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{onPatched,onWillRender,useEffect,useRef}=require("@odoo/owl");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");__exports.useDateTimePicker=useDateTimePicker;function useDateTimePicker(hookParams){const datetimePicker=useService("datetime_picker");if(typeof hookParams.target==="string"){const target=useRef(hookParams.target);Object.defineProperty(hookParams,"target",{get(){return target.el;},});}
const inputRefs=[useRef("start-date"),useRef("end-date")];const getInputs=()=>inputRefs.map((ref)=>ref?.el);const{computeBasePickerProps,state,open,focusIfNeeded,enable}=datetimePicker.create(hookParams,getInputs,usePopover);onWillRender(computeBasePickerProps);useEffect(enable,getInputs);onPatched(focusIfNeeded);return{state,open};}
return __exports;});;

/* /web/static/src/core/datetime/datetime_input.js */
odoo.define('@web/core/datetime/datetime_input',['@odoo/owl','@web/core/utils/objects','@web/core/datetime/datetime_hook','@web/core/datetime/datetime_picker'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{omit}=require("@web/core/utils/objects");const{useDateTimePicker}=require("@web/core/datetime/datetime_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const dateTimeInputOwnProps={format:{type:String,optional:true},id:{type:String,optional:true},onChange:{type:Function,optional:true},onApply:{type:Function,optional:true},placeholder:{type:String,optional:true},};const DateTimeInput=__exports.DateTimeInput=class DateTimeInput extends Component{static props={...DateTimePicker.props,...dateTimeInputOwnProps,};static template="web.DateTimeInput";setup(){const getPickerProps=()=>omit(this.props,...Object.keys(dateTimeInputOwnProps));useDateTimePicker({format:this.props.format,get pickerProps(){return getPickerProps();},onApply:(...args)=>this.props.onApply?.(...args),onChange:(...args)=>this.props.onChange?.(...args),});}}
return __exports;});;

/* /web/static/src/core/datetime/datetime_picker.js */
odoo.define('@web/core/datetime/datetime_picker',['@odoo/owl','@web/core/l10n/translation','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{Component,onWillRender,onWillUpdateProps,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{MAX_VALID_DATE,MIN_VALID_DATE,clampDate,is24HourFormat,isInRange,isMeridiemFormat,today,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{ensureArray}=require("@web/core/utils/arrays");const{DateTime,Info}=luxon;const earliest=(date1,date2)=>(date1<date2?date1:date2);const getStartOfDecade=(date)=>Math.floor(date.year/10)*10;const getStartOfCentury=(date)=>Math.floor(date.year/100)*100;const getStartOfWeek=(date)=>{const{weekStart}=localization;return date.set({weekday:date.weekday<weekStart?weekStart-7:weekStart});};const latest=(date1,date2)=>(date1>date2?date1:date2);const numberRange=(min,max)=>[...Array(max-min)].map((_,i)=>i+min);const parseLimitDate=(value,defaultValue)=>clampDate(value==="today"?today():value||defaultValue,MIN_VALID_DATE,MAX_VALID_DATE);const toDateItem=({isOutOfRange=false,isValid=true,label,range,extraClass})=>({id:range[0].toISODate(),includesToday:isInRange(today(),range),isOutOfRange,isValid,label:String(range[0][label]),range,extraClass,});const toWeekItem=(weekDayItems)=>({number:weekDayItems[3].range[0].weekNumber,days:weekDayItems,});const HOURS=numberRange(0,24).map((hour)=>[hour,String(hour)]);const MINUTES=numberRange(0,60).map((minute)=>[minute,String(minute||0).padStart(2,"0")]);const SECONDS=[...MINUTES];const MERIDIEMS=["AM","PM"];const PRECISION_LEVELS=new Map().set("days",{mainTitle:_t("Select month"),nextTitle:_t("Next month"),prevTitle:_t("Previous month"),step:{month:1},getTitle:(date,{additionalMonth})=>{const titles=[`${date.monthLong} ${date.year}`];if(additionalMonth){const next=date.plus({month:1});titles.push(`${next.monthLong} ${next.year}`);}
return titles;},getItems:(date,{additionalMonth,maxDate,minDate,showWeekNumbers,isDateValid,dayCellClass})=>{const startDates=[date];if(additionalMonth){startDates.push(date.plus({month:1}));}
return startDates.map((date,i)=>{const monthRange=[date.startOf("month"),date.endOf("month")];const weeks=[];let startOfNextWeek=getStartOfWeek(monthRange[0]);for(let w=0;w<6;w++){const weekDayItems=[];for(let d=0;d<7;d++){const day=startOfNextWeek.plus({day:d});const range=[day,day.endOf("day")];const dayItem=toDateItem({isOutOfRange:!isInRange(day,monthRange),isValid:isInRange(range,[minDate,maxDate])&&isDateValid?.(day),label:"day",range,extraClass:dayCellClass?.(day)||"",});weekDayItems.push(dayItem);if(d===6){startOfNextWeek=day.plus({day:1});}}
weeks.push(toWeekItem(weekDayItems));}
const daysOfWeek=weeks[0].days.map((d)=>[d.range[0].weekdayShort,d.range[0].weekdayLong,Info.weekdays("narrow",{locale:d.range[0].locale})[d.range[0].weekday-1],]);if(showWeekNumbers){daysOfWeek.unshift(["#",_t("Week numbers"),"#"]);}
return{id:`__month__${i}`,number:monthRange[0].month,daysOfWeek,weeks,};});},}).set("months",{mainTitle:_t("Select year"),nextTitle:_t("Next year"),prevTitle:_t("Previous year"),step:{year:1},getTitle:(date)=>String(date.year),getItems:(date,{maxDate,minDate})=>{const startOfYear=date.startOf("year");return numberRange(0,12).map((i)=>{const startOfMonth=startOfYear.plus({month:i});const range=[startOfMonth,startOfMonth.endOf("month")];return toDateItem({isValid:isInRange(range,[minDate,maxDate]),label:"monthShort",range,});});},}).set("years",{mainTitle:_t("Select decade"),nextTitle:_t("Next decade"),prevTitle:_t("Previous decade"),step:{year:10},getTitle:(date)=>`${getStartOfDecade(date) - 1} - ${getStartOfDecade(date) + 10}`,getItems:(date,{maxDate,minDate})=>{const startOfDecade=date.startOf("year").set({year:getStartOfDecade(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfYear=startOfDecade.plus({year:i});const range=[startOfYear,startOfYear.endOf("year")];return toDateItem({isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),label:"year",range,});});},}).set("decades",{mainTitle:_t("Select century"),nextTitle:_t("Next century"),prevTitle:_t("Previous century"),step:{year:100},getTitle:(date)=>`${getStartOfCentury(date) - 10} - ${getStartOfCentury(date) + 100}`,getItems:(date,{maxDate,minDate})=>{const startOfCentury=date.startOf("year").set({year:getStartOfCentury(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfDecade=startOfCentury.plus({year:i*10});const range=[startOfDecade,startOfDecade.plus({year:10,millisecond:-1})];return toDateItem({label:"year",isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),range,});});},});const GRID_COUNT=10;const GRID_MARGIN=1;const NULLABLE_DATETIME_PROPERTY=[DateTime,{value:false},{value:null}];const DateTimePicker=__exports.DateTimePicker=class DateTimePicker extends Component{static props={focusedDateIndex:{type:Number,optional:true},showWeekNumbers:{type:Boolean,optional:true},daysOfWeekFormat:{type:String,optional:true},maxDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},maxPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},minDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},minPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},onSelect:{type:Function,optional:true},range:{type:Boolean,optional:true},rounding:{type:Number,optional:true},slots:{type:Object,shape:{bottom_left:{type:Object,optional:true},buttons:{type:Object,optional:true},},optional:true,},type:{type:[{value:"date"},{value:"datetime"}],optional:true},value:{type:[NULLABLE_DATETIME_PROPERTY,{type:Array,element:NULLABLE_DATETIME_PROPERTY},],optional:true,},isDateValid:{type:Function,optional:true},dayCellClass:{type:Function,optional:true},};static defaultProps={focusedDateIndex:0,daysOfWeekFormat:"short",maxPrecision:"decades",minPrecision:"days",rounding:5,type:"datetime",};static template="web.DateTimePicker";get activePrecisionLevel(){return PRECISION_LEVELS.get(this.state.precision);}
get isLastPrecisionLevel(){return(this.allowedPrecisionLevels.indexOf(this.state.precision)===this.allowedPrecisionLevels.length-1);}
get titles(){return ensureArray(this.title);}
setup(){this.availableHours=HOURS;this.availableMinutes=MINUTES;this.allowedPrecisionLevels=[];this.items=[];this.title="";this.shouldAdjustFocusDate=false;this.state=useState({focusDate:null,hoveredDate:null,timeValues:[],precision:this.props.minPrecision,});this.onPropsUpdated(this.props);onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));onWillRender(()=>this.onWillRender());}
onPropsUpdated(props){this.values=ensureArray(props.value).map((value)=>value&&!value.isValid?null:value);this.availableHours=HOURS;this.availableMinutes=MINUTES.filter((minute)=>!(minute[0]%props.rounding));this.availableSeconds=props.rounding?[]:SECONDS;this.allowedPrecisionLevels=this.filterPrecisionLevels(props.minPrecision,props.maxPrecision);this.additionalMonth=props.range&&!this.env.isSmall;this.maxDate=parseLimitDate(props.maxDate,MAX_VALID_DATE);this.minDate=parseLimitDate(props.minDate,MIN_VALID_DATE);if(this.props.type==="date"){this.maxDate=this.maxDate.endOf("day");this.minDate=this.minDate.startOf("day");}
if(this.maxDate<this.minDate){throw new Error(`DateTimePicker error: given "maxDate" comes before "minDate".`);}
const timeValues=this.values.map((val)=>[(val||DateTime.local()).hour,val?.minute||0,val?.second||0,]);if(props.range){this.state.timeValues=timeValues;}else{this.state.timeValues=[];this.state.timeValues[props.focusedDateIndex]=timeValues[props.focusedDateIndex];}
this.shouldAdjustFocusDate=!props.range;this.adjustFocus(this.values,props.focusedDateIndex);this.handle12HourSystem();this.state.timeValues=this.state.timeValues.map((timeValue)=>timeValue.map(String));}
onWillRender(){const{hoveredDate}=this.state;const precision=this.activePrecisionLevel;const getterParams={additionalMonth:this.additionalMonth,maxDate:this.maxDate,minDate:this.minDate,showWeekNumbers:this.props.showWeekNumbers??!this.props.range,isDateValid:this.props.isDateValid,dayCellClass:this.props.dayCellClass,};const referenceDate=this.state.focusDate;this.title=precision.getTitle(referenceDate,getterParams);this.items=precision.getItems(referenceDate,getterParams);this.selectedRange=[...this.values];this.highlightedRange=[...this.values];if(hoveredDate){[this.selectedRange]=this.applyValueAtIndex(hoveredDate,this.props.focusedDateIndex);if(this.props.range&&this.selectedRange.every(Boolean)){this.highlightedRange=[earliest(this.selectedRange[0],this.values[0]),latest(this.selectedRange[1],this.values[1]),];}}}
adjustFocus(values,focusedDateIndex){if(!this.shouldAdjustFocusDate&&this.state.focusDate&&focusedDateIndex===this.props.focusedDateIndex){return;}
let dateToFocus=values[focusedDateIndex]||values[focusedDateIndex===1?0:1]||today();if(this.additionalMonth&&focusedDateIndex===1&&values[0]&&values[1]&&values[0].month!==values[1].month){dateToFocus=dateToFocus.minus({month:1});}
this.shouldAdjustFocusDate=false;this.state.focusDate=this.clamp(dateToFocus.startOf("month"));}
applyValueAtIndex(value,valueIndex){const result=[...this.values];if(this.props.range){if((result[0]&&value.endOf("day")<result[0].startOf("day"))||(result[1]&&!result[0])){valueIndex=0;}else if((result[1]&&result[1].endOf("day")<value.startOf("day"))||(result[0]&&!result[1])){valueIndex=1;}}
result[valueIndex]=value;return[result,valueIndex];}
clamp(value){return clampDate(value,this.minDate,this.maxDate);}
filterPrecisionLevels(minPrecision,maxPrecision){const levels=[...PRECISION_LEVELS.keys()];return levels.slice(levels.indexOf(minPrecision),levels.indexOf(maxPrecision)+1);}
getActiveRangeInfo({isOutOfRange,range}){const result={isSelected:!isOutOfRange&&isInRange(this.selectedRange,range),isSelectStart:false,isSelectEnd:false,isHighlighted:!isOutOfRange&&isInRange(this.highlightedRange,range),isHighlightStart:false,isHighlightEnd:false,isCurrent:false,};if(this.props.range){if(result.isSelected){const[selectStart,selectEnd]=this.selectedRange;result.isSelectStart=!selectStart||isInRange(selectStart,range);result.isSelectEnd=!selectEnd||isInRange(selectEnd,range);}
if(result.isHighlighted){const[currentStart,currentEnd]=this.highlightedRange;result.isHighlightStart=!currentStart||isInRange(currentStart,range);result.isHighlightEnd=!currentEnd||isInRange(currentEnd,range);}
result.isCurrent=!isOutOfRange&&(isInRange(this.values[0],range)||isInRange(this.values[1],range));}else{result.isSelectStart=result.isSelectEnd=result.isSelected;result.isHighlightStart=result.isHighlightEnd=result.isHighlighted;}
return result;}
getTimeValues(valueIndex){let[hour,minute,second]=this.state.timeValues[valueIndex].map(Number);if(this.is12HourFormat&&this.meridiems&&this.state.timeValues[valueIndex][3]==="PM"){hour+=12;}
return[hour,minute,second];}
handle12HourSystem(){if(isMeridiemFormat()){this.meridiems=MERIDIEMS.map((m)=>[m,m]);for(const timeValues of this.state.timeValues){if(timeValues){timeValues.push(MERIDIEMS[Math.floor(timeValues[0]/12)||0]);}}}
this.is12HourFormat=!is24HourFormat();if(this.is12HourFormat){this.availableHours=[[0,HOURS[12][1]],...HOURS.slice(1,12)];for(const timeValues of this.state.timeValues){if(timeValues){timeValues[0]%=12;}}}}
isSelectedDate({range}){return this.values.some((value)=>isInRange(value,range));}
next(ev){ev.preventDefault();const{step}=this.activePrecisionLevel;this.state.focusDate=this.clamp(this.state.focusDate.plus(step));}
previous(ev){ev.preventDefault();const{step}=this.activePrecisionLevel;this.state.focusDate=this.clamp(this.state.focusDate.minus(step));}
selectTime(valueIndex){const value=this.values[valueIndex]||today();this.validateAndSelect(value,valueIndex);}
validateAndSelect(value,valueIndex){if(!this.props.onSelect){return false;}
const[result,finalIndex]=this.applyValueAtIndex(value,valueIndex);if(this.props.type==="datetime"){const[hour,minute,second]=this.getTimeValues(finalIndex);result[finalIndex]=result[finalIndex].set({hour,minute,second});}
if(!isInRange(result[finalIndex],[this.minDate,this.maxDate])){return false;}
this.props.onSelect(result.length===2?result:result[0]);return true;}
zoomIn(date){const index=this.allowedPrecisionLevels.indexOf(this.state.precision)-1;if(index in this.allowedPrecisionLevels){this.state.focusDate=this.clamp(date);this.state.precision=this.allowedPrecisionLevels[index];return true;}
return false;}
zoomOut(){const index=this.allowedPrecisionLevels.indexOf(this.state.precision)+1;if(index in this.allowedPrecisionLevels){this.state.precision=this.allowedPrecisionLevels[index];return true;}
return false;}
zoomOrSelect(dateItem){if(!dateItem.isValid){return;}
if(this.zoomIn(dateItem.range[0])){return;}
const[value]=dateItem.range;const valueIndex=this.props.focusedDateIndex;const isValid=this.validateAndSelect(value,valueIndex);this.shouldAdjustFocusDate=isValid&&!this.props.range;}}
return __exports;});;

/* /web/static/src/core/datetime/datetime_picker_popover.js */
odoo.define('@web/core/datetime/datetime_picker_popover',['@odoo/owl','@web/core/hotkeys/hotkey_hook','@web/core/datetime/datetime_picker'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const DateTimePickerPopover=__exports.DateTimePickerPopover=class DateTimePickerPopover extends Component{static components={DateTimePicker};static props={close:Function,pickerProps:{type:Object,shape:DateTimePicker.props},};static template="web.DateTimePickerPopover";get isDateTimeRange(){return(this.props.pickerProps.type==="datetime"||Array.isArray(this.props.pickerProps.value));}
setup(){useHotkey("enter",()=>this.props.close());}}
return __exports;});;

/* /web/static/src/core/datetime/datetimepicker_service.js */
odoo.define('@web/core/datetime/datetimepicker_service',['@odoo/owl','@web/core/l10n/dates','@web/core/popover/popover_hook','@web/core/registry','@web/core/utils/arrays','@web/core/utils/objects','@web/core/datetime/datetime_picker','@web/core/datetime/datetime_picker_popover'],function(require){'use strict';let __exports={};const{markRaw,reactive}=require("@odoo/owl");const{areDatesEqual,formatDate,formatDateTime,parseDate,parseDateTime}=require("@web/core/l10n/dates");const{makePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{ensureArray,zip,zipWith}=require("@web/core/utils/arrays");const{deepCopy,shallowEqual}=require("@web/core/utils/objects");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const{DateTimePickerPopover}=require("@web/core/datetime/datetime_picker_popover");const arePropsEqual=(obj1,obj2)=>shallowEqual(obj1,obj2,(a,b)=>areDatesEqual(a,b)||shallowEqual(a,b));const FOCUS_CLASSNAME="text-primary";const formatters={date:formatDate,datetime:formatDateTime,};const listenedElements=new WeakSet();const parsers={date:parseDate,datetime:parseDateTime,};const datetimePickerService=__exports.datetimePickerService={dependencies:["popover"],start(env,{popover:popoverService}){return{create:(hookParams,getInputs=()=>[hookParams.target,null],createPopover=(...args)=>makePopover(popoverService,...args))=>{const popover=createPopover(DateTimePickerPopover,{onClose:()=>{if(!allowOnClose){return;}
updateValueFromInputs();apply();setFocusClass(null);if(restoreTargetMargin){restoreTargetMargin();restoreTargetMargin=null;}},});const apply=()=>{if(areDatesEqual(lastInitialProps?.value,deepCopy(pickerProps.value))){return;}
inputsChanged=ensureArray(pickerProps.value).map(()=>false);hookParams.onApply?.(pickerProps.value);};const computeBasePickerProps=()=>{const nextInitialProps=markValuesRaw(hookParams.pickerProps);const propsCopy=deepCopy(nextInitialProps);if(lastInitialProps&&arePropsEqual(lastInitialProps,propsCopy)){return;}
lastInitialProps=propsCopy;inputsChanged=ensureArray(lastInitialProps.value).map(()=>false);for(const[key,value]of Object.entries(nextInitialProps)){if(pickerProps[key]!==value&&!areDatesEqual(pickerProps[key],value)){pickerProps[key]=value;}}};const focusActiveInput=()=>{const inputEl=getInput(pickerProps.focusedDateIndex);if(!inputEl){shouldFocus=true;return;}
const{activeElement}=inputEl.ownerDocument;if(activeElement!==inputEl){inputEl.focus();}
setInputFocus(inputEl);};const getInput=(valueIndex)=>{const el=getInputs()[valueIndex];if(el&&document.body.contains(el)){return el;}
return null;};const getPopoverTarget=()=>{if(hookParams.target){return hookParams.target;}
if(pickerProps.range){let parentElement=getInput(0).parentElement;const inputEls=getInputs();while(parentElement&&!inputEls.every((inputEl)=>parentElement.contains(inputEl))){parentElement=parentElement.parentElement;}
return parentElement||getInput(0);}else{return getInput(0);}};const markValuesRaw=(obj)=>{const copy={};for(const[key,value]of Object.entries(obj)){if(value&&typeof value==="object"){copy[key]=markRaw(value);}else{copy[key]=value;}}
return copy;};const onInputChange=(ev)=>{updateValueFromInputs();inputsChanged[ev.target===getInput(1)?1:0]=true;if(!popover.isOpen||inputsChanged.every(Boolean)){saveAndClose();}};const onInputClick=({target})=>{openPicker(target===getInput(1)?1:0);};const onInputFocus=({target})=>{pickerProps.focusedDateIndex=target===getInput(1)?1:0;setInputFocus(target);};const onInputKeydown=(ev)=>{switch(ev.key){case"Enter":case"Escape":{return saveAndClose();}
case"Tab":{if(!getInput(0)||!getInput(1)||ev.target!==getInput(ev.shiftKey?1:0)){return saveAndClose();}}}};const openPicker=(inputIndex)=>{pickerProps.focusedDateIndex=inputIndex;if(!popover.isOpen){const popoverTarget=getPopoverTarget();if(env.isSmall){const{marginBottom}=popoverTarget.style;popoverTarget.style.marginBottom=`100vh`;popoverTarget.scrollIntoView(true);restoreTargetMargin=async()=>{popoverTarget.style.marginBottom=marginBottom;};}
popover.open(popoverTarget,{pickerProps});}
focusActiveInput();};const safeConvert=(operation,value)=>{const{type}=pickerProps;const convertFn=(operation==="format"?formatters:parsers)[type];try{return[convertFn(value,{format:hookParams.format}),null];}catch(error){if(error?.name==="ConversionError"){return[null,error];}else{throw error;}}};const saveAndClose=()=>{if(popover.isOpen){popover.close();}else{apply();}};const setFocusClass=(input)=>{for(const el of getInputs()){if(el){el.classList.toggle(FOCUS_CLASSNAME,popover.isOpen&&el===input);}}};const setInputFocus=(inputEl)=>{inputEl.selectionStart=0;inputEl.selectionEnd=inputEl.value.length;setFocusClass(inputEl);shouldFocus=false;};const updateInput=(el,value)=>{if(!el){return;}
const[formattedValue]=safeConvert("format",value);el.value=formattedValue||"";};const updateValue=(value)=>{const previousValue=pickerProps.value;pickerProps.value=value;if(areDatesEqual(previousValue,pickerProps.value)){return;}
if(pickerProps.range){const[prevStart,prevEnd]=ensureArray(previousValue);const[nextStart,nextEnd]=ensureArray(pickerProps.value);if((pickerProps.focusedDateIndex===0&&areDatesEqual(prevEnd,nextEnd))||(pickerProps.focusedDateIndex===1&&areDatesEqual(prevStart,nextStart))){pickerProps.focusedDateIndex=pickerProps.focusedDateIndex===1?0:1;}}
hookParams.onChange?.(pickerProps.value);};const updateValueFromInputs=()=>{const values=zipWith(getInputs(),ensureArray(pickerProps.value),(el,currentValue)=>{if(!el){return currentValue;}
const[parsedValue,error]=safeConvert("parse",el.value);if(error){updateInput(el,currentValue);return currentValue;}else{return parsedValue;}});updateValue(values.length===2?values:values[0]);};const rawPickerProps={...DateTimePicker.defaultProps,onSelect:(value)=>{value&&=markRaw(value);updateValue(value);if(!pickerProps.range&&pickerProps.type==="date"){saveAndClose();}},...markValuesRaw(hookParams.pickerProps),};const pickerProps=reactive(rawPickerProps,()=>{const currentIsRange=pickerProps.range;if(popover.isOpen&&lastIsRange!==currentIsRange){allowOnClose=false;popover.open(getPopoverTarget(),{pickerProps});allowOnClose=true;}
lastIsRange=currentIsRange;for(const[el,value]of zip(getInputs(),ensureArray(pickerProps.value),true)){if(el){updateInput(el,value);}}
shouldFocus=true;});let allowOnClose=true;let inputsChanged=[];let lastInitialProps=null;let lastIsRange=pickerProps.range;let restoreTargetMargin=null;let shouldFocus=false;return{state:pickerProps,open:openPicker,computeBasePickerProps,focusIfNeeded(){if(popover.isOpen&&shouldFocus){focusActiveInput();}},enable(){let editableInputs=0;for(const[el,value]of zip(getInputs(),ensureArray(pickerProps.value),true)){updateInput(el,value);if(el&&!el.disabled&&!el.readOnly&&!listenedElements.has(el)){listenedElements.add(el);el.addEventListener("change",onInputChange);el.addEventListener("click",onInputClick);el.addEventListener("focus",onInputFocus);el.addEventListener("keydown",onInputKeydown);editableInputs++;}}
const calendarIconGroupEl=getInput(0)?.parentElement.querySelector(".input-group-text .fa-calendar")?.parentElement;if(calendarIconGroupEl&&!listenedElements.has(calendarIconGroupEl)){listenedElements.add(calendarIconGroupEl);calendarIconGroupEl.classList.remove("pe-none");calendarIconGroupEl.classList.add("cursor-pointer");calendarIconGroupEl.addEventListener("click",()=>openPicker(0));}
if(!editableInputs&&popover.isOpen){saveAndClose();}
return()=>{};},get isOpen(){return popover.isOpen;},};},};},};registry.category("services").add("datetime_picker",datetimePickerService);return __exports;});;

/* /web/static/src/core/debug/debug_context.js */
odoo.define('@web/core/debug/debug_context',['@web/core/registry','@web/core/utils/functions','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{memoize}=require("@web/core/utils/functions");const{useEffect,useEnv,useSubEnv}=require("@odoo/owl");const debugRegistry=registry.category("debug");const getAccessRights=memoize(async function getAccessRights(orm){const rightsToCheck={"ir.ui.view":"write","ir.rule":"read","ir.model.access":"read",};const proms=Object.entries(rightsToCheck).map(([model,operation])=>{return orm.call(model,"check_access_rights",[],{operation,raise_exception:false,});});const[canEditView,canSeeRecordRules,canSeeModelAccess]=await Promise.all(proms);const accessRights={canEditView,canSeeRecordRules,canSeeModelAccess};return accessRights;});class DebugContext{constructor(env,defaultCategories){this.orm=env.services.orm;this.categories=new Map(defaultCategories.map((cat)=>[cat,[{}]]));}
activateCategory(category,context){const contexts=this.categories.get(category)||new Set();contexts.add(context);this.categories.set(category,contexts);return()=>{contexts.delete(context);if(contexts.size===0){this.categories.delete(category);}};}
async getItems(env){const accessRights=await getAccessRights(this.orm);return[...this.categories.entries()].flatMap(([category,contexts])=>{return debugRegistry.category(category).getAll().map((factory)=>factory(Object.assign({env,accessRights},...contexts)));}).filter(Boolean).sort((x,y)=>{const xSeq=x.sequence||1000;const ySeq=y.sequence||1000;return xSeq-ySeq;});}}
const debugContextSymbol=Symbol("debugContext");__exports.createDebugContext=createDebugContext;function createDebugContext(env,{categories=[]}={}){return{[debugContextSymbol]:new DebugContext(env,categories)};}
__exports.useOwnDebugContext=useOwnDebugContext;function useOwnDebugContext({categories=[]}={}){useSubEnv(createDebugContext(useEnv(),{categories}));}
__exports.useEnvDebugContext=useEnvDebugContext;function useEnvDebugContext(){const debugContext=useEnv()[debugContextSymbol];if(!debugContext){throw new Error("There is no debug context available in the current environment.");}
return debugContext;}
__exports.useDebugCategory=useDebugCategory;function useDebugCategory(category,context={}){const env=useEnv();if(env.debug){const debugContext=useEnvDebugContext();useEffect(()=>debugContext.activateCategory(category,context),()=>[]);}}
return __exports;});;

/* /web/static/src/core/debug/debug_menu.js */
odoo.define('@web/core/debug/debug_menu',['@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/debug/debug_menu_basic','@web/core/commands/command_hook','@web/core/utils/hooks','@web/core/debug/debug_context'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{DebugMenuBasic}=require("@web/core/debug/debug_menu_basic");const{useCommand}=require("@web/core/commands/command_hook");const{useService}=require("@web/core/utils/hooks");const{useEnvDebugContext}=require("@web/core/debug/debug_context");const DebugMenu=__exports.DebugMenu=class DebugMenu extends DebugMenuBasic{setup(){super.setup();const debugContext=useEnvDebugContext();this.command=useService("command");useCommand(_t("Debug tools..."),async()=>{const items=await debugContext.getItems(this.env);let index=0;const defaultCategories=items.filter((item)=>item.type==="separator").map(()=>(index+=1));const provider={async provide(){const categories=[...defaultCategories];let category=categories.shift();const result=[];items.forEach((item)=>{if(item.type==="item"){result.push({name:item.description.toString(),action:item.callback,category,});}else if(item.type==="separator"){category=categories.shift();}});return result;},};const configByNamespace={default:{categories:defaultCategories,emptyMessage:_t("No debug command found"),placeholder:_t("Choose a debug command..."),},};const commandPaletteConfig={configByNamespace,providers:[provider],};return commandPaletteConfig;},{category:"debug",});}}
DebugMenu.components={Dropdown,DropdownItem};DebugMenu.props={};return __exports;});;

/* /web/static/src/core/debug/debug_menu_basic.js */
odoo.define('@web/core/debug/debug_menu_basic',['@web/core/debug/debug_context','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{useEnvDebugContext}=require("@web/core/debug/debug_context");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const DebugMenuBasic=__exports.DebugMenuBasic=class DebugMenuBasic extends Component{setup(){const debugContext=useEnvDebugContext();this.getElements=async()=>{this.elements=await debugContext.getItems(this.env);};}}
DebugMenuBasic.components={Dropdown,DropdownItem,};DebugMenuBasic.template="web.DebugMenu";return __exports;});;

/* /web/static/src/core/debug/debug_menu_items.js */
odoo.define('@web/core/debug/debug_menu_items',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/browser/router_service','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{routeToUrl}=require("@web/core/browser/router_service");const{registry}=require("@web/core/registry");function activateAssetsDebugging({env}){return{type:"item",description:_t("Activate Assets Debugging"),callback:()=>{browser.location.search="?debug=assets";},sequence:410,};}
function activateTestsAssetsDebugging({env}){return{type:"item",description:_t("Activate Tests Assets Debugging"),callback:()=>{browser.location.search="?debug=assets,tests";},sequence:420,};}
__exports.regenerateAssets=regenerateAssets;function regenerateAssets({env}){return{type:"item",description:_t("Regenerate Assets Bundles"),callback:async()=>{await env.services.orm.call("ir.attachment","regenerate_assets_bundles",);browser.location.reload();},sequence:430,};}
function becomeSuperuser({env}){const becomeSuperuserURL=browser.location.origin+"/web/become";return{type:"item",description:_t("Become Superuser"),hide:!env.services.user.isAdmin,href:becomeSuperuserURL,callback:()=>{browser.open(becomeSuperuserURL,"_self");},sequence:440,};}
function leaveDebugMode({env}){return{type:"item",description:_t("Leave the Developer Tools"),callback:()=>{const route=env.services.router.current;route.search.debug="";browser.location.href=browser.location.origin+routeToUrl(route);},sequence:450,};}
registry.category("debug").category("default").add("activateAssetsDebugging",activateAssetsDebugging).add("regenerateAssets",regenerateAssets).add("becomeSuperuser",becomeSuperuser).add("leaveDebugMode",leaveDebugMode).add("activateTestsAssetsDebugging",activateTestsAssetsDebugging);return __exports;});;

/* /web/static/src/core/debug/debug_providers.js */
odoo.define('@web/core/debug/debug_providers',['@web/core/l10n/translation','@web/core/registry','@web/core/browser/browser','@web/core/browser/router_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{routeToUrl}=require("@web/core/browser/router_service");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("debug",{provide:(env,options)=>{const result=[];if(env.debug){if(!env.debug.includes("assets")){result.push({action(){browser.location.search="?debug=assets";},category:"debug",name:_t("Activate debug mode (with assets)"),});}
result.push({action(){const route=env.services.router.current;route.search.debug="";browser.location.href=browser.location.origin+routeToUrl(route);},category:"debug",name:_t("Deactivate debug mode"),});result.push({action(){const runTestsURL=browser.location.origin+"/web/tests?debug=assets";browser.open(runTestsURL);},category:"debug",name:_t("Run JS Tests"),});result.push({action(){const runTestsURL=browser.location.origin+"/web/tests/mobile?debug=assets";browser.open(runTestsURL);},category:"debug",name:_t("Run JS Mobile Tests"),});}else{const debugKey="debug";if(options.searchValue.toLowerCase()===debugKey){result.push({action(){browser.location.search="?debug=assets";},category:"debug",name:`${_t("Activate debug mode (with assets)")} (${debugKey})`,});}}
return result;},});return __exports;});;

/* /web/static/src/core/debug/debug_utils.js */
odoo.define('@web/core/debug/debug_utils',[],function(require){'use strict';let __exports={};__exports.editModelDebug=editModelDebug;function editModelDebug(env,title,model,id){return env.services.action.doAction({res_model:model,res_id:id,name:title,type:"ir.actions.act_window",views:[[false,"form"]],view_mode:"form",target:"current",});}
return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_item.js */
odoo.define('@web/core/debug/profiling/profiling_item',['@web/core/dropdown/dropdown_item','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useBus,useService}=require("@web/core/utils/hooks");const{Component,EventBus}=require("@odoo/owl");const ProfilingItem=__exports.ProfilingItem=class ProfilingItem extends Component{setup(){this.profiling=useService("profiling");useBus(this.props.bus,"UPDATE",this.render);}
changeParam(param,ev){this.profiling.setParam(param,ev.target.value);}
toggleParam(param){const value=this.profiling.state.params.execution_context_qweb;this.profiling.setParam(param,!value);}
openProfiles(){if(this.env.services.action){this.env.services.action.doAction("base.action_menu_ir_profile");}else{window.location="/web/#action=base.action_menu_ir_profile";}}}
ProfilingItem.components={DropdownItem};ProfilingItem.template="web.DebugMenu.ProfilingItem";ProfilingItem.props={bus:{type:EventBus},};return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_qweb.js */
odoo.define('@web/core/debug/profiling/profiling_qweb',['@web/core/registry','@web/core/utils/hooks','@web/core/assets','@web/core/utils/render','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{loadBundle}=require("@web/core/assets");const{renderToString}=require("@web/core/utils/render");const{useDebounced}=require("@web/core/utils/timing");const{Component,useState,useRef,onWillStart,onMounted,onWillUnmount}=require("@odoo/owl");class MenuItem extends Component{static template="web.ProfilingQwebView.menuitem";}
function processValue(value){const data=JSON.parse(value);for(const line of data[0].results.data){line.xpath=line.xpath.replace(/([^\]])\//g,"$1[1]/").replace(/([^\]])$/g,"$1[1]");}
return data;}
const ProfilingQwebView=__exports.ProfilingQwebView=class ProfilingQwebView extends Component{static template="web.ProfilingQwebView";static components={MenuItem};setup(){super.setup();this.orm=useService("orm");this.ace=useRef("ace");this.selector=useRef("selector");this.value=processValue(this.props.record.data[this.props.name]);this.state=useState({viewID:this.profile.data.length?this.profile.data[0].view_id:0,view:null,});this.renderProfilingInformation=useDebounced(this.renderProfilingInformation,100);onWillStart(async()=>{await loadBundle({jsLibs:["/web/static/lib/ace/ace.js",["/web/static/lib/ace/mode-python.js","/web/static/lib/ace/mode-xml.js","/web/static/lib/ace/mode-qweb.js",],],});await this._fetchViewData();this.state.view=this.viewObjects.find((view)=>view.id===this.state.viewID);});onMounted(()=>{this._startAce(this.ace.el);this._renderView();});onWillUnmount(()=>{if(this.aceEditor){this.aceEditor.destroy();}
this._unmoutInfo();});}
get profile(){return this.value?this.value[0].results:{archs:{},data:[]};}
async _fetchViewData(){const viewIDs=Array.from(new Set(this.profile.data.map((line)=>line.view_id)));const viewObjects=await this.orm.call("ir.ui.view","search_read",[],{fields:["id","display_name","key"],domain:[["id","in",viewIDs]],});for(const view of viewObjects){view.delay=0;view.query=0;const lines=this.profile.data.filter((l)=>l.view_id===view.id);const root=lines.find((l)=>l.xpath==="");if(root){view.delay+=root.delay;view.query+=root.query;}else{view.delay=lines.map((l)=>l.delay).reduce((a,b)=>a+b);view.query=lines.map((l)=>l.query).reduce((a,b)=>a+b);}
view.delay=Math.ceil(view.delay*10)/10;}
this.viewObjects=viewObjects;}
_formatDelay(delay){return delay?(Math.ceil(delay*10)/10).toFixed(1):".";}
_startAce(node){this.aceEditor=window.ace.edit(node);this.aceEditor.setOptions({maxLines:Infinity,showPrintMargin:false,highlightActiveLine:false,highlightGutterLine:true,readOnly:true,});this.aceEditor.renderer.setOptions({displayIndentGuides:true,showGutter:true,});this.aceEditor.renderer.$cursorLayer.element.style.display="none";this.aceEditor.$blockScrolling=true;this.aceSession=this.aceEditor.getSession();this.aceSession.setOptions({useWorker:false,mode:"ace/mode/qweb",tabSize:2,useSoftTabs:true,});this.aceEditor.renderer.on("afterRender",this.renderProfilingInformation.bind(this));}
renderProfilingInformation(){this._unmoutInfo();const flat={};const arch=[{xpath:"",children:[]}];const rows=this.ace.el.querySelectorAll(".ace_gutter .ace_gutter-cell");const elems=this.ace.el.querySelectorAll(".ace_tag-open, .ace_end-tag-close, .ace_end-tag-open, .ace_qweb");elems.forEach((node)=>{const parent=arch[arch.length-1];let xpath=parent.xpath;if(node.classList.contains("ace_end-tag-close")){let previous=node;while((previous=previous.previousElementSibling)){if(previous&&previous.classList.contains("ace_tag-name")){break;}}
const tag=previous&&previous.textContent;if(parent.tag===tag){arch.pop();}}else if(node.classList.contains("ace_end-tag-open")){const tag=node.nextElementSibling&&node.nextElementSibling.textContent;if(parent.tag===tag){arch.pop();}}else if(node.classList.contains("ace_qweb")){const directive=node.textContent;parent.directive.push({el:node,directive:directive,});let delay=0;let query=0;for(const line of this.profile.data){if(line.view_id===this.state.viewID&&line.xpath===xpath&&line.directive.includes(directive)){delay+=line.delay;query+=line.query;}}
if((delay||query)&&!node.querySelector(".o_info")){this._renderHover(delay,query,node);}}else if(node.classList.contains("ace_tag-open")){const nodeTagName=node.nextElementSibling;const aceLine=nodeTagName.parentNode;const index=[].indexOf.call(aceLine.parentNode.children,aceLine);const row=rows[index];xpath+="/"+nodeTagName.textContent;let i=1;while(flat[xpath+"["+i+"]"]){i++;}
xpath+="["+i+"]";flat[xpath]={xpath:xpath,tag:nodeTagName.textContent,children:[],directive:[],};arch.push(flat[xpath]);parent.children.push(flat[xpath]);const closed=!!row.querySelector(".ace_closed");const delays=[];const querys=[];const groups={};let displayDetail=false;for(const line of this.profile.data){if(line.view_id===this.state.viewID&&(closed?line.xpath.startsWith(xpath):line.xpath===xpath)){delays.push(line.delay);querys.push(line.query);const directive=line.directive.split("=")[0];if(!groups[directive]){groups[directive]={delays:[],querys:[],};}else{displayDetail=true;}
groups[directive].delays.push(this._formatDelay(line.delay));groups[directive].querys.push(line.query);}}
if(delays.length&&!row.querySelector(".o_info")){this._renderInfo(delays,querys,displayDetail,groups,row);}}
node.setAttribute("data-xpath",xpath);});}
_renderView(){const view=this.viewObjects.find((view)=>view.id===this.state.viewID);if(view){const arch=this.profile.archs[view.id]||"";if(this.aceSession.getValue()!==arch){this.aceSession.setValue(arch);}}else{this.aceSession.setValue("");}
this.state.view=view;}
_unmoutInfo(){if(this.hover){if(this.ace.el.querySelector(".o_ace_hover")){this.ace.el.querySelector(".o_ace_hover").remove();}}
if(this.info){if(this.ace.el.querySelector(".o_ace_info")){this.ace.el.querySelector(".o_ace_info").remove();}}}
_renderHover(delay,query,node){const xml=renderToString("web.ProfilingQwebView.hover",{delay:this._formatDelay(delay),query:query,});const div=new DOMParser().parseFromString(xml,"text/html").querySelector("div");node.insertBefore(div,node.firstChild);}
_renderInfo(delays,querys,displayDetail,groups,node){const xml=renderToString("web.ProfilingQwebView.info",{delay:this._formatDelay(delays.reduce((a,b)=>a+b,0)),query:querys.reduce((a,b)=>a+b,0)||".",displayDetail:displayDetail,groups:groups,});const div=new DOMParser().parseFromString(xml,"text/html").querySelector("div");node.insertBefore(div,node.firstChild);}
_onSelectView(ev){this.state.viewID=+ev.currentTarget.dataset.id;this._renderView();}}
const profilingQwebView=__exports.profilingQwebView={component:ProfilingQwebView,};registry.category("fields").add("profiling_qweb_view",profilingQwebView);return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_service.js */
odoo.define('@web/core/debug/profiling/profiling_service',['@web/core/registry','@web/core/debug/profiling/profiling_item','@web/session','@web/core/debug/profiling/profiling_systray_item','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ProfilingItem}=require("@web/core/debug/profiling/profiling_item");const{session}=require("@web/session");const{profilingSystrayItem}=require("@web/core/debug/profiling/profiling_systray_item");const{EventBus,reactive}=require("@odoo/owl");const systrayRegistry=registry.category("systray");const profilingService={dependencies:["orm"],start(env,{orm}){if(!env.debug){return;}
function notify(){if(systrayRegistry.contains("web.profiling")&&state.isEnabled===false){systrayRegistry.remove("web.profiling",profilingSystrayItem);}
if(!systrayRegistry.contains("web.profiling")&&state.isEnabled===true){systrayRegistry.add("web.profiling",profilingSystrayItem,{sequence:99});}
bus.trigger("UPDATE");}
const state=reactive({session:session.profile_session||false,collectors:session.profile_collectors||["sql","traces_async"],params:session.profile_params||{},get isEnabled(){return Boolean(state.session);},},notify);const bus=new EventBus();notify();async function setProfiling(params){const kwargs=Object.assign({collectors:state.collectors,params:state.params,profile:state.isEnabled,},params);const resp=await orm.call("ir.profile","set_profiling",[],kwargs);if(resp.type){env.services.action.doAction(resp);}else{state.session=resp.session;state.collectors=resp.collectors;state.params=resp.params;}}
function profilingSeparator(){return{type:"separator",sequence:500,};}
function profilingItem(){return{type:"component",Component:ProfilingItem,props:{bus},sequence:510,};}
registry.category("debug").category("default").add("profilingSeparator",profilingSeparator).add("profilingItem",profilingItem);return{state,async toggleProfiling(){await setProfiling({profile:!state.isEnabled});},async toggleCollector(collector){const nextCollectors=state.collectors.slice();const index=nextCollectors.indexOf(collector);if(index>=0){nextCollectors.splice(index,1);}else{nextCollectors.push(collector);}
await setProfiling({collectors:nextCollectors});},async setParam(key,value){const nextParams=Object.assign({},state.params);nextParams[key]=value;await setProfiling({params:nextParams});},isCollectorEnabled(collector){return state.collectors.includes(collector);},};},};registry.category("services").add("profiling",profilingService);return __exports;});;

/* /web/static/src/core/debug/profiling/profiling_systray_item.js */
odoo.define('@web/core/debug/profiling/profiling_systray_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");class ProfilingSystrayItem extends Component{}
ProfilingSystrayItem.template="web.ProfilingSystrayItem";const profilingSystrayItem=__exports.profilingSystrayItem={Component:ProfilingSystrayItem,};return __exports;});;

/* /web/static/src/core/dialog/dialog.js */
odoo.define('@web/core/dialog/dialog',['@web/core/hotkeys/hotkey_hook','@web/core/ui/ui_service','@web/core/utils/hooks','@odoo/owl','@web/core/utils/timing','@web/core/utils/draggable_hook_builder_owl'],function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const{useForwardRefToParent}=require("@web/core/utils/hooks");const{Component,onWillDestroy,useChildSubEnv,useExternalListener,useState}=require("@odoo/owl");const{throttleForAnimation}=require("@web/core/utils/timing");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const useDialogDraggable=makeDraggableHook({name:"useDialogDraggable",onWillStartDrag({ctx,addCleanup,addStyle,getRect}){const{height,width}=getRect(ctx.current.element);ctx.current.container=document.createElement("div");addStyle(ctx.current.container,{position:"fixed",top:"0",bottom:`${70 - height}px`,left:`${70 - width}px`,right:`${70 - width}px`,});ctx.current.element.after(ctx.current.container);addCleanup(()=>ctx.current.container.remove());},onDrop({ctx,getRect}){const{top,left}=getRect(ctx.current.element);return{left:left-ctx.current.elementRect.left,top:top-ctx.current.elementRect.top,};},});const Dialog=__exports.Dialog=class Dialog extends Component{setup(){this.modalRef=useForwardRefToParent("modalRef");useActiveElement("modalRef");this.data=useState(this.env.dialogData);useHotkey("escape",()=>this.onEscape());useHotkey("control+enter",()=>{const btns=document.querySelectorAll(".o_dialog:not(.o_inactive_modal) .modal-footer button");const firstVisibleBtn=Array.from(btns).find((btn)=>{const styles=getComputedStyle(btn);return styles.display!=="none";});if(firstVisibleBtn){firstVisibleBtn.click();}},{bypassEditableProtection:true});this.id=`dialog_${this.data.id}`;useChildSubEnv({inDialog:true,dialogId:this.id});this.position=useState({left:0,top:0});useDialogDraggable({enable:()=>!this.env.isSmall,ref:this.modalRef,elements:".modal-content",handle:".modal-header",ignore:"button",edgeScrolling:{enabled:false},onDrop:({top,left})=>{this.position.left+=left;this.position.top+=top;},});const throttledResize=throttleForAnimation(this.onResize.bind(this));useExternalListener(window,"resize",throttledResize);onWillDestroy(()=>{if(this.env.isSmall){this.data.scrollToOrigin();}});}
get isFullscreen(){return this.props.fullscreen||this.env.isSmall;}
get contentStyle(){return`top: ${this.position.top}px; left: ${this.position.left}px;`;}
onResize(){this.position.left=0;this.position.top=0;}
onEscape(){return this.dismiss();}
async dismiss(){if(this.data.dismiss){await this.data.dismiss();}
return this.data.close();}}
Dialog.template="web.Dialog";Dialog.props={contentClass:{type:String,optional:true},bodyClass:{type:String,optional:true},fullscreen:{type:Boolean,optional:true},footer:{type:Boolean,optional:true},header:{type:Boolean,optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg","xl","fs"].includes(s),},technical:{type:Boolean,optional:true},title:{type:String,optional:true},modalRef:{type:Function,optional:true},slots:{type:Object,shape:{default:Object,header:{type:Object,optional:true},footer:{type:Object,optional:true},},},withBodyPadding:{type:Boolean,optional:true},};Dialog.defaultProps={contentClass:"",bodyClass:"",fullscreen:false,footer:true,header:true,size:"lg",technical:true,title:"Odoo",withBodyPadding:true,};return __exports;});;

/* /web/static/src/core/dialog/dialog_service.js */
odoo.define('@web/core/dialog/dialog_service',['@web/core/registry','@odoo/owl','@web/core/utils/components'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Component,markRaw,reactive,xml}=require("@odoo/owl");const{WithEnv}=require("@web/core/utils/components");class DialogWrapper extends Component{static template=xml`
        <WithEnv env="{ dialogData: props.subEnv }">
            <t t-component="props.subComponent" t-props="props.subProps" />
        </WithEnv>
    `;static components={WithEnv};static props=["*"];}
const dialogService=__exports.dialogService={dependencies:["overlay"],start(env,{overlay}){const stack=[];let nextId=0;const deactivate=()=>{for(const subEnv of stack){subEnv.isActive=false;}};const add=(dialogClass,props,options={})=>{const id=nextId++;const close=()=>remove();const subEnv=reactive({id,close,isActive:true,});deactivate();stack.push(subEnv);document.body.classList.add("modal-open");const scrollOrigin={top:window.scrollY,left:window.scrollX};subEnv.scrollToOrigin=()=>{if(!stack.length){window.scrollTo(scrollOrigin);}};const remove=overlay.add(DialogWrapper,{subComponent:dialogClass,subProps:markRaw({...props,close}),subEnv,},{onRemove:()=>{stack.pop();deactivate();if(stack.length){stack.at(-1).isActive=true;}else{document.body.classList.remove("modal-open");}
options.onClose?.();},});return remove;};function closeAll(){for(const dialog of[...stack].reverse()){dialog.close();}}
return{add,closeAll};},};registry.category("services").add("dialog",dialogService);return __exports;});;

/* /web/static/src/core/domain.js */
odoo.define('@web/core/domain',['@web/core/utils/arrays','@web/core/py_js/py','@web/core/py_js/py_utils','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{shallowEqual}=require("@web/core/utils/arrays");const{evaluate,formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const{escapeRegExp}=require("@web/core/utils/strings");const InvalidDomainError=__exports.InvalidDomainError=class InvalidDomainError extends Error{}
const Domain=__exports.Domain=class Domain{static combine(domains,operator){if(domains.length===0){return new Domain([]);}
const domain1=domains[0]instanceof Domain?domains[0]:new Domain(domains[0]);if(domains.length===1){return domain1;}
const domain2=Domain.combine(domains.slice(1),operator);const result=new Domain([]);const astValues1=domain1.ast.value;const astValues2=domain2.ast.value;const op=operator==="AND"?"&":"|";const combinedAST={type:4,value:astValues1.concat(astValues2)};result.ast=normalizeDomainAST(combinedAST,op);return result;}
static and(domains){return Domain.combine(domains,"AND");}
static or(domains){return Domain.combine(domains,"OR");}
static not(domain){const result=new Domain(domain);result.ast.value.unshift({type:1,value:"!"});return result;}
static removeDomainLeaves(domain,keysToRemove){function processLeaf(elements,idx,operatorCtx,newDomain){const leaf=elements[idx];if(leaf.type===10){if(keysToRemove.includes(leaf.value[0].value)){if(operatorCtx==="&"){newDomain.ast.value.push(...Domain.TRUE.ast.value);}else if(operatorCtx==="|"){newDomain.ast.value.push(...Domain.FALSE.ast.value);}}else{newDomain.ast.value.push(leaf);}
return 1;}else if(leaf.type===1){if(leaf.value==="|"&&elements[idx+1].type===10&&elements[idx+2].type===10&&keysToRemove.includes(elements[idx+1].value[0].value)&&keysToRemove.includes(elements[idx+2].value[0].value)){newDomain.ast.value.push(...Domain.TRUE.ast.value);return 3;}
newDomain.ast.value.push(leaf);if(leaf.value==="!"){return 1+processLeaf(elements,idx+1,"&",newDomain);}
const firstLeafSkip=processLeaf(elements,idx+1,leaf.value,newDomain);const secondLeafSkip=processLeaf(elements,idx+1+firstLeafSkip,leaf.value,newDomain);return 1+firstLeafSkip+secondLeafSkip;}
return 0;}
domain=new Domain(domain);if(domain.ast.value.length===0){return domain;}
const newDomain=new Domain([]);processLeaf(domain.ast.value,0,"&",newDomain);return newDomain;}
constructor(descr=[]){if(descr instanceof Domain){return new Domain(descr.toString());}else{let rawAST;try{rawAST=typeof descr==="string"?parseExpr(descr):toAST(descr);}catch(error){throw new InvalidDomainError(`Invalid domain representation: ${descr.toString()}`,{cause:error,});}
this.ast=normalizeDomainAST(rawAST);}}
contains(record){const expr=evaluate(this.ast,record);return matchDomain(record,expr);}
toString(){return formatAST(this.ast);}
toList(context){return evaluate(this.ast,context);}
toJson(){try{const evaluatedAsList=this.toList({});const evaluatedDomain=new Domain(evaluatedAsList);if(evaluatedDomain.toString()===this.toString()){return evaluatedAsList;}
return this.toString();}catch{return this.toString();}}}
__exports.evalDomain=evalDomain;function evalDomain(modifier,evalContext){if(modifier&&typeof modifier!=="boolean"){modifier=new Domain(modifier).contains(evalContext);}
return Boolean(modifier);}
const TRUE_LEAF=[1,"=",1];const FALSE_LEAF=[0,"=",1];const TRUE_DOMAIN=new Domain([TRUE_LEAF]);const FALSE_DOMAIN=new Domain([FALSE_LEAF]);Domain.TRUE=TRUE_DOMAIN;Domain.FALSE=FALSE_DOMAIN;function toAST(domain){const elems=domain.map((elem)=>{switch(elem){case"!":case"&":case"|":return{type:1,value:elem};default:return{type:10,value:elem.map(toPyValue),};}});return{type:4,value:elems};}
function normalizeDomainAST(domain,op="&"){if(domain.type!==4){if(domain.type===10){const value=domain.value;if(value.findIndex((e)=>e.type===10)===-1||!value.every((e)=>e.type===10||e.type===1)){throw new InvalidDomainError("Invalid domain AST");}}else{throw new InvalidDomainError("Invalid domain AST");}}
if(domain.value.length===0){return domain;}
let expected=1;for(const child of domain.value){switch(child.type){case 1:if(child.value==="&"||child.value==="|"){expected++;}else if(child.value!=="!"){throw new InvalidDomainError("Invalid domain AST");}
break;case 4:case 10:if(child.value.length===3){expected--;break;}
throw new InvalidDomainError("Invalid domain AST");default:throw new InvalidDomainError("Invalid domain AST");}}
const values=domain.value.slice();while(expected<0){expected++;values.unshift({type:1,value:op});}
if(expected>0){throw new InvalidDomainError(`invalid domain ${formatAST(domain)} (missing ${expected} segment(s))`);}
return{type:4,value:values};}
function matchCondition(record,condition){if(typeof condition==="boolean"){return condition;}
const[field,operator,value]=condition;if(typeof field==="string"){const names=field.split(".");if(names.length>=2){return matchCondition(record[names[0]],[names.slice(1).join("."),operator,value]);}}
let likeRegexp,ilikeRegexp;if(["like","not like","ilike","not ilike"].includes(operator)){likeRegexp=new RegExp(`(.*)${escapeRegExp(value).replaceAll("%", "(.*)")}(.*)`,"g");ilikeRegexp=new RegExp(`(.*)${escapeRegExp(value).replaceAll("%", "(.*)")}(.*)`,"gi");}
const fieldValue=typeof field==="number"?field:record[field];switch(operator){case"=?":if([false,null].includes(value)){return true;}
case"=":case"==":if(Array.isArray(fieldValue)&&Array.isArray(value)){return shallowEqual(fieldValue,value);}
return fieldValue===value;case"!=":case"<>":return!matchCondition(record,[field,"==",value]);case"<":return fieldValue<value;case"<=":return fieldValue<=value;case">":return fieldValue>value;case">=":return fieldValue>=value;case"in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return fieldVal.some((fv)=>val.includes(fv));}
case"not in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return!fieldVal.some((fv)=>val.includes(fv));}
case"like":if(fieldValue===false){return false;}
return Boolean(fieldValue.match(likeRegexp));case"not like":if(fieldValue===false){return false;}
return Boolean(!fieldValue.match(likeRegexp));case"=like":if(fieldValue===false){return false;}
return new RegExp(escapeRegExp(value).replace(/%/g,".*")).test(fieldValue);case"ilike":if(fieldValue===false){return false;}
return Boolean(fieldValue.match(ilikeRegexp));case"not ilike":if(fieldValue===false){return false;}
return Boolean(!fieldValue.match(ilikeRegexp));case"=ilike":if(fieldValue===false){return false;}
return new RegExp(escapeRegExp(value).replace(/%/g,".*"),"i").test(fieldValue);}
throw new InvalidDomainError("could not match domain");}
function makeOperators(record){const match=matchCondition.bind(null,record);return{"!":(x)=>!match(x),"&":(a,b)=>match(a)&&match(b),"|":(a,b)=>match(a)||match(b),};}
function matchDomain(record,domain){if(domain.length===0){return true;}
const operators=makeOperators(record);const reversedDomain=Array.from(domain).reverse();const condStack=[];for(const item of reversedDomain){const operator=typeof item==="string"&&operators[item];if(operator){const operands=condStack.splice(-operator.length);condStack.push(operator(...operands));}else{condStack.push(item);}}
return matchCondition(record,condStack.pop());}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector.js */
odoo.define('@web/core/domain_selector/domain_selector',['@web/core/domain_selector/utils','@odoo/owl','@web/core/domain','@web/core/tree_editor/tree_editor','@web/core/tree_editor/condition_tree','@web/core/model_field_selector/utils','@web/core/checkbox/checkbox','@web/core/utils/objects','@web/core/domain_selector/domain_selector_operator_editor','@web/core/tree_editor/tree_editor_operator_editor','@web/core/l10n/translation','@web/core/model_field_selector/model_field_selector'],function(require){'use strict';let __exports={};const{extractPathsFromDomain,useGetDefaultCondition}=require("@web/core/domain_selector/utils");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{Domain}=require("@web/core/domain");const{TreeEditor}=require("@web/core/tree_editor/tree_editor");const{domainFromTree,treeFromDomain,formatValue,condition,}=require("@web/core/tree_editor/condition_tree");const{useLoadFieldInfo}=require("@web/core/model_field_selector/utils");const{CheckBox}=require("@web/core/checkbox/checkbox");const{deepEqual}=require("@web/core/utils/objects");const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const{getOperatorEditorInfo}=require("@web/core/tree_editor/tree_editor_operator_editor");const{_t}=require("@web/core/l10n/translation");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const ARCHIVED_CONDITION=condition("active","in",[true,false]);const ARCHIVED_DOMAIN=`[("active", "in", [True, False])]`;const DomainSelector=__exports.DomainSelector=class DomainSelector extends Component{static template="web.DomainSelector";static components={TreeEditor,CheckBox};static props={domain:String,resModel:String,className:{type:String,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},isDebugMode:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},update:{type:Function,optional:true},};static defaultProps={isDebugMode:false,readonly:true,update:()=>{},};setup(){this.loadFieldInfo=useLoadFieldInfo();this.getDefaultCondition=useGetDefaultCondition();this.tree=null;this.defaultCondition=null;this.fieldDefs={};this.showArchivedCheckbox=false;this.includeArchived=false;onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((np)=>this.onPropsUpdated(np));}
async onPropsUpdated(p){let domain;let isSupported=true;try{domain=new Domain(p.domain);}catch{isSupported=false;}
if(!isSupported){this.tree=null;this.defaultCondition=null;this.fieldDefs={};this.showArchivedCheckbox=false;this.includeArchived=false;return;}
const paths=new Set([...extractPathsFromDomain(domain),"active"]);await this.loadFieldDefs(p.resModel,paths);const[defaultCondition]=await Promise.all([this.getDefaultCondition(p.resModel),this.loadFieldDefs(p.resModel,paths),]);this.tree=treeFromDomain(domain,{getFieldDef:this.getFieldDef.bind(this),distributeNot:!p.isDebugMode,});this.defaultCondition=defaultCondition;this.showArchivedCheckbox=Boolean(this.fieldDefs.active);this.includeArchived=false;if(this.showArchivedCheckbox){if(this.tree.value==="&"){this.tree.children=this.tree.children.filter((child)=>{if(deepEqual(child,ARCHIVED_CONDITION)){this.includeArchived=true;return false;}
return true;});if(this.tree.children.length===1){this.tree=this.tree.children[0];}}else if(deepEqual(this.tree,ARCHIVED_CONDITION)){this.includeArchived=true;this.tree=treeFromDomain(`[]`);}}}
getFieldDef(path){if(typeof path==="string"){return this.fieldDefs[path];}
return null;}
getDefaultOperator(fieldDef){return getDomainDisplayedOperators(fieldDef)[0];}
getOperatorEditorInfo(node){const fieldDef=this.getFieldDef(node.path);const operators=getDomainDisplayedOperators(fieldDef);return getOperatorEditorInfo(operators);}
getPathEditorInfo(){const{resModel,isDebugMode}=this.props;return{component:ModelFieldSelector,extractProps:({update,value:path})=>{return{path,update,resModel,isDebugMode,readonly:false,};},isSupported:(path)=>[0,1].includes(path)||typeof path==="string",defaultValue:()=>"id",stringify:(path)=>formatValue(path),message:_t("Invalid field chain"),};}
async loadFieldDefs(resModel,paths){const promises=[];const fieldDefs={};for(const path of paths){if(typeof path==="string"){promises.push(this.loadFieldInfo(resModel,path).then(({fieldDef})=>{fieldDefs[path]=fieldDef;}));}}
await Promise.all(promises);this.fieldDefs=fieldDefs;}
toggleIncludeArchived(){this.includeArchived=!this.includeArchived;this.update(this.tree);}
resetDomain(){this.props.update("[]");}
onDomainChange(domain){this.props.update(domain,true);}
update(tree){const archiveDomain=this.includeArchived?ARCHIVED_DOMAIN:`[]`;const domain=tree?Domain.and([domainFromTree(tree),archiveDomain]).toString():archiveDomain;this.props.update(domain);}}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_operator_editor.js */
odoo.define('@web/core/domain_selector/domain_selector_operator_editor',[],function(require){'use strict';let __exports={};__exports.getDomainDisplayedOperators=getDomainDisplayedOperators;function getDomainDisplayedOperators(fieldDef){if(!fieldDef){fieldDef={};}
const{type,is_property}=fieldDef;if(is_property){switch(type){case"many2many":case"tags":return["in","not in","set","not_set"];case"many2one":case"selection":return["=","!=","set","not_set"];}}
switch(type){case"boolean":return["is","is_not"];case"selection":return["=","!=","in","not in","set","not_set"];case"char":case"text":case"html":return["=","!=","ilike","not ilike","in","not in","set","not_set"];case"date":case"datetime":return["=","!=",">",">=","<","<=","between","set","not_set"];case"integer":case"float":case"monetary":return["=","!=",">",">=","<","<=","between","ilike","not ilike","set","not_set",];case"many2one":case"many2many":case"one2many":return["in","not in","=","!=","ilike","not ilike","set","not_set"];case"json":return["=","!=","ilike","not ilike","set","not_set"];case"properties":return["set","not_set"];case undefined:return["="];default:return["=","!=",">",">=","<","<=","ilike","not ilike","like","not like","=like","=ilike","child_of","parent_of","in","not in","set","not_set",];}}
return __exports;});;

/* /web/static/src/core/domain_selector/utils.js */
odoo.define('@web/core/domain_selector/utils',['@web/core/domain','@web/core/tree_editor/tree_editor_value_editors','@web/core/domain_selector/domain_selector_operator_editor','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/tree_editor/condition_tree','@web/core/model_field_selector/utils','@web/core/tree_editor/utils'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{getDefaultValue}=require("@web/core/tree_editor/tree_editor_value_editors");const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{toValue,domainFromTree,normalizeValue,formatValue:toString,createVirtualOperators,condition,}=require("@web/core/tree_editor/condition_tree");const{useLoadFieldInfo,useLoadPathDescription}=require("@web/core/model_field_selector/utils");const{extractIdsFromTree,getDefaultPath,getPathsInTree,leafToString,useLoadDisplayNames,}=require("@web/core/tree_editor/utils");__exports.extractPathsFromDomain=extractPathsFromDomain;function extractPathsFromDomain(domain){domain=new Domain(domain);const paths=new Set();for(const node of domain.ast.value){if([4,10].includes(node.type)){paths.add(toValue(node.value[0]));}}
return[...paths];}
function getDefaultCondition(fieldDefs){const defaultPath=getDefaultPath(fieldDefs);const fieldDef=fieldDefs[defaultPath];const operator=getDomainDisplayedOperators(fieldDef)[0];const value=getDefaultValue(fieldDef,operator);return condition(fieldDef.name,operator,value);}
function getDefaultDomain(fieldDefs){return domainFromTree(getDefaultCondition(fieldDefs));}
__exports.useGetDefaultCondition=useGetDefaultCondition;function useGetDefaultCondition(){const fieldService=useService("field");return async(resModel)=>{const fieldDefs=await fieldService.loadFields(resModel);return getDefaultCondition(fieldDefs);};}
__exports.useGetDefaultLeafDomain=useGetDefaultLeafDomain;function useGetDefaultLeafDomain(){const fieldService=useService("field");return async(resModel)=>{const fieldDefs=await fieldService.loadFields(resModel);return getDefaultDomain(fieldDefs);};}
function simplifyTree(tree){if(tree.type==="condition"){return tree;}
const processedChildren=tree.children.map(simplifyTree);if(tree.value==="&"){return{...tree,children:processedChildren};}
const children=[];const childrenByPath={};for(const child of processedChildren){if(child.type==="connector"||typeof child.path!=="string"||!["=","in"].includes(child.operator)){children.push(child);}else{if(!childrenByPath[child.path]){childrenByPath[child.path]=[];}
childrenByPath[child.path].push(child);}}
for(const path in childrenByPath){if(childrenByPath[path].length===1){children.push(childrenByPath[path][0]);continue;}
const value=[];for(const child of childrenByPath[path]){if(child.operator==="="){value.push(child.value);}else{value.push(...child.value);}}
children.push(condition(path,"in",normalizeValue(value)));}
if(children.length===1){return{...children[0]};}
return{...tree,children};}
__exports.getDomainTreeDescription=getDomainTreeDescription;function getDomainTreeDescription(tree,getFieldDef,getDescription,displayNames,isSubExpression=true){if(tree.type==="connector"){const childDescriptions=tree.children.map((c)=>getDomainTreeDescription(c,getFieldDef,getDescription,displayNames));const separator=tree.value==="&"?_t("and"):_t("or");let description=childDescriptions.join(` ${separator} `);if(isSubExpression||tree.negate){description=`( ${description} )`;}
if(tree.negate){description=`! ${description}`;}
return description;}
const{path}=tree;const fieldDef=getFieldDef(path);const{operatorDescription,valueDescription}=leafToString(tree,fieldDef,displayNames[fieldDef?.relation||fieldDef?.comodel]);let description=`${getDescription(path)} ${operatorDescription} `;if(valueDescription){const{values,join,addParenthesis}=valueDescription;const jointedValues=values.join(` ${join} `);description+=addParenthesis?`( ${jointedValues} )`:jointedValues;}
return description;}
__exports.useGetDomainTreeDescription=useGetDomainTreeDescription;function useGetDomainTreeDescription(fieldService,nameService){fieldService||=useService("field");nameService||=useService("name");const loadFieldInfo=useLoadFieldInfo(fieldService);const loadPathDescription=useLoadPathDescription(fieldService);const loadDisplayNames=useLoadDisplayNames(nameService);return async(resModel,tree)=>{tree=simplifyTree(tree);const paths=getPathsInTree(tree);const promises=[];const pathFieldDefs={};const pathDescriptions={};for(const path of paths){promises.push(loadPathDescription(resModel,path).then(({displayNames})=>{pathDescriptions[toString(path)]=displayNames.join(" 🠒 ");}),loadFieldInfo(resModel,path).then(({fieldDef})=>{pathFieldDefs[toString(path)]=fieldDef;}));}
await Promise.all(promises);const getFieldDef=(path)=>pathFieldDefs[toString(path)];const getDescription=(path)=>pathDescriptions[toString(path)];const idsByModel=extractIdsFromTree(tree,getFieldDef);const treeWithVirtualOperators=createVirtualOperators(tree,{getFieldDef});const displayNames=await loadDisplayNames(idsByModel);return getDomainTreeDescription(treeWithVirtualOperators,getFieldDef,getDescription,displayNames,false);};}
return __exports;});;

/* /web/static/src/core/domain_selector_dialog/domain_selector_dialog.js */
odoo.define('@web/core/domain_selector_dialog/domain_selector_dialog',['@web/core/l10n/translation','@odoo/owl','@web/core/dialog/dialog','@web/core/domain','@web/core/domain_selector/domain_selector','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{Domain}=require("@web/core/domain");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{useService}=require("@web/core/utils/hooks");const DomainSelectorDialog=__exports.DomainSelectorDialog=class DomainSelectorDialog extends Component{static template="web.DomainSelectorDialog";static components={Dialog,DomainSelector,};static props={close:Function,onConfirm:Function,resModel:String,className:{type:String,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},domain:String,isDebugMode:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},text:{type:String,optional:true},confirmButtonText:{type:String,optional:true},disableConfirmButton:{type:Function,optional:true},discardButtonText:{type:String,optional:true},title:{type:String,optional:true},context:{type:Object,optional:true},};static defaultProps={isDebugMode:false,readonly:false,context:{},};setup(){this.notification=useService("notification");this.rpc=useService("rpc");this.orm=useService("orm");this.user=useService("user");this.state=useState({domain:this.props.domain});this.confirmButtonRef=useRef("confirm");}
get confirmButtonText(){return this.props.confirmButtonText||_t("Confirm");}
get dialogTitle(){return this.props.title||_t("Domain");}
get disabled(){if(this.props.disableConfirmButton){return this.props.disableConfirmButton(this.state.domain);}
return false;}
get discardButtonText(){return this.props.discardButtonText||_t("Discard");}
get domainSelectorProps(){return{className:this.props.className,resModel:this.props.resModel,readonly:this.props.readonly,isDebugMode:this.props.isDebugMode,defaultConnector:this.props.defaultConnector,domain:this.state.domain,update:(domain)=>{this.state.domain=domain;},};}
async onConfirm(){this.confirmButtonRef.el.disabled=true;let domain;let isValid;try{const evalContext={...this.user.context,...this.props.context};domain=new Domain(this.state.domain).toList(evalContext);}catch{isValid=false;}
if(isValid===undefined){isValid=await this.rpc("/web/domain/validate",{model:this.props.resModel,domain,});}
if(!isValid){if(this.confirmButtonRef.el){this.confirmButtonRef.el.disabled=false;}
this.notification.add(_t("Domain is invalid. Please correct it"),{type:"danger",});return;}
this.props.onConfirm(this.state.domain);this.props.close();}
onDiscard(){this.props.close();}}
return __exports;});;

/* /web/static/src/core/dropdown/accordion_item.js */
odoo.define('@web/core/dropdown/accordion_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onPatched,useState}=require("@odoo/owl");const ACCORDION=__exports.ACCORDION=Symbol("Accordion");const AccordionItem=__exports.AccordionItem=class AccordionItem extends Component{static template="web.AccordionItem";static components={};static props={slots:{type:Object,shape:{default:{},},},description:String,selected:{type:Boolean,optional:true,},class:{type:String,optional:true,},};static defaultProps={class:"",selected:false,};setup(){this.state=useState({open:false,});this.parentComponent=this.env[ACCORDION];onPatched(()=>{this.parentComponent?.accordionStateChanged?.();});}}
return __exports;});;

/* /web/static/src/core/dropdown/checkbox_item.js */
odoo.define('@web/core/dropdown/checkbox_item',['@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const CheckboxItem=__exports.CheckboxItem=class CheckboxItem extends DropdownItem{}
CheckboxItem.template="web.CheckboxItem";CheckboxItem.props={...DropdownItem.props,checked:{type:Boolean,optional:false,},};return __exports;});;

/* /web/static/src/core/dropdown/dropdown.js */
odoo.define('@web/core/dropdown/dropdown',['@web/core/utils/hooks','@web/core/position_hook','@web/core/dropdown/dropdown_navigation_hook','@web/core/l10n/localization','@odoo/owl'],function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{usePosition}=require("@web/core/position_hook");const{useDropdownNavigation}=require("@web/core/dropdown/dropdown_navigation_hook");const{localization}=require("@web/core/l10n/localization");const{Component,EventBus,onWillStart,status,useEffect,useExternalListener,useRef,useState,useChildSubEnv,}=require("@odoo/owl");const DIRECTION_CARET_CLASS={bottom:"dropdown",top:"dropup",left:"dropstart",right:"dropend",};const DROPDOWN=__exports.DROPDOWN=Symbol("Dropdown");const Dropdown=__exports.Dropdown=class Dropdown extends Component{setup(){this.state=useState({open:this.props.startOpen,groupIsOpen:this.props.startOpen,directionCaretClass:null,});this.rootRef=useRef("root");onWillStart(()=>{if(this.state.open&&this.props.beforeOpen){return this.props.beforeOpen();}});useExternalListener(window,"click",this.onWindowClicked,{capture:true});useBus(Dropdown.bus,"state-changed",({detail})=>this.onDropdownStateChanged(detail));this.ui=useService("ui");useEffect(()=>{Promise.resolve().then(()=>{this.myActiveEl=this.ui.activeElement;});},()=>[]);this.parentDropdown=this.env[DROPDOWN];useChildSubEnv({[DROPDOWN]:{close:this.close.bind(this),closeAllParents:()=>{this.close();if(this.parentDropdown){this.parentDropdown.closeAllParents();}},},});useDropdownNavigation();const position=this.props.position||(this.parentDropdown?"right-start":"bottom-start");let[direction]=position.split("-");if(["left","right"].includes(direction)&&localization.direction==="rtl"){direction=direction==="left"?"right":"left";}
this.defaultDirection=direction;const positioningOptions={position,onPositioned:(el,{direction})=>{this.state.directionCaretClass=DIRECTION_CARET_CLASS[direction];},};if(this.props.container){positioningOptions.container=()=>typeof this.props.container==="function"?this.props.container():this.props.container;}
this.state.directionCaretClass=DIRECTION_CARET_CLASS[direction];this.togglerRef=useRef("togglerRef");if(this.props.toggler==="parent"){useEffect(()=>{const onClick=(ev)=>{if(this.rootRef.el.contains(ev.target)){return;}
this.toggle();};if(this.rootRef.el.parentElement.tabIndex===-1){this.rootRef.el.parentElement.tabIndex=-1;}
this.rootRef.el.parentElement.addEventListener("click",onClick);return()=>{this.rootRef.el.parentElement.removeEventListener("click",onClick);};},()=>[]);useEffect((open)=>{this.rootRef.el.parentElement.ariaExpanded=open?"true":"false";},()=>[this.state.open]);this.position=usePosition("menuRef",()=>this.rootRef.el.parentElement,positioningOptions);}else{const togglerRef=useRef("togglerRef");this.position=usePosition("menuRef",()=>togglerRef.el,positioningOptions);}
useEffect((isOpen)=>{if(isOpen){this.props.onOpened();}else{this.position.unlock();}},()=>[this.state.open]);}
async changeStateAndNotify(stateSlice){if(stateSlice.open&&this.props.beforeOpen){await this.props.beforeOpen();if(status(this)==="destroyed"){return;}}
if(!stateSlice.open){this.state.directionCaretClass=DIRECTION_CARET_CLASS[this.defaultDirection];}
Object.assign(this.state,stateSlice);const stateChangedPayload={emitter:this,newState:{...this.state},};Dropdown.bus.trigger("state-changed",stateChangedPayload);this.props.onStateChanged({...this.state});}
close(){return this.changeStateAndNotify({open:false,groupIsOpen:false});}
open(){return this.changeStateAndNotify({open:true,groupIsOpen:this.props.autoOpen});}
toggle(){const toggled=!this.state.open;return this.changeStateAndNotify({open:toggled,groupIsOpen:toggled&&this.props.autoOpen,});}
get showCaret(){return this.props.showCaret===undefined?this.parentDropdown:this.props.showCaret;}
onDropdownStateChanged(args){if(!this.rootRef.el||this.rootRef.el.contains(args.emitter.rootRef.el)||args.emitter.myActiveEl!==this.myActiveEl){return;}
if(args.emitter.rootRef.el.parentElement===this.rootRef.el.parentElement){this.state.groupIsOpen=args.newState.groupIsOpen&&this.props.autoOpen;if(this.state.open&&args.newState.open){this.state.open=false;}}else{if(this.state.open&&args.newState.open){this.close();}}}
onTogglerClick(){this.toggle();}
onTogglerMouseEnter(){if(this.state.groupIsOpen&&!this.state.open){this.togglerRef.el.focus();this.open();}}
isInActiveElement(){return this.ui.activeElement===this.myActiveEl;}
onWindowClicked(ev){if(!this.state.open){return;}
if(!this.isInActiveElement()){return;}
if(ev.target.closest(".o_datetime_picker")){return;}
const rootEl=this.props.toggler==="parent"?this.rootRef.el.parentElement:this.rootRef.el;const gotClickedInside=rootEl.contains(ev.target);if(!gotClickedInside){this.close();}}}
Dropdown.bus=new EventBus();Dropdown.defaultProps={menuDisplay:"d-block",autoOpen:true,holdOnHover:false,onOpened:()=>{},onStateChanged:()=>{},onScroll:()=>{},};Dropdown.props={class:{type:String,optional:true,},disabled:{type:Boolean,optional:true,},toggler:{type:String,optional:true,validate:(prop)=>["parent"].includes(prop),},skipTogglerTabbing:{type:Boolean,optional:true,},startOpen:{type:Boolean,optional:true,},autoOpen:{type:Boolean,optional:true,},menuClass:{type:String,optional:true,},menuDisplay:{type:String,optional:true,},beforeOpen:{type:Function,optional:true,},onOpened:{type:Function,optional:true,},onScroll:{type:Function,optional:true,},onStateChanged:{type:Function,optional:true,},togglerClass:{type:String,optional:true,},hotkey:{type:String,optional:true,},tooltip:{type:String,optional:true,},title:{type:String,optional:true,},position:{type:String,optional:true,},slots:{type:Object,optional:true,},showCaret:{type:Boolean,optional:true,},holdOnHover:{type:Boolean,optional:true,},container:{type:[Element,Function],optional:true,},};Dropdown.template="web.Dropdown";return __exports;});;

/* /web/static/src/core/dropdown/dropdown_item.js */
odoo.define('@web/core/dropdown/dropdown_item',['@web/core/dropdown/dropdown','@odoo/owl'],function(require){'use strict';let __exports={};const{DROPDOWN}=require("@web/core/dropdown/dropdown");const{Component}=require("@odoo/owl");const ParentClosingMode={None:"none",ClosestParent:"closest",AllParents:"all",};const DropdownItem=__exports.DropdownItem=class DropdownItem extends Component{onClick(ev){const{href,onSelected,parentClosingMode}=this.props;if(href){ev.preventDefault();}
if(onSelected){onSelected();}
const dropdown=this.env[DROPDOWN];if(!dropdown){return;}
const{ClosestParent,AllParents}=ParentClosingMode;switch(parentClosingMode){case ClosestParent:dropdown.close();break;case AllParents:dropdown.closeAllParents();break;}}
get dataAttributes(){const{dataset}=this.props;if(this.props.dataset){const attributes=Object.entries(dataset).map(([key,value])=>{return[`data-${key.replace(/[A-Z]/g, (char) => `-${char.toLowerCase()}`)}`,value];});return Object.fromEntries(attributes);}
return{};}}
DropdownItem.template="web.DropdownItem";DropdownItem.props={onSelected:{type:Function,optional:true,},class:{type:[String,Object],optional:true,},parentClosingMode:{type:ParentClosingMode,optional:true,},hotkey:{type:String,optional:true,},href:{type:String,optional:true,},slots:{type:Object,optional:true,},title:{type:String,optional:true,},dataset:{type:Object,optional:true,},};DropdownItem.defaultProps={parentClosingMode:ParentClosingMode.AllParents,};return __exports;});;

/* /web/static/src/core/dropdown/dropdown_navigation_hook.js */
odoo.define('@web/core/dropdown/dropdown_navigation_hook',['@web/core/utils/hooks','@web/core/browser/browser','@web/core/l10n/localization','@web/core/utils/scrolling','@odoo/owl','@web/core/dropdown/accordion_item'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{scrollTo}=require("@web/core/utils/scrolling");const{useChildSubEnv,useComponent,useEffect,useRef}=require("@odoo/owl");const{ACCORDION}=require("@web/core/dropdown/accordion_item");const ACTIVE_MENU_ELEMENT_CLASS="focus";const MENU_ELEMENTS_SELECTORS=[":scope > .dropdown-item",":scope > .dropdown",":scope > .o_accordion > .dropdown-item",":scope > .o_accordion > .o_accordion_values > .dropdown-item",":scope > .o_dropdown_container > .dropdown-item",":scope > .o_dropdown_container > .dropdown",":scope > .o_dropdown_container > .o_accordion > .dropdown-item",":scope > .o_dropdown_container > .o_accordion > .o_accordion_values > .dropdown-item",];const NEXT_ACTIVE_INDEX_FNS={FIRST:()=>0,LAST:(list)=>list.length-1,NEXT:(list,prevActiveIndex)=>(prevActiveIndex+1)%list.length,PREV:(list,prevActiveIndex)=>(prevActiveIndex<=0?list.length:prevActiveIndex)-1,};__exports.useDropdownNavigation=useDropdownNavigation;function useDropdownNavigation(){const comp=useComponent();if(comp.parentDropdown&&comp.props.toggler==="parent"){throw new Error("A nested Dropdown must use its standard toggler");}
const originalOnTogglerClick=comp.onTogglerClick.bind(comp);comp.onTogglerClick=(ev)=>{if(comp.parentDropdown&&!ev.__fromDropdownNavigation){return;}
originalOnTogglerClick();};const originalOnTogglerMouseEnter=comp.onTogglerMouseEnter.bind(comp);comp.onTogglerMouseEnter=()=>{if(comp.parentDropdown){return;}
originalOnTogglerMouseEnter();};let mouseSelectionActive=true;const menuRef=useRef("menuRef");let menuElements=[];let cleanupMenuElements;const refreshMenuElements=()=>{if(!comp.state.open){return;}
const addedListeners=[];const queryResult=menuRef.el.querySelectorAll(MENU_ELEMENTS_SELECTORS.join());for(const el of queryResult){const isSubDropdown=el.classList.contains("dropdown");const isSubDropdownOpen=()=>el.classList.contains("show");const navTarget=isSubDropdown?el.querySelector(":scope > .dropdown-toggle"):el;let subDropdownTimeout;const closeSubDropdown=()=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},200);};const openSubDropdown=(immediate=false)=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(!isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},immediate?0:200);};const makeOnlyActive=()=>{for(const menuElement of menuElements){if(menuElement.el===el){continue;}
menuElement.navTarget.classList.remove(ACTIVE_MENU_ELEMENT_CLASS);if(menuElement.isSubDropdown){menuElement.closeSubDropdown();}}
navTarget.classList.add(ACTIVE_MENU_ELEMENT_CLASS);navTarget.focus();};const menuElement={el,get isActive(){return navTarget.classList.contains(ACTIVE_MENU_ELEMENT_CLASS);},makeOnlyActive,navTarget,get isSubDropdownOpen(){return isSubDropdownOpen();},isSubDropdown,closeSubDropdown,openSubDropdown,};menuElements.push(menuElement);const elementListeners={mouseenter:()=>{if(!mouseSelectionActive){mouseSelectionActive=true;}else{makeOnlyActive();if(isSubDropdown){openSubDropdown();}}},};for(const[eventType,listener]of Object.entries(elementListeners)){navTarget.addEventListener(eventType,listener);}
addedListeners.push([navTarget,elementListeners]);}
cleanupMenuElements=()=>{menuElements=[];mouseSelectionActive=true;for(const[navTarget,listeners]of addedListeners){for(const[eventType,listener]of Object.entries(listeners)){navTarget.removeEventListener(eventType,listener);}}};return()=>cleanupMenuElements();};useEffect(refreshMenuElements);useChildSubEnv({[ACCORDION]:{accordionStateChanged:()=>{cleanupMenuElements?.();refreshMenuElements();},},});const getActiveMenuElement=()=>{return menuElements.find((menuElement)=>menuElement.isActive);};const setActiveMenuElement=(menuElement)=>{if(menuElements.length){if(typeof menuElement==="string"){const prevIndex=menuElements.indexOf(getActiveMenuElement());const nextIndex=NEXT_ACTIVE_INDEX_FNS[menuElement](menuElements,prevIndex);menuElement=menuElements[nextIndex];}
menuElement.makeOnlyActive();scrollTo(menuElement.el,{scrollable:menuElement.el.parentElement});}};useEffect((open)=>{if(open&&comp.parentDropdown){setActiveMenuElement("FIRST");}},()=>[comp.state.open]);const hotkeyService=useService("hotkey");const closeAndRefocus=()=>{const toFocus=comp.props.toggler==="parent"?comp.rootRef.el.parentElement:comp.rootRef.el.querySelector(":scope > .dropdown-toggle");comp.close().then(()=>{toFocus.focus();});};const closeSubDropdown=comp.parentDropdown?closeAndRefocus:()=>{};const openSubDropdown=()=>{const menuElement=getActiveMenuElement();if(menuElement&&menuElement.isSubDropdown){menuElement.openSubDropdown(true);}};const selectActiveMenuElement=()=>{const menuElement=getActiveMenuElement();if(menuElement){if(menuElement.isSubDropdown){menuElement.openSubDropdown(true);}else{menuElement.navTarget.click();}}};let hotkeyRemoves=[];const hotkeyCallbacks={home:()=>setActiveMenuElement("FIRST"),end:()=>setActiveMenuElement("LAST"),tab:()=>setActiveMenuElement("NEXT"),"shift+tab":()=>setActiveMenuElement("PREV"),arrowdown:()=>setActiveMenuElement("NEXT"),arrowup:()=>setActiveMenuElement("PREV"),arrowleft:localization.direction==="rtl"?openSubDropdown:closeSubDropdown,arrowright:localization.direction==="rtl"?closeSubDropdown:openSubDropdown,enter:selectActiveMenuElement,escape:closeAndRefocus,};useEffect((open)=>{if(!open){return;}
for(const[hotkey,callback]of Object.entries(hotkeyCallbacks)){const callbackWrapper=()=>{const hasOpenedSubDropdown=menuElements.some((m)=>m.isSubDropdownOpen);if(!hasOpenedSubDropdown){mouseSelectionActive=false;callback.call(comp);}};hotkeyRemoves.push(hotkeyService.add(hotkey,callbackWrapper,{allowRepeat:true}));}
return()=>{for(const removeHotkey of hotkeyRemoves){removeHotkey();}
hotkeyRemoves=[];};},()=>[comp.state.open]);}
return __exports;});;

/* /web/static/src/core/effects/effect_service.js */
odoo.define('@web/core/effects/effect_service',['@web/core/l10n/translation','@web/core/registry','@web/core/effects/rainbow_man'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{RainbowMan}=require("@web/core/effects/rainbow_man");const effectRegistry=registry.category("effects");function rainbowMan(env,params={}){let message=params.message;if(message instanceof jQuery){console.log("Providing a jQuery element to an effect is deprecated. Note that all event handlers will be lost.");message=message.html();}else if(message instanceof Element){console.log("Providing an HTML element to an effect is deprecated. Note that all event handlers will be lost.");message=message.outerHTML;}else if(!message){message=_t("Well Done!");}
if(env.services.user.showEffect){const props={imgUrl:params.img_url||"/web/static/img/smile.svg",fadeout:params.fadeout||"medium",message,Component:params.Component,props:params.props,};return{Component:RainbowMan,props};}
env.services.notification.add(message);}
effectRegistry.add("rainbow_man",rainbowMan);const effectService=__exports.effectService={dependencies:["overlay"],start(env,{overlay}){const add=(params={})=>{const type=params.type||"rainbow_man";const effect=effectRegistry.get(type);const{Component,props}=effect(env,params)||{};if(Component){const remove=overlay.add(Component,{...props,close:()=>remove(),});}};return{add};},};registry.category("services").add("effect",effectService);return __exports;});;

/* /web/static/src/core/effects/rainbow_man.js */
odoo.define('@web/core/effects/rainbow_man',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useEffect,useExternalListener,useState}=require("@odoo/owl");const RainbowMan=__exports.RainbowMan=class RainbowMan extends Component{setup(){useExternalListener(document.body,"click",this.closeRainbowMan);this.state=useState({isFading:false});this.delay=RainbowMan.rainbowFadeouts[this.props.fadeout];if(this.delay){useEffect(()=>{const timeout=browser.setTimeout(()=>{this.state.isFading=true;},this.delay);return()=>browser.clearTimeout(timeout);},()=>[]);}}
onAnimationEnd(ev){if(this.delay&&ev.animationName==="reward-fading-reverse"){ev.stopPropagation();this.closeRainbowMan();}}
closeRainbowMan(){this.props.close();}}
RainbowMan.template="web.RainbowMan";RainbowMan.props={fadeout:String,close:Function,message:String,imgUrl:String,Component:{type:Function,optional:true},props:{type:Object,optional:true},};RainbowMan.rainbowFadeouts={slow:4500,medium:3500,fast:2000,no:false};return __exports;});;

/* /web/static/src/core/emoji_picker/emoji_picker.js */
odoo.define('@web/core/emoji_picker/emoji_picker',['@web/core/utils/misc','@odoo/owl','@web/core/assets','@web/core/browser/browser','@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/utils/search','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{markEventHandled}=require("@web/core/utils/misc");const{Component,onMounted,onPatched,onWillDestroy,onWillPatch,onWillStart,onWillUnmount,useEffect,useRef,useState,}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{fuzzyLookup}=require("@web/core/utils/search");const{useAutofocus,useService}=require("@web/core/utils/hooks");__exports.useEmojiPicker=useEmojiPicker;function useEmojiPicker(ref,props,options={}){const targets=[];const popover=usePopover(EmojiPicker,{...options,animation:false});props.storeScroll={scrollValue:0,set:(value)=>{props.storeScroll.scrollValue=value;},get:()=>{return props.storeScroll.scrollValue;},};function add(ref,onSelect,{show=false}={}){const toggler=()=>toggle(ref,onSelect);targets.push([ref,toggler]);if(!ref.el){return;}
ref.el.addEventListener("click",toggler);ref.el.addEventListener("mouseenter",loadEmoji);if(show){ref.el.click();}}
function toggle(ref,onSelect=props.onSelect){if(popover.isOpen){popover.close();}else{popover.open(ref.el,{...props,onSelect});}}
if(ref){add(ref);}
onMounted(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.addEventListener("click",toggle);ref.el.addEventListener("mouseenter",loadEmoji);}});onWillPatch(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.removeEventListener("click",toggle);ref.el.removeEventListener("mouseenter",loadEmoji);}});onPatched(()=>{for(const[ref,toggle]of targets){if(!ref.el){continue;}
ref.el.addEventListener("click",toggle);ref.el.addEventListener("mouseenter",loadEmoji);}});return{add,get isOpen(){return popover.isOpen;},};}
const loader=__exports.loader={loadEmoji:()=>loadBundle("web.assets_emoji"),};__exports.loadEmoji=loadEmoji;async function loadEmoji(){try{await loader.loadEmoji();return odoo.loader.modules.get("@web/core/emoji_picker/emoji_data");}catch{return{emojis:[],categories:[]};}}
const EMOJI_PER_ROW=__exports.EMOJI_PER_ROW=9;const EmojiPicker=__exports.EmojiPicker=class EmojiPicker extends Component{static props=["close?","onClose?","onSelect","state?","storeScroll?"];static template="web.EmojiPicker";categories=null;emojis=null;shouldScrollElem=null;lastSearchTerm;setup(){this.gridRef=useRef("emoji-grid");this.ui=useState(useService("ui"));this.state=useState({activeEmojiIndex:0,categoryId:null,recent:JSON.parse(browser.localStorage.getItem("web.emoji.frequent")||"{}"),searchTerm:"",});const onStorage=(ev)=>{if(ev.key==="web.emoji.frequent"){this.state.recent=ev.newValue?JSON.parse(ev.newValue):{};}else if(ev.key===null){this.state.recent={};}};browser.addEventListener("storage",onStorage);onWillDestroy(()=>{browser.removeEventListener("storage",onStorage);});useAutofocus();onWillStart(async()=>{const{categories,emojis}=await loadEmoji();this.categories=categories;this.emojis=emojis;this.emojiByCodepoints=Object.fromEntries(this.emojis.map((emoji)=>[emoji.codepoints,emoji]));this.state.categoryId=this.categories[0]?.sortId;this.recentCategory={name:"Frequently used",displayName:_t("Frequently used"),title:"🕓",sortId:0,};});onMounted(()=>{if(this.emojis.length===0){return;}
this.highlightActiveCategory();if(this.props.storeScroll){this.gridRef.el.scrollTop=this.props.storeScroll.get();}});onPatched(()=>{if(this.emojis.length===0){return;}
if(this.shouldScrollElem){this.shouldScrollElem=false;const getElement=()=>this.gridRef.el.querySelector(`.o-EmojiPicker-category[data-category="${this.state.categoryId}"`);const elem=getElement();if(elem){elem.scrollIntoView();}else{this.shouldScrollElem=getElement;}}});useEffect(()=>{if(this.searchTerm){this.gridRef.el.scrollTop=0;this.state.categoryId=null;}else{if(this.lastSearchTerm){this.gridRef.el.scrollTop=0;}
this.highlightActiveCategory();}
this.lastSearchTerm=this.searchTerm;},()=>[this.searchTerm]);onWillUnmount(()=>{if(!this.gridRef.el){return;}
if(this.props.storeScroll){this.props.storeScroll.set(this.gridRef.el.scrollTop);}});}
get searchTerm(){return this.props.state?this.props.state.searchTerm:this.state.searchTerm;}
set searchTerm(value){if(this.props.state){this.props.state.searchTerm=value;}else{this.state.searchTerm=value;}}
get itemsNumber(){return this.recentEmojis.length+this.getEmojis().length;}
get recentEmojis(){return Object.entries(this.state.recent).sort(([,usage_1],[,usage_2])=>usage_2-usage_1).slice(0,42).map(([codepoints])=>this.emojiByCodepoints[codepoints]);}
onClick(ev){markEventHandled(ev,"emoji.selectEmoji");}
onKeydown(ev){switch(ev.key){case"ArrowUp":{const newIndex=this.state.activeEmojiIndex-EMOJI_PER_ROW;if(newIndex>=0){this.state.activeEmojiIndex=newIndex;}
break;}
case"ArrowDown":{const newIndex=this.state.activeEmojiIndex+EMOJI_PER_ROW;if(newIndex<this.itemsNumber){this.state.activeEmojiIndex=newIndex;}
break;}
case"ArrowRight":{if(this.state.activeEmojiIndex+1===this.itemsNumber){break;}
this.state.activeEmojiIndex++;ev.preventDefault();break;}
case"ArrowLeft":{const newIndex=Math.max(this.state.activeEmojiIndex-1,0);if(newIndex!==this.state.activeEmojiIndex){this.state.activeEmojiIndex=newIndex;ev.preventDefault();}
break;}
case"Enter":ev.preventDefault();this.gridRef.el.querySelector(`.o-EmojiPicker-content .o-Emoji[data-index="${this.state.activeEmojiIndex}"]`)?.click();break;case"Escape":this.props.close?.();this.props.onClose?.();ev.stopPropagation();}}
getEmojis(){if(this.searchTerm.length>1){return fuzzyLookup(this.searchTerm,this.emojis,(emoji)=>[emoji.name,...emoji.keywords,...emoji.emoticons,...emoji.shortcodes].join(" "));}
return this.emojis;}
selectCategory(ev){const id=Number(ev.currentTarget.dataset.id);this.searchTerm="";this.state.categoryId=id;this.shouldScrollElem=true;}
selectEmoji(ev){const codepoints=ev.currentTarget.dataset.codepoints;const resetOnSelect=!ev.shiftKey&&!this.ui.isSmall;this.props.onSelect(codepoints,resetOnSelect);this.state.recent[codepoints]??=0;this.state.recent[codepoints]++;browser.localStorage.setItem("web.emoji.frequent",JSON.stringify(this.state.recent));if(resetOnSelect){this.gridRef.el.scrollTop=0;this.props.close?.();this.props.onClose?.();}}
highlightActiveCategory(){if(!this.gridRef||!this.gridRef.el){return;}
const coords=this.gridRef.el.getBoundingClientRect();const res=document.elementFromPoint(coords.x,coords.y+1);if(!res){return;}
this.state.categoryId=parseInt(res.dataset.category);}}
return __exports;});;

/* /web/static/src/core/errors/error_dialogs.js */
odoo.define('@web/core/errors/error_dialogs',['@web/core/browser/browser','@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{capitalize}=require("@web/core/utils/strings");const{Component,useState,markup}=require("@odoo/owl");const standardErrorDialogProps=__exports.standardErrorDialogProps={traceback:{type:[String,{value:null}],optional:true},message:{type:String,optional:true},name:{type:String,optional:true},exceptionName:{type:[String,{value:null}],optional:true},data:{type:[Object,{value:null}],optional:true},subType:{type:[String,{value:null}],optional:true},code:{type:[Number,String,{value:null}],optional:true},type:{type:[String,{value:null}],optional:true},close:Function,};const odooExceptionTitleMap=__exports.odooExceptionTitleMap=new Map(Object.entries({"odoo.addons.base.models.ir_mail_server.MailDeliveryException":_t("MailDeliveryException"),"odoo.exceptions.AccessDenied":_t("Access Denied"),"odoo.exceptions.MissingError":_t("Missing Record"),"odoo.exceptions.UserError":_t("Invalid Operation"),"odoo.exceptions.ValidationError":_t("Validation Error"),"odoo.exceptions.AccessError":_t("Access Error"),"odoo.exceptions.Warning":_t("Warning"),}));const ErrorDialog=__exports.ErrorDialog=class ErrorDialog extends Component{setup(){this.state=useState({showTraceback:false,});}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.props.traceback}`);}}
ErrorDialog.template="web.ErrorDialog";ErrorDialog.components={Dialog};ErrorDialog.title=_t("Odoo Error");ErrorDialog.props={...standardErrorDialogProps};const ClientErrorDialog=__exports.ClientErrorDialog=class ClientErrorDialog extends ErrorDialog{}
ClientErrorDialog.title=_t("Odoo Client Error");const NetworkErrorDialog=__exports.NetworkErrorDialog=class NetworkErrorDialog extends ErrorDialog{}
NetworkErrorDialog.title=_t("Odoo Network Error");const RPCErrorDialog=__exports.RPCErrorDialog=class RPCErrorDialog extends ErrorDialog{setup(){super.setup();this.inferTitle();this.traceback=this.props.traceback;if(this.props.data&&this.props.data.debug){this.traceback=`${this.props.data.debug}\nThe above server error caused the following client error:\n${this.traceback}`;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){this.title=odooExceptionTitleMap.get(this.props.exceptionName).toString();return;}
if(!this.props.type){return;}
switch(this.props.type){case"server":this.title=_t("Odoo Server Error");break;case"script":this.title=_t("Odoo Client Error");break;case"network":this.title=_t("Odoo Network Error");break;}}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.traceback}`);}}
const WarningDialog=__exports.WarningDialog=class WarningDialog extends Component{setup(){this.title=this.inferTitle();const{data,message}=this.props;if(data&&data.arguments&&data.arguments.length>0){this.message=data.arguments[0];}else{this.message=message;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){return odooExceptionTitleMap.get(this.props.exceptionName).toString();}
return this.props.title||_t("Odoo Warning");}}
WarningDialog.template="web.WarningDialog";WarningDialog.components={Dialog};WarningDialog.props={...standardErrorDialogProps,title:{type:String,optional:true},};const RedirectWarningDialog=__exports.RedirectWarningDialog=class RedirectWarningDialog extends Component{setup(){this.actionService=useService("action");const{data,subType}=this.props;const[message,actionId,buttonText,additionalContext]=data.arguments;this.title=capitalize(subType)||_t("Odoo Warning");this.message=message;this.actionId=actionId;this.buttonText=buttonText;this.additionalContext=additionalContext;}
async onClick(){const options={};if(this.additionalContext){options.additionalContext=this.additionalContext;}
if(this.actionId.help){this.actionId.help=markup(this.actionId.help);}
await this.actionService.doAction(this.actionId,options);this.props.close();}}
RedirectWarningDialog.template="web.RedirectWarningDialog";RedirectWarningDialog.components={Dialog};RedirectWarningDialog.props={...standardErrorDialogProps};const Error504Dialog=__exports.Error504Dialog=class Error504Dialog extends Component{}
Error504Dialog.template="web.Error504Dialog";Error504Dialog.components={Dialog};Error504Dialog.title=_t("Request timeout");Error504Dialog.props={...standardErrorDialogProps};const SessionExpiredDialog=__exports.SessionExpiredDialog=class SessionExpiredDialog extends Component{onClick(){browser.location.reload();}}
SessionExpiredDialog.template="web.SessionExpiredDialog";SessionExpiredDialog.components={Dialog};SessionExpiredDialog.title=_t("Odoo Session Expired");SessionExpiredDialog.props={...standardErrorDialogProps};registry.category("error_dialogs").add("odoo.exceptions.AccessDenied",WarningDialog).add("odoo.exceptions.AccessError",WarningDialog).add("odoo.exceptions.MissingError",WarningDialog).add("odoo.exceptions.UserError",WarningDialog).add("odoo.exceptions.ValidationError",WarningDialog).add("odoo.exceptions.RedirectWarning",RedirectWarningDialog).add("odoo.http.SessionExpiredException",SessionExpiredDialog).add("werkzeug.exceptions.Forbidden",SessionExpiredDialog).add("504",Error504Dialog);return __exports;});;

/* /web/static/src/core/errors/error_handlers.js */
odoo.define('@web/core/errors/error_handlers',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/network/rpc_service','@web/core/registry','@web/core/errors/error_dialogs','@web/core/errors/error_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc_service");const{registry}=require("@web/core/registry");const{ClientErrorDialog,ErrorDialog,NetworkErrorDialog,RPCErrorDialog,}=require("@web/core/errors/error_dialogs");const{UncaughtClientError,UncaughtCorsError,UncaughtPromiseError}=require("@web/core/errors/error_service");const errorHandlerRegistry=registry.category("error_handlers");const errorDialogRegistry=registry.category("error_dialogs");const errorNotificationRegistry=registry.category("error_notifications");__exports.rpcErrorHandler=rpcErrorHandler;function rpcErrorHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof RPCError){error.unhandledRejectionEvent.preventDefault();const exceptionName=originalError.exceptionName;let ErrorComponent=originalError.Component;if(!ErrorComponent&&exceptionName){if(errorNotificationRegistry.contains(exceptionName)){const notif=errorNotificationRegistry.get(exceptionName);env.services.notification.add(notif.message||originalError.data.message,notif);return true;}
if(errorDialogRegistry.contains(exceptionName)){ErrorComponent=errorDialogRegistry.get(exceptionName);}}
if(!ErrorComponent&&originalError.data.context){const exceptionClass=originalError.data.context.exception_class;if(errorDialogRegistry.contains(exceptionClass)){ErrorComponent=errorDialogRegistry.get(exceptionClass);}}
env.services.dialog.add(ErrorComponent||RPCErrorDialog,{traceback:error.traceback,message:originalError.message,name:originalError.name,exceptionName:originalError.exceptionName,data:originalError.data,subType:originalError.subType,code:originalError.code,type:originalError.type,});return true;}}
errorHandlerRegistry.add("rpcErrorHandler",rpcErrorHandler,{sequence:97});let connectionLostNotifRemove=null;__exports.lostConnectionHandler=lostConnectionHandler;function lostConnectionHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof ConnectionLostError){if(connectionLostNotifRemove){return true;}
connectionLostNotifRemove=env.services.notification.add(_t("Connection lost. Trying to reconnect..."),{sticky:true});let delay=2000;browser.setTimeout(function checkConnection(){env.services.rpc("/web/webclient/version_info",{}).then(function(){if(connectionLostNotifRemove){connectionLostNotifRemove();connectionLostNotifRemove=null;}
env.services.notification.add(_t("Connection restored. You are back online."),{type:"info",});}).catch(()=>{delay=delay*1.5+500*Math.random();browser.setTimeout(checkConnection,delay);});},delay);return true;}}
errorHandlerRegistry.add("lostConnectionHandler",lostConnectionHandler,{sequence:98});const defaultDialogs=new Map([[UncaughtClientError,ClientErrorDialog],[UncaughtPromiseError,ClientErrorDialog],[UncaughtCorsError,NetworkErrorDialog],]);__exports.defaultHandler=defaultHandler;function defaultHandler(env,error){const DialogComponent=defaultDialogs.get(error.constructor)||ErrorDialog;env.services.dialog.add(DialogComponent,{traceback:error.traceback,message:error.message,name:error.name,});return true;}
errorHandlerRegistry.add("defaultHandler",defaultHandler,{sequence:100});return __exports;});;

/* /web/static/src/core/errors/error_service.js */
odoo.define('@web/core/errors/error_service',['@web/core/browser/feature_detection','@web/core/browser/browser','@web/core/registry','@web/core/errors/error_utils'],function(require){'use strict';let __exports={};const{isBrowserFirefox}=require("@web/core/browser/feature_detection");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{completeUncaughtError,getErrorTechnicalName}=require("@web/core/errors/error_utils");const UncaughtError=__exports.UncaughtError=class UncaughtError extends Error{constructor(message){super(message);this.name=getErrorTechnicalName(this);this.traceback=null;}}
const UncaughtClientError=__exports.UncaughtClientError=class UncaughtClientError extends UncaughtError{constructor(message="Uncaught Javascript Error"){super(message);}}
const UncaughtPromiseError=__exports.UncaughtPromiseError=class UncaughtPromiseError extends UncaughtError{constructor(message="Uncaught Promise"){super(message);this.unhandledRejectionEvent=null;}}
const UncaughtCorsError=__exports.UncaughtCorsError=class UncaughtCorsError extends UncaughtError{constructor(message="Uncaught CORS Error"){super(message);}}
const errorService=__exports.errorService={start(env){function handleError(uncaughtError,retry=true){let originalError=uncaughtError;while(originalError instanceof Error&&"cause"in originalError){originalError=originalError.cause;}
for(const[name,handler]of registry.category("error_handlers").getEntries()){try{if(handler(env,uncaughtError,originalError)){break;}}catch(e){console.error(`A crash occured in error handler ${name} while handling ${uncaughtError}:`,e);return;}}
if(uncaughtError.event&&!uncaughtError.event.defaultPrevented&&uncaughtError.traceback){uncaughtError.event.preventDefault();console.error(uncaughtError.traceback);}}
browser.addEventListener("error",async(ev)=>{const{colno,error,filename,lineno,message}=ev;const errorsToIgnore=["ResizeObserver loop completed with undelivered notifications.","ResizeObserver loop limit exceeded",];if(!error&&errorsToIgnore.includes(message)){return;}
const isRedactedError=!filename&&!lineno&&!colno;const isThirdPartyScriptError=isRedactedError||(isBrowserFirefox()&&new URL(filename).origin!==window.location.origin);if(isThirdPartyScriptError&&!odoo.debug){return;}
let uncaughtError;if(isRedactedError){uncaughtError=new UncaughtCorsError();uncaughtError.traceback=`Unknown CORS error\n\n`+`An unknown CORS error occured.\n`+`The error probably originates from a JavaScript file served from a different origin.\n`+`(Opening your browser console might give you a hint on the error.)`;}else{uncaughtError=new UncaughtClientError();uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}}
uncaughtError.cause=error;handleError(uncaughtError);});browser.addEventListener("unhandledrejection",async(ev)=>{const error=ev.reason;const uncaughtError=new UncaughtPromiseError();uncaughtError.unhandledRejectionEvent=ev;uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}
uncaughtError.cause=error;handleError(uncaughtError);});},};registry.category("services").add("error",errorService,{sequence:1});return __exports;});;

/* /web/static/src/core/errors/error_utils.js */
odoo.define('@web/core/errors/error_utils',['@web/core/assets'],function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");function combineErrorNames(uncaughtError,originalError){const originalErrorName=getErrorTechnicalName(originalError);const uncaughtErrorName=getErrorTechnicalName(uncaughtError);if(originalErrorName===Error.name){return uncaughtErrorName;}else{return`${uncaughtErrorName} > ${originalErrorName}`;}}
__exports.fullTraceback=fullTraceback;function fullTraceback(error){let traceback=formatTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
            current instanceof Error ? formatTraceback(current) : current
        }`;current=current.cause;}
return traceback;}
__exports.fullAnnotatedTraceback=fullAnnotatedTraceback;async function fullAnnotatedTraceback(error){if(error.annotatedTraceback){return error.annotatedTraceback;}
if(error.errorEvent){error.errorEvent.preventDefault();}
let traceback;try{traceback=await annotateTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
                current instanceof Error ? await annotateTraceback(current) : current
            }`;current=current.cause;}}catch(e){console.warn("Failed to annotate traceback for error:",error,"failure reason:",e);traceback=fullTraceback(error);}
error.annotatedTraceback=traceback;if(error.errorEvent){throw error;}
return traceback;}
__exports.completeUncaughtError=completeUncaughtError;async function completeUncaughtError(uncaughtError,originalError,annotated=false){uncaughtError.name=combineErrorNames(uncaughtError,originalError);if(annotated){uncaughtError.traceback=await fullAnnotatedTraceback(originalError);}else{uncaughtError.traceback=fullTraceback(originalError);}
if(originalError.message){uncaughtError.message=`${uncaughtError.message} > ${originalError.message}`;}
uncaughtError.cause=originalError;}
__exports.getErrorTechnicalName=getErrorTechnicalName;function getErrorTechnicalName(error){return error.name!==Error.name?error.name:error.constructor.name;}
__exports.formatTraceback=formatTraceback;function formatTraceback(error){let traceback=error.stack;const errorName=getErrorTechnicalName(error);const descriptionLine=`${errorName}: ${error.message}`;if(error.stack.split("\n")[0].trim()!==descriptionLine){traceback=`${descriptionLine}\n${error.stack}`.replace(/\n/g,"\n    ");}
return traceback;}
__exports.annotateTraceback=annotateTraceback;async function annotateTraceback(error){const traceback=formatTraceback(error);try{await loadJS("/web/static/lib/stacktracejs/stacktrace.js");}catch{return traceback;}
if(error.stack){const regex=/ line (\d*) > (Function):(\d*)/gm;const subst=`:$1`;error.stack=error.stack.replace(regex,subst);}
let frames;try{frames=await StackTrace.fromError(error);}catch(e){console.warn("The following error could not be annotated:",error,e);return traceback;}
const lines=traceback.split("\n");if(lines[lines.length-1].trim()===""){lines.splice(-1);}
let lineIndex=0;let frameIndex=0;while(frameIndex<frames.length){const line=lines[lineIndex];if(!line.match(/:\d+:\d+\)?$/)){lineIndex++;continue;}
const frame=frames[frameIndex];const info=` (${frame.fileName}:${frame.lineNumber})`;lines[lineIndex]=line+info;lineIndex++;frameIndex++;}
return lines.join("\n");}
return __exports;});;

/* /web/static/src/core/errors/scss_error_dialog.js */
odoo.define('@web/core/errors/scss_error_dialog',['@web/core/browser/browser','@web/core/registry','@web/core/l10n/translation','@web/core/utils/urls'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{_t,translationIsReady}=require("@web/core/l10n/translation");const{getOrigin}=require("@web/core/utils/urls");const scssErrorNotificationService={dependencies:["notification"],start(env,{notification}){const origin=getOrigin();const assets=[...document.styleSheets].filter((sheet)=>{return(sheet.href?.includes("/web")&&sheet.href?.includes("/assets/")&&new URL(sheet.href,browser.location.origin).origin===origin);});translationIsReady.then(()=>{for(const asset of assets){let cssRules;try{cssRules=asset.cssRules;}catch{continue;}
const lastRule=cssRules?.[cssRules?.length-1];if(lastRule?.selectorText==="css_error_message"){const message=_t("The style compilation failed. This is an administrator or developer error that must be fixed for the entire database before continuing working. See browser console or server logs for details.");notification.add(message,{title:_t("Style error"),sticky:true,type:"danger",});console.log(lastRule.style.content.replaceAll("\\a","\n").replaceAll("\\*","*").replaceAll(`\\"`,`"`));}}});},};registry.category("services").add("scss_error_display",scssErrorNotificationService);return __exports;});;

/* /web/static/src/core/expression_editor/expression_editor.js */
odoo.define('@web/core/expression_editor/expression_editor',['@odoo/owl','@web/core/expression_editor/expression_editor_operator_editor','@web/core/tree_editor/condition_tree','@web/core/tree_editor/tree_editor','@web/core/tree_editor/tree_editor_operator_editor','@web/core/tree_editor/tree_editor_value_editors','@web/core/tree_editor/utils','@web/core/model_field_selector/model_field_selector','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{getExpressionDisplayedOperators}=require("@web/core/expression_editor/expression_editor_operator_editor");const{condition,expressionFromTree,treeFromExpression,}=require("@web/core/tree_editor/condition_tree");const{TreeEditor}=require("@web/core/tree_editor/tree_editor");const{getOperatorEditorInfo}=require("@web/core/tree_editor/tree_editor_operator_editor");const{getDefaultValue}=require("@web/core/tree_editor/tree_editor_value_editors");const{getDefaultPath}=require("@web/core/tree_editor/utils");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{_t}=require("@web/core/l10n/translation");function getDefaultCondition(fieldDefs){const defaultPath=getDefaultPath(fieldDefs);const fieldDef=fieldDefs[defaultPath];const operator=getExpressionDisplayedOperators(fieldDef)[0];const value=getDefaultValue(fieldDef,operator);return condition(fieldDef.name,operator,value);}
const ExpressionEditor=__exports.ExpressionEditor=class ExpressionEditor extends Component{static template="web.ExpressionEditor";static components={TreeEditor};static props={resModel:String,fields:Object,expression:String,update:Function,};setup(){onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));}
async onPropsUpdated(props){this.filteredFields=Object.fromEntries(Object.entries(props.fields).filter(([_,fieldDef])=>fieldDef.type!=="properties"));this.defaultCondition=getDefaultCondition(this.filteredFields);try{this.tree=treeFromExpression(props.expression,{getFieldDef:(name)=>this.getFieldDef(name,props),distributeNot:!this.isDebugMode,});}catch{this.tree=null;}}
getFieldDef(name,props=this.props){if(typeof name==="string"){return props.fields[name]||null;}
return null;}
getDefaultOperator(fieldDef){return getExpressionDisplayedOperators(fieldDef)[0];}
getOperatorEditorInfo(node){const fieldDef=this.getFieldDef(node.path);const operators=getExpressionDisplayedOperators(fieldDef);return getOperatorEditorInfo(operators);}
getPathEditorInfo(){return{component:ModelFieldSelector,extractProps:({value,update})=>({path:value,update,resModel:this.props.resModel,readonly:false,filter:(fieldDef)=>fieldDef.name in this.filteredFields,showDebugInput:false,followRelations:false,isDebugMode:this.isDebugMode,}),isSupported:(value)=>[0,1].includes(value)||value in this.filteredFields,stringify:(value)=>this.props.fields[value].string,defaultValue:()=>this.defaultCondition.path,message:_t("Field properties not supported"),};}
get isDebugMode(){return!!this.env.debug;}
onExpressionChange(expression){this.props.update(expression);}
resetExpression(){this.props.update("True");}
update(tree){const expression=expressionFromTree(tree,{getFieldDef:(name)=>this.getFieldDef(name),});this.props.update(expression);}}
return __exports;});;

/* /web/static/src/core/expression_editor/expression_editor_operator_editor.js */
odoo.define('@web/core/expression_editor/expression_editor_operator_editor',['@web/core/domain_selector/domain_selector_operator_editor'],function(require){'use strict';let __exports={};const{getDomainDisplayedOperators}=require("@web/core/domain_selector/domain_selector_operator_editor");const EXPRESSION_VALID_OPERATORS=["<","<=",">",">=","between","in","not in","=","!=","set","not_set","is","is_not",];__exports.getExpressionDisplayedOperators=getExpressionDisplayedOperators;function getExpressionDisplayedOperators(fieldDef){const operators=getDomainDisplayedOperators(fieldDef);return operators.filter((operator)=>EXPRESSION_VALID_OPERATORS.includes(operator));}
return __exports;});;

/* /web/static/src/core/expression_editor_dialog/expression_editor_dialog.js */
odoo.define('@web/core/expression_editor_dialog/expression_editor_dialog',['@odoo/owl','@web/core/dialog/dialog','@web/core/expression_editor/expression_editor','@web/core/py_js/py','@web/core/utils/hooks','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{ExpressionEditor}=require("@web/core/expression_editor/expression_editor");const{evaluateExpr}=require("@web/core/py_js/py");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const ExpressionEditorDialog=__exports.ExpressionEditorDialog=class ExpressionEditorDialog extends Component{static components={Dialog,ExpressionEditor};static template="web.ExpressionEditorDialog";static props={close:Function,resModel:String,fields:Object,expression:String,onConfirm:Function,};setup(){this.notification=useService("notification");this.user=useService("user");this.state=useState({expression:this.props.expression,});this.confirmButtonRef=useRef("confirm");}
get expressionEditorProps(){return{resModel:this.props.resModel,fields:this.props.fields,expression:this.state.expression,update:(expression)=>{this.state.expression=expression;},};}
makeDefaultRecord(){const record={};for(const[name,{type}]of Object.entries(this.props.fields)){switch(type){case"integer":case"float":case"monetary":record[name]=name==="id"?false:0;break;case"one2many":case"many2many":record[name]=[];break;default:record[name]=false;}}
return record;}
async onConfirm(){this.confirmButtonRef.el.disabled=true;const record=this.makeDefaultRecord();const evalContext={...this.user.context,...record};try{evaluateExpr(this.state.expression,evalContext);}catch{if(this.confirmButtonRef.el){this.confirmButtonRef.el.disabled=false;}
this.notification.add(_t("Expression is invalid. Please correct it"),{type:"danger",});return;}
this.props.onConfirm(this.state.expression);this.props.close();}
onDiscard(){this.props.close();}}
return __exports;});;

/* /web/static/src/core/field_service.js */
odoo.define('@web/core/field_service',['@web/core/utils/cache','@web/core/domain','@web/core/registry'],function(require){'use strict';let __exports={};const{Cache}=require("@web/core/utils/cache");const{Domain}=require("@web/core/domain");const{registry}=require("@web/core/registry");const fieldService=__exports.fieldService={dependencies:["orm"],async:["loadFields","loadPath","loadPropertyDefinitions"],start(env,{orm}){const cache=new Cache((resModel,options)=>{return orm.call(resModel,"fields_get",[options.fieldNames,options.attributes]).catch((error)=>{cache.clear(resModel,options);return Promise.reject(error);});},(resModel,options)=>JSON.stringify([resModel,options.fieldNames,options.attributes]));env.bus.addEventListener("CLEAR-CACHES",()=>cache.invalidate());async function loadFields(resModel,options={}){if(typeof resModel!=="string"||!resModel){throw new Error(`Invalid model name: ${resModel}`);}
return cache.read(resModel,options);}
async function _loadPropertyDefinitions(fieldDefs,name,domain=[]){const{definition_record:definitionRecord,definition_record_field:definitionRecordField,}=fieldDefs[name];const definitionRecordModel=fieldDefs[definitionRecord].relation;domain=Domain.and([[[definitionRecordField,"!=",false]],domain]).toList();const result=await orm.webSearchRead(definitionRecordModel,domain,{specification:{display_name:{},[definitionRecordField]:{},},});const definitions={};for(const record of result.records){for(const definition of record[definitionRecordField]){definitions[definition.name]={is_property:true,searchable:true,record_id:record.id,record_name:record.display_name,...definition,};}}
return definitions;}
async function loadPropertyDefinitions(resModel,fieldName,domain){const fieldDefs=await loadFields(resModel);return _loadPropertyDefinitions(fieldDefs,fieldName,domain);}
async function _loadPath(resModel,fieldDefs,names){if(!fieldDefs){return{isInvalid:"path",names,modelsInfo:[]};}
const[name,...remainingNames]=names;const modelsInfo=[{resModel,fieldDefs}];if(resModel==="*"&&remainingNames.length){return{isInvalid:"path",names,modelsInfo};}
const fieldDef=fieldDefs[name];if((name!=="*"&&!fieldDef)||(name==="*"&&remainingNames.length)){return{isInvalid:"path",names,modelsInfo};}
if(!remainingNames.length){return{names,modelsInfo};}
let subResult;if(fieldDef.relation){subResult=await _loadPath(fieldDef.relation,await loadFields(fieldDef.relation),remainingNames);}else if(fieldDef.type==="properties"){subResult=await _loadPath("*",await _loadPropertyDefinitions(fieldDefs,name),remainingNames);}
if(subResult){const result={names,modelsInfo:[...modelsInfo,...subResult.modelsInfo],};if(subResult.isInvalid){result.isInvalid="path";}
return result;}
return{isInvalid:"path",names,modelsInfo};}
async function loadPath(resModel,path="*"){const fieldDefs=await loadFields(resModel);if(typeof path!=="string"||!path){throw new Error(`Invalid path: ${path}`);}
return _loadPath(resModel,fieldDefs,path.split("."));}
return{loadFields,loadPath,loadPropertyDefinitions};},};registry.category("services").add("field",fieldService);return __exports;});;

/* /web/static/src/core/file_input/file_input.js */
odoo.define('@web/core/file_input/file_input',['@web/core/utils/hooks','@odoo/owl','@web/core/utils/files'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Component,onMounted,useRef,useState}=require("@odoo/owl");const{checkFileSize}=require("@web/core/utils/files");const FileInput=__exports.FileInput=class FileInput extends Component{setup(){this.http=useService("http");this.notification=useService("notification");this.fileInputRef=useRef("file-input");this.state=useState({isDisable:false,});onMounted(()=>{if(this.props.autoOpen){this.onTriggerClicked();}});}
get httpParams(){const{resId,resModel}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(resModel){params.model=resModel;}
if(resId!==undefined){params.id=resId;}
return params;}
async uploadFiles(params){if((params.ufile&&params.ufile.length)||params.file){const fileSize=(params.ufile&&params.ufile[0].size)||params.file.size;if(!checkFileSize(fileSize,this.notification)){return null;}}
const fileData=await this.http.post(this.props.route,params,"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
return parsedFileData;}
async onFileInputChange(){this.state.isDisable=true;const parsedFileData=await this.uploadFiles(this.httpParams);if(parsedFileData){this.props.onUpload(parsedFileData,this.fileInputRef.el?this.fileInputRef.el.files:[]);this.fileInputRef.el.value=null;}
this.state.isDisable=false;}
async onTriggerClicked(){if(await this.props.beforeOpen()){this.fileInputRef.el.click();}}}
FileInput.defaultProps={acceptedFileExtensions:"*",hidden:false,multiUpload:false,onUpload:()=>{},route:"/web/binary/upload_attachment",beforeOpen:async()=>true,};FileInput.props={acceptedFileExtensions:{type:String,optional:true},autoOpen:{type:Boolean,optional:true},hidden:{type:Boolean,optional:true},multiUpload:{type:Boolean,optional:true},onUpload:{type:Function,optional:true},beforeOpen:{type:Function,optional:true},resId:{type:Number,optional:true},resModel:{type:String,optional:true},route:{type:String,optional:true},"*":true,};FileInput.template="web.FileInput";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_bar.js */
odoo.define('@web/core/file_upload/file_upload_progress_bar',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component}=require("@odoo/owl");const FileUploadProgressBar=__exports.FileUploadProgressBar=class FileUploadProgressBar extends Component{setup(){this.dialogService=useService("dialog");}
onCancel(){if(!this.props.fileUpload.xhr){return;}
this.dialogService.add(ConfirmationDialog,{body:_t("Do you really want to cancel the upload of %s?",this.props.fileUpload.title),confirm:()=>{this.props.fileUpload.xhr.abort();},});}}
FileUploadProgressBar.props={fileUpload:{type:Object},};FileUploadProgressBar.template="web.FileUploadProgressBar";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_container.js */
odoo.define('@web/core/file_upload/file_upload_progress_container',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const FileUploadProgressContainer=__exports.FileUploadProgressContainer=class FileUploadProgressContainer extends Component{}
FileUploadProgressContainer.template="web.FileUploadProgressContainer";FileUploadProgressContainer.props={Component:{optional:false},shouldDisplay:{type:Function,optional:true},fileUploads:{type:Object},};return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_record.js */
odoo.define('@web/core/file_upload/file_upload_progress_record',['@web/core/l10n/translation','@web/core/file_upload/file_upload_progress_bar','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{FileUploadProgressBar}=require("@web/core/file_upload/file_upload_progress_bar");const{Component}=require("@odoo/owl");const FileUploadProgressRecord=__exports.FileUploadProgressRecord=class FileUploadProgressRecord extends Component{getProgressTexts(){const fileUpload=this.props.fileUpload;const percent=Math.round(fileUpload.progress*100);if(percent===100){return{left:_t("Processing..."),right:"",};}else{const mbLoaded=Math.round(fileUpload.loaded/1000000);const mbTotal=Math.round(fileUpload.total/1000000);return{left:_t("Uploading... (%s%)",percent),right:_t("(%s/%sMB)",mbLoaded,mbTotal),};}}}
FileUploadProgressRecord.components={FileUploadProgressBar,};const FileUploadProgressKanbanRecord=__exports.FileUploadProgressKanbanRecord=class FileUploadProgressKanbanRecord extends FileUploadProgressRecord{}
FileUploadProgressKanbanRecord.template="web.FileUploadProgressKanbanRecord";const FileUploadProgressDataRow=__exports.FileUploadProgressDataRow=class FileUploadProgressDataRow extends FileUploadProgressRecord{}
FileUploadProgressDataRow.template="web.FileUploadProgressDataRow";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_service.js */
odoo.define('@web/core/file_upload/file_upload_service',['@web/core/l10n/translation','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{EventBus,reactive}=require("@odoo/owl");const fileUploadService=__exports.fileUploadService={dependencies:["notification"],createXhr(){return new window.XMLHttpRequest();},start(env,{notificationService}){const uploads=reactive({});let nextId=1;const bus=new EventBus();const upload=async(route,files,params={})=>{const xhr=this.createXhr();xhr.open("POST",route);const formData=new FormData();formData.append("csrf_token",odoo.csrf_token);for(const file of files){formData.append("ufile",file);}
if(params.buildFormData){params.buildFormData(formData);}
const upload=reactive({id:nextId++,xhr,data:formData,progress:0,loaded:0,total:0,state:"pending",title:files.length===1?files[0].name:_t("%s Files",files.length),type:files.length===1?files[0].type:undefined,});uploads[upload.id]=upload;xhr.upload.addEventListener("progress",async(ev)=>{upload.progress=ev.loaded/ev.total;upload.loaded=ev.loaded;upload.total=ev.total;upload.state="loading";});xhr.addEventListener("load",()=>{delete uploads[upload.id];upload.state="loaded";bus.trigger("FILE_UPLOAD_LOADED",{upload});});xhr.addEventListener("error",async()=>{delete uploads[upload.id];upload.state="error";if(params.displayErrorNotification!==undefined&&params.displayErrorNotification){notificationService.add(_t("An error occured while uploading."),{title:_t("Error"),sticky:true,});}
bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.addEventListener("abort",async()=>{delete uploads[upload.id];upload.state="abort";bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.send(formData);bus.trigger("FILE_UPLOAD_ADDED",{upload});return upload;};return{bus,upload,uploads};},};registry.category("services").add("file_upload",fileUploadService);return __exports;});;

/* /web/static/src/core/file_viewer/file_model.js */
odoo.define('@web/core/file_viewer/file_model',['@web/core/utils/urls'],function(require){'use strict';let __exports={};const{url}=require("@web/core/utils/urls");const FileModelMixin=__exports.FileModelMixin=T=>class extends T{accessToken;checksum;extension;filename;id;mimetype;name;type;tmpUrl;url;uploading;get defaultSource(){const route=url(this.urlRoute,this.urlQueryParams);const encodedRoute=encodeURIComponent(route);if(this.isPdf){return`/web/static/lib/pdfjs/web/viewer.html?file=${encodedRoute}#pagemode=none`;}
if(this.isUrlYoutube){const urlArr=this.url.split("/");let token=urlArr[urlArr.length-1];if(token.includes("watch")){token=token.split("v=")[1];const amp=token.indexOf("&");if(amp!==-1){token=token.substring(0,amp);}}
return`https://www.youtube.com/embed/${token}`;}
return route;}
get displayName(){return this.name||this.filename;}
get downloadUrl(){return url(this.urlRoute,{...this.urlQueryParams,download:true});}
get isImage(){const imageMimetypes=["image/bmp","image/gif","image/jpeg","image/png","image/svg+xml","image/tiff","image/x-icon","image/webp",];return imageMimetypes.includes(this.mimetype);}
get isPdf(){return this.mimetype&&this.mimetype.startsWith("application/pdf");}
get isText(){const textMimeType=["application/javascript","application/json","text/css","text/html","text/plain",];return textMimeType.includes(this.mimetype);}
get isUrl(){return this.type==="url"&&this.url;}
get isUrlYoutube(){return!!this.url&&this.url.includes("youtu");}
get isVideo(){const videoMimeTypes=["audio/mpeg","video/x-matroska","video/mp4","video/webm"];return videoMimeTypes.includes(this.mimetype);}
get isViewable(){return((this.isText||this.isImage||this.isVideo||this.isPdf||this.isUrlYoutube)&&!this.uploading);}
get urlQueryParams(){if(this.uploading&&this.tmpUrl){return{};}
const params={access_token:this.accessToken,filename:this.name,unique:this.checksum,};for(const prop in params){if(!params[prop]){delete params[prop];}}
return params;}
get urlRoute(){if(this.isUrl){return this.url;}
if(this.uploading&&this.tmpUrl){return this.tmpUrl;}
return this.isImage?`/web/image/${this.id}`:`/web/content/${this.id}`;}}
const FileModel=__exports.FileModel=class FileModel extends FileModelMixin(Object){}
return __exports;});;

/* /web/static/src/core/file_viewer/file_viewer.js */
odoo.define('@web/core/file_viewer/file_viewer',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useRef,useState}=require("@odoo/owl");const{useAutofocus,useService}=require("@web/core/utils/hooks");const FileViewer=__exports.FileViewer=class FileViewer extends Component{static template="web.FileViewer";static components={};static props=["files","startIndex","close?","modal?"];static defaultProps={modal:true,};setup(){useAutofocus();this.imageRef=useRef("image");this.zoomerRef=useRef("zoomer");this.isDragging=false;this.dragStartX=0;this.dragStartY=0;this.scrollZoomStep=0.1;this.zoomStep=0.5;this.minScale=0.5;this.translate={dx:0,dy:0,x:0,y:0,};this.state=useState({index:this.props.startIndex,file:this.props.files[this.props.startIndex],imageLoaded:false,scale:1,angle:0,});this.ui=useState(useService("ui"));}
onImageLoaded(){this.state.imageLoaded=true;}
close(){this.props.close&&this.props.close();}
next(){const last=this.props.files.length-1;this.activateFile(this.state.index===last?0:this.state.index+1);}
previous(){const last=this.props.files.length-1;this.activateFile(this.state.index===0?last:this.state.index-1);}
activateFile(index){this.state.index=index;this.state.file=this.props.files[index];}
onKeydown(ev){switch(ev.key){case"ArrowRight":this.next();break;case"ArrowLeft":this.previous();break;case"Escape":this.close();break;case"q":this.close();break;}
if(this.state.file.isImage){switch(ev.key){case"r":this.rotate();break;case"+":this.zoomIn();break;case"-":this.zoomOut();break;case"0":this.resetZoom();break;}}}
onWheelImage(ev){if(ev.deltaY>0){this.zoomOut({scroll:true});}else{this.zoomIn({scroll:true});}}
onMousedownImage(ev){if(this.isDragging){return;}
if(ev.button!==0){return;}
this.isDragging=true;this.dragStartX=ev.clientX;this.dragStartY=ev.clientY;}
onMouseupImage(){if(!this.isDragging){return;}
this.isDragging=false;this.translate.x+=this.translate.dx;this.translate.y+=this.translate.dy;this.translate.dx=0;this.translate.dy=0;this.updateZoomerStyle();}
onMousemoveView(ev){if(!this.isDragging){return;}
this.translate.dx=ev.clientX-this.dragStartX;this.translate.dy=ev.clientY-this.dragStartY;this.updateZoomerStyle();}
resetZoom(){this.state.scale=1;this.updateZoomerStyle();}
rotate(){this.state.angle+=90;}
zoomIn({scroll=false}={}){this.state.scale=this.state.scale+(scroll?this.scrollZoomStep:this.zoomStep);this.updateZoomerStyle();}
zoomOut({scroll=false}={}){if(this.state.scale===this.minScale){return;}
const unflooredAdaptedScale=this.state.scale-(scroll?this.scrollZoomStep:this.zoomStep);this.state.scale=Math.max(this.minScale,unflooredAdaptedScale);this.updateZoomerStyle();}
updateZoomerStyle(){const tx=this.imageRef.el.offsetWidth*this.state.scale>this.zoomerRef.el.offsetWidth?this.translate.x+this.translate.dx:0;const ty=this.imageRef.el.offsetHeight*this.state.scale>this.zoomerRef.el.offsetHeight?this.translate.y+this.translate.dy:0;if(tx===0){this.translate.x=0;}
if(ty===0){this.translate.y=0;}
this.zoomerRef.el.style="transform: "+`translate(${tx}px, ${ty}px)`;}
get imageStyle(){let style="transform: "+`scale3d(${this.state.scale}, ${this.state.scale}, 1) `+`rotate(${this.state.angle}deg);`;if(this.state.angle%180!==0){style+=`max-height: ${window.innerWidth}px; max-width: ${window.innerHeight}px;`;}else{style+="max-height: 100%; max-width: 100%;";}
return style;}
onClickPrint(){const printWindow=window.open("about:blank","_new");printWindow.document.open();printWindow.document.write(`
                <html>
                    <head>
                        <script>
                            function onloadImage() {
                                setTimeout('printImage()', 10);
                            }
                            function printImage() {
                                window.print();
                                window.close();
                            }
                        </script>
                    </head>
                    <body onload='onloadImage()'>
                        <img src="${this.state.file.defaultSource}" alt=""/>
                    </body>
                </html>`);printWindow.document.close();}}
return __exports;});;

/* /web/static/src/core/file_viewer/file_viewer_hook.js */
odoo.define('@web/core/file_viewer/file_viewer_hook',['@odoo/owl','@web/core/registry','@web/core/file_viewer/file_viewer'],function(require){'use strict';let __exports={};const{onWillDestroy}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{FileViewer}=require("@web/core/file_viewer/file_viewer");let id=1;__exports.useFileViewer=useFileViewer;function useFileViewer(){const fileViewerId=`web.file_viewer${id++}`;function open(file,files=[file]){if(!file.isViewable){return;}
if(files.length>0){const viewableFiles=files.filter((file)=>file.isViewable);const index=viewableFiles.indexOf(file);registry.category("main_components").add(fileViewerId,{Component:FileViewer,props:{files:viewableFiles,startIndex:index,close},});}}
function close(){registry.category("main_components").remove(fileViewerId);}
onWillDestroy(close);return{open,close};}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_hook.js */
odoo.define('@web/core/hotkeys/hotkey_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useHotkey=useHotkey;function useHotkey(hotkey,callback,options={}){const hotkeyService=useService("hotkey");useEffect(()=>hotkeyService.add(hotkey,callback,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_service.js */
odoo.define('@web/core/hotkeys/hotkey_service',['@web/core/browser/feature_detection','@web/core/registry','@web/core/browser/browser','@web/core/utils/ui'],function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{getVisibleElements}=require("@web/core/utils/ui");const ALPHANUM_KEYS="abcdefghijklmnopqrstuvwxyz0123456789".split("");const NAV_KEYS=["arrowleft","arrowright","arrowup","arrowdown","pageup","pagedown","home","end","backspace","enter","tab","delete","space",];const MODIFIERS=["alt","control","shift"];const AUTHORIZED_KEYS=[...ALPHANUM_KEYS,...NAV_KEYS,"escape"];__exports.getActiveHotkey=getActiveHotkey;function getActiveHotkey(ev){if(!ev.key){return"";}
if(ev.isComposing){return"";}
const hotkey=[];if(isMacOS()?ev.ctrlKey:ev.altKey){hotkey.push("alt");}
if(isMacOS()?ev.metaKey:ev.ctrlKey){hotkey.push("control");}
if(ev.shiftKey){hotkey.push("shift");}
let key=ev.key.toLowerCase();if(key===" "){key="space";}
if(ev.code&&ev.code.indexOf("Digit")===0){key=ev.code.slice(-1);}
if(!AUTHORIZED_KEYS.includes(key)&&ev.code&&ev.code.indexOf("Key")===0){key=ev.code.slice(-1).toLowerCase();}
if(!MODIFIERS.includes(key)){hotkey.push(key);}
return hotkey.join("+");}
const hotkeyService=__exports.hotkeyService={dependencies:["ui"],overlayModifier:"alt",start(env,{ui}){const registrations=new Map();let nextToken=0;let overlaysVisible=false;addListeners(browser);function addListeners(target){target.addEventListener("keydown",onKeydown);target.addEventListener("keyup",removeHotkeyOverlays);target.addEventListener("blur",removeHotkeyOverlays);target.addEventListener("click",removeHotkeyOverlays);}
function onKeydown(event){if(event.code&&event.code.indexOf("Numpad")===0&&/^\d$/.test(event.key)){return;}
const hotkey=getActiveHotkey(event);if(!hotkey){return;}
const{activeElement,isBlocked}=ui;if(isBlocked){return;}
const elementsWithAccessKey=document.querySelectorAll("[accesskey]");for(const el of elementsWithAccessKey){if(el instanceof HTMLElement){el.dataset.hotkey=el.accessKey;el.removeAttribute("accesskey");}}
if(!overlaysVisible&&hotkey===hotkeyService.overlayModifier){addHotkeyOverlays(activeElement);event.preventDefault();return;}
const singleKey=hotkey.split("+").pop();if(!AUTHORIZED_KEYS.includes(singleKey)){return;}
const targetIsEditable=event.target instanceof HTMLElement&&(/input|textarea/i.test(event.target.tagName)||event.target.isContentEditable)&&!event.target.matches("input[type=checkbox], input[type=radio]");const shouldProtectEditable=targetIsEditable&&!event.target.dataset.allowHotkeys&&singleKey!=="escape";const infos={activeElement,hotkey,isRepeated:event.repeat,target:event.target,shouldProtectEditable,};const dispatched=dispatch(infos);if(dispatched){event.preventDefault();event.stopImmediatePropagation();}
if(overlaysVisible){removeHotkeyOverlays();event.preventDefault();}}
function dispatch(infos){const{activeElement,hotkey,isRepeated,target,shouldProtectEditable}=infos;const reversedRegistrations=Array.from(registrations.values()).reverse();const domRegistrations=getDomRegistrations(hotkey,activeElement);const allRegistrations=reversedRegistrations.concat(domRegistrations);const candidates=allRegistrations.filter((reg)=>reg.hotkey===hotkey&&(reg.allowRepeat||!isRepeated)&&(reg.bypassEditableProtection||!shouldProtectEditable)&&(reg.global||reg.activeElement===activeElement)&&(!reg.isAvailable||reg.isAvailable())&&(!reg.area||(target instanceof Node&&reg.area()&&reg.area().contains(target))));let winner=candidates.shift();if(winner&&winner.area){for(const candidate of candidates.filter((c)=>Boolean(c.area))){if(candidate.area()&&winner.area().contains(candidate.area())){winner=candidate;}}}
if(winner){winner.callback({area:winner.area&&winner.area(),target,});return true;}
return false;}
function getDomRegistrations(hotkey,activeElement){const overlayModParts=hotkeyService.overlayModifier.split("+");if(!overlayModParts.every((el)=>hotkey.includes(el))){return[];}
const cleanHotkey=hotkey.split("+").filter((key)=>!overlayModParts.includes(key)).join("+");const elems=getVisibleElements(activeElement,`[data-hotkey='${cleanHotkey}' i]`);return elems.map((el)=>({hotkey,activeElement,bypassEditableProtection:true,callback:()=>{el.focus();el.click();},}));}
function addHotkeyOverlays(activeElement){for(const el of getVisibleElements(activeElement,"[data-hotkey]:not(:disabled)")){const hotkey=el.dataset.hotkey;const overlay=document.createElement("div");overlay.classList.add("o_web_hotkey_overlay","position-absolute","top-0","bottom-0","start-0","end-0","d-flex","justify-content-center","align-items-center","m-0","bg-black-50","h6");const overlayKbd=document.createElement("kbd");overlayKbd.className="small";overlayKbd.appendChild(document.createTextNode(hotkey.toUpperCase()));overlay.appendChild(overlayKbd);let overlayParent;if(el.tagName.toUpperCase()==="INPUT"){overlayParent=el.parentElement;}else{overlayParent=el;}
if(overlayParent.style.position!=="absolute"){overlayParent.style.position="relative";}
overlayParent.appendChild(overlay);}
overlaysVisible=true;}
function removeHotkeyOverlays(){for(const overlay of document.querySelectorAll(".o_web_hotkey_overlay")){overlay.remove();}
overlaysVisible=false;}
function registerHotkey(hotkey,callback,options={}){if(!hotkey||hotkey.length===0){throw new Error("You must specify an hotkey when registering a registration.");}
if(!callback||typeof callback!=="function"){throw new Error("You must specify a callback function when registering a registration.");}
const keys=hotkey.toLowerCase().split("+").filter((k)=>!MODIFIERS.includes(k));if(keys.some((k)=>!AUTHORIZED_KEYS.includes(k))){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains parts not whitelisted: ${keys.join(", ")}`);}else if(keys.length>1){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains more than one single key part: ${keys.join("+")}`);}
const token=nextToken++;const registration={hotkey:hotkey.toLowerCase(),callback,activeElement:null,allowRepeat:options&&options.allowRepeat,bypassEditableProtection:options&&options.bypassEditableProtection,global:options&&options.global,area:options&&options.area,isAvailable:options&&options.isAvailable,};Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});registrations.set(token,registration);return token;}
function unregisterHotkey(token){registrations.delete(token);}
return{add(hotkey,callback,options={}){const token=registerHotkey(hotkey,callback,options);return()=>{unregisterHotkey(token);};},registerIframe(iframe){addListeners(iframe.contentWindow);},};},};registry.category("services").add("hotkey",hotkeyService);return __exports;});;

/* /web/static/src/core/install_prompt/install_prompt.js */
odoo.define('@web/core/install_prompt/install_prompt',['@odoo/owl','@web/core/dialog/dialog','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dialog}=require("@web/core/dialog/dialog");const{isIOS}=require("@web/core/browser/feature_detection");const InstallPrompt=__exports.InstallPrompt=class InstallPrompt extends Component{static props={close:true,onClose:{type:Function},};static components={Dialog,};static template="web.InstallPrompt";get isMobileSafari(){return isIOS();}
onClose(){this.props.close();this.props.onClose();}}
return __exports;});;

/* /web/static/src/core/install_prompt/install_prompt_service.js */
odoo.define('@web/core/install_prompt/install_prompt_service',['@odoo/owl','@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/registry','@web/core/install_prompt/install_prompt'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{isDisplayStandalone,isIOS,isMacOS,isBrowserSafari,}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{InstallPrompt}=require("@web/core/install_prompt/install_prompt");const serviceRegistry=registry.category("services");const installPromptService={dependencies:["dialog"],start(env,{dialog}){let nativePrompt;const state=reactive({canPromptToInstall:false,decline,show,});const canBeInstalled=browser.BeforeInstallPromptEvent!==undefined||(isBrowserSafari()&&!isDisplayStandalone()&&(isIOS()||(isMacOS()&&browser.navigator.userAgent.match(/Version\/(\d+)/)[1]>=17)));const installationState=browser.localStorage.getItem("pwa.installationState");const isDeclined=installationState==="dismissed";if(canBeInstalled&&!isDeclined){browser.addEventListener("beforeinstallprompt",(ev)=>{ev.preventDefault();nativePrompt=ev;if(installationState==="accepted"){browser.localStorage.removeItem("pwa.installationState");}
state.canPromptToInstall=true;});if(isBrowserSafari()){state.canPromptToInstall=installationState!=="accepted";}}
async function show(){if(!state.canPromptToInstall){return;}
if(nativePrompt){const res=await nativePrompt.prompt();browser.localStorage.setItem("pwa.installationState",res.outcome);state.canPromptToInstall=false;}else if(isBrowserSafari()){dialog.add(InstallPrompt,{onClose:()=>this.decline(),});}}
function decline(){browser.localStorage.setItem("pwa.installationState","dismissed");state.canPromptToInstall=false;}
return state;},};serviceRegistry.add("installPrompt",installPromptService);return __exports;});;

/* /web/static/src/core/l10n/dates.js */
odoo.define('@web/core/l10n/dates',['@web/core/l10n/localization','@web/core/l10n/translation','@web/core/utils/functions','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{memoize}=require("@web/core/utils/functions");const{ensureArray}=require("@web/core/utils/arrays");const{DateTime,Settings}=luxon;const MIN_VALID_DATE=__exports.MIN_VALID_DATE=DateTime.fromObject({year:1000});const MAX_VALID_DATE=__exports.MAX_VALID_DATE=DateTime.fromObject({year:9999}).endOf("year");const SERVER_DATE_FORMAT="yyyy-MM-dd";const SERVER_TIME_FORMAT="HH:mm:ss";const SERVER_DATETIME_FORMAT=`${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`;const nonAlphaRegex=/[^a-z]/gi;const nonDigitRegex=/[^\d]/g;const normalizeFormatTable={a:"ccc",A:"cccc",b:"MMM",B:"MMMM",d:"dd",H:"HH",I:"hh",j:"o",m:"MM",M:"mm",p:"a",S:"ss",W:"WW",w:"c",y:"yy",Y:"yyyy",c:"ccc MMM d HH:mm:ss yyyy",x:"MM/dd/yy",X:"HH:mm:ss",};const smartDateUnits={d:"days",m:"months",w:"weeks",y:"years",};const smartDateRegex=new RegExp(["^","([+-])","(\\d+)",`([${Object.keys(smartDateUnits).join("")}]?)`,"$"].join("\\s*"),"i");const dateCache=new WeakMap();const dateTimeCache=new WeakMap();const ConversionError=__exports.ConversionError=class ConversionError extends Error{name="ConversionError";}
__exports.areDatesEqual=areDatesEqual;function areDatesEqual(d1,d2){if(Array.isArray(d1)||Array.isArray(d2)){d1=ensureArray(d1);d2=ensureArray(d2);return d1.length===d2.length&&d1.every((d1Val,i)=>areDatesEqual(d1Val,d2[i]));}
if(d1 instanceof DateTime&&d2 instanceof DateTime&&d1!==d2){return d1.equals(d2);}else{return d1===d2;}}
__exports.clampDate=clampDate;function clampDate(desired,minDate,maxDate){if(maxDate<desired){return maxDate;}
if(minDate>desired){return minDate;}
return desired;}
__exports.is24HourFormat=is24HourFormat;function is24HourFormat(format){return/H/.test(format||localization.timeFormat);}
__exports.isInRange=isInRange;function isInRange(value,range){if(!value||!range){return false;}
if(Array.isArray(value)){const actualValues=value.filter(Boolean);if(actualValues.length<2){return isInRange(actualValues[0],range);}
return((value[0]<=range[0]&&range[0]<=value[1])||(range[0]<=value[0]&&value[0]<=range[1]));}else{return range[0]<=value&&value<=range[1];}}
__exports.isMeridiemFormat=isMeridiemFormat;function isMeridiemFormat(format){return/a/.test(format||localization.timeFormat);}
function isValidDate(date){return date&&date.isValid&&isInRange(date,[MIN_VALID_DATE,MAX_VALID_DATE]);}
function parseSmartDateInput(value){const match=value.match(smartDateRegex);if(match){let date=DateTime.local();const offset=parseInt(match[2],10);const unit=smartDateUnits[(match[3]||"d").toLowerCase()];if(match[1]==="+"){date=date.plus({[unit]:offset});}else{date=date.minus({[unit]:offset});}
return date;}
return false;}
const stripAlphaDupes=memoize(function stripAlphaDupes(str){return str.replace(/[a-z]/gi,(letter,index,str)=>letter===str[index-1]?"":letter);});const strftimeToLuxonFormat=__exports.strftimeToLuxonFormat=memoize(function strftimeToLuxonFormat(format){const output=[];let inToken=false;for(let index=0;index<format.length;++index){let character=format[index];if(character==="%"&&!inToken){inToken=true;continue;}
if(/[a-z]/gi.test(character)){if(inToken&&normalizeFormatTable[character]!==undefined){character=normalizeFormatTable[character];}else{character=`'${character}'`;}}
output.push(character);inToken=false;}
return output.join("");});__exports.today=today;function today(){return DateTime.local().startOf("day");}
__exports.formatDate=formatDate;function formatDate(value,options={}){if(!value){return"";}
const format=options.format||localization.dateFormat;return value.toFormat(format);}
__exports.formatDateTime=formatDateTime;function formatDateTime(value,options={}){if(!value){return"";}
const format=options.format||localization.dateTimeFormat;return value.setZone("default").toFormat(format);}
__exports.formatDuration=formatDuration;function formatDuration(seconds,showFullDuration){const displayStyle=showFullDuration?"long":"narrow";const numberOfValuesToDisplay=showFullDuration?2:1;const durationKeys=["years","months","days","hours","minutes"];if(seconds<60){seconds=60;}
seconds-=seconds%60;let duration=luxon.Duration.fromObject({seconds:seconds}).shiftTo(...durationKeys);duration=duration.shiftTo(...durationKeys.filter((key)=>duration.get(key)));const durationSplit=duration.toHuman({unitDisplay:displayStyle}).split(",");if(!showFullDuration&&duration.loc.locale.includes("en")&&duration.months>0){durationSplit[0]=durationSplit[0].replace("m","M");}
return durationSplit.slice(0,numberOfValuesToDisplay).join(",");}
__exports.serializeDate=serializeDate;function serializeDate(value){if(!dateCache.has(value)){dateCache.set(value,value.toFormat(SERVER_DATE_FORMAT,{numberingSystem:"latn"}));}
return dateCache.get(value);}
__exports.serializeDateTime=serializeDateTime;function serializeDateTime(value){if(!dateTimeCache.has(value)){dateTimeCache.set(value,value.setZone("utc").toFormat(SERVER_DATETIME_FORMAT,{numberingSystem:"latn"}));}
return dateTimeCache.get(value);}
__exports.parseDate=parseDate;function parseDate(value,options={}){const parsed=parseDateTime(value,{...options,format:options.format||localization.dateFormat});return parsed&&parsed.startOf("day");}
__exports.parseDateTime=parseDateTime;function parseDateTime(value,options={}){if(!value){return false;}
const fmt=options.format||localization.dateTimeFormat;const parseOpts={setZone:true,zone:"default",};const switchToLatin=Settings.defaultNumberingSystem!=="latn"&&/[0-9]/.test(value);if(switchToLatin){parseOpts.numberingSystem="latn";}
let result=DateTime.fromFormat(value,fmt,parseOpts);if(!isValidDate(result)){result=parseSmartDateInput(value);}
if(!isValidDate(result)){const fmtWoZero=stripAlphaDupes(fmt);result=DateTime.fromFormat(value,fmtWoZero,parseOpts);}
if(!isValidDate(result)){const digitList=value.split(nonDigitRegex).filter(Boolean);const fmtList=fmt.split(nonAlphaRegex).filter(Boolean);const valWoSeps=digitList.join("");let carry=0;const fmtWoSeps=fmtList.map((part,i)=>{const digitLength=(digitList[i]||"").length;const actualPart=part.slice(0,digitLength+carry);carry+=digitLength-actualPart.length;return actualPart;}).join("");result=DateTime.fromFormat(valWoSeps,fmtWoSeps,parseOpts);}
if(!isValidDate(result)){const valueDigits=value.replace(nonDigitRegex,"");if(valueDigits.length>4){result=DateTime.fromISO(value,parseOpts);if(!isValidDate(result)){result=DateTime.fromSQL(value,parseOpts);}}}
if(!isValidDate(result)){throw new ConversionError(_t("'%s' is not a correct date or datetime",value));}
if(switchToLatin){result=result.reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
return result.setZone("default");}
__exports.deserializeDate=deserializeDate;function deserializeDate(value,options={}){const defaultDict={numberingSystem:"latn",zone:"default"}
const joinedDict={...defaultDict,...options}
return DateTime.fromSQL(value,joinedDict).reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
__exports.deserializeDateTime=deserializeDateTime;function deserializeDateTime(value){return DateTime.fromSQL(value,{numberingSystem:"latn",zone:"utc"}).setZone("default").reconfigure({numberingSystem:Settings.defaultNumberingSystem,});}
return __exports;});;

/* /web/static/src/core/l10n/localization.js */
odoo.define('@web/core/l10n/localization',[],function(require){'use strict';let __exports={};const notReadyError=new Error("Localization parameters not ready yet. Maybe add 'localization' to your dependencies?");const localization=__exports.localization={dateFormat:notReadyError,dateTimeFormat:notReadyError,timeFormat:notReadyError,decimalPoint:notReadyError,direction:notReadyError,grouping:notReadyError,multiLang:notReadyError,thousandsSep:notReadyError,weekStart:notReadyError,code:notReadyError,};return __exports;});;

/* /web/static/src/core/l10n/localization_service.js */
odoo.define('@web/core/l10n/localization_service',['@web/session','@web/core/browser/browser','@web/core/registry','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{strftimeToLuxonFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{translatedTerms,translationLoaded,translationIsReady}=require("@web/core/l10n/translation");const{Settings}=luxon;const NUMBERING_SYSTEMS=[[/^ar-(sa|sy|001)$/i,"arab"],[/^bn/i,"beng"],[/^bo/i,"tibt"],[/^pa-in/i,"guru"],[/^ta/i,"tamldec"],[/.*/i,"latn"],];const localizationService=__exports.localizationService={dependencies:["user"],start:async(env,{user})=>{const cacheHashes=session.cache_hashes||{};const translationsHash=cacheHashes.translations||new Date().getTime().toString();const lang=user.lang||document.documentElement.getAttribute("lang")?.replace(/-/g,"_");const translationURL=session.translationURL||"/web/webclient/translations";let url=`${translationURL}/${translationsHash}`;if(lang){url+=`?lang=${lang}`;}
const response=await browser.fetch(url);if(!response.ok){throw new Error("Error while fetching translations");}
const{lang_parameters:userLocalization,modules:modules,multi_lang:multiLang,}=await response.json();const terms={};for(const addon of Object.keys(modules)){for(const message of modules[addon].messages){terms[message.id]=message.string;}}
Object.assign(translatedTerms,terms);translatedTerms[translationLoaded]=true;translationIsReady.resolve(true);const language=lang||browser.navigator.language;const locale=language==="sr@latin"?"sr-Latn-RS":language.replace(/_/g,"-");Settings.defaultLocale=locale;for(const[re,numberingSystem]of NUMBERING_SYSTEMS){if(re.test(locale)){Settings.defaultNumberingSystem=numberingSystem;break;}}
const dateFormat=strftimeToLuxonFormat(userLocalization.date_format);const timeFormat=strftimeToLuxonFormat(userLocalization.time_format);const dateTimeFormat=`${dateFormat} ${timeFormat}`;const grouping=JSON.parse(userLocalization.grouping);Object.assign(localization,{dateFormat,timeFormat,dateTimeFormat,decimalPoint:userLocalization.decimal_point,direction:userLocalization.direction,grouping,multiLang,thousandsSep:userLocalization.thousands_sep,weekStart:userLocalization.week_start,code:language,});return localization;},};registry.category("services").add("localization",localizationService);return __exports;});;

/* /web/static/src/core/l10n/translation.js */
odoo.define('@web/core/l10n/translation',['@web/core/utils/concurrency','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{Deferred}=require("@web/core/utils/concurrency");const{sprintf}=require("@web/core/utils/strings");const translationLoaded=__exports.translationLoaded=Symbol("translationLoaded");const translatedTerms=__exports.translatedTerms={[translationLoaded]:false,};const translationIsReady=__exports.translationIsReady=new Deferred();__exports._t=_t;function _t(term,...values){if(translatedTerms[translationLoaded]){const translation=translatedTerms[term]??term;if(values.length===0){return translation;}
return sprintf(translation,...values);}else{return new LazyTranslatedString(term,...values);}}
const _lt=__exports._lt=(term,...values)=>_t(term,...values);class LazyTranslatedString extends String{constructor(term,...values){super(term);this.values=values;}
valueOf(){const term=super.valueOf();if(translatedTerms[translationLoaded]){const translation=translatedTerms[term]??term;if(this.values.length===0){return translation;}
return sprintf(translation,...this.values);}else{throw new Error(`translation error`);}}
toString(){return this.valueOf();}}
_t("less than a minute ago");_t("about a minute ago");_t("%d minutes ago");_t("about an hour ago");_t("%d hours ago");_t("a day ago");_t("%d days ago");_t("about a month ago");_t("%d months ago");_t("about a year ago");_t("%d years ago");__exports.loadLanguages=loadLanguages;async function loadLanguages(orm){if(!loadLanguages.installedLanguages){loadLanguages.installedLanguages=await orm.call("res.lang","get_installed");}
return loadLanguages.installedLanguages;}
return __exports;});;

/* /web/static/src/core/l10n/utils.js */
odoo.define('@web/core/l10n/utils',[],function(require){'use strict';let __exports={};__exports.pyToJsLocale=pyToJsLocale;function pyToJsLocale(locale){if(!locale){return"";}
const match=locale.match(/^([a-z]+)(_[A-Z\d]+)?(@.+)?$/);if(!match){return locale;}
const[,language,territory,modifier]=match;const subtags=[language];if(modifier==="@latin"){subtags.push("Latn");}
if(territory){subtags.push(territory.slice(1));}
return subtags.join("-");}
return __exports;});;

/* /web/static/src/core/macro.js */
odoo.define('@web/core/macro',['@web/core/browser/browser','@web/core/utils/ui','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isVisible}=require("@web/core/utils/ui");const{Mutex}=require("@web/core/utils/concurrency");const ACTION_HELPERS=__exports.ACTION_HELPERS={click(el,_step){el.dispatchEvent(new MouseEvent("mouseover"));el.dispatchEvent(new MouseEvent("mouseenter"));el.dispatchEvent(new MouseEvent("mousedown"));el.dispatchEvent(new MouseEvent("mouseup"));el.click();el.dispatchEvent(new MouseEvent("mouseout"));el.dispatchEvent(new MouseEvent("mouseleave"));},text(el,step){this.click(el,step);el.value=step.value;el.dispatchEvent(new InputEvent("input",{bubbles:true}));el.dispatchEvent(new InputEvent("change",{bubbles:true}));},};const mutex=new Mutex();class TimeoutError extends Error{}
class Macro{constructor(descr){this.name=descr.name||"anonymous";this.timeoutDuration=descr.timeout||0;this.timeout=null;this.currentIndex=0;this.checkDelay=descr.checkDelay||0;this.isComplete=false;this.steps=descr.steps;this.onStep=descr.onStep||(()=>{});this.onError=descr.onError;this.onTimeout=descr.onTimeout;this.setTimer();}
async advance(){if(this.isComplete){return;}
const step=this.steps[this.currentIndex];const[proceedToAction,el]=this.checkTrigger(step);if(proceedToAction){this.safeCall(this.onStep,el,step);const actionResult=await this.performAction(el,step);if(!actionResult){this.currentIndex++;if(this.currentIndex===this.steps.length){this.isComplete=true;browser.clearTimeout(this.timeout);}else{this.setTimer();await this.advance();}}}}
checkTrigger({trigger}){let el;if(!trigger){return[true,el];}
if(typeof trigger==="function"){el=this.safeCall(trigger);}else if(typeof trigger==="string"){const triggerEl=document.querySelector(trigger);el=isVisible(triggerEl)&&triggerEl;}else{throw new Error(`Trigger can only be string or function.`);}
if(el){return[true,el];}else{return[false,el];}}
async performAction(el,step){const action=step.action;let actionResult;if(action in ACTION_HELPERS){actionResult=ACTION_HELPERS[action](el,step);}else if(typeof action==="function"){actionResult=await this.safeCall(action,el,step);}
return actionResult;}
safeCall(fn,...args){if(this.isComplete){return;}
try{return fn(...args);}catch(e){this.handleError(e);}}
setTimer(){if(this.timeoutDuration){browser.clearTimeout(this.timeout);this.timeout=browser.setTimeout(()=>{if(this.onTimeout){const index=this.currentIndex;const step=this.steps[index];this.safeCall(this.onTimeout,step,index);}else{const error=new TimeoutError("Step timeout");this.handleError(error);}},this.timeoutDuration);}}
handleError(error){this.isComplete=true;browser.clearTimeout(this.timeout);if(this.onError){const index=this.currentIndex;const step=this.steps[index];this.onError(error,step,index);}else{console.error(error);}}}
const MacroEngine=__exports.MacroEngine=class MacroEngine{constructor(params={}){this.isRunning=false;this.timeout=null;this.target=params.target||document.body;this.defaultCheckDelay=params.defaultCheckDelay??750;this.macros=new Set();this.observerOptions={attributes:true,childList:true,subtree:true,characterData:true,};this.observer=new MutationObserver(this.delayedCheck.bind(this));this.iframeObserver=new MutationObserver(()=>{const iframeEl=document.querySelector("iframe.o_iframe");if(iframeEl){iframeEl.addEventListener("load",()=>{if(iframeEl.contentDocument){this.observer.observe(iframeEl.contentDocument,this.observerOptions);}});if(!iframeEl.src){if(iframeEl.contentDocument){this.observer.observe(iframeEl.contentDocument,this.observerOptions);}}}});}
async activate(descr,exclusive=false){if(this.exclusive){return;}
this.exclusive=exclusive;await Promise.resolve();const macro=new Macro(descr);if(exclusive){this.macros=new Set([macro]);}else{this.macros.add(macro);}
this.start();}
start(){if(!this.isRunning){this.isRunning=true;this.observer.observe(this.target,this.observerOptions);this.iframeObserver.observe(this.target,{childList:true,subtree:true});}
this.delayedCheck();}
stop(){if(this.isRunning){this.isRunning=false;browser.clearTimeout(this.timeout);this.timeout=null;this.observer.disconnect();this.iframeObserver.disconnect();}}
delayedCheck(){if(this.timeout){browser.clearTimeout(this.timeout);}
this.timeout=browser.setTimeout(()=>mutex.exec(this.advanceMacros.bind(this)),this.getCheckDelay()||this.defaultCheckDelay);}
getCheckDelay(){return[...this.macros].map((m)=>m.checkDelay).filter((delay)=>delay>0).reduce((m,v)=>Math.min(m,v),this.defaultCheckDelay);}
async advanceMacros(){await Promise.all([...this.macros].map((macro)=>macro.advance()));for(const macro of this.macros){if(macro.isComplete){this.macros.delete(macro);}}
if(this.macros.size===0){this.stop();}}}
return __exports;});;

/* /web/static/src/core/main_components_container.js */
odoo.define('@web/core/main_components_container',['@web/core/registry','@web/core/utils/components','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ErrorHandler}=require("@web/core/utils/components");const{useBus}=require("@web/core/utils/hooks");const{Component,xml}=require("@odoo/owl");const MainComponentsContainer=__exports.MainComponentsContainer=class MainComponentsContainer extends Component{setup(){const mainComponents=registry.category("main_components");this.Components=mainComponents.getEntries();useBus(mainComponents,"UPDATE",()=>{this.Components=mainComponents.getEntries();this.render();});}
handleComponentError(error,C){this.Components.splice(this.Components.indexOf(C),1);this.render();Promise.resolve().then(()=>{throw error;});}}
MainComponentsContainer.template=xml`
<div class="o-main-components-container">
    <t t-foreach="Components" t-as="C" t-key="C[0]">
        <ErrorHandler onError="error => this.handleComponentError(error, C)">
            <t t-component="C[1].Component" t-props="C[1].props"/>
        </ErrorHandler>
    </t>
</div>
`;MainComponentsContainer.components={ErrorHandler};MainComponentsContainer.props={};return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector.js */
odoo.define('@web/core/model_field_selector/model_field_selector',['@odoo/owl','@web/core/utils/concurrency','@web/core/model_field_selector/model_field_selector_popover','@web/core/model_field_selector/utils','@web/core/popover/popover_hook'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const{KeepLast}=require("@web/core/utils/concurrency");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{useLoadFieldInfo,useLoadPathDescription}=require("@web/core/model_field_selector/utils");const{usePopover}=require("@web/core/popover/popover_hook");const ModelFieldSelector=__exports.ModelFieldSelector=class ModelFieldSelector extends Component{static template="web._ModelFieldSelector";static components={Popover:ModelFieldSelectorPopover,};static props={resModel:String,path:{optional:true},allowEmpty:{type:Boolean,optional:true},readonly:{type:Boolean,optional:true},showSearchInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},update:{type:Function,optional:true},filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},showDebugInput:{type:Boolean,optional:true},};static defaultProps={readonly:true,allowEmpty:false,isDebugMode:false,showSearchInput:true,update:()=>{},followRelations:true,};setup(){this.loadPathDescription=useLoadPathDescription();const loadFieldInfo=useLoadFieldInfo();this.popover=usePopover(this.constructor.components.Popover,{popoverClass:"o_popover_field_selector",onClose:async()=>{if(this.newPath!==null){const fieldInfo=await loadFieldInfo(this.props.resModel,this.newPath);this.props.update(this.newPath,fieldInfo);}},});this.keepLast=new KeepLast();this.state=useState({isInvalid:false,displayNames:[]});onWillStart(()=>this.updateState(this.props));onWillUpdateProps((nextProps)=>this.updateState(nextProps));}
openPopover(currentTarget){if(this.props.readonly){return;}
this.newPath=null;this.popover.open(currentTarget,{resModel:this.props.resModel,path:this.props.path,update:(path,debug=false)=>{this.newPath=path;if(!debug){this.updateState({...this.props,path},true);}},showSearchInput:this.props.showSearchInput,isDebugMode:this.props.isDebugMode,filter:this.props.filter,followRelations:this.props.followRelations,showDebugInput:this.props.showDebugInput,});}
async updateState(params,isConcurrent){const{resModel,path,allowEmpty}=params;let prom=this.loadPathDescription(resModel,path,allowEmpty);if(isConcurrent){prom=this.keepLast.add(prom);}
const state=await prom;Object.assign(this.state,state);}
clear(){if(this.popover.isOpen){this.newPath="";this.popover.close();return;}
this.props.update("",{resModel:this.props.resModel,fieodDef:null});}}
return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector_popover.js */
odoo.define('@web/core/model_field_selector/model_field_selector_popover',['@odoo/owl','@web/core/utils/timing','@web/core/utils/search','@web/core/utils/concurrency','@web/core/utils/arrays','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillStart,useEffect,useRef,useState}=require("@odoo/owl");const{debounce}=require("@web/core/utils/timing");const{fuzzyLookup}=require("@web/core/utils/search");const{KeepLast}=require("@web/core/utils/concurrency");const{sortBy}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");class Page{constructor(resModel,fieldDefs,options={}){this.resModel=resModel;this.fieldDefs=fieldDefs;const{previousPage=null,selectedName=null,isDebugMode}=options;this.previousPage=previousPage;this.selectedName=selectedName;this.isDebugMode=isDebugMode;this.sortedFieldNames=sortBy(Object.keys(fieldDefs),(key)=>fieldDefs[key].string);this.fieldNames=this.sortedFieldNames;this.query="";this.focusedFieldName=null;this.resetFocusedFieldName();}
get path(){const previousPath=this.previousPage?.path||"";if(this.selectedName){if(previousPath){return`${previousPath}.${this.selectedName}`;}else{return this.selectedName;}}
return previousPath;}
get selectedField(){return this.fieldDefs[this.selectedName];}
get title(){const prefix=this.previousPage?.previousPage?"... > ":"";const title=this.previousPage?.selectedField.string||"";return`${prefix}${title}`;}
focus(direction){if(!this.fieldNames.length){return;}
const index=this.fieldNames.indexOf(this.focusedFieldName);if(direction==="previous"){if(index===0){this.focusedFieldName=this.fieldNames[this.fieldNames.length-1];}else{this.focusedFieldName=this.fieldNames[index-1];}}else{if(index===this.fieldNames.length-1){this.focusedFieldName=this.fieldNames[0];}else{this.focusedFieldName=this.fieldNames[index+1];}}}
resetFocusedFieldName(){if(this.selectedName&&this.fieldNames.includes(this.selectedName)){this.focusedFieldName=this.selectedName;}else{this.focusedFieldName=this.fieldNames.length?this.fieldNames[0]:null;}}
searchFields(query=""){this.query=query;this.fieldNames=this.sortedFieldNames;if(query){this.fieldNames=fuzzyLookup(query,this.fieldNames,(key)=>{const vals=[this.fieldDefs[key].string];if(this.isDebugMode){vals.push(key);}
return vals;});}
this.resetFocusedFieldName();}}
const ModelFieldSelectorPopover=__exports.ModelFieldSelectorPopover=class ModelFieldSelectorPopover extends Component{static template="web.ModelFieldSelectorPopover";static props={close:Function,filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},showDebugInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},path:{optional:true},resModel:String,showSearchInput:{type:Boolean,optional:true},update:Function,};static defaultProps={filter:(fieldDef)=>fieldDef.searchable,isDebugMode:false,followRelations:true,};setup(){this.fieldService=useService("field");this.state=useState({page:null});this.keepLast=new KeepLast();this.debouncedSearchFields=debounce(this.searchFields.bind(this),250);onWillStart(async()=>{this.state.page=await this.loadPages(this.props.resModel,this.props.path);});const rootRef=useRef("root");useEffect(()=>{const focusedElement=rootRef.el.querySelector(".o_model_field_selector_popover_item.active");if(focusedElement){focusedElement.scrollIntoView({block:"center"});}});useEffect(()=>{if(this.props.showSearchInput){const searchInput=rootRef.el.querySelector(".o_model_field_selector_popover_search .o_input");searchInput.focus();}},()=>[this.state.page]);}
get showDebugInput(){return this.props.showDebugInput??this.props.isDebugMode;}
filter(fieldDefs,path){const filteredKeys=Object.keys(fieldDefs).filter((k)=>this.props.filter(fieldDefs[k],path));return Object.fromEntries(filteredKeys.map((k)=>[k,fieldDefs[k]]));}
async followRelation(fieldDef){const{modelsInfo}=await this.keepLast.add(this.fieldService.loadPath(this.state.page.resModel,`${fieldDef.name}.*`));this.state.page.selectedName=fieldDef.name;const{resModel,fieldDefs}=modelsInfo.at(-1);this.openPage(new Page(resModel,this.filter(fieldDefs,this.state.page.path),{previousPage:this.state.page,isDebugMode:this.props.isDebugMode,}));}
goToPreviousPage(){this.keepLast.add(Promise.resolve());this.openPage(this.state.page.previousPage);}
async loadNewPath(path){const newPage=await this.keepLast.add(this.loadPages(this.props.resModel,path));this.openPage(newPage);}
async loadPages(resModel,path){if(typeof path!=="string"||!path.length){const fieldDefs=await this.fieldService.loadFields(resModel);return new Page(resModel,this.filter(fieldDefs,path),{isDebugMode:this.props.isDebugMode,});}
const{isInvalid,modelsInfo,names}=await this.fieldService.loadPath(resModel,path);switch(isInvalid){case"model":throw new Error(`Invalid model name: ${resModel}`);case"path":{const{resModel,fieldDefs}=modelsInfo[0];return new Page(resModel,this.filter(fieldDefs,path),{selectedName:path,isDebugMode:this.props.isDebugMode,});}
default:{let page=null;for(let index=0;index<names.length;index++){const name=names[index];const{resModel,fieldDefs}=modelsInfo[index];page=new Page(resModel,this.filter(fieldDefs,path),{previousPage:page,selectedName:name,isDebugMode:this.props.isDebugMode,});}
return page;}}}
openPage(page){this.state.page=page;this.state.page.searchFields();this.props.update(page.path);}
searchFields(query){this.state.page.searchFields(query);}
selectField(field){if(field.type==="properties"){return this.followRelation(field);}
this.keepLast.add(Promise.resolve());this.state.page.selectedName=field.name;this.props.update(this.state.page.path);this.props.close();}
onDebugInputKeydown(ev){switch(ev.key){case"Enter":{ev.preventDefault();ev.stopPropagation();this.loadNewPath(ev.currentTarget.value);break;}}}
async onInputKeydown(ev){const{page}=this.state;switch(ev.key){case"ArrowUp":{if(ev.target.selectionStart===0){page.focus("previous");}
break;}
case"ArrowDown":{if(ev.target.selectionStart===page.query.length){page.focus("next");}
break;}
case"ArrowLeft":{if(ev.target.selectionStart===0&&page.previousPage){this.goToPreviousPage();}
break;}
case"ArrowRight":{if(ev.target.selectionStart===page.query.length){const focusedFieldName=this.state.page.focusedFieldName;if(focusedFieldName){const fieldDef=this.state.page.fieldDefs[focusedFieldName];if(fieldDef.relation||fieldDef.type==="properties"){this.followRelation(fieldDef);}}}
break;}
case"Enter":{const focusedFieldName=this.state.page.focusedFieldName;if(focusedFieldName){const fieldDef=this.state.page.fieldDefs[focusedFieldName];this.selectField(fieldDef);}else{ev.preventDefault();ev.stopPropagation();}
break;}
case"Escape":{ev.preventDefault();ev.stopPropagation();this.props.close();break;}}}}
return __exports;});;

/* /web/static/src/core/model_field_selector/utils.js */
odoo.define('@web/core/model_field_selector/utils',['@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");function makeString(value){return String(value??"-");}
__exports.useLoadFieldInfo=useLoadFieldInfo;function useLoadFieldInfo(fieldService){fieldService||=useService("field");return async(resModel,path)=>{if(typeof path!=="string"||!path){return{resModel,fieldDef:null};}
const{isInvalid,names,modelsInfo}=await fieldService.loadPath(resModel,path);if(isInvalid){return{resModel,fieldDef:null};}
const name=names.at(-1);const modelInfo=modelsInfo.at(-1);return{resModel:modelInfo.resModel,fieldDef:modelInfo.fieldDefs[name]};};}
__exports.useLoadPathDescription=useLoadPathDescription;function useLoadPathDescription(fieldService){fieldService||=useService("field");return async(resModel,path,allowEmpty)=>{if([0,1].includes(path)){return{isInvalid:false,displayNames:[makeString(path)]};}
if(allowEmpty&&!path){return{isInvalid:false,displayNames:[]};}
if(typeof path!=="string"||!path){return{isInvalid:true,displayNames:[makeString()]};}
const{isInvalid,modelsInfo,names}=await fieldService.loadPath(resModel,path);const result={isInvalid:!!isInvalid,displayNames:[]};if(!isInvalid){const lastName=names.at(-1);const lastFieldDef=modelsInfo.at(-1).fieldDefs[lastName];if(["properties","properties_definition"].includes(lastFieldDef.type)){result.isInvalid=true;}}
for(let index=0;index<names.length;index++){const name=names[index];const fieldDef=modelsInfo[index]?.fieldDefs[name];result.displayNames.push(fieldDef?.string||makeString(name));}
return result;};}
return __exports;});;

/* /web/static/src/core/model_selector/model_selector.js */
odoo.define('@web/core/model_selector/model_selector',['@web/core/autocomplete/autocomplete','@web/core/utils/hooks','@web/core/utils/search','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const ModelSelector=__exports.ModelSelector=class ModelSelector extends Component{setup(){this.orm=useService("orm");onWillStart(async()=>{if(!this.props.models){this.models=await this._fetchAvailableModels();}else{this.models=await this.orm.call("ir.model","display_name_for",[this.props.models,]);}
this.models=this.models.map((record)=>({label:record.display_name,technical:record.model,classList:{[`o_model_selector_${record.model}`]:1,},}));});}
get placeholder(){return _t("Type a model here...");}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
onSelect(option){this.props.onModelSelected({label:option.label,technical:option.technical,});}
filterModels(name){if(!name){const visibleModels=this.models.slice(0,8);if(this.models.length-visibleModels.length>0){visibleModels.push({label:_t("Start typing..."),unselectable:true,classList:"o_m2o_start_typing",});}
return visibleModels;}
return fuzzyLookup(name,this.models,(model)=>model.technical+model.label);}
loadOptionsSource(request){const options=this.filterModels(request);if(!options.length){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async _fetchAvailableModels(){const result=await this.orm.call("ir.model","get_available_models");return result||[];}}
ModelSelector.template="web.ModelSelector";ModelSelector.components={AutoComplete};ModelSelector.props={onModelSelected:Function,id:{type:String,optional:true},value:{type:String,optional:true},models:{type:Array,optional:true},};return __exports;});;

/* /web/static/src/core/name_service.js */
odoo.define('@web/core/name_service',['@web/core/registry','@web/core/utils/arrays','@web/core/utils/concurrency'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{unique,zip}=require("@web/core/utils/arrays");const{Deferred}=require("@web/core/utils/concurrency");const ERROR_INACCESSIBLE_OR_MISSING=__exports.ERROR_INACCESSIBLE_OR_MISSING=Symbol("INACCESSIBLE OR MISSING RECORD ID");function isId(val){return Number.isInteger(val)&&val>=1;}
const nameService=__exports.nameService={dependencies:["orm"],async:["loadDisplayNames"],start(env,{orm}){let cache={};const batches={};function clearCache(){cache={};}
env.bus.addEventListener("ACTION_MANAGER:UPDATE",clearCache);function getMapping(resModel){if(!cache[resModel]){cache[resModel]={};}
return cache[resModel];}
function addDisplayNames(resModel,displayNames){const mapping=getMapping(resModel);for(const resId in displayNames){mapping[resId]=new Deferred();mapping[resId].resolve(displayNames[resId]);}}
async function loadDisplayNames(resModel,resIds){const mapping=getMapping(resModel);const proms=[];const resIdsToFetch=[];for(const resId of unique(resIds)){if(!isId(resId)){throw new Error(`Invalid ID: ${resId}`);}
if(!(resId in mapping)){mapping[resId]=new Deferred();resIdsToFetch.push(resId);}
proms.push(mapping[resId]);}
if(resIdsToFetch.length){if(batches[resModel]){batches[resModel].push(...resIdsToFetch);}else{batches[resModel]=resIdsToFetch;await Promise.resolve();const idsInBatch=unique(batches[resModel]);delete batches[resModel];const specification={display_name:{}};orm.silent.webSearchRead(resModel,[["id","in",idsInBatch]],{specification}).then(({records})=>{const displayNames=Object.fromEntries(records.map((rec)=>[rec.id,rec.display_name]));for(const resId of idsInBatch){mapping[resId].resolve(resId in displayNames?displayNames[resId]:ERROR_INACCESSIBLE_OR_MISSING);}});}}
const names=await Promise.all(proms);return Object.fromEntries(zip(resIds,names));}
return{addDisplayNames,clearCache,loadDisplayNames};},};registry.category("services").add("name",nameService);return __exports;});;

/* /web/static/src/core/network/download.js */
odoo.define('@web/core/network/download',['@web/core/l10n/translation','@web/core/network/rpc_service','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{makeErrorFromResponse,ConnectionLostError}=require("@web/core/network/rpc_service");const{browser}=require("@web/core/browser/browser");const HEX_ESCAPE_REPLACE_REGEXP=/%([0-9A-Fa-f]{2})/g;const NON_LATIN1_REGEXP=/[^\x20-\x7e\xa0-\xff]/g;const QESC_REGEXP=/\\([\u0000-\u007f])/g;const PARAM_REGEXP=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;const EXT_VALUE_REGEXP=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;const DISPOSITION_TYPE_REGEXP=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function decodefield(str){const match=EXT_VALUE_REGEXP.exec(str);if(!match){throw new TypeError("invalid extended field value");}
const charset=match[1].toLowerCase();const encoded=match[2];switch(charset){case"iso-8859-1":return encoded.replace(HEX_ESCAPE_REPLACE_REGEXP,pdecode).replace(NON_LATIN1_REGEXP,"?");case"utf-8":return decodeURIComponent(encoded);default:throw new TypeError("unsupported charset in extended field");}}
function parse(string){if(!string||typeof string!=="string"){throw new TypeError("argument string is required");}
let match=DISPOSITION_TYPE_REGEXP.exec(string);if(!match){throw new TypeError("invalid type format");}
let index=match[0].length;const type=match[1].toLowerCase();let key;const names=[];const params={};let value;index=PARAM_REGEXP.lastIndex=match[0].substr(-1)===";"?index-1:index;while((match=PARAM_REGEXP.exec(string))){if(match.index!==index){throw new TypeError("invalid parameter format");}
index+=match[0].length;key=match[1].toLowerCase();value=match[2];if(names.indexOf(key)!==-1){throw new TypeError("invalid duplicate parameter");}
names.push(key);if(key.indexOf("*")+1===key.length){key=key.slice(0,-1);value=decodefield(value);params[key]=value;continue;}
if(typeof params[key]==="string"){continue;}
if(value[0]==='"'){value=value.substr(1,value.length-2).replace(QESC_REGEXP,"$1");}
params[key]=value;}
if(index!==-1&&index!==string.length){throw new TypeError("invalid parameter format");}
return new ContentDisposition(type,params);}
function pdecode(str,hex){return String.fromCharCode(parseInt(hex,16));}
function ContentDisposition(type,parameters){this.type=type;this.parameters=parameters;}
function _download(data,filename,mimetype){let self=window,defaultMime="application/octet-stream",mimeType=mimetype||defaultMime,payload=data,url=!filename&&!mimetype&&payload,anchor=document.createElement("a"),toString=function(a){return String(a);},myBlob=self.Blob||self.MozBlob||self.WebKitBlob||toString,fileName=filename||"download",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob;if(String(this)==="true"){payload=[payload,mimeType];mimeType=payload[0];payload=payload[1];}
if(url&&url.length<2048){fileName=url.split("/").pop().split("?")[0];anchor.href=url;if(anchor.href.indexOf(url)!==-1){return new Promise((resolve,reject)=>{let xhr=new browser.XMLHttpRequest();xhr.open("GET",url,true);configureBlobDownloadXHR(xhr,{onSuccess:resolve,onFailure:reject,url});xhr.send();});}}
if(/^data:[\w+\-]+\/[\w+\-]+[,;]/.test(payload)){if(payload.length>1024*1024*1.999&&myBlob!==toString){payload=dataUrlToBlob(payload);mimeType=payload.type||defaultMime;}else{return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);}}
blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){let parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]==="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i){uiArr[i]=binData.charCodeAt(i);}
return new myBlob([uiArr],{type});}
function saver(url,winMode){if("download"in anchor){anchor.href=url;anchor.setAttribute("download",fileName);anchor.className="download-js-link";anchor.innerText=_t("downloading...");anchor.style.display="none";document.body.appendChild(anchor);setTimeout(()=>{anchor.click();document.body.removeChild(anchor);if(winMode===true){setTimeout(()=>{self.URL.revokeObjectURL(anchor.href);},250);}},66);return true;}
if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)){url=url.replace(/^data:([\w\/\-+]+)/,defaultMime);if(!window.open(url)){if(confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")){location.href=url;}}
return true;}
let f=document.createElement("iframe");document.body.appendChild(f);if(!winMode){url=`data:${url.replace(/^data:([\w\/\-+]+)/, defaultMime)}`;}
f.src=url;setTimeout(()=>{document.body.removeChild(f);},333);}
if(navigator.msSaveBlob){return navigator.msSaveBlob(blob,fileName);}
if(self.URL){saver(self.URL.createObjectURL(blob),true);}else{if(typeof blob==="string"||blob.constructor===toString){try{return saver(`data:${mimeType};base64,${self.btoa(blob)}`);}catch{return saver(`data:${mimeType},${encodeURIComponent(blob)}`);}}
reader=new FileReader();reader.onload=function(){saver(this.result);};reader.readAsDataURL(blob);}
return true;}
__exports.downloadFile=downloadFile;function downloadFile(data,filename,mimetype){return downloadFile._download(data,filename,mimetype)}
downloadFile._download=_download;__exports.download=download;function download(options){return download._download(options);}
download._download=(options)=>{return new Promise((resolve,reject)=>{const xhr=new browser.XMLHttpRequest();let data;if(Object.prototype.hasOwnProperty.call(options,"form")){xhr.open(options.form.method,options.form.action);data=new FormData(options.form);}else{xhr.open("POST",options.url);data=new FormData();Object.entries(options.data).forEach((entry)=>{const[key,value]=entry;data.append(key,value);});}
data.append("token","dummy-because-api-expects-one");if(odoo.csrf_token){data.append("csrf_token",odoo.csrf_token);}
configureBlobDownloadXHR(xhr,{onSuccess:resolve,onFailure:reject,url:options.url,});xhr.send(data);});};__exports.configureBlobDownloadXHR=configureBlobDownloadXHR;function configureBlobDownloadXHR(xhr,{onSuccess=()=>{},onFailure=()=>{},url}={}){xhr.responseType="blob";xhr.onload=()=>{const mimetype=xhr.response.type;const header=(xhr.getResponseHeader("Content-Disposition")||"").replace(/;$/,"");const filename=header?parse(header).parameters.filename:null;if(xhr.status===200&&(mimetype!=="text/html"||filename)){_download(xhr.response,filename,mimetype);onSuccess(filename);}else if(xhr.status===502){onFailure(new ConnectionLostError(url));}else{const decoder=new FileReader();decoder.onload=()=>{const contents=decoder.result;const doc=new DOMParser().parseFromString(contents,"text/html");const nodes=doc.body.children.length===0?[doc.body]:doc.body.children;let error;try{const node=nodes[1]||nodes[0];error=JSON.parse(node.textContent);}catch{error={message:"Arbitrary Uncaught Python Exception",data:{debug:`${xhr.status}`+`\n`+`${nodes.length > 0 ? nodes[0].textContent : ""}
                                ${nodes.length > 1 ? nodes[1].textContent : ""}`,},};}
error=makeErrorFromResponse(error);onFailure(error);};decoder.readAsText(xhr.response);}};xhr.onerror=()=>{onFailure(new ConnectionLostError(url));};}
return __exports;});;

/* /web/static/src/core/network/http_service.js */
odoo.define('@web/core/network/http_service',['@web/core/browser/browser','@web/core/registry'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");function checkResponseStatus(response){if(response.status===502){throw new Error("Failed to fetch");}}
__exports.get=get;async function get(route,readMethod="json"){const response=await browser.fetch(route,{method:"GET"});checkResponseStatus(response);return response[readMethod]();}
__exports.post=post;async function post(route,params={},readMethod="json"){let formData=params;if(!(formData instanceof FormData)){formData=new FormData();for(const key in params){const value=params[key];if(Array.isArray(value)&&value.length){for(const val of value){formData.append(key,val);}}else{formData.append(key,value);}}}
const response=await browser.fetch(route,{body:formData,method:"POST",});checkResponseStatus(response);return response[readMethod]();}
const httpService=__exports.httpService={start(){return{get,post};},};registry.category("services").add("http",httpService);return __exports;});;

/* /web/static/src/core/network/rpc_service.js */
odoo.define('@web/core/network/rpc_service',['@web/core/browser/browser','@web/core/registry'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const RPCError=__exports.RPCError=class RPCError extends Error{constructor(){super(...arguments);this.name="RPC_ERROR";this.type="server";this.code=null;this.data=null;this.exceptionName=null;this.subType=null;}}
const ConnectionLostError=__exports.ConnectionLostError=class ConnectionLostError extends Error{constructor(url,...args){super(`Connection to "${url}" couldn't be established or was interrupted`,...args);this.url=url;}}
const ConnectionAbortedError=__exports.ConnectionAbortedError=class ConnectionAbortedError extends Error{}
__exports.makeErrorFromResponse=makeErrorFromResponse;function makeErrorFromResponse(reponse){const{code,data:errorData,message,type:subType}=reponse;const error=new RPCError();error.exceptionName=errorData.name;error.subType=subType;error.data=errorData;error.message=message;error.code=code;return error;}
let rpcId=0;__exports.jsonrpc=jsonrpc;function jsonrpc(url,params={},settings={}){const bus=settings.bus;const XHR=browser.XMLHttpRequest;const data={id:rpcId++,jsonrpc:"2.0",method:"call",params:params,};const request=settings.xhr||new XHR();let rejectFn;const promise=new Promise((resolve,reject)=>{rejectFn=reject;bus?.trigger("RPC:REQUEST",{data,url,settings});request.addEventListener("load",()=>{if(request.status===502){const error=new ConnectionLostError(url);bus?.trigger("RPC:RESPONSE",{data,settings,error});reject(error);return;}
let params;try{params=JSON.parse(request.response);}catch{const error=new ConnectionLostError(url);bus?.trigger("RPC:RESPONSE",{data,settings,error});return reject(error);}
const{error:responseError,result:responseResult}=params;if(!params.error){bus?.trigger("RPC:RESPONSE",{data,settings,result:params.result});return resolve(responseResult);}
const error=makeErrorFromResponse(responseError);bus?.trigger("RPC:RESPONSE",{data,settings,error});reject(error);});request.addEventListener("error",()=>{const error=new ConnectionLostError(url);bus?.trigger("RPC:RESPONSE",{data,settings,error});reject(error);});request.open("POST",url);request.setRequestHeader("Content-Type","application/json");request.send(JSON.stringify(data));});promise.abort=function(rejectError=true){if(request.abort){request.abort();}
const error=new ConnectionAbortedError("XmlHttpRequestError abort");bus?.trigger("RPC:RESPONSE",{data,settings,error});if(rejectError){rejectFn(error);}};return promise;}
const rpcService=__exports.rpcService={async:true,start(env){return function rpc(route,params={},settings={}){return jsonrpc(route,params,{bus:env.bus,...settings});};},};registry.category("services").add("rpc",rpcService);return __exports;});;

/* /web/static/src/core/notebook/notebook.js */
odoo.define('@web/core/notebook/notebook',['@web/core/utils/scrolling','@odoo/owl'],function(require){'use strict';let __exports={};const{scrollTo}=require("@web/core/utils/scrolling");const{Component,onWillDestroy,onWillUpdateProps,useEffect,useRef,useState,}=require("@odoo/owl");const Notebook=__exports.Notebook=class Notebook extends Component{setup(){this.activePane=useRef("activePane");this.anchorTarget=null;this.pages=this.computePages(this.props);this.state=useState({currentPage:null});this.state.currentPage=this.computeActivePage(this.props.defaultPage,true);const onAnchorClicked=this.onAnchorClicked.bind(this);this.env.bus.addEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);useEffect(()=>{this.props.onPageUpdate(this.state.currentPage);if(this.anchorTarget){const matchingEl=this.activePane.el.querySelector(`#${this.anchorTarget}`);scrollTo(matchingEl,{isAnchor:true});this.anchorTarget=null;}},()=>[this.state.currentPage]);onWillUpdateProps((nextProps)=>{const activateDefault=this.props.defaultPage!==nextProps.defaultPage||!this.defaultVisible;this.pages=this.computePages(nextProps);this.state.currentPage=this.computeActivePage(nextProps.defaultPage,activateDefault);});onWillDestroy(()=>{this.env.bus.removeEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);});}
get navItems(){return this.pages.filter((e)=>e[1].isVisible);}
get page(){const page=this.pages.find((e)=>e[0]===this.state.currentPage)[1];return page.Component&&page;}
onAnchorClicked(ev){if(!this.props.anchors){return;}
const id=ev.detail.detail.id.substring(1);if(this.props.anchors[id]){if(this.state.currentPage!==this.props.anchors[id].target){ev.preventDefault();ev.detail.detail.originalEv.preventDefault();this.anchorTarget=id;this.state.currentPage=this.props.anchors[id].target;}}}
activatePage(pageIndex){if(!this.disabledPages.includes(pageIndex)){this.state.currentPage=pageIndex;}}
computePages(props){if(!props.slots&&!props.pages){return[];}
if(props.pages){for(const page of props.pages){page.isVisible=true;}}
this.disabledPages=[];const pages=[];const pagesWithIndex=[];for(const[k,v]of Object.entries({...props.slots,...props.pages})){const id=v.id||k;if(v.index){pagesWithIndex.push([id,v]);}else{pages.push([id,v]);}
if(v.isDisabled){this.disabledPages.push(k);}}
for(const page of pagesWithIndex){pages.splice(page[1].index,0,page);}
return pages;}
computeActivePage(defaultPage,activateDefault){if(!this.pages.length){return null;}
const pages=this.pages.filter((e)=>e[1].isVisible).map((e)=>e[0]);if(defaultPage){if(!pages.includes(defaultPage)){this.defaultVisible=false;}else{this.defaultVisible=true;if(activateDefault){return defaultPage;}}}
const current=this.state.currentPage;if(!current||(current&&!pages.includes(current))){return pages[0];}
return current;}}
Notebook.template="web.Notebook";Notebook.defaultProps={className:"",orientation:"horizontal",onPageUpdate:()=>{},};Notebook.props={slots:{type:Object,optional:true},pages:{type:Object,optional:true},class:{optional:true},className:{type:String,optional:true},anchors:{type:Object,optional:true},defaultPage:{type:String,optional:true},orientation:{type:String,optional:true},icons:{type:Object,optional:true},onPageUpdate:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/notifications/notification.js */
odoo.define('@web/core/notifications/notification',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Notification=__exports.Notification=class Notification extends Component{}
Notification.template="web.NotificationWowl";Notification.props={message:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},},title:{type:[String,Boolean,{toString:Function}],optional:true},type:{type:String,optional:true,validate:(t)=>["warning","danger","success","info"].includes(t),},className:{type:String,optional:true},buttons:{type:Array,element:{type:Object,shape:{name:{type:String},icon:{type:String,optional:true},primary:{type:Boolean,optional:true},onClick:Function,},},optional:true,},close:{type:Function},refresh:{type:Function},freeze:{type:Function},};Notification.defaultProps={buttons:[],className:"",type:"warning",};return __exports;});;

/* /web/static/src/core/notifications/notification_container.js */
odoo.define('@web/core/notifications/notification_container',['@web/core/notifications/notification','@web/core/transition','@odoo/owl'],function(require){'use strict';let __exports={};const{Notification}=require("@web/core/notifications/notification");const{Transition}=require("@web/core/transition");const{Component,xml,useState}=require("@odoo/owl");const NotificationContainer=__exports.NotificationContainer=class NotificationContainer extends Component{setup(){this.notifications=useState(this.props.notifications);}}
NotificationContainer.props={notifications:Object,};NotificationContainer.template=xml`
    <div class="o_notification_manager">
        <t t-foreach="notifications" t-as="notification" t-key="notification">
            <Transition leaveDuration="0" name="'o_notification_fade'" t-slot-scope="transition">
                <Notification t-props="notification_value.props" className="(notification_value.props.className || '') + ' ' + transition.className"/>
            </Transition>
        </t>
    </div>`;NotificationContainer.components={Notification,Transition};return __exports;});;

/* /web/static/src/core/notifications/notification_service.js */
odoo.define('@web/core/notifications/notification_service',['@web/core/browser/browser','@web/core/registry','@web/core/notifications/notification_container','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{NotificationContainer}=require("@web/core/notifications/notification_container");const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=4000;const notificationService=__exports.notificationService={notificationContainer:NotificationContainer,start(){let notifId=0;const notifications=reactive({});registry.category("main_components").add(this.notificationContainer.name,{Component:this.notificationContainer,props:{notifications},},{sequence:100});function add(message,options={}){const id=++notifId;const closeFn=()=>close(id);const props=Object.assign({},options,{message,close:closeFn});const sticky=props.sticky;delete props.sticky;delete props.onClose;let closeTimeout;const refresh=sticky?()=>{}:()=>{closeTimeout=browser.setTimeout(closeFn,AUTOCLOSE_DELAY);};const freeze=sticky?()=>{}:()=>{browser.clearTimeout(closeTimeout);};props.refresh=refreshAll;props.freeze=freezeAll;const notification={id,props,onClose:options.onClose,refresh,freeze,};notifications[id]=notification;if(!sticky){closeTimeout=browser.setTimeout(closeFn,AUTOCLOSE_DELAY);}
return closeFn;}
function refreshAll(){for(const id in notifications){notifications[id].refresh();}}
function freezeAll(){for(const id in notifications){notifications[id].freeze();}}
function close(id){if(notifications[id]){const notification=notifications[id];if(notification.onClose){notification.onClose();}
delete notifications[id];}}
return{add};},};registry.category("services").add("notification",notificationService);return __exports;});;

/* /web/static/src/core/orm_service.js */
odoo.define('@web/core/orm_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const x2ManyCommands=__exports.x2ManyCommands={CREATE:0,create(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete(id){return[x2ManyCommands.DELETE,id,false];},UNLINK:3,unlink(id){return[x2ManyCommands.UNLINK,id,false];},LINK:4,link(id){return[x2ManyCommands.LINK,id,false];},CLEAR:5,clear(){return[x2ManyCommands.CLEAR,false,false];},SET:6,set(ids){return[x2ManyCommands.SET,false,ids];},};function validateModel(value){if(typeof value!=="string"||value.length===0){throw new Error(`Invalid model name: ${value}`);}}
function validatePrimitiveList(name,type,value){if(!Array.isArray(value)||value.some((val)=>typeof val!==type)){throw new Error(`Invalid ${name} list: ${value}`);}}
function validateObject(name,obj){if(typeof obj!=="object"||obj===null||Array.isArray(obj)){throw new Error(`${name} should be an object`);}}
function validateArray(name,array){if(!Array.isArray(array)){throw new Error(`${name} should be an array`);}}
const UPDATE_METHODS=__exports.UPDATE_METHODS=["unlink","create","write","web_save","action_archive","action_unarchive",];const ORM=__exports.ORM=class ORM{constructor(rpc,user){this.rpc=rpc;this.user=user;this._silent=false;}
get silent(){return Object.assign(Object.create(this),{_silent:true});}
call(model,method,args=[],kwargs={}){validateModel(model);const url=`/web/dataset/call_kw/${model}/${method}`;const fullContext=Object.assign({},this.user.context,kwargs.context||{});const fullKwargs=Object.assign({},kwargs,{context:fullContext});const params={model,method,args,kwargs:fullKwargs,};return this.rpc(url,params,{silent:this._silent});}
create(model,records,kwargs={}){validateArray("records",records);for(const record of records){validateObject("record",record);}
return this.call(model,"create",[records],kwargs);}
read(model,ids,fields,kwargs={}){validatePrimitiveList("ids","number",ids);if(fields){validatePrimitiveList("fields","string",fields);}
if(!ids.length){return Promise.resolve([]);}
return this.call(model,"read",[ids,fields],kwargs);}
readGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);groupby=[...new Set(groupby)];return this.call(model,"read_group",[],{...kwargs,domain,fields,groupby});}
search(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search",[domain],kwargs);}
searchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);if(fields){validatePrimitiveList("fields","string",fields);}
return this.call(model,"search_read",[],{...kwargs,domain,fields});}
searchCount(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search_count",[domain],kwargs);}
unlink(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return Promise.resolve(true);}
return this.call(model,"unlink",[ids],kwargs);}
webReadGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"web_read_group",[],{...kwargs,groupby,domain,fields,});}
webRead(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);return this.call(model,"web_read",[ids],kwargs);}
webSearchRead(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"web_search_read",[],{...kwargs,domain});}
write(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"write",[ids,data],kwargs);}
webSave(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"web_save",[ids,data],kwargs);}}
const ormService=__exports.ormService={dependencies:["rpc","user"],async:["call","create","nameGet","read","readGroup","search","searchRead","unlink","webSearchRead","write",],start(env,{rpc,user}){return new ORM(rpc,user);},};registry.category("services").add("orm",ormService);return __exports;});;

/* /web/static/src/core/overlay/overlay_container.js */
odoo.define('@web/core/overlay/overlay_container',['@odoo/owl','@web/core/utils/arrays','@web/core/utils/components'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{sortBy}=require("@web/core/utils/arrays");const{ErrorHandler}=require("@web/core/utils/components");const OverlayContainer=__exports.OverlayContainer=class OverlayContainer extends Component{static template="web.OverlayContainer";static components={ErrorHandler};static props={overlays:Object};get sortedOverlays(){return sortBy(Object.values(this.props.overlays),(overlay)=>overlay.sequence);}
handleError(overlay,error){overlay.remove();Promise.resolve().then(()=>{throw error;});}}
return __exports;});;

/* /web/static/src/core/overlay/overlay_service.js */
odoo.define('@web/core/overlay/overlay_service',['@odoo/owl','@web/core/registry','@web/core/overlay/overlay_container'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{OverlayContainer}=require("@web/core/overlay/overlay_container");const mainComponents=registry.category("main_components");const services=registry.category("services");const overlayService=__exports.overlayService={start(){let nextId=0;const overlays=reactive({});mainComponents.add("OverlayContainer",{Component:OverlayContainer,props:{overlays},});const remove=(id,onRemove=()=>{})=>{if(id in overlays){onRemove();delete overlays[id];}};const add=(component,props,options={})=>{const id=++nextId;const removeCurrentOverlay=()=>remove(id,options.onRemove);overlays[id]={id,component,props,remove:removeCurrentOverlay,sequence:options.sequence??50,};return removeCurrentOverlay;};return{add,overlays};},};services.add("overlay",overlayService);return __exports;});;

/* /web/static/src/core/pager/pager.js */
odoo.define('@web/core/pager/pager',['@web/core/utils/hooks','@web/core/utils/numbers','@odoo/owl'],function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{clamp}=require("@web/core/utils/numbers");const{Component,useExternalListener,useState}=require("@odoo/owl");const Pager=__exports.Pager=class Pager extends Component{setup(){this.state=useState({isEditing:false,isDisabled:false,});this.inputRef=useAutofocus();useExternalListener(document,"mousedown",this.onClickAway,{capture:true});}
get minimum(){return this.props.offset+1;}
get maximum(){return Math.min(this.props.offset+this.props.limit,this.props.total);}
get value(){const parts=[this.minimum];if(this.props.limit>1){parts.push(this.maximum);}
return parts.join("-");}
get isSinglePage(){return!this.props.updateTotal&&this.minimum===1&&this.maximum===this.props.total;}
async navigate(direction){let minimum=this.props.offset+this.props.limit*direction;let total=this.props.total;if(this.props.updateTotal&&minimum<0){total=await this.props.updateTotal();}
if(minimum>=total){if(!this.props.updateTotal){minimum=0;}}else if(minimum<0&&this.props.limit===1){minimum=total-1;}else if(minimum<0&&this.props.limit>1){minimum=total-(total%this.props.limit||this.props.limit);}
this.update(minimum,this.props.limit,true);}
async parse(value){let[minimum,maximum]=value.trim().split(/\s*[-\s,;]\s*/);minimum=parseInt(minimum,10);maximum=maximum?parseInt(maximum,10):minimum;if(this.props.updateTotal){return{minimum:minimum-1,maximum};}
return{minimum:clamp(minimum,1,this.props.total)-1,maximum:clamp(maximum,1,this.props.total),};}
async setValue(value){const{minimum,maximum}=await this.parse(value);if(!isNaN(minimum)&&!isNaN(maximum)&&minimum<maximum){this.update(minimum,maximum-minimum);}}
async update(offset,limit,hasNavigated){this.state.isDisabled=true;await this.props.onUpdate({offset,limit},hasNavigated);this.state.isDisabled=false;this.state.isEditing=false;}
async updateTotal(){if(!this.state.isDisabled){this.state.isDisabled=true;await this.props.updateTotal();this.state.isDisabled=false;}}
onClickAway(ev){if(ev.target!==this.inputRef.el){this.state.isEditing=false;}}
onInputBlur(){this.state.isEditing=false;}
onInputChange(ev){this.setValue(ev.target.value);if(!this.state.isDisabled){ev.preventDefault();}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();ev.stopPropagation();this.setValue(ev.currentTarget.value);break;case"Escape":ev.preventDefault();ev.stopPropagation();this.state.isEditing=false;break;}}
onValueClick(){if(this.props.isEditable&&!this.state.isEditing&&!this.state.isDisabled){if(this.inputRef.el){this.inputRef.el.focus();}
this.state.isEditing=true;}}}
Pager.template="web.Pager";Pager.defaultProps={isEditable:true,withAccessKey:true,};Pager.props={offset:Number,limit:Number,total:Number,onUpdate:Function,isEditable:{type:Boolean,optional:true},withAccessKey:{type:Boolean,optional:true},updateTotal:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/popover/popover.js */
odoo.define('@web/core/popover/popover',['@odoo/owl','@web/core/utils/hooks','@web/core/position_hook','@web/core/ui/ui_service'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useForwardRefToParent}=require("@web/core/utils/hooks");const{usePosition}=require("@web/core/position_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const Popover=__exports.Popover=class Popover extends Component{static animationTime=200;setup(){useActiveElement("ref");useForwardRefToParent("ref");this.shouldAnimate=this.props.animation;this.position=usePosition("ref",()=>this.props.target,{onPositioned:(el,solution)=>{(this.props.onPositioned||this.onPositioned.bind(this))(el,solution);if(this.props.fixedPosition){this.position.lock();}},position:this.props.position,});}
onPositioned(el,{direction,variant}){const position=`${direction[0]}${variant[0]}`;const directionMap={top:"top",bottom:"bottom",left:"start",right:"end",};el.classList=["o_popover popover mw-100",`bs-popover-${directionMap[direction]}`,`o-popover-${direction}`,`o-popover--${position}`,].join(" ");if(this.props.class){el.classList.add(...this.props.class.split(" "));}
if(this.props.arrow){const arrowEl=el.querySelector(":scope > .popover-arrow");arrowEl.className="popover-arrow";switch(position){case"tm":case"bm":case"tf":case"bf":arrowEl.classList.add("start-0","end-0","mx-auto");break;case"lm":case"rm":case"lf":case"rf":arrowEl.classList.add("top-0","bottom-0","my-auto");break;case"ts":case"bs":arrowEl.classList.add("end-auto");break;case"te":case"be":arrowEl.classList.add("start-auto");break;case"ls":case"rs":arrowEl.classList.add("bottom-auto");break;case"le":case"re":arrowEl.classList.add("top-auto");break;}}
if(this.shouldAnimate){this.shouldAnimate=false;const transform={top:["translateY(-5%)","translateY(0)"],right:["translateX(5%)","translateX(0)"],bottom:["translateY(5%)","translateY(0)"],left:["translateX(-5%)","translateX(0)"],}[direction];this.position.lock();const animation=el.animate({opacity:[0,1],transform},this.constructor.animationTime);animation.finished.then(this.position.unlock);}}}
Popover.template="web.PopoverWowl";Popover.defaultProps={position:"bottom",class:"",fixedPosition:false,arrow:true,animation:true,};Popover.props={ref:{type:Function,optional:true,},class:{optional:true,type:String,},position:{type:String,validate:(p)=>{const[d,v="middle"]=p.split("-");return(["top","bottom","left","right"].includes(d)&&["start","middle","end","fit"].includes(v));},optional:true,},onPositioned:{type:Function,optional:true,},fixedPosition:{type:Boolean,optional:true,},arrow:{type:Boolean,optional:true,},animation:{type:Boolean,optional:true,},target:{validate:(target)=>{const Element=target?.ownerDocument?.defaultView?.Element;return((Boolean(Element)&&(target instanceof Element||target instanceof window.Element))||(typeof target==="object"&&target?.constructor?.name?.endsWith("Element")));},},slots:{type:Object,optional:true,shape:{default:{optional:true},},},};return __exports;});;

/* /web/static/src/core/popover/popover_controller.js */
odoo.define('@web/core/popover/popover_controller',['@odoo/owl','@web/core/hotkeys/hotkey_hook','@web/core/utils/hooks','@web/core/popover/popover'],function(require){'use strict';let __exports={};const{Component,onWillDestroy,useExternalListener,useSubEnv,xml}=require("@odoo/owl");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useChildRef}=require("@web/core/utils/hooks");const{Popover}=require("@web/core/popover/popover");const POPOVER_SYMBOL=__exports.POPOVER_SYMBOL=Symbol("popover");const PopoverController=__exports.PopoverController=class PopoverController extends Component{static template=xml`
        <Popover t-props="props.popoverProps" ref="popoverRef">
            <t t-component="props.component" t-props="props.componentProps" close="props.close"/>
        </Popover>
    `;static components={Popover};static props=["target","close","closeOnClickAway","component","componentProps","popoverProps","subPopovers?",];setup(){this.props.subPopovers?.add(this);this.subPopovers=new Set();useSubEnv({[POPOVER_SYMBOL]:this.subPopovers});if(this.props.target.isConnected){this.popoverRef=useChildRef();useExternalListener(window,"pointerdown",this.onClickAway,{capture:true});useHotkey("escape",()=>this.props.close());const targetObserver=new MutationObserver(this.onTargetMutate.bind(this));targetObserver.observe(this.props.target.parentElement,{childList:true});onWillDestroy(()=>{targetObserver.disconnect();this.props.subPopovers?.delete(this);});}else{this.props.close();}}
isInside(target){if(this.props.target.contains(target)||this.popoverRef.el.contains(target)){return true;}
return[...this.subPopovers].some((p)=>p.isInside(target));}
onClickAway(ev){const target=ev.composedPath()[0];if(this.props.closeOnClickAway(target)&&!this.isInside(target)){this.props.close();}}
onTargetMutate(){if(!this.props.target.isConnected){this.props.close();}}}
return __exports;});;

/* /web/static/src/core/popover/popover_hook.js */
odoo.define('@web/core/popover/popover_hook',['@web/core/utils/hooks','@odoo/owl','@web/core/popover/popover_controller'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{onWillUnmount,status,useComponent,useEnv}=require("@odoo/owl");const{POPOVER_SYMBOL}=require("@web/core/popover/popover_controller");__exports.makePopover=makePopover;function makePopover(popoverService,component,options){let removeFn=null;function close(){removeFn?.();}
return{open(target,props){close();const newOptions=Object.create(options);newOptions.onClose=()=>{removeFn=null;options.onClose?.();};removeFn=popoverService.add(target,component,props,newOptions);},close,get isOpen(){return Boolean(removeFn);},};}
__exports.usePopover=usePopover;function usePopover(component,options={}){const env=useEnv();const popoverService=useService("popover");const owner=useComponent();const newOptions=Object.create(options);newOptions[POPOVER_SYMBOL]=env[POPOVER_SYMBOL];newOptions.onClose=()=>{if(status(owner)!=="destroyed"){options.onClose?.();}};const popover=makePopover(popoverService,component,newOptions);onWillUnmount(popover.close);return popover;}
return __exports;});;

/* /web/static/src/core/popover/popover_service.js */
odoo.define('@web/core/popover/popover_service',['@odoo/owl','@web/core/registry','@web/core/popover/popover_controller'],function(require){'use strict';let __exports={};const{markRaw}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{POPOVER_SYMBOL,PopoverController}=require("@web/core/popover/popover_controller");const popoverService=__exports.popoverService={dependencies:["overlay"],start(_,{overlay}){const add=(target,component,props,options={})=>{const closeOnClickAway=typeof options.closeOnClickAway==="function"?options.closeOnClickAway:()=>options.closeOnClickAway??true;const remove=overlay.add(PopoverController,{target,close:()=>remove(),closeOnClickAway,subPopovers:options[POPOVER_SYMBOL],component,componentProps:markRaw(props),popoverProps:{target,class:options.popoverClass,animation:options.animation,arrow:options.arrow,position:options.position,onPositioned:options.onPositioned,fixedPosition:options.fixedPosition,},},{onRemove:options.onClose});return remove;};return{add};},};registry.category("services").add("popover",popoverService);return __exports;});;

/* /web/static/src/core/position_hook.js */
odoo.define('@web/core/position_hook',['@web/core/utils/timing','@odoo/owl','@web/core/l10n/localization'],function(require){'use strict';let __exports={};const{useThrottleForAnimation}=require("@web/core/utils/timing");const{EventBus,onWillDestroy,useChildSubEnv,useComponent,useEffect,useRef,}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const DIRECTIONS={t:"top",r:"right",b:"bottom",l:"left"};const VARIANTS={s:"start",m:"middle",e:"end",f:"fit"};const DIRECTION_FLIP_ORDER={top:"tbrl",right:"rltb",bottom:"btrl",left:"lrbt"};const VARIANT_FLIP_ORDER={start:"sme",middle:"mse",end:"ems",fit:"f"};const FIT_FLIP_ORDER={top:"tb",right:"rl",bottom:"bt",left:"lr"};const DEFAULTS={margin:0,position:"bottom",};function getIFrame(popperEl,targetEl){return[...popperEl.ownerDocument.getElementsByTagName("iframe")].find((iframe)=>iframe.contentDocument?.contains(targetEl));}
function getBestPosition(popper,target,{container,margin,position},iframe){const[directionKey,variantKey="middle"]=position.split("-");const directions=variantKey==="fit"?FIT_FLIP_ORDER[directionKey]:DIRECTION_FLIP_ORDER[directionKey];const variants=VARIANT_FLIP_ORDER[variantKey];if(!container){container=popper.ownerDocument.documentElement;}else if(typeof container==="function"){container=container();}
const popperStyle=getComputedStyle(popper);const{marginTop,marginLeft,marginRight,marginBottom}=popperStyle;const popMargins={top:parseFloat(marginTop),left:parseFloat(marginLeft),right:parseFloat(marginRight),bottom:parseFloat(marginBottom),};const popBox=popper.getBoundingClientRect();const targetBox=target.getBoundingClientRect();const contBox=container.getBoundingClientRect();const shouldAccountForIFrame=iframe&&popper.ownerDocument!==target.ownerDocument;const iframeBox=shouldAccountForIFrame?iframe.getBoundingClientRect():{top:0,left:0};const containerIsHTMLNode=container===container.ownerDocument.firstElementChild;const directionsData={t:iframeBox.top+targetBox.top-popMargins.bottom-margin-popBox.height,b:iframeBox.top+targetBox.bottom+popMargins.top+margin,r:iframeBox.left+targetBox.right+popMargins.left+margin,l:iframeBox.left+targetBox.left-popMargins.right-margin-popBox.width,};const variantsData={vf:iframeBox.left+targetBox.left,vs:iframeBox.left+targetBox.left+popMargins.left,vm:iframeBox.left+targetBox.left+targetBox.width/2-popBox.width/2,ve:iframeBox.left+targetBox.right-popMargins.right-popBox.width,hf:iframeBox.top+targetBox.top,hs:iframeBox.top+targetBox.top+popMargins.top,hm:iframeBox.top+targetBox.top+targetBox.height/2-popBox.height/2,he:iframeBox.top+targetBox.bottom-popMargins.bottom-popBox.height,};function getPositioningData(d=directions[0],v=variants[0],containerRestricted=false){const vertical=["t","b"].includes(d);const variantPrefix=vertical?"v":"h";const directionValue=directionsData[d];const variantValue=variantsData[variantPrefix+v];if(containerRestricted){const[directionSize,variantSize]=vertical?[popBox.height,popBox.width]:[popBox.width,popBox.height];let[directionMin,directionMax]=vertical?[contBox.top,contBox.bottom]:[contBox.left,contBox.right];let[variantMin,variantMax]=vertical?[contBox.left,contBox.right]:[contBox.top,contBox.bottom];if(containerIsHTMLNode){if(vertical){directionMin+=container.scrollTop;directionMax+=container.scrollTop;}else{variantMin+=container.scrollTop;variantMax+=container.scrollTop;}}
const directionOverflow=Math.ceil(directionValue)<Math.floor(directionMin)||Math.floor(directionValue+directionSize)>Math.ceil(directionMax);const variantOverflow=Math.ceil(variantValue)<Math.floor(variantMin)||Math.floor(variantValue+variantSize)>Math.ceil(variantMax);if(directionOverflow||variantOverflow){return null;}}
const positioning=vertical?{top:directionValue,left:variantValue,}:{top:variantValue,left:directionValue,};return{top:positioning.top-popBox.top,left:positioning.left-popBox.left,direction:DIRECTIONS[d],variant:VARIANTS[v],};}
for(const d of directions){for(const v of variants){const match=getPositioningData(d,v,true);if(match){return match;}}}
return getPositioningData();}
__exports.reposition=reposition;function reposition(popper,target,options,iframe){let[directionKey,variantKey="middle"]=options.position.split("-");if(localization.direction==="rtl"){if(["bottom","top"].includes(directionKey)){if(variantKey!=="middle"){variantKey=variantKey==="start"?"end":"start";}}else{directionKey=directionKey==="left"?"right":"left";}}
options.position=[directionKey,variantKey].join("-");popper.style.position="fixed";popper.style.top="0px";popper.style.left="0px";const position=getBestPosition(popper,target,options,iframe);const{top,left,direction,variant}=position;popper.style.top=`${top}px`;popper.style.left=`${left}px`;if(variant==="fit"){const styleProperty=["top","bottom"].includes(direction)?"width":"height";popper.style[styleProperty]=target.getBoundingClientRect()[styleProperty]+"px";}
options.onPositioned?.(popper,position);}
const POSITION_BUS=Symbol("position-bus");__exports.usePosition=usePosition;function usePosition(refName,getTarget,options={}){const ref=useRef(refName);let lock=false;const update=()=>{const targetEl=getTarget();if(!ref.el||!targetEl||lock){return;}
const iframe=getIFrame(ref.el,targetEl);reposition(ref.el,targetEl,{...DEFAULTS,...options},iframe);};const component=useComponent();const bus=component.env[POSITION_BUS]||new EventBus();let executingUpdate=false;const batchedUpdate=async()=>{if(!executingUpdate){executingUpdate=true;update();await Promise.resolve();executingUpdate=false;}};bus.addEventListener("update",batchedUpdate);onWillDestroy(()=>bus.removeEventListener("update",batchedUpdate));const isTopmost=!(POSITION_BUS in component.env);if(isTopmost){useChildSubEnv({[POSITION_BUS]:bus});}
const throttledUpdate=useThrottleForAnimation(()=>bus.trigger("update"));useEffect(()=>{bus.trigger("update");if(isTopmost){const scrollListener=(e)=>{if(ref.el?.contains(e.target)){return;}
throttledUpdate();};const targetDocument=getTarget()?.ownerDocument;targetDocument?.addEventListener("scroll",scrollListener,{capture:true});targetDocument?.addEventListener("load",throttledUpdate,{capture:true});window.addEventListener("resize",throttledUpdate);return()=>{targetDocument?.removeEventListener("scroll",scrollListener,{capture:true});targetDocument?.removeEventListener("load",throttledUpdate,{capture:true});window.removeEventListener("resize",throttledUpdate);};}});return{lock:()=>{lock=true;},unlock:()=>{lock=false;bus.trigger("update");},};}
return __exports;});;

/* /web/static/src/core/py_js/py.js */
odoo.define('@web/core/py_js/py',['@web/core/py_js/py_interpreter','@web/core/py_js/py_parser','@web/core/py_js/py_tokenizer','@web/core/py_js/py_utils'],function(require){'use strict';let __exports={};const{evaluate}=require("@web/core/py_js/py_interpreter");const{parse}=require("@web/core/py_js/py_parser");const{tokenize}=require("@web/core/py_js/py_tokenizer");{const{evaluate}=require("@web/core/py_js/py_interpreter");Object.assign(__exports,{evaluate})};{const{parse}=require("@web/core/py_js/py_parser");Object.assign(__exports,{parse})};{const{tokenize}=require("@web/core/py_js/py_tokenizer");Object.assign(__exports,{tokenize})};{const{formatAST}=require("@web/core/py_js/py_utils");Object.assign(__exports,{formatAST})};__exports.parseExpr=parseExpr;function parseExpr(expr){const tokens=tokenize(expr);return parse(tokens);}
__exports.evaluateExpr=evaluateExpr;function evaluateExpr(expr,context={}){let ast;try{ast=parseExpr(expr);}catch(error){throw new EvalError(`Can not parse python expression: (${expr})\nError: ${error.message}`);}
try{return evaluate(ast,context);}catch(error){throw new EvalError(`Can not evaluate python expression: (${expr})\nError: ${error.message}`);}}
__exports.evaluateBooleanExpr=evaluateBooleanExpr;function evaluateBooleanExpr(expr,context={}){if(!expr||expr==='False'||expr==='0'){return false;}
if(expr==='True'||expr==='1'){return true;}
return evaluateExpr(`bool(${expr})`,context);}
return __exports;});;

/* /web/static/src/core/py_js/py_builtin.js */
odoo.define('@web/core/py_js/py_builtin',['@web/core/py_js/py_date'],function(require){'use strict';let __exports={};const{PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta}=require("@web/core/py_js/py_date");const EvaluationError=__exports.EvaluationError=class EvaluationError extends Error{}
__exports.execOnIterable=execOnIterable;function execOnIterable(iterable,func){if(iterable===null){throw new EvaluationError(`value not iterable`);}
if(typeof iterable==="object"&&!Array.isArray(iterable)&&!(iterable instanceof Set)){iterable=Object.keys(iterable);}
if(typeof iterable?.[Symbol.iterator]!=="function"){throw new EvaluationError(`value not iterable`);}
return func(iterable);}
const BUILTINS=__exports.BUILTINS={bool(value){switch(typeof value){case"number":return value!==0;case"string":return value!=="";case"boolean":return value;case"object":if(value===null||value===undefined){return false;}
if(value.isTrue){return value.isTrue();}
if(value instanceof Array){return!!value.length;}
if(value instanceof Set){return!!value.size;}
return Object.keys(value).length!==0;}
return true;},set(iterable){if(arguments.length>2){throw new EvaluationError(`set expected at most 1 argument, got (${arguments.length - 1}`);}
return execOnIterable(iterable,(iterable)=>{return new Set(iterable);});},time:{strftime(format){return PyDateTime.now().strftime(format);},},context_today(){return PyDate.today();},get current_date(){return this.today;},get today(){return PyDate.today().strftime("%Y-%m-%d");},get now(){return PyDateTime.now().strftime("%Y-%m-%d %H:%M:%S");},datetime:{time:PyTime,timedelta:PyTimeDelta,datetime:PyDateTime,date:PyDate,},relativedelta:PyRelativeDelta,true:true,false:false,};return __exports;});;

/* /web/static/src/core/py_js/py_date.js */
odoo.define('@web/core/py_js/py_date',['@web/core/py_js/py_parser'],function(require){'use strict';let __exports={};const{parseArgs}=require("@web/core/py_js/py_parser");const AssertionError=__exports.AssertionError=class AssertionError extends Error{}
const ValueError=__exports.ValueError=class ValueError extends Error{}
const NotSupportedError=__exports.NotSupportedError=class NotSupportedError extends Error{}
function fmt2(n){return String(n).padStart(2,"0");}
function fmt4(n){return String(n).padStart(4,"0");}
function divmod(a,b,fn){let mod=a%b;if((mod>0&&b<0)||(mod<0&&b>0)){mod+=b;}
return fn(Math.floor(a/b),mod);}
function assert(bool,message="AssertionError"){if(!bool){throw new AssertionError(message);}}
const DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];const DAYS_BEFORE_MONTH=[null];for(let dbm=0,i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function daysInMonth(year,month){if(month===2&&isLeap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function isLeap(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysBeforeYear(year){const y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function daysBeforeMonth(year,month){const postLeapFeb=month>2&&isLeap(year);return DAYS_BEFORE_MONTH[month]+(postLeapFeb?1:0);}
function ymd2ord(year,month,day){const dim=daysInMonth(year,month);if(!(1<=day&&day<=dim)){throw new ValueError(`day must be in 1..${dim}`);}
return daysBeforeYear(year)+daysBeforeMonth(year,month)+day;}
const DI400Y=daysBeforeYear(401);const DI100Y=daysBeforeYear(101);const DI4Y=daysBeforeYear(5);function ord2ymd(n){--n;let n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;const year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31,};}
const leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==isLeap(year));let month=(n+50)>>5;let preceding=DAYS_BEFORE_MONTH[month]+(month>2&&leapyear?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+(month===2&&leapyear?1:0);}
n-=preceding;return{year:year,month:month,day:n+1,};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
const dim=daysInMonth(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=daysInMonth(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{const r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond,};}
const PyDate=__exports.PyDate=class PyDate{static today(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getFullYear();const month=date.getMonth()+1;const day=date.getDate();return new PyDate(year,month,day);}
constructor(year,month,day){this.year=year;this.month=month;this.day=day;}
static create(...args){const{year,month,day}=parseArgs(args,["year","month","day"]);return new PyDate(year,month,day);}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days);return new PyDate(s.year,s.month,s.day);}
isEqual(other){if(!(other instanceof PyDate)){return false;}
return this.year===other.year&&this.month===other.month&&this.day===other.day;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(other){if(other instanceof PyTimeDelta){return this.add(other.negate());}
if(other instanceof PyDate){return PyTimeDelta.create(this.toordinal()-other.toordinal());}
throw NotSupportedError();}
toJSON(){return this.strftime("%Y-%m-%d");}
toordinal(){return ymd2ord(this.year,this.month,this.day);}}
const PyDateTime=__exports.PyDateTime=class PyDateTime{static now(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getFullYear();const month=date.getMonth()+1;const day=date.getDate();const hour=date.getHours();const minute=date.getMinutes();const second=date.getSeconds();return new PyDateTime(year,month,day,hour,minute,second,0);}
static create(...args){const namedArgs=parseArgs(args,["year","month","day","hour","minute","second","microsecond",]);const year=namedArgs.year;const month=namedArgs.month;const day=namedArgs.day;const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;const ms=namedArgs.micro/1000||0;return new PyDateTime(year,month,day,hour,minute,second,ms);}
static combine(...args){const{date,time}=parseArgs(args,["date","time"]);return PyDateTime.create(date.year,date.month,date.day,time.hour,time.minute,time.second);}
constructor(year,month,day,hour,minute,second,microsecond){this.year=year;this.month=month;this.day=day;this.hour=hour;this.minute=minute;this.second=second;this.microsecond=microsecond;}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds,this.microsecond+timedelta.microseconds);return new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);}
isEqual(other){if(!(other instanceof PyDateTime)){return false;}
return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond);}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(timedelta){return this.add(timedelta.negate());}
toJSON(){return this.strftime("%Y-%m-%d %H:%M:%S");}
to_utc(){const d=new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second);const timedelta=PyTimeDelta.create({minutes:d.getTimezoneOffset()});return this.add(timedelta);}}
const PyTime=__exports.PyTime=class PyTime extends PyDate{static create(...args){const namedArgs=parseArgs(args,["hour","minute","second"]);const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;return new PyTime(hour,minute,second);}
constructor(hour,minute,second){const now=new Date();const year=now.getFullYear();const month=now.getMonth();const day=now.getDate();super(year,month,day);this.hour=hour;this.minute=minute;this.second=second;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month+1);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
toJSON(){return this.strftime("%H:%M:%S");}}
const DAYS_IN_YEAR=[31,59,90,120,151,181,212,243,273,304,334,366];const TIME_PERIODS=["hour","minute","second"];const PERIODS=["year","month","day",...TIME_PERIODS];const RELATIVE_KEYS="years months weeks days hours minutes seconds microseconds leapdays".split(" ");const ABSOLUTE_KEYS="year month day hour minute second microsecond weekday nlyearday yearday".split(" ");const argsSpec=["dt1","dt2"];const PyRelativeDelta=__exports.PyRelativeDelta=class PyRelativeDelta{static create(...args){const params=parseArgs(args,argsSpec);if("dt1"in params){throw new Error("relativedelta(dt1, dt2) is not supported for now");}
for(const period of PERIODS){if(period in params){const val=params[period];assert(val>=0,`${period} ${val} is out of range`);}}
for(const key of RELATIVE_KEYS){params[key]=params[key]||0;}
for(const key of ABSOLUTE_KEYS){params[key]=key in params?params[key]:null;}
params.days+=7*params.weeks;let yearDay=0;if(params.nlyearday){yearDay=params.nlyearday;}else if(params.yearday){yearDay=params.yearday;if(yearDay>59){params.leapDays=-1;}}
if(yearDay){for(let monthIndex=0;monthIndex<DAYS_IN_YEAR.length;monthIndex++){if(yearDay<=DAYS_IN_YEAR[monthIndex]){params.month=monthIndex+1;if(monthIndex===0){params.day=yearDay;}else{params.day=yearDay-DAYS_IN_YEAR[monthIndex-1];}
break;}}}
return new PyRelativeDelta(params);}
static add(date,delta){if(!(date instanceof PyDate||date instanceof PyDateTime)){throw NotSupportedError();}
const s=tmxxx((delta.year||date.year)+delta.years,(delta.month||date.month)+delta.months,delta.day||date.day,delta.hour||date.hour||0,delta.minute||date.minute||0,delta.second||date.seconds||0,delta.microseconds||date.microseconds||0);const newDateTime=new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);let leapDays=0;if(delta.leapDays&&newDateTime.month>2&&isLeap(newDateTime.year)){leapDays=delta.leapDays;}
const temp=newDateTime.add(PyTimeDelta.create({days:delta.days+leapDays,hours:delta.hours,minutes:delta.minutes,seconds:delta.seconds,microseconds:delta.microseconds,}));const hasTime=Boolean(temp.hour||temp.minute||temp.second||temp.microsecond);const returnDate=!hasTime&&date instanceof PyDate?new PyDate(temp.year,temp.month,temp.day):temp;if(delta.weekday!==null){const wantedDow=delta.weekday+1;const _date=new Date(returnDate.year,returnDate.month-1,returnDate.day);const days=(7-_date.getDay()+wantedDow)%7;return returnDate.add(new PyTimeDelta(days,0,0));}
return returnDate;}
static substract(date,delta){return PyRelativeDelta.add(date,delta.negate());}
constructor(params={},sign=+1){this.years=sign*params.years;this.months=sign*params.months;this.days=sign*params.days;this.hours=sign*params.hours;this.minutes=sign*params.minutes;this.seconds=sign*params.seconds;this.microseconds=sign*params.microseconds;this.leapDays=params.leapDays;this.year=params.year;this.month=params.month;this.day=params.day;this.hour=params.hour;this.minute=params.minute;this.second=params.second;this.microsecond=params.microsecond;this.weekday=params.weekday;}
negate(){return new PyRelativeDelta(this,-1);}
isEqual(other){throw new NotSupportedError();}}
const TIME_DELTA_KEYS="weeks days hours minutes seconds milliseconds microseconds".split(" ");function modf(x){const mod=x%1;return[mod<0?mod+1:mod,Math.floor(x)];}
const PyTimeDelta=__exports.PyTimeDelta=class PyTimeDelta{static create(...args){const namedArgs=parseArgs(args,["days","seconds","microseconds"]);for(const key of TIME_DELTA_KEYS){namedArgs[key]=namedArgs[key]||0;}
let d=0;let s=0;let us=0;const days=namedArgs.days+namedArgs.weeks*7;let seconds=namedArgs.seconds+60*namedArgs.minutes+3600*namedArgs.hours;let microseconds=namedArgs.microseconds+1000*namedArgs.milliseconds;const[dFrac,dInt]=modf(days);d=dInt;let daysecondsfrac=0;if(dFrac){const[dsFrac,dsInt]=modf(dFrac*24*3600);s=dsInt;daysecondsfrac=dsFrac;}
const[sFrac,sInt]=modf(seconds);seconds=sInt;const secondsfrac=sFrac+daysecondsfrac;divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,(seconds,microseconds)=>{divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;us+=Math.round(microseconds);});});return new PyTimeDelta(d,s,us);}
constructor(days,seconds,microseconds){this.days=days;this.seconds=seconds;this.microseconds=microseconds;}
add(other){return PyTimeDelta.create({days:this.days+other.days,seconds:this.seconds+other.seconds,microseconds:this.microseconds+other.microseconds,});}
divide(n){const us=(this.days*24*3600+this.seconds)*1e6+this.microseconds;return PyTimeDelta.create({microseconds:Math.floor(us/n)});}
isEqual(other){if(!(other instanceof PyTimeDelta)){return false;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds);}
isTrue(){return this.days!==0||this.seconds!==0||this.microseconds!==0;}
multiply(n){return PyTimeDelta.create({days:n*this.days,seconds:n*this.seconds,microseconds:n*this.microseconds,});}
negate(){return PyTimeDelta.create({days:-this.days,seconds:-this.seconds,microseconds:-this.microseconds,});}
substract(other){return PyTimeDelta.create({days:this.days-other.days,seconds:this.seconds-other.seconds,microseconds:this.microseconds-other.microseconds,});}
total_seconds(){return this.days*86400+this.seconds+this.microseconds/1000000;}}
return __exports;});;

/* /web/static/src/core/py_js/py_interpreter.js */
odoo.define('@web/core/py_js/py_interpreter',['@web/core/py_js/py_builtin','@web/core/py_js/py_date','@web/core/py_js/py_utils','@web/core/py_js/py_parser'],function(require){'use strict';let __exports={};const{BUILTINS,EvaluationError,execOnIterable}=require("@web/core/py_js/py_builtin");const{NotSupportedError,PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta,}=require("@web/core/py_js/py_date");const{PY_DICT,toPyDict}=require("@web/core/py_js/py_utils");const{parseArgs}=require("@web/core/py_js/py_parser");const isTrue=BUILTINS.bool;function applyUnaryOp(ast,context){const value=evaluate(ast.right,context);switch(ast.op){case"-":if(value instanceof Object&&value.negate){return value.negate();}
return-value;case"+":return value;case"not":return!isTrue(value);}
throw new EvaluationError(`Unknown unary operator: ${ast.op}`);}
function pytypeIndex(val){switch(typeof val){case"object":return val===null?1:Array.isArray(val)?5:3;case"number":return 2;case"string":return 4;}
throw new EvaluationError(`Unknown type: ${typeof val}`);}
function isConstructor(obj){return!!obj.prototype&&!!obj.prototype.constructor.name;}
function isLess(left,right){if(typeof left==="number"&&typeof right==="number"){return left<right;}
if(typeof left==="boolean"){left=left?1:0;}
if(typeof right==="boolean"){right=right?1:0;}
const leftIndex=pytypeIndex(left);const rightIndex=pytypeIndex(right);if(leftIndex===rightIndex){return left<right;}
return leftIndex<rightIndex;}
function isEqual(left,right){if(typeof left!==typeof right){if(typeof left==="boolean"&&typeof right==="number"){return right===(left?1:0);}
if(typeof left==="number"&&typeof right==="boolean"){return left===(right?1:0);}
return false;}
if(left instanceof Object&&left.isEqual){return left.isEqual(right);}
return left===right;}
function isIn(left,right){if(Array.isArray(right)){return right.includes(left);}
if(typeof right==="string"&&typeof left==="string"){return right.includes(left);}
if(typeof right==="object"){return left in right;}
return false;}
function applyBinaryOp(ast,context){const left=evaluate(ast.left,context);const right=evaluate(ast.right,context);switch(ast.op){case"+":{const relativeDeltaOnLeft=left instanceof PyRelativeDelta;const relativeDeltaOnRight=right instanceof PyRelativeDelta;if(relativeDeltaOnLeft||relativeDeltaOnRight){const date=relativeDeltaOnLeft?right:left;const delta=relativeDeltaOnLeft?left:right;return PyRelativeDelta.add(date,delta);}
const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft&&timeDeltaOnRight){return left.add(right);}
if(timeDeltaOnLeft){if(right instanceof PyDate||right instanceof PyDateTime){return right.add(left);}else{throw NotSupportedError();}}
if(timeDeltaOnRight){if(left instanceof PyDate||left instanceof PyDateTime){return left.add(right);}else{throw NotSupportedError();}}
if(left instanceof Array&&right instanceof Array){return[...left,...right];}
return left+right;}
case"-":{const isRightDelta=right instanceof PyRelativeDelta;if(isRightDelta){return PyRelativeDelta.substract(left,right);}
const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnRight){if(left instanceof PyTimeDelta){return left.substract(right);}else if(left instanceof PyDate||left instanceof PyDateTime){return left.substract(right);}else{throw NotSupportedError();}}
if(left instanceof PyDate){return left.substract(right);}
return left-right;}
case"*":{const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft||timeDeltaOnRight){const number=timeDeltaOnLeft?right:left;const delta=timeDeltaOnLeft?left:right;return delta.multiply(number);}
return left*right;}
case"/":return left/right;case"%":return left%right;case"//":if(left instanceof PyTimeDelta){return left.divide(right);}
return Math.floor(left/right);case"**":return left**right;case"==":return isEqual(left,right);case"<>":case"!=":return!isEqual(left,right);case"<":return isLess(left,right);case">":return isLess(right,left);case">=":return isEqual(left,right)||isLess(right,left);case"<=":return isEqual(left,right)||isLess(left,right);case"in":return isIn(left,right);case"not in":return!isIn(left,right);}
throw new EvaluationError(`Unknown binary operator: ${ast.op}`);}
const DICT={get(...args){const{key,defValue}=parseArgs(args,["key","defValue"]);if(key in this){return this[key];}else if(defValue){return defValue;}
return null;},};const STRING={lower(){return this.toLowerCase();},upper(){return this.toUpperCase();},};function applyFunc(key,func,set,...args){if(args.length===1){return new Set(set);}
if(args.length>2){throw new EvaluationError(`${key}: py_js supports at most 1 argument, got (${args.length - 1})`);}
return execOnIterable(args[0],func);}
const SET={intersection(...args){return applyFunc("intersection",(iterable)=>{const intersection=new Set();for(const i of iterable){if(this.has(i)){intersection.add(i);}}
return intersection;},this,...args);},difference(...args){return applyFunc("difference",(iterable)=>{iterable=new Set(iterable);const difference=new Set();for(const e of this){if(!iterable.has(e)){difference.add(e);}}
return difference;},this,...args);},union(...args){return applyFunc("union",(iterable)=>{return new Set([...this,...iterable]);},this,...args);},};function methods(_class){return Object.getOwnPropertyNames(_class.prototype).map((prop)=>_class.prototype[prop]);}
const allowedFns=new Set([BUILTINS.time.strftime,BUILTINS.set,BUILTINS.bool,BUILTINS.context_today,BUILTINS.datetime.datetime.now,BUILTINS.datetime.datetime.combine,BUILTINS.datetime.date.today,...methods(BUILTINS.relativedelta),...Object.values(BUILTINS.datetime).flatMap((obj)=>methods(obj)),...Object.values(SET),...Object.values(DICT),...Object.values(STRING),]);const unboundFn=Symbol("unbound function");__exports.evaluate=evaluate;function evaluate(ast,context={}){const dicts=new Set();let pyContext;const evalContext=Object.create(context);if(!evalContext.context){Object.defineProperty(evalContext,"context",{get(){if(!pyContext){pyContext=toPyDict(context);}
return pyContext;},});}
function _innerEvaluate(ast){switch(ast.type){case 0:case 1:return ast.value;case 5:if(ast.value in evalContext){return evalContext[ast.value];}else if(ast.value in BUILTINS){return BUILTINS[ast.value];}else{throw new EvaluationError(`Name '${ast.value}' is not defined`);}
case 3:return null;case 2:return ast.value;case 6:return applyUnaryOp(ast,evalContext);case 7:return applyBinaryOp(ast,evalContext);case 14:{const left=_evaluate(ast.left);if(ast.op==="and"){return isTrue(left)?_evaluate(ast.right):left;}else{return isTrue(left)?left:_evaluate(ast.right);}}
case 4:case 10:return ast.value.map(_evaluate);case 11:{const dict={};for(const key in ast.value){dict[key]=_evaluate(ast.value[key]);}
dicts.add(dict);return dict;}
case 8:{const fnValue=_evaluate(ast.fn);const args=ast.args.map(_evaluate);const kwargs={};for(const kwarg in ast.kwargs){kwargs[kwarg]=_evaluate(ast.kwargs[kwarg]);}
if(fnValue===PyDate||fnValue===PyDateTime||fnValue===PyTime||fnValue===PyRelativeDelta||fnValue===PyTimeDelta){return fnValue.create(...args,kwargs);}
return fnValue(...args,kwargs);}
case 12:{const dict=_evaluate(ast.target);const key=_evaluate(ast.key);return dict[key];}
case 13:{if(isTrue(_evaluate(ast.condition))){return _evaluate(ast.ifTrue);}else{return _evaluate(ast.ifFalse);}}
case 15:{let left=_evaluate(ast.obj);let result;if(dicts.has(left)||Object.isPrototypeOf.call(PY_DICT,left)){result=DICT[ast.key];}else if(typeof left==="string"){result=STRING[ast.key];}else if(left instanceof Set){result=SET[ast.key];}else if(ast.key=="get"&&typeof left==="object"){result=DICT[ast.key];left=toPyDict(left);}else{result=left[ast.key];}
if(typeof result==="function"){if(!isConstructor(result)){const bound=result.bind(left);bound[unboundFn]=result;return bound;}}
return result;}}
throw new EvaluationError(`AST of type ${ast.type} cannot be evaluated`);}
function _evaluate(ast){const val=_innerEvaluate(ast);if(typeof val==="function"&&!allowedFns.has(val)&&!allowedFns.has(val[unboundFn])){throw new Error("Invalid Function Call");}
return val;}
return _evaluate(ast);}
return __exports;});;

/* /web/static/src/core/py_js/py_parser.js */
odoo.define('@web/core/py_js/py_parser',['@web/core/py_js/py_tokenizer'],function(require){'use strict';let __exports={};const{binaryOperators,comparators}=require("@web/core/py_js/py_tokenizer");const ParserError=__exports.ParserError=class ParserError extends Error{}
const chainedOperators=new Set(comparators);const infixOperators=new Set(binaryOperators.concat(comparators));__exports.bp=bp;function bp(symbol){switch(symbol){case"=":return 10;case"if":return 20;case"in":case"not in":case"is":case"is not":case"<":case"<=":case">":case">=":case"<>":case"==":case"!=":return 60;case"or":return 30;case"and":return 40;case"not":return 50;case"|":return 70;case"^":return 80;case"&":return 90;case"<<":case">>":return 100;case"+":case"-":return 110;case"*":case"/":case"//":case"%":return 120;case"**":return 140;case".":case"(":case"[":return 150;}
return 0;}
function bindingPower(token){return token.type===2?bp(token.value):0;}
function isSymbol(token,value){return token.type===2&&token.value===value;}
function parsePrefix(current,tokens){switch(current.type){case 0:return{type:0,value:current.value};case 1:return{type:1,value:current.value};case 4:if(current.value==="None"){return{type:3};}else{return{type:2,value:current.value==="True"};}
case 3:return{type:5,value:current.value};case 2:switch(current.value){case"-":case"+":case"~":return{type:6,op:current.value,right:_parse(tokens,130),};case"not":return{type:6,op:current.value,right:_parse(tokens,50),};case"(":{const content=[];let isTuple=false;while(tokens[0]&&!isSymbol(tokens[0],")")){content.push(_parse(tokens,0));if(tokens[0]){if(tokens[0]&&isSymbol(tokens[0],",")){isTuple=true;tokens.shift();}else if(!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}}else{throw new ParserError("parsing error");}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();isTuple=isTuple||content.length===0;return isTuple?{type:10,value:content}:content[0];}
case"[":{const value=[];while(tokens[0]&&!isSymbol(tokens[0],"]")){value.push(_parse(tokens,0));if(tokens[0]){if(isSymbol(tokens[0],",")){tokens.shift();}else if(!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}}}
if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:4,value};}
case"{":{const dict={};while(tokens[0]&&!isSymbol(tokens[0],"}")){const key=_parse(tokens,0);if((key.type!==1&&key.type!==0)||!tokens[0]||!isSymbol(tokens[0],":")){throw new ParserError("parsing error");}
tokens.shift();const value=_parse(tokens,0);dict[key.value]=value;if(isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens.shift()){throw new ParserError("parsing error");}
return{type:11,value:dict};}}}
throw new ParserError("Token cannot be parsed");}
function parseInfix(left,current,tokens){switch(current.type){case 2:if(infixOperators.has(current.value)){let right=_parse(tokens,bindingPower(current));if(current.value==="and"||current.value==="or"){return{type:14,op:current.value,left,right,};}else if(current.value==="."){if(right.type===5){return{type:15,obj:left,key:right.value,};}else{throw new ParserError("invalid obj lookup");}}
let op={type:7,op:current.value,left,right,};while(chainedOperators.has(current.value)&&tokens[0]&&tokens[0].type===2&&chainedOperators.has(tokens[0].value)){const nextToken=tokens.shift();op={type:14,op:"and",left:op,right:{type:7,op:nextToken.value,left:right,right:_parse(tokens,bindingPower(nextToken)),},};right=op.right.right;}
return op;}
switch(current.value){case"(":{const args=[];const kwargs={};while(tokens[0]&&!isSymbol(tokens[0],")")){const arg=_parse(tokens,0);if(arg.type===9){kwargs[arg.name.value]=arg.value;}else{args.push(arg);}
if(tokens[0]&&isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();return{type:8,fn:left,args,kwargs};}
case"=":if(left.type===5){return{type:9,name:left,value:_parse(tokens,10),};}
break;case"[":{const key=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:12,target:left,key:key,};}
case"if":{const condition=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"else")){throw new ParserError("parsing error");}
tokens.shift();const ifFalse=_parse(tokens);return{type:13,condition,ifTrue:left,ifFalse,};}}}
throw new ParserError("Token cannot be parsed");}
function _parse(tokens,bp=0){const token=tokens.shift();let expr=parsePrefix(token,tokens);while(tokens[0]&&bindingPower(tokens[0])>bp){expr=parseInfix(expr,tokens.shift(),tokens);}
return expr;}
__exports.parse=parse;function parse(tokens){if(tokens.length){return _parse(tokens,0);}
throw new ParserError("Missing token");}
__exports.parseArgs=parseArgs;function parseArgs(args,spec){const last=args[args.length-1];const unnamedArgs=typeof last==="object"?args.slice(0,-1):args;const kwargs=typeof last==="object"?last:{};for(const[index,val]of unnamedArgs.entries()){kwargs[spec[index]]=val;}
return kwargs;}
return __exports;});;

/* /web/static/src/core/py_js/py_tokenizer.js */
odoo.define('@web/core/py_js/py_tokenizer',[],function(require){'use strict';let __exports={};const TokenizerError=__exports.TokenizerError=class TokenizerError extends Error{}
const directMap={"\\":"\\",'"':'"',"'":"'",a:"\x07",b:"\x08",f:"\x0c",n:"\n",r:"\r",t:"\t",v:"\v",};function decodeStringLiteral(str,unicode){const out=[];let code;for(var i=0;i<str.length;++i){if(str[i]!=="\\"){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in directMap){out.push(directMap[escape]);++i;continue;}
switch(escape){case"\n":++i;continue;case"N":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\N{} escape not implemented");case"u":if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape",].join(""));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case"U":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\U escape not implemented");case"x":var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new TokenizerError("ValueError: invalid \\x escape");}
throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,"-",i+2,": truncated \\xXX escape",].join(""));}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push("\\");}
return out.join("");}
const constants=new Set(["None","False","True"]);const comparators=__exports.comparators=["in","not","not in","is","is not","<","<=",">",">=","<>","!=","==",];const binaryOperators=__exports.binaryOperators=["or","and","|","^","&","<<",">>","+","-","*","/","//","%","~","**",".",];const unaryOperators=__exports.unaryOperators=["-"];const symbols=new Set([...["(",")","[","]","{","}",":",","],...["if","else","lambda","="],...comparators,...binaryOperators,...unaryOperators,]);function group(...args){return"("+args.join("|")+")";}
const Name="[a-zA-Z_]\\w*";const Whitespace="[ \\f\\t]*";const DecNumber="\\d+(L|l)?";const IntNumber=DecNumber;const Exponent="[eE][+-]?\\d+";const PointFloat=group(`\\d+\\.\\d*(${Exponent})?`,`\\.\\d+(${Exponent})?`);const FloatNumber=group(PointFloat,`\\d+${Exponent}`);const Number=group(FloatNumber,IntNumber);const Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");const Bracket="[\\[\\]\\(\\)\\{\\}]";const Special="[:;.,`@]";const Funny=group(Operator,Bracket,Special);const ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');const PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);const NumberPattern=new RegExp("^"+Number+"$");const StringPattern=new RegExp("^"+ContStr+"$");const NamePattern=new RegExp("^"+Name+"$");const strip=new RegExp("^"+Whitespace);__exports.tokenize=tokenize;function tokenize(str){const tokens=[];const max=str.length;let start=0;let end=0;const pseudoprog=new RegExp(PseudoToken,"g");while(pseudoprog.lastIndex<max){const pseudomatch=pseudoprog.exec(str);if(!pseudomatch){if(/^\s+$/.test(str.slice(end))){break;}
throw new TokenizerError("Failed to tokenize <<"+
str+">> at index "+
(end||0)+"; parsed so far: "+
tokens);}
if(pseudomatch.index>end){if(str.slice(end,pseudomatch.index).trim()){throw new TokenizerError("Invalid expression");}}
start=pseudomatch.index;end=pseudoprog.lastIndex;let token=str.slice(start,end).replace(strip,"");if(NumberPattern.test(token)){tokens.push({type:0,value:parseFloat(token),});}else if(StringPattern.test(token)){var m=StringPattern.exec(token);tokens.push({type:1,value:decodeStringLiteral(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4])),});}else if(symbols.has(token)){if(token==="in"&&tokens.length>0&&tokens[tokens.length-1].value==="not"){token="not in";tokens.pop();}else if(token==="not"&&tokens.length>0&&tokens[tokens.length-1].value==="is"){token="is not";tokens.pop();}
tokens.push({type:2,value:token,});}else if(constants.has(token)){tokens.push({type:4,value:token,});}else if(NamePattern.test(token)){tokens.push({type:3,value:token,});}else{throw new TokenizerError("Invalid expression");}}
return tokens;}
return __exports;});;

/* /web/static/src/core/py_js/py_utils.js */
odoo.define('@web/core/py_js/py_utils',['@web/core/py_js/py_parser','@web/core/py_js/py_date'],function(require){'use strict';let __exports={};const{bp}=require("@web/core/py_js/py_parser");const{PyDate,PyDateTime}=require("@web/core/py_js/py_date");__exports.toPyValue=toPyValue;function toPyValue(value){switch(typeof value){case"string":return{type:1,value};case"number":return{type:0,value};case"boolean":return{type:2,value};case"object":if(Array.isArray(value)){return{type:4,value:value.map(toPyValue)};}else if(value===null){return{type:3};}else if(value instanceof Date){return{type:1,value:PyDateTime.convertDate(value)};}else if(value instanceof PyDate||value instanceof PyDateTime){return{type:1,value};}else{const content={};for(const key in value){content[key]=toPyValue(value[key]);}
return{type:11,value:content};}
default:throw new Error("Invalid type");}}
__exports.formatAST=formatAST;function formatAST(ast,lbp=0){switch(ast.type){case 3:return"None";case 1:return JSON.stringify(ast.value);case 0:return String(ast.value);case 2:return ast.value?"True":"False";case 4:return`[${ast.value.map(formatAST).join(", ")}]`;case 6:if(ast.op==="not"){return`not `+formatAST(ast.right,50);}
return ast.op+formatAST(ast.right,130);case 7:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 11:{const pairs=[];for(const k in ast.value){pairs.push(`"${k}": ${formatAST(ast.value[k])}`);}
return`{`+pairs.join(", ")+`}`;}
case 10:return`(${ast.value.map(formatAST).join(", ")})`;case 5:return ast.value;case 12:{return`${formatAST(ast.target)}[${formatAST(ast.key)}]`;}
case 13:{const{ifTrue,condition,ifFalse}=ast;return`${formatAST(ifTrue)} if ${formatAST(condition)} else ${formatAST(ifFalse)}`;}
case 14:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 15:return`${formatAST(ast.obj, 150)}.${ast.key}`;case 8:{const args=ast.args.map(formatAST);const kwargs=[];for(const kwarg in ast.kwargs){kwargs.push(`${kwarg} = ${formatAST(ast.kwargs[kwarg])}`);}
const argStr=args.concat(kwargs).join(", ");return`${formatAST(ast.fn)}(${argStr})`;}}
throw new Error("invalid expression: "+ast);}
const PY_DICT=__exports.PY_DICT=Object.create(null);__exports.toPyDict=toPyDict;function toPyDict(obj){return new Proxy(obj,{getPrototypeOf(){return PY_DICT;},});}
return __exports;});;

/* /web/static/src/core/record_selectors/multi_record_selector.js */
odoo.define('@web/core/record_selectors/multi_record_selector',['@odoo/owl','@web/core/tags_list/tags_list','@web/core/utils/hooks','@web/core/record_selectors/record_autocomplete','@web/core/l10n/translation','@web/core/record_selectors/tag_navigation_hook'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{TagsList}=require("@web/core/tags_list/tags_list");const{useService}=require("@web/core/utils/hooks");const{RecordAutocomplete}=require("@web/core/record_selectors/record_autocomplete");const{_t}=require("@web/core/l10n/translation");const{useTagNavigation}=require("@web/core/record_selectors/tag_navigation_hook");const MultiRecordSelector=__exports.MultiRecordSelector=class MultiRecordSelector extends Component{static props={resIds:{type:Array,element:Number},resModel:String,update:Function,domain:{type:Array,optional:true},context:{type:Object,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={RecordAutocomplete,TagsList};static template="web.MultiRecordSelector";setup(){this.nameService=useService("name");this.onTagKeydown=useTagNavigation("multiRecordSelector",this.deleteTag.bind(this));onWillStart(()=>this.computeDerivedParams());onWillUpdateProps((nextProps)=>this.computeDerivedParams(nextProps));}
async computeDerivedParams(props=this.props){const displayNames=await this.getDisplayNames(props);this.tags=this.getTags(props,displayNames);}
async getDisplayNames(props){const ids=this.getIds(props);return this.nameService.loadDisplayNames(props.resModel,ids);}
get placeholder(){return this.getIds().length?"":this.props.placeholder;}
getIds(props=this.props){return props.resIds;}
getTags(props,displayNames){return props.resIds.map((id,index)=>{const text=typeof displayNames[id]==="string"?displayNames[id]:_t("Inaccessible/missing record ID: %s",id);return{text,onDelete:()=>{this.deleteTag(index);},onKeydown:this.onTagKeydown,};});}
deleteTag(index){this.props.update([...this.props.resIds.slice(0,index),...this.props.resIds.slice(index+1),]);}
update(resIds){this.props.update([...this.props.resIds,...resIds]);}}
return __exports;});;

/* /web/static/src/core/record_selectors/record_autocomplete.js */
odoo.define('@web/core/record_selectors/record_autocomplete',['@odoo/owl','@web/core/autocomplete/autocomplete','@web/core/l10n/translation','@web/core/domain','@web/core/registry','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{registry}=require("@web/core/registry");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const SEARCH_LIMIT=7;const SEARCH_MORE_LIMIT=320;const RecordAutocomplete=__exports.RecordAutocomplete=class RecordAutocomplete extends Component{static props={resModel:String,update:Function,multiSelect:Boolean,getIds:Function,value:String,domain:{type:Array,optional:true},context:{type:Object,optional:true},className:{type:String,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={AutoComplete};static template="web.RecordAutocomplete";setup(){this.orm=useService("orm");this.nameService=useService("name");this.addDialog=useOwnedDialogs();this.sources=[{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),},];}
addNames(options){const displayNames=Object.fromEntries(options);this.nameService.addDisplayNames(this.props.resModel,displayNames);}
getIds(){return this.props.getIds();}
async loadOptionsSource(name){if(this.lastProm){this.lastProm.abort(false);}
this.lastProm=this.search(name,SEARCH_LIMIT+1);const nameGets=(await this.lastProm).map(([id,label])=>([id,label?label.split("\n")[0]:_t("Unnamed")]));this.addNames(nameGets);const options=nameGets.map(([value,label])=>({value,label}));if(SEARCH_LIMIT<nameGets.length){options.push({label:_t("Search More..."),action:this.onSearchMore.bind(this,name),classList:"o_m2o_dropdown_option",});}
if(options.length===0){options.push({label:_t("(no result)"),unselectable:true});}
return options;}
async onSearchMore(name){const{fieldString,multiSelect,resModel}=this.props;let operator;const ids=[];if(name){const nameGets=await this.search(name,SEARCH_MORE_LIMIT);this.addNames(nameGets);operator="in";ids.push(...nameGets.map((nameGet)=>nameGet[0]));}else{operator="not in";ids.push(...this.getIds());}
const dynamicFilters=ids.length?[{description:_t("Quick search: %s",name),domain:[["id",operator,ids]],},]:undefined;const SelectCreateDialog=registry.category("dialogs").get("select_create");this.addDialog(SelectCreateDialog,{title:_t("Search: %s",fieldString),dynamicFilters,resModel,noCreate:true,multiSelect,context:this.props.context||{},onSelected:(resId)=>{const resIds=Array.isArray(resId)?resId:[resId];this.props.update([...resIds]);},});}
getDomain(){const domainIds=Domain.not([["id","in",this.getIds()]]);if(this.props.domain){return Domain.and([this.props.domain,domainIds]).toList();}
return domainIds.toList();}
onSelect({value:resId,action},params){if(action){return action(params);}
this.props.update([resId]);}
search(name,limit){const domain=this.getDomain();return this.orm.call(this.props.resModel,"name_search",[],{name,args:domain,limit,context:this.props.context||{},});}
onChange({inputValue}){if(!inputValue.length){this.props.update([]);}}}
return __exports;});;

/* /web/static/src/core/record_selectors/record_selector.js */
odoo.define('@web/core/record_selectors/record_selector',['@odoo/owl','@web/core/utils/hooks','@web/core/record_selectors/record_autocomplete','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const{RecordAutocomplete}=require("@web/core/record_selectors/record_autocomplete");const{_t}=require("@web/core/l10n/translation");const RecordSelector=__exports.RecordSelector=class RecordSelector extends Component{static props={resId:[Number,{value:false}],resModel:String,update:Function,domain:{type:Array,optional:true},context:{type:Object,optional:true},fieldString:{type:String,optional:true},placeholder:{type:String,optional:true},};static components={RecordAutocomplete};static template="web.RecordSelector";setup(){this.nameService=useService("name");onWillStart(()=>this.computeDerivedParams());onWillUpdateProps((nextProps)=>this.computeDerivedParams(nextProps));}
async computeDerivedParams(props=this.props){const displayNames=await this.getDisplayNames(props);this.displayName=this.getDisplayName(props,displayNames);}
async getDisplayNames(props){const ids=this.getIds(props);return this.nameService.loadDisplayNames(props.resModel,ids);}
getDisplayName(props=this.props,displayNames){const{resId}=props;if(resId===false){return"";}
return typeof displayNames[resId]==="string"?displayNames[resId]:_t("Inaccessible/missing record ID: %s",resId);}
getIds(props=this.props){if(props.resId){return[props.resId];}
return[];}
update(resIds){this.props.update(resIds[0]||false);this.render(true);}}
return __exports;});;

/* /web/static/src/core/record_selectors/tag_navigation_hook.js */
odoo.define('@web/core/record_selectors/tag_navigation_hook',['@web/core/hotkeys/hotkey_service','@odoo/owl'],function(require){'use strict';let __exports={};const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{useEffect,useRef}=require("@odoo/owl");__exports.useTagNavigation=useTagNavigation;function useTagNavigation(refName,deleteTag){const ref=useRef(refName);useEffect((autocomplete)=>{if(!autocomplete){return;}
autocomplete.addEventListener("keydown",onAutoCompleteKeydown);return()=>{autocomplete.removeEventListener("keydown",onAutoCompleteKeydown);};},()=>[ref.el?.querySelector(".o-autocomplete")]);function focusTag(index){const tags=ref.el.getElementsByClassName("o_tag");if(tags.length){if(index===undefined){tags[tags.length-1].focus();}else{tags[index].focus();}}}
function onAutoCompleteKeydown(ev){if(ev.isComposing){return;}
const hotkey=getActiveHotkey(ev);const input=ev.target.closest(".o-autocomplete--input");const autoCompleteMenuOpened=!!ref.el.querySelector(".o-autocomplete--dropdown-menu");switch(hotkey){case"arrowleft":{if(input.selectionStart||autoCompleteMenuOpened){return;}
focusTag();break;}
case"arrowright":{if(input.selectionStart!==input.value.length||autoCompleteMenuOpened){return;}
focusTag(0);break;}
case"backspace":{if(input.value){return;}
const tags=ref.el.getElementsByClassName("o_tag");if(tags.length){deleteTag(tags.length-1);}
break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}
function onTagKeydown(ev){const hotkey=getActiveHotkey(ev);const tags=[...ref.el.getElementsByClassName("o_tag")];const closestTag=ev.target.closest(".o_tag");const tagIndex=tags.indexOf(closestTag);const input=ref.el.querySelector(".o-autocomplete--input");switch(hotkey){case"arrowleft":{if(tagIndex===0){input.focus();}else{focusTag(tagIndex-1);}
break;}
case"arrowright":{if(tagIndex===tags.length-1){input.focus();}else{focusTag(tagIndex+1);}
break;}
case"backspace":{input.focus();deleteTag(tagIndex);break;}
default:return;}
ev.preventDefault();ev.stopPropagation();}
return onTagKeydown;}
return __exports;});;

/* /web/static/src/core/registry.js */
odoo.define('@web/core/registry',['@odoo/owl'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const KeyNotFoundError=__exports.KeyNotFoundError=class KeyNotFoundError extends Error{}
const DuplicatedKeyError=__exports.DuplicatedKeyError=class DuplicatedKeyError extends Error{}
const Registry=__exports.Registry=class Registry extends EventBus{constructor(){super();this.content={};this.subRegistries={};this.elements=null;this.entries=null;this.addEventListener("UPDATE",()=>{this.elements=null;this.entries=null;});}
add(key,value,{force,sequence}={}){if(!force&&key in this.content){throw new DuplicatedKeyError(`Cannot add '${key}' in this registry: it already exists`);}
let previousSequence;if(force){const elem=this.content[key];previousSequence=elem&&elem[0];}
sequence=sequence===undefined?previousSequence||50:sequence;this.content[key]=[sequence,value];const payload={operation:"add",key,value};this.trigger("UPDATE",payload);return this;}
get(key,defaultValue){if(arguments.length<2&&!(key in this.content)){throw new KeyNotFoundError(`Cannot find ${key} in this registry!`);}
const info=this.content[key];return info?info[1]:defaultValue;}
contains(key){return key in this.content;}
getAll(){if(!this.elements){const content=Object.values(this.content).sort((el1,el2)=>el1[0]-el2[0]);this.elements=content.map((elem)=>elem[1]);}
return this.elements.slice();}
getEntries(){if(!this.entries){const entries=Object.entries(this.content).sort((el1,el2)=>el1[1][0]-el2[1][0]);this.entries=entries.map(([str,elem])=>[str,elem[1]]);}
return this.entries.slice();}
remove(key){const value=this.content[key];delete this.content[key];const payload={operation:"delete",key,value};this.trigger("UPDATE",payload);}
category(subcategory){if(!(subcategory in this.subRegistries)){this.subRegistries[subcategory]=new Registry();}
return this.subRegistries[subcategory];}}
const registry=__exports.registry=new Registry();return __exports;});;

/* /web/static/src/core/resizable_panel/resizable_panel.js */
odoo.define('@web/core/resizable_panel/resizable_panel',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onMounted,onWillUpdateProps,onWillUnmount,useEffect,useExternalListener,useRef,useComponent,}=require("@odoo/owl");function useResizable({containerRef,handleRef,initialWidth=400,getMinWidth=()=>400,onResize=()=>{},getResizeSide=()=>"end",}){containerRef=typeof containerRef=="string"?useRef(containerRef):containerRef;handleRef=typeof handleRef=="string"?useRef(handleRef):handleRef;const props=useComponent().props;let minWidth=getMinWidth(props);let resizeSide=getResizeSide(props);let isChangingSize=false;useExternalListener(document,"mouseup",()=>onMouseUp());useExternalListener(document,"mousemove",(ev)=>onMouseMove(ev));useExternalListener(window,"resize",()=>{const limit=getLimitWidth();if(getContainerRect().width>=limit){resize(computeFinalWidth(limit));}});let docDirection;useEffect((container)=>{if(container){docDirection=getComputedStyle(container).direction;}},()=>[containerRef.el]);onMounted(()=>{if(handleRef.el){resize(initialWidth);handleRef.el.addEventListener("mousedown",onMouseDown);}});onWillUpdateProps((nextProps)=>{minWidth=getMinWidth(nextProps);resizeSide=getResizeSide(nextProps);});onWillUnmount(()=>{if(handleRef.el){handleRef.el.removeEventListener("mousedown",onMouseDown);}});function onMouseDown(){isChangingSize=true;document.body.classList.add("pe-none","user-select-none");}
function onMouseUp(){isChangingSize=false;document.body.classList.remove("pe-none","user-select-none");}
function onMouseMove(ev){if(!isChangingSize||!containerRef.el){return;}
const direction=(docDirection==="ltr"&&resizeSide==="end")||(docDirection==="rtl"&&resizeSide==="start")?1:-1;const fixedSide=direction===1?"left":"right";const containerRect=getContainerRect();const newWidth=(ev.clientX-containerRect[fixedSide])*direction;resize(computeFinalWidth(newWidth));}
function computeFinalWidth(targetContainerWidth){const handlerSpacing=handleRef.el?handleRef.el.offsetWidth/2:10;const w=Math.max(minWidth,targetContainerWidth+handlerSpacing);const limit=getLimitWidth();return Math.min(w,limit-handlerSpacing);}
function getContainerRect(){const container=containerRef.el;const offsetParent=container.offsetParent;let containerRect={};if(!offsetParent){containerRect=container.getBoundingClientRect();}else{containerRect.left=container.offsetLeft;containerRect.right=container.offsetLeft+container.offsetWidth;containerRect.width=container.offsetWidth;}
return containerRect;}
function getLimitWidth(){const offsetParent=containerRef.el.offsetParent;return offsetParent?offsetParent.offsetWidth:window.innerWidth;}
function resize(width){containerRef.el.style.setProperty("width",`${width}px`);onResize(width);}}
const ResizablePanel=__exports.ResizablePanel=class ResizablePanel extends Component{static template="web_studio.ResizablePanel";static components={};static props={onResize:{type:Function,optional:true},initialWidth:{type:Number,optional:true},minWidth:{type:Number,optional:true},class:{type:String,optional:true},slots:{type:Object},handleSide:{validate:(val)=>["start","end"].includes(val),optional:true,},};static defaultProps={onResize:()=>{},width:400,minWidth:400,class:"",handleSide:"end",};setup(){useResizable({containerRef:"containerRef",handleRef:"handleRef",onResize:this.props.onResize,initialWidth:this.props.initialWidth,getMinWidth:(props)=>props.minWidth,getResizeSide:(props)=>props.handleSide,});}
get class(){const classes=this.props.class.split(" ");if(!classes.some((cls)=>cls.startsWith("position-"))){classes.push("position-relative");}
return classes.join(" ");}}
return __exports;});;

/* /web/static/src/core/scroller_service.js */
odoo.define('@web/core/scroller_service',['@web/core/browser/browser','@web/core/registry','@web/core/utils/scrolling'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{scrollTo}=require("@web/core/utils/scrolling");const scrollerService=__exports.scrollerService={start(env){browser.addEventListener("click",(ev)=>{const link=ev.target.closest("a");if(!link){return;}
const disableAnchor=link.attributes.getNamedItem("disable_anchor");if(disableAnchor&&disableAnchor.value==="true"){return;}
const href=link.attributes.getNamedItem("href");if(href){if(href.value[0]==="#"){if(href.value.length===1){ev.preventDefault();return;}
let matchingEl=null;try{matchingEl=document.querySelector(`.o_content #${href.value.substr(1)}`);}catch{}
const triggerEv=new CustomEvent("anchor-link-clicked",{detail:{element:matchingEl,id:href.value,originalEv:ev,},});env.bus.trigger("SCROLLER:ANCHOR_LINK_CLICKED",triggerEv);if(matchingEl&&!triggerEv.defaultPrevented){ev.preventDefault();scrollTo(matchingEl,{isAnchor:true});}}}});},};registry.category("services").add("scroller",scrollerService);return __exports;});;

/* /web/static/src/core/select_menu/select_menu.js */
odoo.define('@web/core/select_menu/select_menu',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/utils/timing','@web/core/utils/scrolling','@web/core/utils/search','@web/core/tags_list/tags_list','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useState,useRef,onWillUpdateProps,useEffect}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{useDebounced}=require("@web/core/utils/timing");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{TagsList}=require("@web/core/tags_list/tags_list");const{useAutofocus}=require("@web/core/utils/hooks");const SelectMenu=__exports.SelectMenu=class SelectMenu extends Component{static template="web.SelectMenu";static choiceItemTemplate="web.SelectMenu.ChoiceItem";static components={Dropdown,DropdownItem,TagsList};static defaultProps={value:undefined,class:"",togglerClass:"",multiSelect:false,onSelect:()=>{},required:false,searchable:true,autoSort:true,searchPlaceholder:_t("Search..."),choices:[],groups:[],};static props={choices:{optional:true,type:Array,element:{type:Object,shape:{value:true,label:{type:String},},},},groups:{type:Array,optional:true,element:{type:Object,shape:{label:{type:String,optional:true},choices:{type:Array,element:{type:Object,shape:{value:true,label:{type:String},},},},},},},class:{type:String,optional:true},togglerClass:{type:String,optional:true},required:{type:Boolean,optional:true},searchable:{type:Boolean,optional:true},autoSort:{type:Boolean,optional:true},searchPlaceholder:{type:String,optional:true},value:{optional:true},multiSelect:{type:Boolean,optional:true},onInput:{type:Function,optional:true},onSelect:{type:Function,optional:true},slots:{type:Object,optional:true},};static SCROLL_SETTINGS={defaultCount:500,increaseAmount:300,distanceBeforeReload:500,};setup(){this.state=useState({choices:[],displayedOptions:[],searchValue:"",});this.inputRef=useRef("inputRef");this.debouncedOnInput=useDebounced(()=>this.onInput(this.inputRef.el?this.inputRef.el.value.trim():""),250);this.isOpen=false;this.selectedChoice=this.getSelectedChoice(this.props);onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value){this.selectedChoice=this.getSelectedChoice(nextProps);}});useEffect(()=>{if(this.isOpen){const groups=[{choices:this.props.choices},...this.props.groups];this.filterOptions(this.state.searchValue,groups);}},()=>[this.props.choices,this.props.groups]);useAutofocus({refName:"inputRef"});}
get displayValue(){return this.selectedChoice?this.selectedChoice.label:"";}
get canDeselect(){return!this.props.required&&this.selectedChoice!==undefined;}
get multiSelectChoices(){const choices=[...this.props.choices,...this.props.groups.flatMap((g)=>g.choices),].filter((c)=>this.props.value.includes(c.value));return choices.map((c)=>{return{id:c.value,text:c.label,onDelete:()=>{const values=[...this.props.value];values.splice(values.indexOf(c.value),1);this.props.onSelect(values);},};});}
async onBeforeOpen(){if(this.state.searchValue.length){this.state.searchValue="";if(this.props.onInput){await this.executeOnInput("");}}
this.filterOptions();}
onStateChanged({open}){this.isOpen=open;if(open){const selectedElement=document.querySelector(".o_select_active");if(selectedElement){scrollTo(selectedElement);}}}
isOptionSelected(choice){if(this.props.multiSelect){return this.props.value.includes(choice.value);}
return this.props.value===choice.value;}
getItemClass(choice){if(this.isOptionSelected(choice)){return"o_select_menu_item mb-1 o_select_active bg-primary fw-bolder fst-italic";}else{return"o_select_menu_item mb-1";}}
async executeOnInput(searchString){await this.props.onInput(searchString);}
onInput(searchString){this.filterOptions(searchString);this.state.searchValue=searchString;const inputEl=this.inputRef.el;if(inputEl&&inputEl.parentNode){inputEl.parentNode.scrollTo(0,0);}
if(this.props.onInput){this.executeOnInput(searchString);}}
onSearchKeydown(ev){if(ev.key==="ArrowDown"||ev.key==="Enter"){const target=ev.target.parentElement.querySelector(".o_select_menu_item");ev.target.classList.remove("focus");target?.classList.add("focus");target?.focus();ev.preventDefault();}
if(ev.key==="Enter"&&this.state.choices.length===1){ev.target.parentElement.querySelector(".o_select_menu_item").click();}}
getSelectedChoice(props){const choices=[...props.choices,...props.groups.flatMap((g)=>g.choices)];return choices.find((c)=>c.value===props.value);}
onItemSelected(value){if(this.props.multiSelect){const values=[...this.props.value];const valueIndex=values.indexOf(value);if(valueIndex!==-1){values.splice(valueIndex,1);this.props.onSelect(values);}else{this.props.onSelect([...this.props.value,value]);}}else if(!this.selectedChoice||this.selectedChoice.value!==value){this.props.onSelect(value);}}
filterOptions(searchString="",groups){const groupsList=groups||[{choices:this.props.choices},...this.props.groups];this.state.choices=[];for(const group of groupsList){let filteredOptions=[];if(searchString){filteredOptions=fuzzyLookup(searchString,group.choices,(choice)=>choice.label);}else{filteredOptions=group.choices;if(this.props.autoSort){filteredOptions.sort((optionA,optionB)=>optionA.label.localeCompare(optionB.label));}}
if(filteredOptions.length===0){continue;}
if(group.label){this.state.choices.push({...group,isGroup:true});}
this.state.choices.push(...filteredOptions);}
this.sliceDisplayedOptions();}
getGroupsIndex(choices){if(choices.length===0){return[];}
return choices.flatMap((choice,index)=>(index===0?0:choice.isGroup?index:[]));}
onScroll(event){const el=event.target;const hasReachMax=this.state.displayedOptions.length>=this.state.choices.length;const remainingDistance=el.scrollHeight-el.scrollTop;const distanceToReload=el.clientHeight+this.constructor.SCROLL_SETTINGS.distanceBeforeReload;if(!hasReachMax&&remainingDistance<distanceToReload){const displayCount=this.state.displayedOptions.length+
this.constructor.SCROLL_SETTINGS.increaseAmount;this.state.displayedOptions=this.state.choices.slice(0,displayCount);}}
sliceDisplayedOptions(){const selectedIndex=this.getSelectedOptionIndex();const defaultCount=this.constructor.SCROLL_SETTINGS.defaultCount;if(selectedIndex===-1){this.state.displayedOptions=this.state.choices.slice(0,defaultCount);}else{const endIndex=Math.max(selectedIndex+this.constructor.SCROLL_SETTINGS.increaseAmount,defaultCount);this.state.displayedOptions=this.state.choices.slice(0,endIndex);}}
getSelectedOptionIndex(){let selectedIndex=-1;for(let i=0;i<this.state.choices.length;i++){if(this.isOptionSelected(this.state.choices[i])){selectedIndex=i;}}
return selectedIndex;}}
return __exports;});;

/* /web/static/src/core/signature/name_and_signature.js */
odoo.define('@web/core/signature/name_and_signature',['@web/core/assets','@web/core/browser/feature_detection','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/render','@web/core/utils/urls','@odoo/owl'],function(require){'use strict';let __exports={};const{loadJS}=require("@web/core/assets");const{isMobileOS}=require("@web/core/browser/feature_detection");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService,useAutofocus}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{renderToString}=require("@web/core/utils/render");const{getDataURLFromFile}=require("@web/core/utils/urls");const{Component,useState,onWillStart,useRef,useEffect}=require("@odoo/owl");let htmlId=0;const NameAndSignature=__exports.NameAndSignature=class NameAndSignature extends Component{setup(){this.rpc=useService("rpc");this.htmlId=htmlId++;this.defaultName=this.props.signature.name||"";this.currentFont=0;this.drawTimeout=null;this.state=useState({signMode:this.props.mode||(this.props.noInputName&&!this.defaultName?"draw":"auto"),showSignatureArea:!!(this.props.noInputName||this.defaultName),showFontList:false,});this.signNameInputRef=useRef("signNameInput");this.signInputLoad=useRef("signInputLoad");useAutofocus({refName:"signNameInput"});useEffect((el)=>{if(el){el.click();}},()=>[this.signInputLoad.el]);onWillStart(async()=>{this.fonts=await this.rpc(`/web/sign/get_fonts/${this.props.defaultFont}`);});onWillStart(async()=>{await loadJS("/web/static/lib/jSignature/jSignatureCustom.js");await loadJS("/web/static/src/libs/jSignatureCustom.js");});this.signatureRef=useRef("signature");useEffect((el)=>{if(el){this.$signatureField=$(".o_web_sign_signature");this.$signatureField.on("change",()=>{this.props.signature.isSignatureEmpty=this.isSignatureEmpty;this.props.onSignatureChange(this.state.signMode);});this.jSignature();this.resetSignature();this.props.signature.getSignatureImage=()=>this.jSignature("getData","image");this.props.signature.resetSignature=()=>this.resetSignature();if(this.state.signMode==="auto"){this.drawCurrentName();}}},()=>[this.signatureRef.el]);}
drawCurrentName(){const font=this.fonts[this.currentFont];const text=this.getCleanedName();const canvas=this.signatureRef.el.querySelector("canvas");const img=this.getSVGText(font,text,canvas.width,canvas.height);this.printImage(img);}
focusName(){if(!isMobileOS()&&this.signNameInputRef.el){this.signNameInputRef.el.focus();}}
getCleanedName(){const text=this.props.signature.name;if(this.props.signatureType==="initial"&&text){return(text.split(" ").map(function(w){return w[0];}).join(".")+".");}
return text;}
getSVGText(font,text,width,height){const svg=renderToString("web.sign_svg_text",{width:width,height:height,font:font,text:text,type:this.props.signatureType,color:this.props.fontColor,});return"data:image/svg+xml,"+encodeURI(svg);}
getSVGTextFont(font){const height=100;const width=parseInt(height*this.props.displaySignatureRatio);return this.getSVGText(font,this.getCleanedName(),width,height);}
jSignature(){return this.$signatureField.jSignature(...arguments);}
uploadFile(){this.signInputLoad.el?.click();}
async onChangeSignLoadInput(ev){var file=ev.target.files[0];if(file===undefined){return false;}
if(file.type.substr(0,5)!=="image"){this.jSignature("reset");this.state.loadIsInvalid=true;return false;}
this.state.loadIsInvalid=false;const result=await getDataURLFromFile(file);this.printImage(result);}
onClickSignAutoSelectStyle(){this.state.showFontList=true;}
onClickSignDrawClear(){this.jSignature("reset");}
onClickSignLoad(){this.setMode("load");}
onClickSignAuto(){this.setMode("auto");}
onInputSignName(ev){this.props.signature.name=ev.target.value;if(!this.state.showSignatureArea&&this.getCleanedName()){this.state.showSignatureArea=true;return;}
if(this.state.signMode==="auto"){this.drawCurrentName();}}
onSelectFont(index){this.currentFont=index;this.drawCurrentName();}
printImage(imgSrc){const image=new Image();image.onload=()=>{clearTimeout(this.drawTimeout);this.drawTimeout=setTimeout(()=>{let width=0;let height=0;const ratio=image.width/image.height;const signatureEl=this.signatureRef.el;if(!signatureEl){return;}
const canvas=signatureEl.querySelector("canvas");const context=canvas.getContext("2d");if(image.width/canvas.width>image.height/canvas.height){width=canvas.width;height=parseInt(width/ratio);}else{height=canvas.height;width=parseInt(height*ratio);}
this.jSignature("reset");const ignoredContext=pick(context,"shadowOffsetX","shadowOffsetY");Object.assign(context,{shadowOffsetX:0,shadowOffsetY:0});context.drawImage(image,0,0,image.width,image.height,(canvas.width-width)/2,(canvas.height-height)/2,width,height);Object.assign(context,ignoredContext);this.props.signature.isSignatureEmpty=this.isSignatureEmpty;this.props.onSignatureChange(this.state.signMode);return this.isSignatureEmpty;},0);};image.src=imgSrc;}
resetSignature(){const{width,height}=this.resizeSignature();this.$signatureField.empty().jSignature({"decor-color":"#D1D0CE","background-color":"rgba(255,255,255,0)","show-stroke":false,color:this.props.fontColor,lineWidth:2,width:width,height:height,});this.emptySignature=this.jSignature("getData");this.setMode(this.state.signMode,true);this.focusName();}
resizeSignature(){this.signatureRef.el.style.width="unset";const width=this.signatureRef.el.clientWidth;const height=parseInt(width/this.props.displaySignatureRatio);this.state.signature={width,height,};Object.assign(this.signatureRef.el.querySelector("canvas").style,{width,height});return{width,height};}
async setMode(mode,reset){if(reset!==true&&mode===this.signMode){return;}
this.state.signMode=mode;this.jSignature(this.state.signMode==="draw"?"enable":"disable");this.jSignature("reset");if(this.state.signMode==="auto"){this.drawCurrentName();}}
get isSignatureEmpty(){const signature=this.jSignature("getData");return signature&&this.emptySignature?this.emptySignature===signature:true;}
get loadIsInvalid(){return this.state.signMode==="load"&&this.state.loadIsInvalid;}
get signatureStyle(){const{signature}=this.state;return signature?`width: ${signature.width}px; height: ${signature.height}px`:"";}}
NameAndSignature.template="web.NameAndSignature";NameAndSignature.components={Dropdown,DropdownItem};NameAndSignature.props={signature:{type:Object},defaultFont:{type:String,optional:true},displaySignatureRatio:{type:Number,optional:true},fontColor:{type:String,optional:true},signatureType:{type:String,optional:true},noInputName:{type:Boolean,optional:true},mode:{type:String,optional:true},onSignatureChange:{type:Function,optional:true},};NameAndSignature.defaultProps={defaultFont:"",displaySignatureRatio:3.0,fontColor:"DarkBlue",signatureType:"signature",noInputName:false,onSignatureChange:()=>{},};return __exports;});;

/* /web/static/src/core/signature/signature_dialog.js */
odoo.define('@web/core/signature/signature_dialog',['@web/core/l10n/translation','@web/core/dialog/dialog','@web/core/signature/name_and_signature','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{NameAndSignature}=require("@web/core/signature/name_and_signature");const{Component,useState}=require("@odoo/owl");const SignatureDialog=__exports.SignatureDialog=class SignatureDialog extends Component{setup(){this.title=_t("Adopt Your Signature");this.signature=useState({name:this.props.defaultName,isSignatureEmpty:true,});}
onClickConfirm(){this.props.uploadSignature({name:this.signature.name,signatureImage:this.signature.getSignatureImage(),});this.props.close();}
get nameAndSignatureProps(){return{...this.props.nameAndSignatureProps,signature:this.signature,};}}
SignatureDialog.template="web.SignatureDialog";SignatureDialog.components={Dialog,NameAndSignature};SignatureDialog.defaultProps={defaultName:"",};return __exports;});;

/* /web/static/src/core/tags_list/tags_list.js */
odoo.define('@web/core/tags_list/tags_list',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const TagsList=__exports.TagsList=class TagsList extends Component{static template="web.TagsList";static defaultProps={displayText:true,};static props={displayText:{type:Boolean,optional:true},itemsVisible:{type:Number,optional:true},tags:{type:Object},};get visibleTagsCount(){return this.props.itemsVisible-1;}
get visibleTags(){if(this.props.itemsVisible&&this.props.tags.length>this.props.itemsVisible){return this.props.tags.slice(0,this.visibleTagsCount);}
return this.props.tags;}
get otherTags(){if(!this.props.itemsVisible||this.props.tags.length<=this.props.itemsVisible){return[];}
return this.props.tags.slice(this.visibleTagsCount);}
get tooltipInfo(){return JSON.stringify({tags:this.otherTags.map((tag)=>({text:tag.text,id:tag.id,})),});}}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip.js */
odoo.define('@web/core/tooltip/tooltip',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Tooltip=__exports.Tooltip=class Tooltip extends Component{}
Tooltip.template="web.Tooltip";Tooltip.props={close:Function,tooltip:{type:String,optional:true},template:{type:String,optional:true},info:{optional:true},};return __exports;});;

/* /web/static/src/core/tooltip/tooltip_hook.js */
odoo.define('@web/core/tooltip/tooltip_hook',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect,useRef}=require("@odoo/owl");__exports.useTooltip=useTooltip;function useTooltip(refName,params){const tooltip=useService("tooltip");const ref=useRef(refName);useEffect((el)=>tooltip.add(el,params),()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip_service.js */
odoo.define('@web/core/tooltip/tooltip_service',['@web/core/browser/browser','@web/core/registry','@web/core/tooltip/tooltip','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Tooltip}=require("@web/core/tooltip/tooltip");const{hasTouch}=require("@web/core/browser/feature_detection");const{whenReady}=require("@odoo/owl");const OPEN_DELAY=400;const CLOSE_DELAY=200;const tooltipService=__exports.tooltipService={dependencies:["popover"],start(env,{popover}){let openTooltipTimeout;let closeTooltip;let target=null;let touchPressed;let mouseEntered;const elementsWithTooltips=new Map();function cleanup(){browser.clearTimeout(openTooltipTimeout);if(closeTooltip){closeTooltip();}}
function shouldCleanup(){if(!target){return false;}
if(!document.body.contains(target)){return true;}
if(hasTouch()&&!mouseEntered){return!touchPressed;}
return false;}
function openTooltip(el,{tooltip="",template,info,position,delay=OPEN_DELAY}){target=el;cleanup();if(!tooltip&&!template){return;}
openTooltipTimeout=browser.setTimeout(()=>{if(target.isConnected){closeTooltip=popover.add(target,Tooltip,{tooltip,template,info},{position});target.title="";}},delay);}
function openElementsTooltip(el){if(el.nodeType===Node.TEXT_NODE){return;}
if(elementsWithTooltips.has(el)){openTooltip(el,elementsWithTooltips.get(el));}else if(el.matches("[data-tooltip], [data-tooltip-template]")){const dataset=el.dataset;const params={tooltip:dataset.tooltip,template:dataset.tooltipTemplate,position:dataset.tooltipPosition,};if(dataset.tooltipInfo){params.info=JSON.parse(dataset.tooltipInfo);}
if(dataset.tooltipDelay){params.delay=parseInt(dataset.tooltipDelay,10);}
openTooltip(el,params);}}
function onMouseenter(ev){mouseEntered=true;openElementsTooltip(ev.target);}
function onMouseleave(ev){if(target===ev.target){mouseEntered=false;cleanup();}}
function onTouchStart(ev){touchPressed=true;openElementsTooltip(ev.target);}
whenReady(()=>{browser.setInterval(()=>{if(shouldCleanup()){cleanup();}},CLOSE_DELAY);if(hasTouch()){document.body.addEventListener("touchstart",onTouchStart);document.body.addEventListener("touchend",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});document.body.addEventListener("touchcancel",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});}
document.body.addEventListener("mouseenter",onMouseenter,{capture:true});document.body.addEventListener("mouseleave",onMouseleave,{capture:true});});return{add(el,params){elementsWithTooltips.set(el,params);return()=>{elementsWithTooltips.delete(el);if(target===el){cleanup();}};},};},};registry.category("services").add("tooltip",tooltipService);return __exports;});;

/* /web/static/src/core/transition.js */
odoo.define('@web/core/transition',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useState,useEffect,xml,onWillUpdateProps,useComponent}=require("@odoo/owl");const config=__exports.config={disabled:false,};__exports.useTransition=useTransition;function useTransition({name,initialVisibility=true,leaveDuration=500,onLeave=()=>{},}){const component=useComponent();const state=useState({shouldMount:initialVisibility,stage:initialVisibility?"enter":"leave",});if(config.disabled){return{get shouldMount(){return state.shouldMount;},set shouldMount(val){state.shouldMount=val;},get className(){return`${name} ${name}-enter-active`;},get stage(){return"enter-active";},};}
let onNextPatch=null;useEffect(()=>{if(onNextPatch){onNextPatch();onNextPatch=null;}});let prevState,timer;const transition={get shouldMount(){return state.shouldMount;},set shouldMount(newState){if(newState===prevState){return;}
browser.clearTimeout(timer);prevState=newState;if(newState){state.stage="enter";state.shouldMount=true;component.render();onNextPatch=()=>{state.stage="enter-active";};}else{state.stage="leave";timer=browser.setTimeout(()=>{state.shouldMount=false;onLeave();},leaveDuration);}},get className(){return`${name} ${name}-${state.stage}`;},get stage(){return state.stage;},};transition.shouldMount=initialVisibility;return transition;}
const Transition=__exports.Transition=class Transition extends Component{setup(){const{visible,leaveDuration,name,onLeave}=this.props;this.transition=useTransition({initialVisibility:visible,leaveDuration,name,onLeave,});onWillUpdateProps(({visible=true})=>{this.transition.shouldMount=visible;});}}
Transition.template=xml`<t t-slot="default" t-if="transition.shouldMount" className="transition.className"/>`;Transition.props={name:String,visible:{type:Boolean,optional:true},leaveDuration:{type:Number,optional:true},onLeave:{type:Function,optional:true},slots:Object,};return __exports;});;

/* /web/static/src/core/tree_editor/condition_tree.js */
odoo.define('@web/core/tree_editor/condition_tree',['@web/core/domain','@web/core/py_js/py','@web/core/py_js/py_utils'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const TERM_OPERATORS_NEGATION=__exports.TERM_OPERATORS_NEGATION={"<":">=",">":"<=","<=":">",">=":"<","=":"!=","!=":"=",in:"not in",like:"not like",ilike:"not ilike","not in":"in","not like":"like","not ilike":"ilike",};const TERM_OPERATORS_NEGATION_EXTENDED={...TERM_OPERATORS_NEGATION,is:"is not","is not":"is","==":"!=","!=":"==",};const EXCHANGE={"<":">","<=":">=",">":"<",">=":"<=","=":"=","!=":"!=",};const COMPARATORS=["<","<=",">",">=","in","not in","==","is","!=","is not"];const Expression=__exports.Expression=class Expression{constructor(ast){if(typeof ast==="string"){ast=parseExpr(ast);}
this._ast=ast;this._expr=formatAST(ast);}
toAST(){return this._ast;}
toString(){return this._expr;}}
__exports.expression=expression;function expression(expr){return new Expression(expr);}
__exports.connector=connector;function connector(value,children=[],negate=false){return{type:"connector",value,children,negate};}
__exports.condition=condition;function condition(path,operator,value,negate=false){return{type:"condition",path,operator,value,negate};}
__exports.complexCondition=complexCondition;function complexCondition(value){parseExpr(value);return{type:"complex_condition",value};}
function cloneValue(value){if(value instanceof Expression){return new Expression(value.toAST());}
if(Array.isArray(value)){return value.map(cloneValue);}
return value;}
__exports.cloneTree=cloneTree;function cloneTree(tree){const clone={};for(const key in tree){clone[key]=cloneValue(tree[key]);}
return clone;}
__exports.formatValue=formatValue;function formatValue(value){return formatAST(toAST(value));}
__exports.normalizeValue=normalizeValue;function normalizeValue(value){return toValue(toAST(value));}
__exports.toValue=toValue;function toValue(ast,isWithinArray=false){if([4,10].includes(ast.type)&&!isWithinArray){return ast.value.map((v)=>toValue(v,true));}else if([0,1,2].includes(ast.type)){return ast.value;}else if(ast.type===6&&ast.op==="-"&&ast.right.type===0){return-ast.right.value;}else if(ast.type===5&&["false","true"].includes(ast.value)){return JSON.parse(ast.value);}else{return new Expression(ast);}}
function toAST(value){if(value instanceof Expression){return value.toAST();}
if(Array.isArray(value)){return{type:4,value:value.map(toAST)};}
return toPyValue(value);}
function addChild(parent,child){if(child.type==="connector"&&!child.negate&&child.value===parent.value){parent.children.push(...child.children);}else{parent.children.push(child);}}
function getNormalizedCondition(condition){let{operator,negate}=condition;if(negate&&typeof operator==="string"&&TERM_OPERATORS_NEGATION[operator]){operator=TERM_OPERATORS_NEGATION[operator];negate=false;}
return{...condition,operator,negate};}
function normalizeCondition(condition){Object.assign(condition,getNormalizedCondition(condition));}
function _construcTree(ASTs,distributeNot,negate=false){const[firstAST,...tailASTs]=ASTs;if(firstAST.type===1&&firstAST.value==="!"){return _construcTree(tailASTs,distributeNot,!negate);}
const tree={type:firstAST.type===1?"connector":"condition"};if(tree.type==="connector"){tree.value=firstAST.value;if(distributeNot&&negate){tree.value=tree.value==="&"?"|":"&";tree.negate=false;}else{tree.negate=negate;}
tree.children=[];}else{const[pathAST,operatorAST,valueAST]=firstAST.value;tree.path=toValue(pathAST);tree.negate=negate;tree.operator=toValue(operatorAST);tree.value=toValue(valueAST);normalizeCondition(tree);}
let remaimingASTs=tailASTs;if(tree.type==="connector"){for(let i=0;i<2;i++){const{tree:child,remaimingASTs:otherASTs}=_construcTree(remaimingASTs,distributeNot,distributeNot&&negate);remaimingASTs=otherASTs;addChild(tree,child);}}
return{tree,remaimingASTs};}
function construcTree(initialASTs,options){if(!initialASTs.length){return connector("&");}
const{tree}=_construcTree(initialASTs,options.distributeNot);return tree;}
function getASTs(tree){const ASTs=[];if(tree.type==="condition"){if(tree.negate){ASTs.push(toAST("!"));}
ASTs.push({type:10,value:[tree.path,tree.operator,tree.value].map(toAST),});return ASTs;}
const length=tree.children.length;if(length&&tree.negate){ASTs.push(toAST("!"));}
for(let i=0;i<length-1;i++){ASTs.push(toAST(tree.value));}
for(const child of tree.children){ASTs.push(...getASTs(child));}
return ASTs;}
function not(ast){if(isNot(ast)){return ast.right;}
if(ast.type===2){return{...ast,value:!ast.value};}
if(ast.type===7&&COMPARATORS.includes(ast.op)){return{...ast,op:TERM_OPERATORS_NEGATION_EXTENDED[ast.op]};}
return{type:6,op:"not",right:isBool(ast)?ast.args[0]:ast};}
function bool(ast){if(isBool(ast)||isNot(ast)||ast.type===2){return ast;}
return{type:8,fn:{type:5,value:"bool"},args:[ast],kwargs:{}};}
function name(value){return{type:5,value};}
function or(left,right){return{type:14,op:"or",left,right};}
function and(left,right){return{type:14,op:"and",left,right};}
function isNot(ast){return ast.type===6&&ast.op==="not";}
function is(oneParamFunc,ast){return(ast.type===8&&ast.fn.type===5&&ast.fn.value===oneParamFunc&&ast.args.length===1);}
function isSet(ast){return ast.type===8&&ast.fn.type===5&&ast.fn.value==="set"&&ast.args.length<=1;}
function isBool(ast){return is("bool",ast);}
function isValidPath(ast,options){const getFieldDef=options.getFieldDef||(()=>null);if(ast.type===5){return getFieldDef(ast.value)!==null;}
return false;}
function isX2Many(ast,options){if(isValidPath(ast,options)){const fieldDef=options.getFieldDef(ast.value);return["many2many","one2many"].includes(fieldDef.type);}
return false;}
function _getConditionFromComparator(ast,options){if(["is","is not"].includes(ast.op)){return null;}
let operator=ast.op;if(operator==="=="){operator="=";}
let left=ast.left;let right=ast.right;if(isValidPath(left,options)==isValidPath(right,options)){return null;}
if(!isValidPath(left,options)){if(operator in EXCHANGE){const temp=left;left=right;right=temp;operator=EXCHANGE[operator];}else{return null;}}
return condition(left.value,operator,toValue(right));}
function isValidPath2(ast,options){if(!ast){return null;}
if([4,10].includes(ast.type)&&ast.value.length===1){return isValidPath(ast.value[0],options);}
return isValidPath(ast,options);}
function _getConditionFromIntersection(ast,options,negate=false){let left=ast.fn.obj.args[0];let right=ast.args[0];if(!left){return condition(negate?1:0,"=",1);}
if(isValidPath2(left,options)==isValidPath2(right,options)){return null;}
if(!isValidPath2(left,options)){const temp=left;left=right;right=temp;}
if([4,10].includes(left.type)&&left.value.length===1){left=left.value[0];}
if(!right){return condition(left.value,negate?"=":"!=",false);}
if(isSet(right)){if(!right.args[0]){right={type:4,value:[]};}
if([4,10].includes(right.args[0].type)){right=right.args[0];}}
if(![4,10].includes(right.type)){return null;}
return condition(left.value,negate?"not in":"in",toValue(right));}
function _leafFromAST(ast,options,negate=false){if(isNot(ast)){return _treeFromAST(ast.right,options,!negate);}
if(ast.type===5&&isValidPath(ast,options)){return condition(ast.value,negate?"=":"!=",false);}
const astValue=toValue(ast);if(["boolean","number","string"].includes(typeof astValue)){return condition(astValue?1:0,"=",1);}
if(ast.type===8&&ast.fn.type===15&&isSet(ast.fn.obj)&&ast.fn.key==="intersection"){const tree=_getConditionFromIntersection(ast,options,negate);if(tree){return tree;}}
if(ast.type===7&&COMPARATORS.includes(ast.op)){if(negate){return _leafFromAST(not(ast),options);}
const tree=_getConditionFromComparator(ast,options);if(tree){return tree;}}
return complexCondition(formatAST(negate?not(ast):ast));}
function _treeFromAST(ast,options,negate=false){if(isNot(ast)){return _treeFromAST(ast.right,options,!negate);}
if(ast.type===14){const tree=connector(ast.op==="and"?"&":"|");if(options.distributeNot&&negate){tree.value=tree.value==="&"?"|":"&";}else{tree.negate=negate;}
const subASTs=[ast.left,ast.right];for(const subAST of subASTs){const child=_treeFromAST(subAST,options,options.distributeNot&&negate);addChild(tree,child);}
return tree;}
if(ast.type===13){const newAST=or(and(ast.condition,ast.ifTrue),and(not(ast.condition),ast.ifFalse));return _treeFromAST(newAST,options,negate);}
return _leafFromAST(ast,options,negate);}
function _expressionFromTree(tree,options,isRoot=false){if(tree.type==="connector"&&tree.value==="|"&&tree.children.length===2){const isSimpleAnd=(tree)=>tree.type==="connector"&&tree.value==="&"&&tree.children.length===2;if(tree.children.every((c)=>isSimpleAnd(c))){const[c1,c2]=tree.children;for(let i=0;i<2;i++){const c1Child=c1.children[i];const str1=_expressionFromTree({...c1Child},options);for(let j=0;j<2;j++){const c2Child=c2.children[j];const str2=_expressionFromTree(c2Child,options);if(str1===`not ${str2}`||`not ${str1}`===str2){const others=[c1.children[1-i],c2.children[1-j]];const str=_expressionFromTree(c1Child,options);const strs=others.map((c)=>_expressionFromTree(c,options));return`${strs[0]} if ${str} else ${strs[1]}`;}}}}}
if(tree.type==="connector"){const connector=tree.value==="&"?"and":"or";const subExpressions=tree.children.map((c)=>_expressionFromTree(c,options));if(!subExpressions.length){return connector==="and"?"1":"0";}
let expression=subExpressions.join(` ${connector} `);if(!isRoot||tree.negate){expression=`( ${expression} )`;}
if(tree.negate){expression=`not ${expression}`;}
return expression;}
if(tree.type==="complex_condition"){return tree.value;}
tree=getNormalizedCondition(tree);const{path,operator,value}=tree;const op=operator==="="?"==":operator;if(typeof op!=="string"||!COMPARATORS.includes(op)){throw new Error("Invalid operator");}
if([0,1].includes(path)){if(operator!=="="||value!==1){return new Error("Invalid condition");}
return formatAST({type:2,value:Boolean(path)});}
const pathAST=toAST(path);if(typeof path=="string"&&isValidPath(name(path),options)){pathAST.type=5;}
if(value===false&&["=","!="].includes(operator)){return formatAST(operator==="="?not(pathAST):pathAST);}
let valueAST=toAST(value);if(["in","not in"].includes(operator)&&!(value instanceof Expression)&&![4,10].includes(valueAST.type)){valueAST={type:4,value:[valueAST]};}
if(pathAST.type===5&&isX2Many(pathAST,options)&&["in","not in"].includes(operator)){const ast={type:8,fn:{type:15,obj:{args:[pathAST],type:8,fn:{type:5,value:"set",},},key:"intersection",},args:[valueAST],};return formatAST(operator==="not in"?not(ast):ast);}
return formatAST({type:7,op,left:pathAST,right:valueAST,});}
function createBetweenOperators(tree){if(["condition","complex_condition"].includes(tree.type)){return tree;}
const processedChildren=tree.children.map(createBetweenOperators);if(tree.value==="|"){return{...tree,children:processedChildren};}
const children=[];for(let i=0;i<processedChildren.length;i++){const child1=processedChildren[i];const child2=processedChildren[i+1];if(child1.type==="condition"&&child2&&child2.type==="condition"&&formatValue(child1.path)===formatValue(child2.path)&&child1.operator===">="&&child2.operator==="<="){children.push(condition(child1.path,"between",normalizeValue([child1.value,child2.value])));i+=1;}else{children.push(child1);}}
if(children.length===1){return{...children[0]};}
return{...tree,children};}
__exports.removeBetweenOperators=removeBetweenOperators;function removeBetweenOperators(tree){if(tree.type==="complex_condition"){return tree;}
if(tree.type==="condition"){if(tree.operator!=="between"){return tree;}
const{negate,path,value}=tree;return connector("&",[condition(path,">=",value[0]),condition(path,"<=",value[1])],negate);}
const processedChildren=tree.children.map(removeBetweenOperators);if(tree.value==="|"){return{...tree,children:processedChildren};}
const newTree={...tree,children:[]};for(let i=0;i<processedChildren.length;i++){addChild(newTree,processedChildren[i]);}
return newTree;}
__exports.createVirtualOperators=createVirtualOperators;function createVirtualOperators(tree,options={}){if(tree.type==="condition"){const{path,operator,value}=tree;if(["=","!="].includes(operator)){const fieldDef=options.getFieldDef?.(path)||null;if(fieldDef){if(fieldDef.type==="boolean"){return{...tree,operator:operator==="="?"is":"is_not"};}else if(!["many2one","date","datetime"].includes(fieldDef?.type)&&value===false){return{...tree,operator:operator==="="?"not_set":"set"};}}}
return tree;}
if(tree.type==="complex_condition"){return tree;}
const processedChildren=tree.children.map((c)=>createVirtualOperators(c,options));return{...tree,children:processedChildren};}
__exports.removeVirtualOperators=removeVirtualOperators;function removeVirtualOperators(tree){if(tree.type==="condition"){const{operator}=tree;if(["is","is_not"].includes(operator)){return{...tree,operator:operator==="is"?"=":"!="};}
if(["set","not_set"].includes(operator)){return{...tree,operator:operator==="set"?"!=":"="};}
return tree;}
if(tree.type==="complex_condition"){return tree;}
const processedChildren=tree.children.map((c)=>removeVirtualOperators(c));return{...tree,children:processedChildren};}
function createComplexConditions(tree){if(tree.type==="condition"){if(tree.path instanceof Expression&&tree.operator==="="&&tree.value===1){return complexCondition(String(tree.path));}
return cloneTree(tree);}
if(tree.type==="complex_condition"){return cloneTree(tree);}
return{...tree,children:tree.children.map((child)=>createComplexConditions(child)),};}
function removeComplexConditions(tree){if(tree.type==="condition"){return cloneTree(tree);}
if(tree.type==="complex_condition"){const ast=parseExpr(tree.value);return condition(new Expression(bool(ast)),"=",1);}
return{...tree,children:tree.children.map((child)=>removeComplexConditions(child)),};}
__exports.treeFromExpression=treeFromExpression;function treeFromExpression(expression,options={}){const ast=parseExpr(expression);const tree=_treeFromAST(ast,options);return createVirtualOperators(createBetweenOperators(tree),options);}
__exports.expressionFromTree=expressionFromTree;function expressionFromTree(tree,options={}){const simplifiedTree=createComplexConditions(removeBetweenOperators(removeVirtualOperators(tree)));return _expressionFromTree(simplifiedTree,options,true);}
__exports.domainFromTree=domainFromTree;function domainFromTree(tree){const simplifiedTree=removeBetweenOperators(removeVirtualOperators(removeComplexConditions(tree)));const domainAST={type:4,value:getASTs(simplifiedTree),};return formatAST(domainAST);}
__exports.treeFromDomain=treeFromDomain;function treeFromDomain(domain,options={}){domain=new Domain(domain);const domainAST=domain.ast;const tree=construcTree(domainAST.value,options);return createVirtualOperators(createBetweenOperators(tree),options);}
__exports.expressionFromDomain=expressionFromDomain;function expressionFromDomain(domain,options={}){const tree=treeFromDomain(domain,options);return expressionFromTree(tree,options);}
__exports.domainFromExpression=domainFromExpression;function domainFromExpression(expression,options={}){const tree=treeFromExpression(expression,options);return domainFromTree(tree);}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor.js */
odoo.define('@web/core/tree_editor/tree_editor',['@web/core/tree_editor/utils','@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/tree_editor/condition_tree','@web/core/tree_editor/tree_editor_value_editors','@web/core/model_field_selector/model_field_selector','@web/core/model_field_selector/utils','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{leafToString,useLoadDisplayNames,extractIdsFromTree,getPathsInTree,getResModel,}=require("@web/core/tree_editor/utils");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{condition,cloneTree,formatValue,removeVirtualOperators,connector,}=require("@web/core/tree_editor/condition_tree");const{getDefaultValue,getValueEditorInfo,}=require("@web/core/tree_editor/tree_editor_value_editors");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{useLoadFieldInfo}=require("@web/core/model_field_selector/utils");const{deepEqual,shallowEqual}=require("@web/core/utils/objects");const TRUE_TREE=condition(1,"=",1);const DEFAULT_CONDITION=condition("id","=",1);function collectDifferences(tree,otherTree){if(tree.type!==otherTree.type){return[{type:"other"}];}
if(tree.negate!==otherTree.negate){return[{type:"other"}];}
if(tree.type==="condition"){if(formatValue(tree.path)!==formatValue(otherTree.path)){return[{type:"other"}];}
if(formatValue(tree.value)!==formatValue(otherTree.value)){return[{type:"other"}];}
if(formatValue(tree.operator)!==formatValue(otherTree.operator)){if(tree.operator==="!="&&otherTree.operator==="set"){return[{type:"replacement",tree,operator:"set"}];}else if(tree.operator==="="&&otherTree.operator==="not_set"){return[{type:"replacement",tree,operator:"not_set"}];}else{return[{type:"other"}];}}
return[];}
if(tree.value!==otherTree.value){return[{type:"other"}];}
if(tree.type==="complex_condition"){return[];}
if(tree.children.length!==otherTree.children.length){return[{type:"other"}];}
const diffs=[];for(let i=0;i<tree.children.length;i++){const child=tree.children[i];const otherChild=otherTree.children[i];const childDiffs=collectDifferences(child,otherChild);if(childDiffs.some((d)=>d.type!=="replacement")){return[{type:"other"}];}
diffs.push(...childDiffs);}
return diffs;}
function restoreVirtualOperators(tree,otherTree){const diffs=collectDifferences(tree,otherTree);if(diffs.some((d)=>d.type!=="replacement")){return;}
for(const{tree,operator}of diffs){tree.operator=operator;}}
const TreeEditor=__exports.TreeEditor=class TreeEditor extends Component{static template="web.TreeEditor";static components={Dropdown,DropdownItem,ModelFieldSelector,};static props={tree:Object,resModel:String,update:Function,getPathEditorInfo:Function,getOperatorEditorInfo:Function,getDefaultOperator:Function,readonly:{type:Boolean,optional:true},slots:{type:Object,optional:true},isDebugMode:{type:Boolean,optional:true},defaultConnector:{type:[{value:"&"},{value:"|"}],optional:true},defaultCondition:{type:Object,optional:true},};static defaultProps={defaultConnector:"&",defaultCondition:DEFAULT_CONDITION,readonly:false,};setup(){this.loadFieldInfo=useLoadFieldInfo();this.loadDisplayNames=useLoadDisplayNames();onWillStart(()=>this.onPropsUpdated(this.props));onWillUpdateProps((nextProps)=>this.onPropsUpdated(nextProps));}
async onPropsUpdated(props){this.tree=cloneTree(props.tree);if(shallowEqual(this.tree,TRUE_TREE)){this.tree=connector(props.defaultConnector);}else if(this.tree.type!=="connector"){this.tree=connector(props.defaultConnector,[this.tree]);}
if(this.previousTree){restoreVirtualOperators(this.tree,this.previousTree);this.previousTree=null;}
const paths=getPathsInTree(this.tree);await this.loadFieldDefs(props.resModel,paths);if(props.readonly){const idsByModel=extractIdsFromTree(this.tree,this.getFieldDef.bind(this));this.displayNames=await this.loadDisplayNames(idsByModel);}}
get className(){return`${this.props.readonly ? "o_read_mode" : "o_edit_mode"}`;}
get isDebugMode(){return this.props.isDebugMode!==undefined?this.props.isDebugMode:!!this.env.debug;}
getFieldDef(path){if(typeof path==="string"){return this.fieldDefs[path];}
return null;}
async loadFieldDefs(resModel,paths){const promises=[];const fieldDefs={};for(const path of paths){if(typeof path==="string"){promises.push(this.loadFieldInfo(resModel,path).then(({fieldDef})=>{fieldDefs[path]=fieldDef;}));}}
await Promise.all(promises);this.fieldDefs=fieldDefs;}
notifyChanges(){this.previousTree=cloneTree(this.tree);this.props.update(this.tree);}
updateConnector(node,value){node.value=value;node.negate=false;this.notifyChanges();}
updateComplexCondition(node,value){node.value=value;this.notifyChanges();}
createNewLeaf(){return cloneTree(this.props.defaultCondition);}
createNewBranch(value){return connector(value,[this.createNewLeaf(),this.createNewLeaf()]);}
insertRootLeaf(parent){parent.children.push(this.createNewLeaf());this.notifyChanges();}
insertLeaf(parent,node){const newNode=node.type!=="connector"?cloneTree(node):this.createNewLeaf();const index=parent.children.indexOf(node);parent.children.splice(index+1,0,newNode);this.notifyChanges();}
insertBranch(parent,node){const nextConnector=parent.value==="&"?"|":"&";const newNode=this.createNewBranch(nextConnector);const index=parent.children.indexOf(node);parent.children.splice(index+1,0,newNode);this.notifyChanges();}
delete(parent,node){const index=parent.children.indexOf(node);parent.children.splice(index,1);this.notifyChanges();}
getDescription(node){const fieldDef=this.getFieldDef(node.path);return leafToString(node,fieldDef,this.displayNames[getResModel(fieldDef)]);}
getValueEditorInfo(node){const fieldDef=this.getFieldDef(node.path);return getValueEditorInfo(fieldDef,node.operator);}
async updatePath(node,path){const{fieldDef}=await this.loadFieldInfo(this.props.resModel,path);node.path=path;node.negate=false;node.operator=this.props.getDefaultOperator(fieldDef);node.value=getDefaultValue(fieldDef,node.operator);this.notifyChanges();}
updateLeafOperator(node,operator,negate){const previousNode=cloneTree(node);const fieldDef=this.getFieldDef(node.path);node.negate=negate;node.operator=operator;node.value=getDefaultValue(fieldDef,operator,node.value);if(deepEqual(removeVirtualOperators(node),removeVirtualOperators(previousNode))){this.render();}
this.notifyChanges();}
updateLeafValue(node,value){node.value=value;this.notifyChanges();}
highlightNode(target){const nodeEl=target.closest(".o_tree_editor_node");nodeEl.classList.toggle("o_hovered_button");}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_autocomplete.js */
odoo.define('@web/core/tree_editor/tree_editor_autocomplete',['@web/core/record_selectors/multi_record_selector','@web/core/l10n/translation','@web/core/py_js/py_utils','@web/core/tree_editor/condition_tree','@web/core/record_selectors/record_selector'],function(require){'use strict';let __exports={};const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const{_t}=require("@web/core/l10n/translation");const{formatAST,toPyValue}=require("@web/core/py_js/py_utils");const{Expression}=require("@web/core/tree_editor/condition_tree");const{RecordSelector}=require("@web/core/record_selectors/record_selector");const isId=__exports.isId=(val)=>Number.isInteger(val)&&val>=1;const getFormat=__exports.getFormat=(val,displayNames)=>{let text;let colorIndex;if(isId(val)){text=typeof displayNames[val]==="string"?displayNames[val]:_t("Inaccessible/missing record ID: %s",val);colorIndex=typeof displayNames[val]==="string"?0:2;}else{text=val instanceof Expression?String(val):_t("Invalid record ID: %s",formatAST(toPyValue(val)));colorIndex=val instanceof Expression?2:1;}
return{text,colorIndex};};const DomainSelectorAutocomplete=__exports.DomainSelectorAutocomplete=class DomainSelectorAutocomplete extends MultiRecordSelector{static props={...MultiRecordSelector.props,resIds:true,};getIds(props=this.props){return props.resIds.filter((val)=>isId(val));}
getTags(props,displayNames){return props.resIds.map((val,index)=>{const{text,colorIndex}=getFormat(val,displayNames);return{text,colorIndex,onDelete:()=>{this.props.update([...this.props.resIds.slice(0,index),...this.props.resIds.slice(index+1),]);},};});}}
const DomainSelectorSingleAutocomplete=__exports.DomainSelectorSingleAutocomplete=class DomainSelectorSingleAutocomplete extends RecordSelector{static props={...RecordSelector.props,resId:true,};getDisplayName(props=this.props,displayNames){const{resId}=props;if(resId===false){return"";}
const{text}=getFormat(resId,displayNames);return text;}
getIds(props=this.props){if(isId(props.resId)){return[props.resId];}
return[];}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_components.js */
odoo.define('@web/core/tree_editor/tree_editor_components',['@odoo/owl','@web/core/tags_list/tags_list'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{TagsList}=require("@web/core/tags_list/tags_list");const Input=__exports.Input=class Input extends Component{static props=["value","update","startEmpty?"];static template="web.TreeEditor.Input";}
const Select=__exports.Select=class Select extends Component{static props=["value","update","options","addBlankOption?"];static template="web.TreeEditor.Select";deserialize(value){return JSON.parse(value);}
serialize(value){return JSON.stringify(value);}}
const Range=__exports.Range=class Range extends Component{static props=["value","update","editorInfo"];static template="web.TreeEditor.Range";update(index,newValue){const result=[...this.props.value];result[index]=newValue;return this.props.update(result);}}
const List=__exports.List=class List extends Component{static components={TagsList};static props=["value","update","editorInfo"];static template="web.TreeEditor.List";get tags(){const{isSupported,stringify}=this.props.editorInfo;return this.props.value.map((val,index)=>({text:stringify(val),colorIndex:isSupported(val)?0:2,onDelete:()=>{this.props.update([...this.props.value.slice(0,index),...this.props.value.slice(index+1),]);},}));}
update(newValue){return this.props.update([...this.props.value,newValue]);}}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_operator_editor.js */
odoo.define('@web/core/tree_editor/tree_editor_operator_editor',['@web/core/l10n/translation','@web/core/tree_editor/condition_tree','@web/core/utils/strings','@web/core/py_js/py','@web/core/tree_editor/tree_editor_components'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{formatValue,TERM_OPERATORS_NEGATION,toValue,}=require("@web/core/tree_editor/condition_tree");const{sprintf}=require("@web/core/utils/strings");const{parseExpr}=require("@web/core/py_js/py");const{Select}=require("@web/core/tree_editor/tree_editor_components");const OPERATOR_DESCRIPTIONS={"=":"=","!=":"!=","<=":"<=","<":"<",">":">",">=":">=","=?":"=?","=like":_t("=like"),"=ilike":_t("=ilike"),like:_t("like"),"not like":_t("not like"),ilike:_t("contains"),"not ilike":_t("does not contain"),in:_t("is in"),"not in":_t("is not in"),child_of:_t("child of"),parent_of:_t("parent of"),is:_t("is"),is_not:_t("is not"),set:_t("is set"),not_set:_t("is not set"),between:_t("is between"),};function toKey(operator,negate=false){if(!negate&&typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS){return operator;}
return JSON.stringify([formatValue(operator),negate]);}
function toOperator(key){if(!key.includes("[")){return[key,false];}
const[expr,negate]=JSON.parse(key);return[toValue(parseExpr(expr)),negate];}
__exports.getOperatorLabel=getOperatorLabel;function getOperatorLabel(operator,negate=false){let label;if(typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS){if(negate&&operator in TERM_OPERATORS_NEGATION){return OPERATOR_DESCRIPTIONS[TERM_OPERATORS_NEGATION[operator]];}
label=OPERATOR_DESCRIPTIONS[operator];}else{label=formatValue(operator);}
if(negate){return sprintf(`not %s`,label);}
return label;}
function getOperatorInfo(operator,negate=false){const key=toKey(operator,negate);const label=getOperatorLabel(operator,negate);return[key,label];}
__exports.getOperatorEditorInfo=getOperatorEditorInfo;function getOperatorEditorInfo(operators){const defaultOperator=operators[0];const operatorsInfo=operators.map((operator)=>getOperatorInfo(operator));return{component:Select,extractProps:({update,value:[operator,negate]})=>{const[operatorKey,operatorLabel]=getOperatorInfo(operator,negate);const options=[...operatorsInfo];if(!options.some(([key])=>key===operatorKey)){options.push([operatorKey,operatorLabel]);}
return{value:operatorKey,update:(operatorKey)=>update(...toOperator(operatorKey)),options,};},defaultValue:()=>defaultOperator,isSupported:([operator])=>typeof operator==="string"&&operator in OPERATOR_DESCRIPTIONS,message:_t("Operator not supported"),stringify:([operator,negate])=>getOperatorLabel(operator,negate),};}
return __exports;});;

/* /web/static/src/core/tree_editor/tree_editor_value_editors.js */
odoo.define('@web/core/tree_editor/tree_editor_value_editors',['@web/core/l10n/dates','@web/core/l10n/translation','@web/core/registry','@web/core/datetime/datetime_input','@web/core/tree_editor/tree_editor_autocomplete','@web/core/utils/arrays','@web/core/tree_editor/tree_editor_components','@web/core/tree_editor/condition_tree','@web/core/tree_editor/utils'],function(require){'use strict';let __exports={};const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{DomainSelectorAutocomplete,DomainSelectorSingleAutocomplete,}=require("@web/core/tree_editor/tree_editor_autocomplete");const{unique}=require("@web/core/utils/arrays");const{Input,Select,List,Range}=require("@web/core/tree_editor/tree_editor_components");const{formatValue}=require("@web/core/tree_editor/condition_tree");const{getResModel,disambiguate,isId}=require("@web/core/tree_editor/utils");const{DateTime}=luxon;const formatters=registry.category("formatters");const parsers=registry.category("parsers");function parseValue(fieldType,value){const parser=parsers.get(fieldType,(value)=>value);try{return parser(value);}catch{return value;}}
function isParsable(fieldType,value){const parser=parsers.get(fieldType,(value)=>value);try{parser(value);}catch{return false;}
return true;}
function genericSerializeDate(type,value){return type==="date"?serializeDate(value):serializeDateTime(value);}
function genericDeserializeDate(type,value){return type==="date"?deserializeDate(value):deserializeDateTime(value);}
const STRING_EDITOR={component:Input,extractProps:({value,update})=>({value,update}),isSupported:(value)=>typeof value==="string",defaultValue:()=>"",};function makeSelectEditor(options,params={}){const getOption=(value)=>options.find(([v])=>v===value)||null;return{component:Select,extractProps:({value,update})=>({value,update,options,addBlankOption:params.addBlankOption,}),isSupported:(value)=>Boolean(getOption(value)),defaultValue:()=>options[0]?.[0]??false,stringify:(value,disambiguate)=>{const option=getOption(value);return option?option[1]:disambiguate?formatValue(value):String(value);},message:_t("Value not in selection"),};}
function makeAutoCompleteEditor(fieldDef){return{component:DomainSelectorAutocomplete,extractProps:({value,update})=>{return{resModel:getResModel(fieldDef),fieldString:fieldDef.string,update:(value)=>update(unique(value)),resIds:unique(value),};},isSupported:(value)=>Array.isArray(value),defaultValue:()=>[],};}
function getPartialValueEditorInfo(fieldDef,operator,params={}){switch(operator){case"set":case"not_set":return{component:null,extractProps:null,isSupported:(value)=>value===false,defaultValue:()=>false,};case"=like":case"=ilike":case"like":case"not like":case"ilike":case"not ilike":return STRING_EDITOR;case"between":{const editorInfo=getValueEditorInfo(fieldDef,"=");return{component:Range,extractProps:({value,update})=>({value,update,editorInfo,}),isSupported:(value)=>Array.isArray(value)&&value.length===2,defaultValue:()=>{const{defaultValue}=editorInfo;return[defaultValue(),defaultValue()];},};}
case"in":case"not in":{switch(fieldDef.type){case"tags":return STRING_EDITOR;case"many2one":case"many2many":case"one2many":return makeAutoCompleteEditor(fieldDef);default:{const editorInfo=getValueEditorInfo(fieldDef,"=",{addBlankOption:true,startEmpty:true,});return{component:List,extractProps:({value,update})=>{if(!disambiguate(value)){const{stringify}=editorInfo;editorInfo.stringify=(val)=>stringify(val,false);}
return{value,update,editorInfo,};},isSupported:(value)=>Array.isArray(value),defaultValue:()=>[],};}}}}
const{type}=fieldDef;switch(type){case"integer":case"float":case"monetary":{const formatType=type==="integer"?"integer":"float";return{component:Input,extractProps:({value,update})=>({value:String(value),update:(value)=>update(parseValue(formatType,value)),startEmpty:params.startEmpty,}),isSupported:()=>true,defaultValue:()=>1,shouldResetValue:(value)=>parseValue(formatType,value)===value,};}
case"date":case"datetime":return{component:DateTimeInput,extractProps:({value,update})=>({value:params.startEmpty||value===false?false:genericDeserializeDate(type,value),type,onApply:(value)=>{if(!params.startEmpty||value){update(genericSerializeDate(type,value||DateTime.local()));}},}),isSupported:(value)=>value===false||(typeof value==="string"&&isParsable(type,value)),defaultValue:()=>genericSerializeDate(type,DateTime.local()),stringify:(value)=>{if(value===false){return _t("False");}
if(typeof value==="string"&&isParsable(type,value)){const formatter=formatters.get(type,formatValue);return formatter(genericDeserializeDate(type,value));}
return formatValue(value);},message:_t("Not a valid %s",type),};case"char":case"html":case"text":return STRING_EDITOR;case"boolean":{if(["is","is_not"].includes(operator)){const options=[[true,_t("set")],[false,_t("not set")],];return makeSelectEditor(options,params);}
const options=[[true,_t("True")],[false,_t("False")],];return makeSelectEditor(options,params);}
case"many2one":{if(["=","!=","parent_of","child_of"].includes(operator)){return{component:DomainSelectorSingleAutocomplete,extractProps:({value,update})=>{return{resModel:getResModel(fieldDef),fieldString:fieldDef.string,update,resId:value,};},isSupported:()=>true,defaultValue:()=>false,shouldResetValue:(value)=>value!==false&&!isId(value),};}
break;}
case"many2many":case"one2many":if(["=","!="].includes(operator)){return makeAutoCompleteEditor(fieldDef);}
break;case"selection":{const options=fieldDef.selection||[];return makeSelectEditor(options,params);}
case undefined:{const options=[[1,"1"]];return makeSelectEditor(options,params);}}
return{component:Input,extractProps:({value,update})=>({value:String(value),update,}),isSupported:()=>true,defaultValue:()=>"",};}
__exports.getValueEditorInfo=getValueEditorInfo;function getValueEditorInfo(fieldDef,operator,options={}){const info=getPartialValueEditorInfo(fieldDef||{},operator,options);return{extractProps:({value,update})=>({value,update}),message:_t("Value not supported"),stringify:(val,disambiguate=true)=>{if(disambiguate){return formatValue(val);}
return String(val);},...info,};}
__exports.getDefaultValue=getDefaultValue;function getDefaultValue(fieldDef,operator,value=null){const{isSupported,shouldResetValue,defaultValue}=getValueEditorInfo(fieldDef,operator);if(value===null||!isSupported(value)||shouldResetValue?.(value)){return defaultValue();}
return value;}
return __exports;});;

/* /web/static/src/core/tree_editor/utils.js */
odoo.define('@web/core/tree_editor/utils',['@web/core/utils/arrays','@web/core/tree_editor/tree_editor_operator_editor','@web/core/tree_editor/condition_tree','@web/core/utils/hooks','@web/core/l10n/translation','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{unique,zip}=require("@web/core/utils/arrays");const{getOperatorLabel}=require("@web/core/tree_editor/tree_editor_operator_editor");const{Expression}=require("@web/core/tree_editor/condition_tree");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{deserializeDate,deserializeDateTime,formatDate,formatDateTime}=require("@web/core/l10n/dates");function formatValue(val,disambiguate,fieldDef,displayNames){if(val instanceof Expression){return val.toString();}
if(displayNames&&isId(val)){if(typeof displayNames[val]==="string"){val=displayNames[val];}else{return _t("Inaccessible/missing record ID: %s",val);}}
if(fieldDef?.type==="selection"){const[,label]=(fieldDef.selection||[]).find(([v])=>v===val)||[];if(label!==undefined){val=label;}}
if(typeof val==="string"){if(fieldDef?.type==="datetime"){return formatDateTime(deserializeDateTime(val));}
if(fieldDef?.type==="date"){return formatDate(deserializeDate(val));}}
if(disambiguate&&typeof val==="string"){return JSON.stringify(val);}
return val;}
__exports.isId=isId;function isId(value){return Number.isInteger(value)&&value>=1;}
__exports.disambiguate=disambiguate;function disambiguate(value,displayNames){if(!Array.isArray(value)){return value==="";}
let hasSomeString=false;let hasSomethingElse=false;for(const val of value){if(val===""){return true;}
if(typeof val==="string"||(displayNames&&isId(val))){hasSomeString=true;}else{hasSomethingElse=true;}}
return hasSomeString&&hasSomethingElse;}
__exports.leafToString=leafToString;function leafToString(tree,fieldDef,displayNames){const{operator,negate,value}=tree;const operatorLabel=getOperatorLabel(operator,negate);const description={operatorDescription:`${operatorLabel}`,valueDescription:null,};if(["set","not_set"].includes(operator)){return description;}
if(["is","is_not"].includes(operator)){description.valueDescription={values:[value?_t("set"):_t("not set")],join:"",addParenthesis:false,};return description;}
const dis=disambiguate(value,displayNames);const values=(Array.isArray(value)?value:[value]).map((val)=>formatValue(val,dis,fieldDef,displayNames));let join;let addParenthesis=Array.isArray(value);switch(operator){case"between":join=_t("and");addParenthesis=false;break;case"in":case"not in":join=",";break;default:join=_t("or");}
description.valueDescription={values,join,addParenthesis};return description;}
__exports.useLoadDisplayNames=useLoadDisplayNames;function useLoadDisplayNames(nameService){nameService||=useService("name");return async(resIdsByModel)=>{const proms=[];const resModels=[];for(const[resModel,resIds]of Object.entries(resIdsByModel)){resModels.push(resModel);proms.push(nameService.loadDisplayNames(resModel,resIds));}
return Object.fromEntries(zip(resModels,await Promise.all(proms)));};}
__exports.getResModel=getResModel;function getResModel(fieldDef){if(fieldDef){return fieldDef.is_property?fieldDef.comodel:fieldDef.relation;}
return null;}
__exports.extractIdsFromTree=extractIdsFromTree;function extractIdsFromTree(tree,getFieldDef){const idsByModel=_extractIdsRecursive(tree,getFieldDef,{});for(const resModel in idsByModel){idsByModel[resModel]=unique(idsByModel[resModel]);}
return idsByModel;}
function _extractIdsRecursive(tree,getFieldDef,idsByModel){if(tree.type==="condition"){const fieldDef=getFieldDef(tree.path);if(["many2one","many2many","one2many"].includes(fieldDef?.type)){const value=tree.value;const values=Array.isArray(value)?value:[value];const ids=values.filter((val)=>Number.isInteger(val)&&val>=1);const resModel=getResModel(fieldDef);if(ids.length){if(!idsByModel[resModel]){idsByModel[resModel]=[];}
idsByModel[resModel].push(...ids);}}}
if(tree.type==="connector"){for(const child of tree.children){_extractIdsRecursive(child,getFieldDef,idsByModel);}}
return idsByModel;}
__exports.getPathsInTree=getPathsInTree;function getPathsInTree(tree){const paths=[];if(tree.type==="condition"){paths.push(tree.path);}
if(tree.type==="connector"&&tree.children){for(const child of tree.children){paths.push(...getPathsInTree(child));}}
return paths;}
const SPECIAL_FIELDS=["country_id","user_id","partner_id","stage_id","id"];__exports.getDefaultPath=getDefaultPath;function getDefaultPath(fieldDefs){for(const name of SPECIAL_FIELDS){const fieldDef=fieldDefs[name];if(fieldDef){return fieldDef.name;}}
const name=Object.keys(fieldDefs)[0];if(name){return name;}
throw new Error(`No field found`);}
return __exports;});;

/* /web/static/src/core/ui/block_ui.js */
odoo.define('@web/core/ui/block_ui',['@web/core/l10n/translation','@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{EventBus,Component,useState,xml}=require("@odoo/owl");const BlockUI=__exports.BlockUI=class BlockUI extends Component{setup(){this.messagesByDuration=[{time:20,l1:_t("Loading...")},{time:40,l1:_t("Still loading...")},{time:60,l1:_t("Still loading..."),l2:_t("Please be patient."),},{time:180,l1:_t("Don't leave yet,"),l2:_t("it's still loading..."),},{time:120,l1:_t("You may not believe it,"),l2:_t("but the application is actually loading..."),},{time:3180,l1:_t("Take a minute to get a coffee,"),l2:_t("because it's loading..."),},{time:null,l1:_t("Maybe you should consider reloading the application by pressing F5..."),},];this.state=useState({blockUI:false,line1:"",line2:"",});this.props.bus.addEventListener("BLOCK",this.block.bind(this));this.props.bus.addEventListener("UNBLOCK",this.unblock.bind(this));}
replaceMessage(index){const message=this.messagesByDuration[index];this.state.line1=message.l1;this.state.line2=message.l2||"";if(message.time!==null){this.msgTimer=browser.setTimeout(()=>{this.replaceMessage(index+1);},message.time*1000);}}
block(ev){this.state.blockUI=true;if(ev.detail?.message){this.state.line1=ev.detail.message;}else{this.replaceMessage(0);}}
unblock(){this.state.blockUI=false;clearTimeout(this.msgTimer);this.state.line1="";this.state.line2="";}}
BlockUI.props={bus:EventBus,};BlockUI.template=xml`
    <div t-att-class="state.blockUI ? 'o_blockUI fixed-top d-flex justify-content-center align-items-center flex-column vh-100' : ''">
      <t t-if="state.blockUI">
        <div class="o_spinner mb-4">
            <img src="/web/static/img/spin.svg" alt="Loading..."/>
        </div>
        <div class="o_message text-center px-4">
            <t t-esc="state.line1"/> <br/>
            <t t-esc="state.line2"/>
        </div>
      </t>
    </div>`;return __exports;});;

/* /web/static/src/core/ui/ui_service.js */
odoo.define('@web/core/ui/ui_service',['@web/core/utils/hooks','@web/core/registry','@web/core/utils/timing','@web/core/ui/block_ui','@web/core/browser/browser','@web/core/utils/ui','@web/core/hotkeys/hotkey_service','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{throttleForAnimation}=require("@web/core/utils/timing");const{BlockUI}=require("@web/core/ui/block_ui");const{browser}=require("@web/core/browser/browser");const{getTabableElements}=require("@web/core/utils/ui");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{EventBus,reactive,useEffect,useRef}=require("@odoo/owl");const SIZES=__exports.SIZES={XS:0,VSM:1,SM:2,MD:3,LG:4,XL:5,XXL:6};function getFirstAndLastTabableElements(el){const tabableEls=getTabableElements(el);return[tabableEls[0],tabableEls[tabableEls.length-1]];}
__exports.useActiveElement=useActiveElement;function useActiveElement(refName){if(!refName){throw new Error("refName not given to useActiveElement");}
const uiService=useService("ui");const ref=useRef(refName);function trapFocus(e){const hotkey=getActiveHotkey(e);if(!["tab","shift+tab"].includes(hotkey)){return;}
const el=e.currentTarget;const[firstTabableEl,lastTabableEl]=getFirstAndLastTabableElements(el);switch(hotkey){case"tab":if(document.activeElement===lastTabableEl){firstTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;case"shift+tab":if(document.activeElement===firstTabableEl){lastTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;}}
useEffect((el)=>{if(el){const[firstTabableEl]=getFirstAndLastTabableElements(el);if(!firstTabableEl){return;}
const oldActiveElement=document.activeElement;uiService.activateElement(el);el.addEventListener("keydown",trapFocus);if(!el.contains(document.activeElement)){firstTabableEl.focus();}
return()=>{uiService.deactivateElement(el);el.removeEventListener("keydown",trapFocus);if(el.contains(document.activeElement)||document.activeElement===document.body){oldActiveElement.focus();}};}},()=>[ref.el]);}
const MEDIAS_BREAKPOINTS=__exports.MEDIAS_BREAKPOINTS=[{maxWidth:474},{minWidth:475,maxWidth:575},{minWidth:576,maxWidth:767},{minWidth:768,maxWidth:991},{minWidth:992,maxWidth:1199},{minWidth:1200,maxWidth:1533},{minWidth:1534},];__exports.getMediaQueryLists=getMediaQueryLists;function getMediaQueryLists(){return MEDIAS_BREAKPOINTS.map(({minWidth,maxWidth})=>{if(!maxWidth){return window.matchMedia(`(min-width: ${minWidth}px)`);}
if(!minWidth){return window.matchMedia(`(max-width: ${maxWidth}px)`);}
return window.matchMedia(`(min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`);});}
const MEDIAS=getMediaQueryLists();const utils=__exports.utils={getSize(){return MEDIAS.findIndex((media)=>media.matches);},isSmall(ui={}){return(ui.size||utils.getSize())<=SIZES.SM;},};const bus=new EventBus();__exports.listenSizeChange=listenSizeChange;function listenSizeChange(callback){bus.addEventListener("resize",callback);return()=>bus.removeEventListener("resize",callback);}
const uiService=__exports.uiService={start(env){registry.category("main_components").add("BlockUI",{Component:BlockUI,props:{bus}});let blockCount=0;function block(data){blockCount++;if(blockCount===1){bus.trigger("BLOCK",{message:data?.message,});}}
function unblock(){blockCount--;if(blockCount<0){console.warn("Unblock ui was called more times than block, you should only unblock the UI if you have previously blocked it.");blockCount=0;}
if(blockCount===0){bus.trigger("UNBLOCK");}}
let activeElems=[document];function activateElement(el){activeElems.push(el);bus.trigger("active-element-changed",el);}
function deactivateElement(el){activeElems=activeElems.filter((x)=>x!==el);bus.trigger("active-element-changed",ui.activeElement);}
function getActiveElementOf(el){for(const activeElement of[...activeElems].reverse()){if(activeElement.contains(el)){return activeElement;}}}
const ui=reactive({bus,size:utils.getSize(),get activeElement(){return activeElems[activeElems.length-1];},get isBlocked(){return blockCount>0;},isSmall:utils.isSmall(),block,unblock,activateElement,deactivateElement,getActiveElementOf,});const updateSize=()=>{const prevSize=ui.size;ui.size=utils.getSize();if(ui.size!==prevSize){ui.isSmall=utils.isSmall(ui);bus.trigger("resize");}};browser.addEventListener("resize",throttleForAnimation(updateSize));Object.defineProperty(env,"isSmall",{get(){return ui.isSmall;},});return ui;},};registry.category("services").add("ui",uiService);return __exports;});;

/* /web/static/src/core/user_service.js */
odoo.define('@web/core/user_service',['@web/core/registry','@web/session','@web/core/utils/cache'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{Cache}=require("@web/core/utils/cache");const userService=__exports.userService={dependencies:["rpc"],async:["hasGroup"],start(env,{rpc}){const groupCache=new Cache((group)=>{if(!context.uid){return Promise.resolve(false);}
return rpc("/web/dataset/call_kw/res.users/has_group",{model:"res.users",method:"has_group",args:[group],kwargs:{context},});});groupCache.cache["base.group_user"]=session.is_internal_user;groupCache.cache["base.group_system"]=session.is_system;const accessRightCache=new Cache((model,operation)=>{const url=`/web/dataset/call_kw/${model}/check_access_rights`;return rpc(url,{model,method:"check_access_rights",args:[operation,false],kwargs:{context},});});const context={...session.user_context,uid:session.uid||session.user_id,};let settings=session.user_settings;delete session.user_settings;return{get context(){return Object.assign({},context);},removeFromContext(key){delete context[key];},updateContext(update){Object.assign(context,update);},hasGroup(group){return groupCache.read(group);},async checkAccessRight(model,operation){return accessRightCache.read(model,operation);},get settings(){return settings;},async setUserSettings(key,value){const changedSettings=await env.services.orm.call("res.users.settings","set_res_users_settings",[[this.settings.id]],{new_settings:{[key]:value,},});Object.assign(settings,changedSettings);},name:session.name,userName:session.username,isAdmin:session.is_admin,isSystem:session.is_system,partnerId:session.partner_id,home_action_id:session.home_action_id,showEffect:session.show_effect,get userId(){return context.uid;},get lang(){return context.lang;},get tz(){return context.tz;},get db(){const res={name:session.db,};if("dbuuid"in session){res.uuid=session.dbuuid;}
return res;},};},};registry.category("services").add("user",userService);return __exports;});;

/* /web/static/src/core/utils/arrays.js */
odoo.define('@web/core/utils/arrays',['@web/core/utils/objects'],function(require){'use strict';let __exports={};const{shallowEqual:_shallowEqual}=require("@web/core/utils/objects");function _cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}
const firstArray=args[0].map(function(elem){return[elem];});if(args.length===1){return firstArray;}
const productOfOtherArrays=_cartesian.apply(null,args.slice(1));return firstArray.reduce(function(acc,elem){return acc.concat(productOfOtherArrays.map(function(tuple){return elem.concat(tuple);}));},[]);}
function _getExtractorFrom(criterion){if(criterion){switch(typeof criterion){case"string":return(element)=>element[criterion];case"function":return criterion;default:throw new Error(`Expected criterion of type 'string' or 'function' and got '${typeof criterion}'`);}}else{return(element)=>element;}}
__exports.ensureArray=ensureArray;function ensureArray(value){return value&&typeof value==="object"&&value[Symbol.iterator]?[...value]:[value];}
__exports.intersection=intersection;function intersection(array1,array2){return array1.filter((v)=>array2.includes(v));}
__exports.groupBy=groupBy;function groupBy(array,criterion){const extract=_getExtractorFrom(criterion);const groups={};for(const element of array){const group=String(extract(element));if(!(group in groups)){groups[group]=[];}
groups[group].push(element);}
return groups;}
__exports.sortBy=sortBy;function sortBy(array,criterion,order="asc"){const extract=_getExtractorFrom(criterion);return array.slice().sort((elA,elB)=>{const a=extract(elA);const b=extract(elB);let result;if(isNaN(a)&&isNaN(b)){result=a>b?1:a<b?-1:0;}else{result=a-b;}
return order==="asc"?result:-result;});}
__exports.symmetricalDifference=symmetricalDifference;function symmetricalDifference(arrayA,arrayB){return arrayA.filter((id)=>!arrayB.includes(id)).concat(arrayB.filter((id)=>!arrayA.includes(id)));}
__exports.cartesian=cartesian;function cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}else if(args.length===1){return args[0];}else{return _cartesian.apply(null,args);}}
const shallowEqual=__exports.shallowEqual=_shallowEqual;__exports.sections=sections;function sections(array){const sections=[];for(let i=0;i<array.length+1;i++){sections.push(array.slice(0,i));}
return sections;}
__exports.unique=unique;function unique(array){return Array.from(new Set(array));}
__exports.zip=zip;function zip(array1,array2,fill=false){const result=[];const getLength=fill?Math.max:Math.min;for(let i=0;i<getLength(array1.length,array2.length);i++){result.push([array1[i],array2[i]]);}
return result;}
__exports.zipWith=zipWith;function zipWith(array1,array2,func){return zip(array1,array2).map(([e1,e2])=>func(e1,e2));}
return __exports;});;

/* /web/static/src/core/utils/autoresize.js */
odoo.define('@web/core/utils/autoresize',['@odoo/owl','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{useEffect}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");__exports.useAutoresize=useAutoresize;function useAutoresize(ref,options={}){let resize=null;useEffect((el)=>{if(el){resize=(el instanceof HTMLInputElement?resizeInput:resizeTextArea).bind(null,el,options);el.addEventListener("input",resize);return()=>{el.removeEventListener("input",resize);resize=null;};}},()=>[ref.el]);useEffect(()=>{if(resize){resize(ref.el,options);}});}
function resizeInput(input){input.style.width="100%";const maxWidth=input.clientWidth;const isSafari16=/Version\/16.+Safari/i.test(browser.navigator.userAgent);input.style.width="10px";if(input.value===""&&input.placeholder!==""){input.style.width="auto";return;}
if(input.scrollWidth+5+(isSafari16?8:0)>maxWidth){input.style.width="100%";return;}
input.style.width=input.scrollWidth+5+(isSafari16?8:0)+"px";}
__exports.resizeTextArea=resizeTextArea;function resizeTextArea(textarea,options={}){const minimumHeight=options.minimumHeight||0;let heightOffset=0;const style=window.getComputedStyle(textarea);if(style.boxSizing==="border-box"){const paddingHeight=parseFloat(style.paddingTop)+parseFloat(style.paddingBottom);const borderHeight=parseFloat(style.borderTopWidth)+parseFloat(style.borderBottomWidth);heightOffset=borderHeight+paddingHeight;}
const previousStyle={borderTopWidth:style.borderTopWidth,borderBottomWidth:style.borderBottomWidth,padding:style.padding,};Object.assign(textarea.style,{height:"auto",borderTopWidth:0,borderBottomWidth:0,paddingTop:0,paddingRight:style.paddingRight,paddingBottom:0,paddingLeft:style.paddingLeft,});textarea.style.height="auto";const height=Math.max(minimumHeight,textarea.scrollHeight+heightOffset);Object.assign(textarea.style,previousStyle,{height:`${height}px`});textarea.parentElement.style.height=`${height}px`;}
return __exports;});;

/* /web/static/src/core/utils/binary.js */
odoo.define('@web/core/utils/binary',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");__exports.isBinarySize=isBinarySize;function isBinarySize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
__exports.toBase64Length=toBase64Length;function toBase64Length(maxBytes){return Math.ceil(maxBytes*4/3);}
__exports.humanSize=humanSize;function humanSize(size){const units=_t("Bytes|Kb|Mb|Gb|Tb|Pb|Eb|Zb|Yb").split("|");let i=0;while(size>=1024){size/=1024;++i;}
return`${size.toFixed(2)} ${units[i].trim()}`;}
return __exports;});;

/* /web/static/src/core/utils/cache.js */
odoo.define('@web/core/utils/cache',[],function(require){'use strict';let __exports={};const Cache=__exports.Cache=class Cache{constructor(getValue,getKey){this.cache={};this.getKey=getKey;this.getValue=getValue;}
_getCacheAndKey(...path){let cache=this.cache;let key;if(this.getKey){key=this.getKey(...path);}else{for(let i=0;i<path.length-1;i++){cache=cache[path[i]]=cache[path[i]]||{};}
key=path[path.length-1];}
return{cache,key};}
clear(...path){const{cache,key}=this._getCacheAndKey(...path);delete cache[key];}
invalidate(){this.cache={};}
read(...path){const{cache,key}=this._getCacheAndKey(...path);if(!(key in cache)){cache[key]=this.getValue(...path);}
return cache[key];}}
return __exports;});;

/* /web/static/src/core/utils/colors.js */
odoo.define('@web/core/utils/colors',[],function(require){'use strict';let __exports={};__exports.convertRgbToHsl=convertRgbToHsl;function convertRgbToHsl(r,g,b){if(typeof(r)!=='number'||isNaN(r)||r<0||r>255||typeof(g)!=='number'||isNaN(g)||g<0||g>255||typeof(b)!=='number'||isNaN(b)||b<0||b>255){return false;}
var red=r/255;var green=g/255;var blue=b/255;var maxColor=Math.max(red,green,blue);var minColor=Math.min(red,green,blue);var delta=maxColor-minColor;var hue=0;var saturation=0;var lightness=(maxColor+minColor)/2;if(delta){if(maxColor===red){hue=(green-blue)/delta;}
if(maxColor===green){hue=2+(blue-red)/delta;}
if(maxColor===blue){hue=4+(red-green)/delta;}
if(maxColor){saturation=delta/(1-Math.abs(2*lightness-1));}}
hue=60*hue;return{hue:hue<0?hue+360:hue,saturation:saturation*100,lightness:lightness*100,};};__exports.convertHslToRgb=convertHslToRgb;function convertHslToRgb(h,s,l){if(typeof(h)!=='number'||isNaN(h)||h<0||h>360||typeof(s)!=='number'||isNaN(s)||s<0||s>100||typeof(l)!=='number'||isNaN(l)||l<0||l>100){return false;}
var huePrime=h/60;var saturation=s/100;var lightness=l/100;var chroma=saturation*(1-Math.abs(2*lightness-1));var secondComponent=chroma*(1-Math.abs(huePrime%2-1));var lightnessAdjustment=lightness-chroma/2;var precision=255;chroma=Math.round((chroma+lightnessAdjustment)*precision);secondComponent=Math.round((secondComponent+lightnessAdjustment)*precision);lightnessAdjustment=Math.round((lightnessAdjustment)*precision);if(huePrime>=0&&huePrime<1){return{red:chroma,green:secondComponent,blue:lightnessAdjustment,};}
if(huePrime>=1&&huePrime<2){return{red:secondComponent,green:chroma,blue:lightnessAdjustment,};}
if(huePrime>=2&&huePrime<3){return{red:lightnessAdjustment,green:chroma,blue:secondComponent,};}
if(huePrime>=3&&huePrime<4){return{red:lightnessAdjustment,green:secondComponent,blue:chroma,};}
if(huePrime>=4&&huePrime<5){return{red:secondComponent,green:lightnessAdjustment,blue:chroma,};}
if(huePrime>=5&&huePrime<=6){return{red:chroma,green:lightnessAdjustment,blue:secondComponent,};}
return false;};__exports.convertRgbaToCSSColor=convertRgbaToCSSColor;function convertRgbaToCSSColor(r,g,b,a){if(typeof(r)!=='number'||isNaN(r)||r<0||r>255||typeof(g)!=='number'||isNaN(g)||g<0||g>255||typeof(b)!=='number'||isNaN(b)||b<0||b>255){return false;}
if(typeof(a)!=='number'||isNaN(a)||a<0||Math.abs(a-100)<Number.EPSILON){const rr=r<16?'0'+r.toString(16):r.toString(16);const gg=g<16?'0'+g.toString(16):g.toString(16);const bb=b<16?'0'+b.toString(16):b.toString(16);return(`#${rr}${gg}${bb}`).toUpperCase();}
return`rgba(${r}, ${g}, ${b}, ${parseFloat((a / 100.0).toFixed(3))})`;};__exports.convertCSSColorToRgba=convertCSSColorToRgba;function convertCSSColorToRgba(cssColor){const rgba=cssColor.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);if(rgba){if(rgba[4]===undefined){rgba[4]=1;}
return{red:parseInt(rgba[1]),green:parseInt(rgba[2]),blue:parseInt(rgba[3]),opacity:Math.round(parseFloat(rgba[4])*100),};}
if(/^#([0-9A-F]{6}|[0-9A-F]{8})$/i.test(cssColor)){return{red:parseInt(cssColor.substr(1,2),16),green:parseInt(cssColor.substr(3,2),16),blue:parseInt(cssColor.substr(5,2),16),opacity:(cssColor.length===9?(parseInt(cssColor.substr(7,2),16)/255):1)*100,};}
if(/color\(.+\)/.test(cssColor)){const canvasEl=document.createElement("canvas");canvasEl.height=1;canvasEl.width=1;const ctx=canvasEl.getContext("2d");ctx.fillStyle=cssColor;ctx.fillRect(0,0,1,1);const data=ctx.getImageData(0,0,1,1).data;return{red:data[0],green:data[1],blue:data[2],opacity:data[3]/2.55,};}
return false;};__exports.normalizeCSSColor=normalizeCSSColor;function normalizeCSSColor(cssColor){const rgba=convertCSSColorToRgba(cssColor);if(!rgba){return cssColor;}
return convertRgbaToCSSColor(rgba.red,rgba.green,rgba.blue,rgba.opacity);};__exports.isCSSColor=isCSSColor;function isCSSColor(cssColor){return convertCSSColorToRgba(cssColor)!==false;};__exports.mixCssColors=mixCssColors;function mixCssColors(cssColor1,cssColor2,weight){const rgba1=convertCSSColorToRgba(cssColor1);const rgba2=convertCSSColorToRgba(cssColor2);const rgb1=[rgba1.red,rgba1.green,rgba1.blue];const rgb2=[rgba2.red,rgba2.green,rgba2.blue];const[r,g,b]=rgb1.map((_,idx)=>Math.round(rgb2[idx]+(rgb1[idx]-rgb2[idx])*weight));return convertRgbaToCSSColor(r,g,b);};return __exports;});;

/* /web/static/src/core/utils/components.js */
odoo.define('@web/core/utils/components',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,onError,xml,useSubEnv}=require("@odoo/owl");const ErrorHandler=__exports.ErrorHandler=class ErrorHandler extends Component{setup(){onError((error)=>{this.props.onError(error);});}}
ErrorHandler.template=xml`<t t-slot="default" />`;ErrorHandler.props=["onError","slots"];const WithEnv=__exports.WithEnv=class WithEnv extends Component{setup(){useSubEnv(this.props.env);}}
WithEnv.template=xml`<t t-slot="default"/>`;WithEnv.props=["env","slots"];return __exports;});;

/* /web/static/src/core/utils/concurrency.js */
odoo.define('@web/core/utils/concurrency',[],function(require){'use strict';let __exports={};__exports.delay=delay;function delay(wait){return new Promise(function(resolve){setTimeout(resolve,wait);});}
const KeepLast=__exports.KeepLast=class KeepLast{constructor(){this._id=0;}
add(promise){this._id++;const currentId=this._id;return new Promise((resolve,reject)=>{promise.then((value)=>{if(this._id===currentId){resolve(value);}}).catch((reason)=>{if(this._id===currentId){reject(reason);}});});}}
const Mutex=__exports.Mutex=class Mutex{constructor(){this._lock=Promise.resolve();this._queueSize=0;this._unlockedProm=undefined;this._unlock=undefined;}
async exec(action){this._queueSize++;if(!this._unlockedProm){this._unlockedProm=new Promise((resolve)=>{this._unlock=()=>{resolve();this._unlockedProm=undefined;};});}
const always=()=>{return Promise.resolve(action()).finally(()=>{if(--this._queueSize===0){this._unlock();}});};this._lock=this._lock.then(always,always);return this._lock;}
getUnlockedDef(){return this._unlockedProm||Promise.resolve();}}
const Race=__exports.Race=class Race{constructor(){this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;}
add(promise){if(!this.currentProm){this.currentProm=new Promise((resolve,reject)=>{this.currentPromResolver=(value)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;resolve(value);};this.currentPromRejecter=(error)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;reject(error);};});}
promise.then(this.currentPromResolver).catch(this.currentPromRejecter);return this.currentProm;}
getCurrentProm(){return this.currentProm;}}
const Deferred=__exports.Deferred=class Deferred extends Promise{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /web/static/src/core/utils/draggable.js */
odoo.define('@web/core/utils/draggable',['@web/core/utils/draggable_hook_builder_owl','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const{pick}=require("@web/core/utils/objects");const useDraggable=__exports.useDraggable=makeDraggableHook({name:"useDraggable",onWillStartDrag:({ctx})=>pick(ctx.current,"element"),onDragStart:({ctx})=>pick(ctx.current,"element"),onDrag:({ctx})=>pick(ctx.current,"element"),onDragEnd:({ctx})=>pick(ctx.current,"element"),onDrop:({ctx})=>pick(ctx.current,"element"),});return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder.js */
odoo.define('@web/core/utils/draggable_hook_builder',['@web/core/utils/numbers','@web/core/utils/scrolling','@web/core/utils/timing','@web/core/browser/browser','@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{clamp}=require("@web/core/utils/numbers");const{closestScrollableX,closestScrollableY}=require("@web/core/utils/scrolling");const{setRecurringAnimationFrame}=require("@web/core/utils/timing");const{browser}=require("@web/core/browser/browser");const{hasTouch,isBrowserFirefox,isIOS}=require("@web/core/browser/feature_detection");const DRAGGABLE_CLASS="o_draggable";const DRAGGED_CLASS=__exports.DRAGGED_CLASS="o_dragged";const DEFAULT_ACCEPTED_PARAMS={enable:[Boolean,Function],preventDrag:[Function],ref:[Object],elements:[String],handle:[String,Function],ignore:[String,Function],cursor:[String],edgeScrolling:[Object,Function],delay:[Number],tolerance:[Number],iframeWindow:[Object,Function],};const DEFAULT_DEFAULT_PARAMS={elements:`.${DRAGGABLE_CLASS}`,enable:true,preventDrag:()=>false,edgeScrolling:{speed:10,threshold:30,},delay:0,tolerance:10,touch_delay:300,};const LEFT_CLICK=0;const MANDATORY_PARAMS=["ref"];const WHITE_LISTED_KEYS=["Alt","Control","Meta","Shift"];const elCache={};function camelToKebab(str){return str.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();}
function getReturnValue(valueOrFn){if(typeof valueOrFn==="function"){return valueOrFn();}
return valueOrFn;}
function getScrollParents(el){return[closestScrollableX(el),closestScrollableY(el)];}
function makeCleanupManager(defaultCleanupFn){const add=(cleanupFn)=>typeof cleanupFn==="function"&&cleanups.push(cleanupFn);const cleanup=()=>{while(cleanups.length){cleanups.pop()();}
add(defaultCleanupFn);};const cleanups=[];add(defaultCleanupFn);return{add,cleanup};}
function makeDOMHelpers(cleanup){const addClass=(el,...classNames)=>{if(!el||!classNames.length){return;}
cleanup.add(()=>el.classList.remove(...classNames));el.classList.add(...classNames);};const addListener=(el,event,callback,options={})=>{if(!el||!event||!callback){return;}
const{noAddedStyle}=options;delete options.noAddedStyle;el.addEventListener(event,callback,options);if(!noAddedStyle&&/mouse|pointer|touch/.test(event)){addStyle(el,{pointerEvents:"auto"});}
cleanup.add(()=>el.removeEventListener(event,callback,options));};const addStyle=(el,style)=>{if(!el||!style||!Object.keys(style).length){return;}
cleanup.add(saveAttribute(el,"style"));for(const key in style){const[value,priority]=String(style[key]).split(/\s*!\s*/);el.style.setProperty(camelToKebab(key),value,priority);}};const getRect=(el,options={})=>{if(!el){return{};}
const rect=el.getBoundingClientRect();if(options.adjust){const style=getComputedStyle(el);const[pl,pr,pt,pb]=["padding-left","padding-right","padding-top","padding-bottom",].map((prop)=>pixelValueToNumber(style.getPropertyValue(prop)));rect.x+=pl;rect.y+=pt;rect.width-=pl+pr;rect.height-=pt+pb;}
return rect;};const removeAttribute=(el,attribute)=>{if(!el||!attribute){return;}
cleanup.add(saveAttribute(el,attribute));el.removeAttribute(attribute);};const removeClass=(el,...classNames)=>{if(!el||!classNames.length){return;}
cleanup.add(saveAttribute(el,"class"));el.classList.remove(...classNames);};const removeStyle=(el,...properties)=>{if(!el||!properties.length){return;}
cleanup.add(saveAttribute(el,"style"));for(const key of properties){el.style.removeProperty(camelToKebab(key));}};const setAttribute=(el,attribute,value)=>{if(!el||!attribute){return;}
cleanup.add(saveAttribute(el,attribute));el.setAttribute(attribute,String(value));};return{addClass,addListener,addStyle,getRect,removeAttribute,removeClass,removeStyle,setAttribute,};}
function pixelValueToNumber(val){return Number(val.endsWith("px")?val.slice(0,-2):val);}
function safePrevent(ev,{stop}={}){if(ev.cancelable){ev.preventDefault();if(stop){ev.stopPropagation();}}}
function saveAttribute(el,attribute){const restoreAttribute=()=>{cache.delete(el);if(hasAttribute){el.setAttribute(attribute,originalValue);}else{el.removeAttribute(attribute);}};if(!(attribute in elCache)){elCache[attribute]=new Set();}
const cache=elCache[attribute];if(cache.has(el)){return;}
cache.add(el);const hasAttribute=el.hasAttribute(attribute);const originalValue=el.getAttribute(attribute);return restoreAttribute;}
function toFunction(value){return typeof value==="function"?value:()=>value;}
__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(hookParams){hookParams=getReturnValue(hookParams);const hookName=hookParams.name||"useAnonymousDraggable";const{setupHooks}=hookParams;const allAcceptedParams={...DEFAULT_ACCEPTED_PARAMS,...hookParams.acceptedParams};const defaultParams={...DEFAULT_DEFAULT_PARAMS,...hookParams.defaultParams};const computeParams=(params)=>{const computedParams={enable:()=>true};for(const prop in allAcceptedParams){if(prop in params){if(prop==="enable"){computedParams[prop]=toFunction(params[prop]);}else if(allAcceptedParams[prop].length===1&&allAcceptedParams[prop][0]===Function){computedParams[prop]=params[prop];}else{computedParams[prop]=getReturnValue(params[prop]);}}}
return Object.entries(computedParams);};const makeError=(reason)=>new Error(`Error in hook ${hookName}: ${reason}.`);return{[hookName](params){const callBuildHandler=(hookHandlerName,arg)=>{if(typeof hookParams[hookHandlerName]!=="function"){return;}
const returnValue=hookParams[hookHandlerName]({ctx,...helpers,...arg});if(returnValue){callHandler(hookHandlerName,returnValue);}};const callHandler=(handlerName,arg)=>{if(typeof params[handlerName]!=="function"){return;}
try{params[handlerName]({...dom,...ctx.pointer,...arg});}catch(err){dragEnd(null,true);throw err;}};const canStartDrag=()=>{const{pointer,current:{initialPosition},}=ctx;return(!ctx.tolerance||Math.hypot(pointer.x-initialPosition.x,pointer.y-initialPosition.y)>=ctx.tolerance);};const dragStart=()=>{state.dragging=true;state.willDrag=false;[ctx.current.scrollParentX,ctx.current.scrollParentY]=getScrollParents(ctx.current.container);updateRects();const{x,y,width,height}=ctx.current.elementRect;ctx.current.offset={x:ctx.current.initialPosition.x-x,y:ctx.current.initialPosition.y-y,};if(ctx.followCursor){dom.addStyle(ctx.current.element,{width:`${width}px`,height:`${height}px`,position:"fixed !important",});updateElementPosition();}
dom.addClass(document.body,"pe-none","user-select-none");if(params.iframeWindow){dom.addClass(params.iframeWindow.body,"pe-none","user-select-none");}
if(ctx.cursor){dom.addStyle(document.body,{cursor:ctx.cursor});}
if((ctx.current.scrollParentX||ctx.current.scrollParentY)&&ctx.edgeScrolling.enabled){const cleanupFn=setRecurringAnimationFrame(handleEdgeScrolling);cleanup.add(cleanupFn);}
dom.addClass(ctx.current.element,DRAGGED_CLASS);callBuildHandler("onDragStart");};const dragEnd=(target,inErrorState)=>{if(state.dragging){if(!inErrorState){if(target){callBuildHandler("onDrop",{target});}
callBuildHandler("onDragEnd");}}
cleanup.cleanup();};const handleEdgeScrolling=(deltaTime)=>{updateRects();const eRect=ctx.current.elementRect;const xRect=ctx.current.scrollParentXRect;const yRect=ctx.current.scrollParentYRect;const{speed,threshold}=ctx.edgeScrolling;const correctedSpeed=(speed/16)*deltaTime;const diff={};if(xRect){const maxWidth=xRect.x+xRect.width;if(eRect.x-xRect.x<threshold){diff.x=[eRect.x-xRect.x,-1];}else if(maxWidth-eRect.x-eRect.width<threshold){diff.x=[maxWidth-eRect.x-eRect.width,1];}}
if(yRect){const maxHeight=yRect.y+yRect.height;if(eRect.y-yRect.y<threshold){diff.y=[eRect.y-yRect.y,-1];}else if(maxHeight-eRect.y-eRect.height<threshold){diff.y=[maxHeight-eRect.y-eRect.height,1];}}
const diffToScroll=([delta,sign])=>(1-clamp(delta,0,threshold)/threshold)*correctedSpeed*sign;if(diff.y){ctx.current.scrollParentY.scrollBy({top:diffToScroll(diff.y)});}
if(diff.x){ctx.current.scrollParentX.scrollBy({left:diffToScroll(diff.x)});}};const onKeyDown=(ev)=>{if(!state.dragging||!ctx.enable()){return;}
if(!WHITE_LISTED_KEYS.includes(ev.key)){safePrevent(ev,{stop:true});dragEnd(null);}};const onPointerCancel=()=>{dragEnd(null);};const onPointerDown=(ev)=>{updatePointerPosition(ev);const initiationDelay=ev.pointerType==="touch"?ctx.touch_delay:ctx.delay;dragEnd(null);const fullSelectorEl=ev.target.closest(ctx.fullSelector);if(ev.button!==LEFT_CLICK||!ctx.enable()||!fullSelectorEl||(ctx.ignoreSelector&&ev.target.closest(ctx.ignoreSelector))||ctx.preventDrag(fullSelectorEl)){return;}
safePrevent(ev);if(document.activeElement&&!document.activeElement.contains(ev.target)){document.activeElement.blur();}
const{currentTarget,pointerId,target}=ev;ctx.current.initialPosition={...ctx.pointer};if(target.hasPointerCapture(pointerId)){target.releasePointerCapture(pointerId);}
if(initiationDelay){if(hasTouch()){if(ev.pointerType==="touch"){dom.addClass(target.closest(ctx.elementSelector),"o_touch_bounce");}
if(isBrowserFirefox()){const links=[...currentTarget.querySelectorAll("[href")];if(currentTarget.hasAttribute("href")){links.unshift(currentTarget);}
for(const link of links){dom.removeAttribute(link,"href");}}
if(isIOS()){for(const image of currentTarget.getElementsByTagName("img")){dom.setAttribute(image,"draggable",false);}}}
ctx.current.timeout=browser.setTimeout(()=>{ctx.current.initialPosition={...ctx.pointer};willStartDrag(target);const{x:px,y:py}=ctx.pointer;const{x,y,width,height}=dom.getRect(ctx.current.element);if(px<x||x+width<px||py<y||y+height<py){dragEnd(null);}},initiationDelay);cleanup.add(()=>browser.clearTimeout(ctx.current.timeout));}else{willStartDrag(target);}};const onPointerMove=(ev)=>{updatePointerPosition(ev);if(!ctx.current.element||!ctx.enable()){return;}
safePrevent(ev);if(!state.dragging){if(!canStartDrag()){return;}
dragStart();}
if(ctx.followCursor){updateElementPosition();}
callBuildHandler("onDrag");};const onPointerUp=(ev)=>{updatePointerPosition(ev);dragEnd(ev.target);};const updateElementPosition=()=>{const{containerRect,element,elementRect,offset}=ctx.current;const{width:ew,height:eh}=elementRect;const{x:cx,y:cy,width:cw,height:ch}=containerRect;dom.addStyle(element,{left:`${clamp(ctx.pointer.x - offset.x, cx, cx + cw - ew)}px`,top:`${clamp(ctx.pointer.y - offset.y, cy, cy + ch - eh)}px`,});};const updatePointerPosition=(ev)=>{ctx.pointer.x=ev.clientX;ctx.pointer.y=ev.clientY;};const updateRects=()=>{const{current}=ctx;const{container,element,scrollParentX,scrollParentY}=current;current.containerRect=dom.getRect(container,{adjust:true});let iframeOffsetX=0;let iframeOffsetY=0;const iframeEl=container.ownerDocument.defaultView.frameElement;if(iframeEl&&!iframeEl.contentDocument.contains(element)){const{x,y}=dom.getRect(iframeEl);iframeOffsetX=x;iframeOffsetY=y;current.containerRect.x+=iframeOffsetX;current.containerRect.y+=iframeOffsetY;}
current.containerRect.width=container.scrollWidth;current.containerRect.height=container.scrollHeight;current.scrollParentXRect=null;current.scrollParentYRect=null;if(ctx.edgeScrolling.enabled){if(scrollParentX){current.scrollParentXRect=dom.getRect(scrollParentX,{adjust:true});current.scrollParentXRect.x+=iframeOffsetX;current.scrollParentXRect.y+=iframeOffsetY;const right=Math.min(current.containerRect.left+container.scrollWidth,current.scrollParentXRect.right);current.containerRect.x=Math.max(current.containerRect.x,current.scrollParentXRect.x);current.containerRect.width=right-current.containerRect.x;}
if(scrollParentY){current.scrollParentYRect=dom.getRect(scrollParentY,{adjust:true});current.scrollParentYRect.x+=iframeOffsetX;current.scrollParentYRect.y+=iframeOffsetY;const bottom=Math.min(current.containerRect.top+container.scrollHeight,current.scrollParentYRect.bottom);current.containerRect.y=Math.max(current.containerRect.y,current.scrollParentYRect.y);current.containerRect.height=bottom-current.containerRect.y;}}
ctx.current.elementRect=dom.getRect(element);};const willStartDrag=(target)=>{ctx.current.element=target.closest(ctx.elementSelector);ctx.current.container=ctx.ref.el;cleanup.add(()=>(ctx.current={}));state.willDrag=true;callBuildHandler("onWillStartDrag");if(hasTouch()){dom.addListener(window,"touchmove",safePrevent,{passive:false,noAddedStyle:true,});if(params.iframeWindow){dom.addListener(params.iframeWindow,"touchmove",safePrevent,{passive:false,noAddedStyle:true,});}}};const cleanup=makeCleanupManager(()=>(state.dragging=false));const effectCleanup=makeCleanupManager();const dom=makeDOMHelpers(cleanup);const helpers={...dom,addCleanup:cleanup.add,addEffectCleanup:effectCleanup.add,callHandler,};const state=setupHooks.wrapState({dragging:false});for(const prop in allAcceptedParams){const type=typeof params[prop];const acceptedTypes=allAcceptedParams[prop].map((t)=>t.name.toLowerCase());if(params[prop]){if(!acceptedTypes.includes(type)){throw makeError(`invalid type for property "${prop}" in parameters: expected { ${acceptedTypes.join(
                                ", "
                            )} } and got ${type}`);}}else if(MANDATORY_PARAMS.includes(prop)&&!defaultParams[prop]){throw makeError(`missing required property "${prop}" in parameters`);}}
const ctx={enable:()=>false,preventDrag:()=>false,ref:params.ref,ignoreSelector:null,fullSelector:null,followCursor:true,cursor:null,pointer:{x:0,y:0},edgeScrolling:{enabled:true},get dragging(){return state.dragging;},get willDrag(){return state.willDrag;},current:{},};setupHooks.setup((...deps)=>{const actualParams={...defaultParams,...Object.fromEntries(deps)};if(!ctx.ref.el){return;}
ctx.enable=actualParams.enable;if(actualParams.preventDrag){ctx.preventDrag=actualParams.preventDrag;}
ctx.elementSelector=actualParams.elements;if(!ctx.elementSelector){throw makeError(`no value found by "elements" selector: ${ctx.elementSelector}`);}
const allSelectors=[ctx.elementSelector];ctx.cursor=actualParams.cursor||null;if(actualParams.handle){allSelectors.push(actualParams.handle);}
if(actualParams.ignore){ctx.ignoreSelector=actualParams.ignore;}
ctx.fullSelector=allSelectors.join(" ");Object.assign(ctx.edgeScrolling,actualParams.edgeScrolling);ctx.delay=actualParams.delay;ctx.touch_delay=actualParams.delay||actualParams.touch_delay;ctx.tolerance=actualParams.tolerance;callBuildHandler("onComputeParams",{params:actualParams});return effectCleanup.cleanup;},()=>computeParams(params));const useMouseEvents=isBrowserFirefox()&&!hasTouch()&&params.iframeWindow;setupHooks.setup((el)=>{if(el){const{add,cleanup}=makeCleanupManager();const{addListener}=makeDOMHelpers({add});const event=useMouseEvents?"mousedown":"pointerdown";addListener(el,event,onPointerDown,{noAddedStyle:true});if(hasTouch()){addListener(el,"contextmenu",safePrevent);addListener(el,"touchstart",()=>{},{passive:false,noAddedStyle:true,});}
return cleanup;}},()=>[ctx.ref.el]);const addWindowListener=(type,listener,options)=>{if(params.iframeWindow){setupHooks.addListener(params.iframeWindow,type,listener,options);}
setupHooks.addListener(window,type,listener,options);};const throttledOnPointerMove=setupHooks.throttle(onPointerMove);addWindowListener(useMouseEvents?"mousemove":"pointermove",throttledOnPointerMove,{passive:false});addWindowListener(useMouseEvents?"mouseup":"pointerup",onPointerUp);addWindowListener("pointercancel",onPointerCancel);addWindowListener("keydown",onKeyDown,{capture:true});setupHooks.teardown(()=>dragEnd(null));return state;},}[hookName];}
return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder_owl.js */
odoo.define('@web/core/utils/draggable_hook_builder_owl',['@odoo/owl','@web/core/utils/timing','@web/core/utils/draggable_hook_builder'],function(require){'use strict';let __exports={};const{onWillUnmount,reactive,useEffect,useExternalListener}=require("@odoo/owl");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{makeDraggableHook:nativeMakeDraggableHook}=require("@web/core/utils/draggable_hook_builder");__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(params){return nativeMakeDraggableHook({...params,setupHooks:{addListener:useExternalListener,setup:useEffect,teardown:onWillUnmount,throttle:useThrottleForAnimation,wrapState:reactive,},});}
return __exports;});;

/* /web/static/src/core/utils/files.js */
odoo.define('@web/core/utils/files',['@web/core/utils/numbers','@web/session','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{humanNumber}=require("@web/core/utils/numbers");const{session}=require("@web/session");const{_t}=require("@web/core/l10n/translation");const DEFAULT_MAX_FILE_SIZE=128*1024*1024;__exports.checkFileSize=checkFileSize;function checkFileSize(fileSize,notificationService){const maxUploadSize=session.max_file_upload_size||DEFAULT_MAX_FILE_SIZE;if(fileSize>maxUploadSize){notificationService.add(_t("The selected file (%sB) is over the maximum allowed file size (%sB).",humanNumber(fileSize),humanNumber(maxUploadSize)),{type:"danger",});return false;}
return true;}
return __exports;});;

/* /web/static/src/core/utils/functions.js */
odoo.define('@web/core/utils/functions',[],function(require){'use strict';let __exports={};__exports.memoize=memoize;function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(...args);},}[funcName];}
__exports.uniqueId=uniqueId;function uniqueId(prefix=""){return`${prefix}${++uniqueId.nextId}`;}
uniqueId.nextId=0;return __exports;});;

/* /web/static/src/core/utils/hooks.js */
odoo.define('@web/core/utils/hooks',['@web/env','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{SERVICES_METADATA}=require("@web/env");const{hasTouch,isMobileOS}=require("@web/core/browser/feature_detection");const{status,useComponent,useEffect,useRef,onWillUnmount}=require("@odoo/owl");__exports.useAutofocus=useAutofocus;function useAutofocus({refName,selectAll,mobile}={}){const ref=useRef(refName||"autofocus");const uiService=useService("ui");if(!mobile&&hasTouch()){return ref;}
if(!mobile&&isMobileOS()){return ref;}
useEffect((el)=>{if(el&&(!uiService.activeElement||uiService.activeElement.contains(el))){el.focus();if(["INPUT","TEXTAREA"].includes(el.tagName)&&el.type!=="number"){el.selectionEnd=el.value.length;el.selectionStart=selectAll?0:el.value.length;}}},()=>[ref.el]);return ref;}
__exports.useBus=useBus;function useBus(bus,eventName,callback){const component=useComponent();useEffect(()=>{const listener=callback.bind(component);bus.addEventListener(eventName,listener);return()=>bus.removeEventListener(eventName,listener);},()=>[]);}
function _protectMethod(component,fn){return function(...args){if(status(component)==="destroyed"){return Promise.reject(new Error("Component is destroyed"));}
const prom=Promise.resolve(fn.call(this,...args));const protectedProm=prom.then((result)=>status(component)==="destroyed"?new Promise(()=>{}):result);return Object.assign(protectedProm,{abort:prom.abort,cancel:prom.cancel,});};}
__exports.useService=useService;function useService(serviceName){const component=useComponent();const{services}=component.env;if(!(serviceName in services)){throw new Error(`Service ${serviceName} is not available`);}
const service=services[serviceName];if(serviceName in SERVICES_METADATA){if(service instanceof Function){return _protectMethod(component,service);}else{const methods=SERVICES_METADATA[serviceName];const result=Object.create(service);for(const method of methods){result[method]=_protectMethod(component,service[method]);}
return result;}}
return service;}
__exports.useSpellCheck=useSpellCheck;function useSpellCheck({refName}={}){const elements=[];const ref=useRef(refName||"spellcheck");function toggleSpellcheck(ev){ev.target.spellcheck=document.activeElement===ev.target;}
useEffect((el)=>{if(el){const inputs=["INPUT","TEXTAREA"].includes(el.nodeName)||el.contenteditable?[el]:el.querySelectorAll("input, textarea, [contenteditable=true]");inputs.forEach((input)=>{if(input.spellcheck!==false){elements.push(input);input.addEventListener("focus",toggleSpellcheck);input.addEventListener("blur",toggleSpellcheck);}});}
return()=>{elements.forEach((input)=>{input.removeEventListener("focus",toggleSpellcheck);input.removeEventListener("blur",toggleSpellcheck);});};},()=>[ref.el]);}
__exports.useChildRef=useChildRef;function useChildRef(){let defined=false;let value;return function ref(v){value=v;if(defined){return;}
Object.defineProperty(ref,"el",{get(){return value.el;},});defined=true;};}
__exports.useForwardRefToParent=useForwardRefToParent;function useForwardRefToParent(refName){const component=useComponent();const ref=useRef(refName);if(component.props[refName]){component.props[refName](ref);}
return ref;}
__exports.useOwnedDialogs=useOwnedDialogs;function useOwnedDialogs(){const dialogService=useService("dialog");const cbs=[];onWillUnmount(()=>{cbs.forEach((cb)=>cb());});const addDialog=(...args)=>{const close=dialogService.add(...args);cbs.push(close);return close;};return addDialog;}
__exports.useRefListener=useRefListener;function useRefListener(ref,...listener){useEffect((el)=>{el?.addEventListener(...listener);return()=>el?.removeEventListener(...listener);},()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/utils/misc.js */
odoo.define('@web/core/utils/misc',[],function(require){'use strict';let __exports={};const eventHandledWeakMap=new WeakMap();__exports.isEventHandled=isEventHandled;function isEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){return false;}
return eventHandledWeakMap.get(ev).includes(markName);}
__exports.markEventHandled=markEventHandled;function markEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){eventHandledWeakMap.set(ev,[]);}
eventHandledWeakMap.get(ev).push(markName);}
return __exports;});;

/* /web/static/src/core/utils/nested_sortable.js */
odoo.define('@web/core/utils/nested_sortable',['@web/core/l10n/localization','@web/core/utils/draggable_hook_builder_owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder_owl");const useNestedSortable=__exports.useNestedSortable=makeDraggableHook({name:"useNestedSortable",acceptedParams:{groups:[String,Function],connectGroups:[Boolean,Function],nest:[Boolean],listTagName:[String],nestInterval:[Number],maxLevels:[Number],isAllowed:[Function],useElementSize:[Boolean],},defaultParams:{connectGroups:false,currentGroup:null,cursor:"grabbing",edgeScrolling:{speed:20,threshold:60},elements:"li",groupSelector:null,nest:false,listTagName:"ul",nestInterval:15,maxLevels:0,isAllowed:(ctx)=>true,useElementSize:false,},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;ctx.nest=params.nest;ctx.listTagName=params.listTagName;ctx.nestInterval=params.nestInterval;ctx.isRTL=localization.direction==="rtl";ctx.maxLevels=params.maxLevels||0;ctx.isAllowed=params.isAllowed??(()=>true);ctx.useElementSize=params.useElementSize;},onWillStartDrag({ctx,addCleanup}){if(ctx.groupSelector){ctx.currentGroup=ctx.current.element.closest(ctx.groupSelector);if(!ctx.connectGroups){ctx.current.container=ctx.currentGroup;}}
if(ctx.nest){ctx.prevNestX=ctx.pointer.x;}
ctx.current.placeHolder=ctx.current.element.cloneNode(false);ctx.current.placeHolder.classList.add("w-100","d-block");if(ctx.useElementSize){ctx.current.placeHolder.style.height=getComputedStyle(ctx.current.element).height;ctx.current.placeHolder.classList.add("o_nested_sortable_placeholder_realsize");}else{ctx.current.placeHolder.classList.add("o_nested_sortable_placeholder");}
addCleanup(()=>ctx.current.placeHolder.remove());},onDragStart({ctx,addStyle}){ctx.selectorX=ctx.isRTL?ctx.current.elementRect.left+1:ctx.current.elementRect.right-1;ctx.current.element.after(ctx.current.placeHolder);addStyle(ctx.current.element,{opacity:0.5});addStyle(document.body,{"pointer-events":"auto"});addStyle(document.querySelector(".o_navbar"),{"pointer-events":"none"});addStyle(document.querySelector(".o_action_manager"),{"pointer-events":"none"});addStyle(ctx.current.container,{"pointer-events":"auto"});return{element:ctx.current.element,group:ctx.currentGroup,};},_getDeepestChildLevel(ctx,node,depth=0){let result=0;const childSelector=`${ctx.listTagName} ${ctx.elementSelector}`;for(const childNode of node.querySelectorAll(childSelector)){result=Math.max(this._getDeepestChildLevel(ctx,childNode,depth+1),result);}
return depth?result+1:result;},_hasReachMaxAllowedLevel(ctx){if(!ctx.nest||ctx.maxLevels<1){return false;}
let level=this._getDeepestChildLevel(ctx,ctx.current.element);let list=ctx.current.placeHolder.closest(ctx.listTagName);while(list){level++;list=list.parentNode.closest(ctx.listTagName);}
return level>ctx.maxLevels;},_isAllowedNodeMove(ctx){return(!this._hasReachMaxAllowedLevel(ctx)&&ctx.isAllowed(ctx.current,ctx.elementSelector));},onDrag({ctx,callHandler}){const onMove=(prevPos)=>{if(!this._isAllowedNodeMove(ctx)){ctx.current.placeHolder.classList.add("d-none");return;}
ctx.current.placeHolder.classList.remove("d-none");callHandler("onMove",{element:ctx.current.element,previous:ctx.current.placeHolder.previousElementSibling,next:ctx.current.placeHolder.nextElementSibling,parent:ctx.nest?ctx.current.placeHolder.parentElement.closest(ctx.elementSelector):false,group:ctx.currentGroup,newGroup:ctx.connectGroups?ctx.current.placeHolder.closest(ctx.groupSelector):ctx.currentGroup,prevPos,placeholder:ctx.current.placeHolder,});};const getChildList=(el)=>{let list=el.querySelector(ctx.listTagName);if(!list){list=document.createElement(ctx.listTagName);el.appendChild(list);}
return list;};const position={previous:ctx.current.placeHolder.previousElementSibling,next:ctx.current.placeHolder.nextElementSibling,parent:ctx.nest?ctx.current.placeHolder.parentElement.closest(ctx.elementSelector):false,group:ctx.groupSelector?ctx.current.placeHolder.closest(ctx.groupSelector):false,};if(ctx.nest){const xInterval=ctx.prevNestX-ctx.pointer.x;if(ctx.nestInterval-(-1)**ctx.isRTL*xInterval<1){let nextElement=position.next;if(nextElement===ctx.current.element){nextElement=nextElement.nextElementSibling;}
if(!nextElement){const newSibling=position.parent;if(newSibling){newSibling.after(ctx.current.placeHolder);onMove(position);}}
ctx.prevNestX=ctx.pointer.x;return;}else if(ctx.nestInterval+(-1)**ctx.isRTL*xInterval<1){let parent=position.previous;if(parent===ctx.current.element){parent=parent.previousElementSibling;}
if(parent&&parent.matches(ctx.elementSelector)){getChildList(parent).appendChild(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;return;}}
const currentTop=ctx.pointer.y-ctx.current.offset.y;const closestEl=document.elementFromPoint(ctx.selectorX,currentTop);if(!closestEl){return;}
const element=closestEl.closest(ctx.elementSelector);if(element&&element!==ctx.current.placeHolder){const eRect=element.getBoundingClientRect();const pos=ctx.current.placeHolder.compareDocumentPosition(element);if(currentTop-eRect.y<10){if(pos===Node.DOCUMENT_POSITION_PRECEDING||pos===(Node.DOCUMENT_POSITION_PRECEDING|Node.DOCUMENT_POSITION_CONTAINS)){element.before(ctx.current.placeHolder);onMove(position);ctx.prevNestX=ctx.pointer.x;}}else if(currentTop-eRect.y>15&&pos===Node.DOCUMENT_POSITION_FOLLOWING){if(ctx.nest){const elementChildList=getChildList(element);if(elementChildList.querySelector(ctx.elementSelector)){elementChildList.prepend(ctx.current.placeHolder);onMove(position);}else{element.after(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;}else{element.after(ctx.current.placeHolder);onMove(position);}}}else{const group=closestEl.closest(ctx.groupSelector);if(group&&group!==position.group){if(group.compareDocumentPosition(position.group)===Node.DOCUMENT_POSITION_PRECEDING){getChildList(group).prepend(ctx.current.placeHolder);onMove(position);}else{getChildList(group).appendChild(ctx.current.placeHolder);onMove(position);}
ctx.prevNestX=ctx.pointer.x;callHandler("onGroupEnter",{group,element:ctx.current.placeHolder});callHandler("onGroupLeave",{group:position.group,element:ctx.current.placeHolder,});}}},onDrop({ctx}){if(!this._isAllowedNodeMove(ctx)){return;}
const previous=ctx.current.placeHolder.previousElementSibling;const next=ctx.current.placeHolder.nextElementSibling;if(previous!==ctx.current.element&&next!==ctx.current.element){return{element:ctx.current.element,group:ctx.currentGroup,previous,next,newGroup:ctx.groupSelector&&ctx.current.placeHolder.closest(ctx.groupSelector),parent:ctx.current.placeHolder.parentElement.closest(ctx.elementSelector),placeholder:ctx.current.placeHolder,};}},onDragEnd({ctx}){return{element:ctx.current.element,group:ctx.currentGroup,};},});return __exports;});;

/* /web/static/src/core/utils/numbers.js */
odoo.define('@web/core/utils/numbers',['@web/core/l10n/localization','@web/core/l10n/translation','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{localization:l10n}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{intersperse}=require("@web/core/utils/strings");__exports.clamp=clamp;function clamp(num,min,max){return Math.max(Math.min(num,max),min);}
__exports.range=range;function range(start,stop,step=1){const array=[];const nsteps=Math.floor((stop-start)/step);for(let i=0;i<nsteps;i++){array.push(start+step*i);}
return array;}
__exports.roundPrecision=roundPrecision;function roundPrecision(value,precision){if(!value){return 0;}else if(!precision||precision<0){precision=1;}
let normalizedValue=value/precision;const epsilonMagnitude=Math.log2(Math.abs(normalizedValue));const epsilon=Math.pow(2,epsilonMagnitude-52);normalizedValue+=normalizedValue>=0?epsilon:-epsilon;const sign=normalizedValue<0?-1.0:1.0;const roundedValue=sign*Math.round(Math.abs(normalizedValue));return roundedValue*precision;}
__exports.roundDecimals=roundDecimals;function roundDecimals(value,decimals){return roundPrecision(value,parseFloat("1e"+-decimals));}
__exports.floatIsZero=floatIsZero;function floatIsZero(value,decimals){return roundDecimals(value,decimals)===0;}
__exports.insertThousandsSep=insertThousandsSep;function insertThousandsSep(number,thousandsSep=",",grouping=[]){const negative=number[0]==="-";number=negative?number.slice(1):number;return(negative?"-":"")+intersperse(number,grouping,thousandsSep);}
__exports.humanNumber=humanNumber;function humanNumber(number,options={decimals:0,minDigits:1}){const decimals=options.decimals||0;const minDigits=options.minDigits||1;const d2=Math.pow(10,decimals);const numberMagnitude=+number.toExponential().split("e+")[1];number=Math.round(number*d2)/d2;if(numberMagnitude>=21){number=Math.round(number*Math.pow(10,decimals-numberMagnitude))/d2;return`${number}e+${numberMagnitude}`;}
const unitSymbols=_t("kMGTPE").toString();const sign=Math.sign(number);number=Math.abs(number);let symbol="";for(let i=unitSymbols.length;i>0;i--){const s=Math.pow(10,i*3);if(s<=number/Math.pow(10,minDigits-1)){number=Math.round((number*d2)/s)/d2;symbol=unitSymbols[i-1];break;}}
const{decimalPoint,grouping,thousandsSep}=l10n;const decimalsToKeep=number>=1000?0:decimals;number=sign*number;const[integerPart,decimalPart]=number.toFixed(decimalsToKeep).split(".");const int=insertThousandsSep(integerPart,thousandsSep,grouping);if(!decimalPart){return int+symbol;}
return int+decimalPoint+decimalPart+symbol;}
__exports.formatFloat=formatFloat;function formatFloat(value,options={}){if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;const decimalPoint="decimalPoint"in options?options.decimalPoint:l10n.decimalPoint;let precision;if(options.digits&&options.digits[1]!==undefined){precision=options.digits[1];}else{precision=2;}
const formatted=value.toFixed(precision).split(".");formatted[0]=insertThousandsSep(formatted[0],thousandsSep,grouping);if(options.trailingZeros===false&&formatted[1]){formatted[1]=formatted[1].replace(/0+$/,"");}
return formatted[1]?formatted.join(decimalPoint):formatted[0];}
return __exports;});;

/* /web/static/src/core/utils/objects.js */
odoo.define('@web/core/utils/objects',[],function(require){'use strict';let __exports={};__exports.shallowEqual=shallowEqual;function shallowEqual(obj1,obj2,comparisonFn=(a,b)=>a===b){if(!obj1||!obj2||typeof obj1!=="object"||typeof obj2!=="object"){return obj1===obj2;}
const obj1Keys=Object.keys(obj1);return(obj1Keys.length===Object.keys(obj2).length&&obj1Keys.every((key)=>comparisonFn(obj1[key],obj2[key])));}
const deepEqual=__exports.deepEqual=(obj1,obj2)=>shallowEqual(obj1,obj2,deepEqual);__exports.deepCopy=deepCopy;function deepCopy(obj){return JSON.parse(JSON.stringify(obj));}
__exports.omit=omit;function omit(object,...properties){const result={};const propertiesSet=new Set(properties);for(const key in object){if(!propertiesSet.has(key)){result[key]=object[key];}}
return result;}
__exports.pick=pick;function pick(object,...properties){return Object.fromEntries(properties.filter((prop)=>prop in object).map((prop)=>[prop,object[prop]]));}
return __exports;});;

/* /web/static/src/core/utils/patch.js */
odoo.define('@web/core/utils/patch',[],function(require){'use strict';let __exports={};const patchDescriptions=new WeakMap();function getPatchDescription(objToPatch){if(!patchDescriptions.has(objToPatch)){patchDescriptions.set(objToPatch,{originalProperties:new Map(),skeleton:Object.create(Object.getPrototypeOf(objToPatch)),extensions:new Set(),});}
return patchDescriptions.get(objToPatch);}
function isClassPrototype(objToPatch){return Object.hasOwn(objToPatch,"constructor")&&objToPatch.constructor?.prototype===objToPatch;}
function findAncestorPropertyDescriptor(objToPatch,key){let descriptor=null;let prototype=objToPatch;do{descriptor=Object.getOwnPropertyDescriptor(prototype,key);prototype=Object.getPrototypeOf(prototype);}while(!descriptor&&prototype);return descriptor;}
__exports.patch=patch;function patch(objToPatch,extension){if(typeof extension==="string"){throw new Error(`Patch "${extension}": Second argument is not the patch name anymore, it should be the object containing the patched properties`);}
const description=getPatchDescription(objToPatch);description.extensions.add(extension);const properties=Object.getOwnPropertyDescriptors(extension);for(const[key,newProperty]of Object.entries(properties)){const oldProperty=Object.getOwnPropertyDescriptor(objToPatch,key);if(oldProperty){Object.defineProperty(description.skeleton,key,oldProperty);}
if(!description.originalProperties.has(key)){description.originalProperties.set(key,oldProperty);}
if(isClassPrototype(objToPatch)){newProperty.enumerable=false;}
if((newProperty.get&&1)^(newProperty.set&&1)){const ancestorProperty=findAncestorPropertyDescriptor(objToPatch,key);newProperty.get=newProperty.get??ancestorProperty?.get;newProperty.set=newProperty.set??ancestorProperty?.set;}
Object.defineProperty(objToPatch,key,newProperty);}
description.skeleton=Object.setPrototypeOf(extension,description.skeleton);return()=>{patchDescriptions.delete(objToPatch);for(const[key,property]of description.originalProperties){if(property){Object.defineProperty(objToPatch,key,property);}else{delete objToPatch[key];}}
description.extensions.delete(extension);for(const extension of description.extensions){patch(objToPatch,extension);}};}
return __exports;});;

/* /web/static/src/core/utils/reactive.js */
odoo.define('@web/core/utils/reactive',['@odoo/owl'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const Reactive=__exports.Reactive=class Reactive{constructor(){return reactive(this);}}
__exports.effect=effect;function effect(cb,deps){const reactiveDeps=reactive(deps,()=>{cb(...reactiveDeps);});cb(...reactiveDeps);}
__exports.withComputedProperties=withComputedProperties;function withComputedProperties(obj,sources,descriptor){for(const[key,compute]of Object.entries(descriptor)){effect((obj,sources)=>{obj[key]=compute.call(obj,...sources);},[obj,sources]);}
return obj;}
return __exports;});;

/* /web/static/src/core/utils/render.js */
odoo.define('@web/core/utils/render',['@odoo/owl','@web/core/assets','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{App,blockDom,Component,markup}=require("@odoo/owl");const{templates}=require("@web/core/assets");const{_t}=require("@web/core/l10n/translation");__exports.renderToElement=renderToElement;function renderToElement(template,context={}){const el=render(template,context).firstElementChild;if(el?.nextElementSibling){throw new Error(`The rendered template '${template}' contains multiple root `+`nodes that will be ignored using renderToElement, you should `+`consider using renderToFragment or refactoring the template.`);}
el?.remove();return el;}
__exports.renderToFragment=renderToFragment;function renderToFragment(template,context={}){const frag=document.createDocumentFragment();for(const el of[...render(template,context).children]){frag.appendChild(el);}
return frag;}
__exports.renderToString=renderToString;function renderToString(template,context={}){return render(template,context).innerHTML;}
let app;Object.defineProperty(renderToString,"app",{get:()=>{if(!app){app=new App(Component,{name:"renderToString",templates,translatableAttributes:["data-tooltip"],translateFn:_t,});}
return app;},});function render(template,context={}){const app=renderToString.app;const templateFn=app.getTemplate(template);const bdom=templateFn(context,{});const div=document.createElement("div");blockDom.mount(bdom,div);return div;}
__exports.renderToMarkup=renderToMarkup;function renderToMarkup(template,context={}){return markup(renderToString(template,context));}
return __exports;});;

/* /web/static/src/core/utils/scrolling.js */
odoo.define('@web/core/utils/scrolling',[],function(require){'use strict';let __exports={};__exports.closestScrollableX=closestScrollableX;function closestScrollableX(el){if(!el){return null;}
if(el.scrollWidth>el.clientWidth&&el.clientWidth>0){const overflow=getComputedStyle(el).getPropertyValue("overflow-x");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return closestScrollableX(el.parentElement);}
__exports.closestScrollableY=closestScrollableY;function closestScrollableY(el){if(!el){return null;}
if(el.scrollHeight>el.clientHeight&&el.clientHeight>0){const overflow=getComputedStyle(el).getPropertyValue("overflow-y");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return closestScrollableY(el.parentElement);}
__exports.scrollTo=scrollTo;function scrollTo(element,options={behavior:"auto",scrollable:null,isAnchor:false}){const scrollable=closestScrollableY(options.scrollable||element.parentElement);if(scrollable){const scrollBottom=scrollable.getBoundingClientRect().bottom;const scrollTop=scrollable.getBoundingClientRect().top;const elementBottom=element.getBoundingClientRect().bottom;const elementTop=element.getBoundingClientRect().top;if(elementBottom>scrollBottom&&!options.isAnchor){scrollable.scrollTo({top:scrollable.scrollTop+
elementTop-
scrollBottom+
Math.ceil(element.getBoundingClientRect().height),behavior:options.behavior,});}else if(elementTop<scrollTop||options.isAnchor){scrollable.scrollTo({top:scrollable.scrollTop-scrollTop+elementTop,behavior:options.behavior,});if(options.isAnchor){const parentScrollable=closestScrollableY(scrollable.parentElement);if(parentScrollable){scrollTo(scrollable,{behavior:options.behavior,isAnchor:true,scrollable:parentScrollable,});}}}}}
return __exports;});;

/* /web/static/src/core/utils/search.js */
odoo.define('@web/core/utils/search',['@web/core/utils/strings'],function(require){'use strict';let __exports={};const{unaccent}=require("@web/core/utils/strings");function match(pattern,strs){if(!Array.isArray(strs)){strs=[strs];}
let globalScore=0;for(const str of strs){globalScore=Math.max(globalScore,_match(pattern,str));}
return globalScore;}
function _match(pattern,str){let totalScore=0;let currentScore=0;const len=str.length;let patternIndex=0;pattern=unaccent(pattern,false);str=unaccent(str,false);for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
__exports.fuzzyLookup=fuzzyLookup;function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=match(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
__exports.fuzzyTest=fuzzyTest;function fuzzyTest(pattern,string){return _match(pattern,string)!==0;}
return __exports;});;

/* /web/static/src/core/utils/sortable.js */
odoo.define('@web/core/utils/sortable',['@web/core/utils/draggable_hook_builder','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{DRAGGED_CLASS,makeDraggableHook:nativeMakeDraggableHook,}=require("@web/core/utils/draggable_hook_builder");const{pick}=require("@web/core/utils/objects");const hookParams={name:"useSortable",acceptedParams:{groups:[String,Function],connectGroups:[Boolean,Function],clone:[Boolean],placeholderClasses:[Object],applyChangeOnDrop:[Boolean],followingElementClasses:[Object],},defaultParams:{connectGroups:false,edgeScrolling:{speed:20,threshold:60},groupSelector:null,clone:true,placeholderClasses:[],applyChangeOnDrop:false,followingElementClasses:[],},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;ctx.placeholderClone=params.clone;ctx.placeholderClasses=params.placeholderClasses;ctx.applyChangeOnDrop=params.applyChangeOnDrop;ctx.followingElementClasses=params.followingElementClasses;},onDragStart({ctx,addListener,addStyle,callHandler}){const onElementPointerEnter=(ev)=>{const element=ev.currentTarget;if(connectGroups||!groupSelector||current.group===element.closest(groupSelector)){const pos=current.placeHolder.compareDocumentPosition(element);if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);}else if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);}}
callHandler("onElementEnter",{element});};const onElementPointerLeave=(ev)=>{const element=ev.currentTarget;callHandler("onElementLeave",{element});};const onElementComplexPointerEnter=(ev)=>{if(ctx.haveAlreadyChanged){return;}
const element=ev.currentTarget;const siblingArray=[...element.parentElement.children].filter((el)=>el===current.placeHolder||(el.matches(elementSelector)&&!el.classList.contains(DRAGGED_CLASS)));const elementIndex=siblingArray.indexOf(element);const placeholderIndex=siblingArray.indexOf(current.placeHolder);const isDirectSibling=Math.abs(elementIndex-placeholderIndex)===1;if(connectGroups||!groupSelector||current.group===element.closest(groupSelector)){const pos=current.placeHolder.compareDocumentPosition(element);if(isDirectSibling){if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}else{if(pos===Node.DOCUMENT_POSITION_FOLLOWING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(pos===Node.DOCUMENT_POSITION_PRECEDING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}}
callHandler("onElementEnter",{element});};const onElementComplexPointerLeave=(ev)=>{if(ctx.haveAlreadyChanged){return;}
const element=ev.currentTarget;const elementRect=element.getBoundingClientRect();const relatedElement=ev.relatedTarget;const relatedElementRect=element.getBoundingClientRect();const siblingArray=[...element.parentElement.children].filter((el)=>el===current.placeHolder||(el.matches(elementSelector)&&!el.classList.contains(DRAGGED_CLASS)));const pointerOnSiblings=siblingArray.indexOf(relatedElement)>-1;const elementIndex=siblingArray.indexOf(element);const isFirst=elementIndex===0;const isAbove=relatedElementRect.top<=elementRect.top;const isLast=elementIndex===siblingArray.length-1;const isBelow=relatedElementRect.bottom>=elementRect.bottom;const pos=current.placeHolder.compareDocumentPosition(element);if(!pointerOnSiblings){if(isFirst&&isAbove&&pos===Node.DOCUMENT_POSITION_PRECEDING){element.before(current.placeHolder);ctx.haveAlreadyChanged=true;}else if(isLast&&isBelow&&pos===Node.DOCUMENT_POSITION_FOLLOWING){element.after(current.placeHolder);ctx.haveAlreadyChanged=true;}}
callHandler("onElementLeave",{element});};const onGroupPointerEnter=(ev)=>{const group=ev.currentTarget;group.appendChild(current.placeHolder);callHandler("onGroupEnter",{group});};const onGroupPointerLeave=(ev)=>{const group=ev.currentTarget;callHandler("onGroupLeave",{group});};const{connectGroups,current,elementSelector,groupSelector,ref}=ctx;if(ctx.placeholderClone){const{width,height}=current.elementRect;addStyle(current.placeHolder,{visibility:"hidden",display:"block",width:`${width}px`,height:`${height}px`,});}
if(connectGroups&&groupSelector){for(const siblingGroup of ref.el.querySelectorAll(groupSelector)){addListener(siblingGroup,"pointerenter",onGroupPointerEnter);addListener(siblingGroup,"pointerleave",onGroupPointerLeave);}}
for(const siblingEl of ref.el.querySelectorAll(elementSelector)){if(siblingEl!==current.element&&siblingEl!==current.placeHolder){if(ctx.placeholderClone){addListener(siblingEl,"pointerenter",onElementPointerEnter);addListener(siblingEl,"pointerleave",onElementPointerLeave);}else{addListener(siblingEl,"pointerenter",onElementComplexPointerEnter);addListener(siblingEl,"pointerleave",onElementComplexPointerLeave);}}}
current.element.after(current.placeHolder);return pick(current,"element","group");},onDrag({ctx}){ctx.haveAlreadyChanged=false;},onDragEnd({ctx}){return pick(ctx.current,"element","group");},onDrop({ctx}){const{current,groupSelector}=ctx;const previous=current.placeHolder.previousElementSibling;const next=current.placeHolder.nextElementSibling;if(previous!==current.element&&next!==current.element){const element=current.element;if(ctx.applyChangeOnDrop){if(previous){previous.after(element);}else if(next){next.before(element);}}
return{element,group:current.group,previous,next,parent:groupSelector&&current.placeHolder.closest(groupSelector),};}},onWillStartDrag({ctx,addCleanup}){const{connectGroups,current,groupSelector}=ctx;if(groupSelector){current.group=current.element.closest(groupSelector);if(!connectGroups){current.container=current.group;}}
if(ctx.placeholderClone){current.placeHolder=current.element.cloneNode(false);}else{current.placeHolder=document.createElement("div");}
current.placeHolder.classList.add(...ctx.placeholderClasses);current.element.classList.add(...ctx.followingElementClasses);addCleanup(()=>current.element.classList.remove(...ctx.followingElementClasses));addCleanup(()=>current.placeHolder.remove());return pick(current,"element","group");},};const useSortable=__exports.useSortable=(sortableParams)=>{const{setupHooks}=sortableParams;delete sortableParams.setupHooks;return nativeMakeDraggableHook({...hookParams,setupHooks})(sortableParams);};return __exports;});;

/* /web/static/src/core/utils/sortable_owl.js */
odoo.define('@web/core/utils/sortable_owl',['@odoo/owl','@web/core/utils/timing','@web/core/utils/sortable'],function(require){'use strict';let __exports={};const{onWillUnmount,reactive,useEffect,useExternalListener}=require("@odoo/owl");const{useThrottleForAnimation}=require("@web/core/utils/timing");const{useSortable:nativeUseSortable}=require("@web/core/utils/sortable");__exports.useSortable=useSortable;function useSortable(params){return nativeUseSortable({...params,setupHooks:{addListener:useExternalListener,setup:useEffect,teardown:onWillUnmount,throttle:useThrottleForAnimation,wrapState:reactive,},});}
return __exports;});;

/* /web/static/src/core/utils/sortable_service.js */
odoo.define('@web/core/utils/sortable_service',['@web/core/registry','@web/core/utils/sortable','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useSortable}=require("@web/core/utils/sortable");const{throttleForAnimation}=require("@web/core/utils/timing");const{reactive}=require("@odoo/owl");const DEFAULT_SORTABLE_ID=Symbol.for("defaultSortable");const sortableService=__exports.sortableService={start(){const boundElements=new Map();return{create:(hookParams)=>{const element=hookParams.ref.el;const sortableId=hookParams.sortableId??DEFAULT_SORTABLE_ID;if(boundElements.has(element)){const boundElement=boundElements.get(element);if(sortableId in boundElement){return{enable(){return{cleanup:boundElement[sortableId],};},};}}
const setupFunctions=new Map();const cleanupFunctions=[];const cleanup=()=>{const boundElement=boundElements.get(element);if(sortableId in boundElement){delete boundElement[sortableId];if(boundElement.length===0){boundElements.delete(element);}}
cleanupFunctions.forEach((fn)=>fn());};const setupHooks={wrapState:reactive,throttle:throttleForAnimation,addListener:(el,type,listener)=>{el.addEventListener(type,listener);cleanupFunctions.push(()=>el.removeEventListener(type,listener));},setup:(setupFn,dependenciesFn)=>setupFunctions.set(setupFn,dependenciesFn),teardown:(fn)=>cleanupFunctions.push(fn),};useSortable({setupHooks,...hookParams});const boundElement=boundElements.get(element);if(boundElement){boundElement[sortableId]=cleanup;}else{boundElements.set(element,{[sortableId]:cleanup});}
return{enable(){setupFunctions.forEach((dependenciesFn,setupFn)=>setupFn(...dependenciesFn()));return{cleanup,};},};},};},};registry.category("services").add("sortable",sortableService);return __exports;});;

/* /web/static/src/core/utils/strings.js */
odoo.define('@web/core/utils/strings',[],function(require){'use strict';let __exports={};const nbsp=__exports.nbsp="\u00a0";const escapeMethod=__exports.escapeMethod=Symbol("html");__exports.escape=escape;function escape(str){if(typeof str==="object"&&str[escapeMethod]){return str[escapeMethod]();}else{if(str===undefined){return"";}
if(typeof str==="number"){return String(str);}
[["&","&amp;"],["<","&lt;"],[">","&gt;"],["'","&#x27;"],['"',"&quot;"],["`","&#x60;"],].forEach((pairs)=>{str=String(str).replaceAll(pairs[0],pairs[1]);});return str;}}
__exports.escapeRegExp=escapeRegExp;function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
__exports.intersperse=intersperse;function intersperse(str,indices,separator=""){separator=separator||"";const result=[];let last=str.length;for(let i=0;i<indices.length;++i){let section=indices[i];if(section===-1||last<=0){break;}else if(section===0&&i===0){break;}else if(section===0){section=indices[--i];}
result.push(str.substring(last-section,last));last-=section;}
const s=str.substring(0,last);if(s){result.push(s);}
return result.reverse().join(separator);}
__exports.sprintf=sprintf;function sprintf(s,...values){if(values.length===1&&Object.prototype.toString.call(values[0])==="[object Object]"){const valuesDict=values[0];s=s.replace(/%\(([^)]+)\)s/g,(match,value)=>valuesDict[value]);}else if(values.length>0){s=s.replace(/%s/g,()=>values.shift());}
return s;}
__exports.capitalize=capitalize;function capitalize(s){return s?s[0].toUpperCase()+s.slice(1):"";}
const diacriticsMap={'\u0041':'A','\u24B6':'A','\uFF21':'A','\u00C0':'A','\u00C1':'A','\u00C2':'A','\u1EA6':'A','\u1EA4':'A','\u1EAA':'A','\u1EA8':'A','\u00C3':'A','\u0100':'A','\u0102':'A','\u1EB0':'A','\u1EAE':'A','\u1EB4':'A','\u1EB2':'A','\u0226':'A','\u01E0':'A','\u00C4':'A','\u01DE':'A','\u1EA2':'A','\u00C5':'A','\u01FA':'A','\u01CD':'A','\u0200':'A','\u0202':'A','\u1EA0':'A','\u1EAC':'A','\u1EB6':'A','\u1E00':'A','\u0104':'A','\u023A':'A','\u2C6F':'A','\uA732':'AA','\u00C6':'AE','\u01FC':'AE','\u01E2':'AE','\uA734':'AO','\uA736':'AU','\uA738':'AV','\uA73A':'AV','\uA73C':'AY','\u0042':'B','\u24B7':'B','\uFF22':'B','\u1E02':'B','\u1E04':'B','\u1E06':'B','\u0243':'B','\u0182':'B','\u0181':'B','\u0043':'C','\u24B8':'C','\uFF23':'C','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u00C7':'C','\u1E08':'C','\u0187':'C','\u023B':'C','\uA73E':'C','\u0044':'D','\u24B9':'D','\uFF24':'D','\u1E0A':'D','\u010E':'D','\u1E0C':'D','\u1E10':'D','\u1E12':'D','\u1E0E':'D','\u0110':'D','\u018B':'D','\u018A':'D','\u0189':'D','\uA779':'D','\u01F1':'DZ','\u01C4':'DZ','\u01F2':'Dz','\u01C5':'Dz','\u0045':'E','\u24BA':'E','\uFF25':'E','\u00C8':'E','\u00C9':'E','\u00CA':'E','\u1EC0':'E','\u1EBE':'E','\u1EC4':'E','\u1EC2':'E','\u1EBC':'E','\u0112':'E','\u1E14':'E','\u1E16':'E','\u0114':'E','\u0116':'E','\u00CB':'E','\u1EBA':'E','\u011A':'E','\u0204':'E','\u0206':'E','\u1EB8':'E','\u1EC6':'E','\u0228':'E','\u1E1C':'E','\u0118':'E','\u1E18':'E','\u1E1A':'E','\u0190':'E','\u018E':'E','\u0046':'F','\u24BB':'F','\uFF26':'F','\u1E1E':'F','\u0191':'F','\uA77B':'F','\u0047':'G','\u24BC':'G','\uFF27':'G','\u01F4':'G','\u011C':'G','\u1E20':'G','\u011E':'G','\u0120':'G','\u01E6':'G','\u0122':'G','\u01E4':'G','\u0193':'G','\uA7A0':'G','\uA77D':'G','\uA77E':'G','\u0048':'H','\u24BD':'H','\uFF28':'H','\u0124':'H','\u1E22':'H','\u1E26':'H','\u021E':'H','\u1E24':'H','\u1E28':'H','\u1E2A':'H','\u0126':'H','\u2C67':'H','\u2C75':'H','\uA78D':'H','\u0049':'I','\u24BE':'I','\uFF29':'I','\u00CC':'I','\u00CD':'I','\u00CE':'I','\u0128':'I','\u012A':'I','\u012C':'I','\u0130':'I','\u00CF':'I','\u1E2E':'I','\u1EC8':'I','\u01CF':'I','\u0208':'I','\u020A':'I','\u1ECA':'I','\u012E':'I','\u1E2C':'I','\u0197':'I','\u004A':'J','\u24BF':'J','\uFF2A':'J','\u0134':'J','\u0248':'J','\u004B':'K','\u24C0':'K','\uFF2B':'K','\u1E30':'K','\u01E8':'K','\u1E32':'K','\u0136':'K','\u1E34':'K','\u0198':'K','\u2C69':'K','\uA740':'K','\uA742':'K','\uA744':'K','\uA7A2':'K','\u004C':'L','\u24C1':'L','\uFF2C':'L','\u013F':'L','\u0139':'L','\u013D':'L','\u1E36':'L','\u1E38':'L','\u013B':'L','\u1E3C':'L','\u1E3A':'L','\u0141':'L','\u023D':'L','\u2C62':'L','\u2C60':'L','\uA748':'L','\uA746':'L','\uA780':'L','\u01C7':'LJ','\u01C8':'Lj','\u004D':'M','\u24C2':'M','\uFF2D':'M','\u1E3E':'M','\u1E40':'M','\u1E42':'M','\u2C6E':'M','\u019C':'M','\u004E':'N','\u24C3':'N','\uFF2E':'N','\u01F8':'N','\u0143':'N','\u00D1':'N','\u1E44':'N','\u0147':'N','\u1E46':'N','\u0145':'N','\u1E4A':'N','\u1E48':'N','\u0220':'N','\u019D':'N','\uA790':'N','\uA7A4':'N','\u01CA':'NJ','\u01CB':'Nj','\u004F':'O','\u24C4':'O','\uFF2F':'O','\u00D2':'O','\u00D3':'O','\u00D4':'O','\u1ED2':'O','\u1ED0':'O','\u1ED6':'O','\u1ED4':'O','\u00D5':'O','\u1E4C':'O','\u022C':'O','\u1E4E':'O','\u014C':'O','\u1E50':'O','\u1E52':'O','\u014E':'O','\u022E':'O','\u0230':'O','\u00D6':'O','\u022A':'O','\u1ECE':'O','\u0150':'O','\u01D1':'O','\u020C':'O','\u020E':'O','\u01A0':'O','\u1EDC':'O','\u1EDA':'O','\u1EE0':'O','\u1EDE':'O','\u1EE2':'O','\u1ECC':'O','\u1ED8':'O','\u01EA':'O','\u01EC':'O','\u00D8':'O','\u01FE':'O','\u0186':'O','\u019F':'O','\uA74A':'O','\uA74C':'O','\u01A2':'OI','\uA74E':'OO','\u0222':'OU','\u0050':'P','\u24C5':'P','\uFF30':'P','\u1E54':'P','\u1E56':'P','\u01A4':'P','\u2C63':'P','\uA750':'P','\uA752':'P','\uA754':'P','\u0051':'Q','\u24C6':'Q','\uFF31':'Q','\uA756':'Q','\uA758':'Q','\u024A':'Q','\u0052':'R','\u24C7':'R','\uFF32':'R','\u0154':'R','\u1E58':'R','\u0158':'R','\u0210':'R','\u0212':'R','\u1E5A':'R','\u1E5C':'R','\u0156':'R','\u1E5E':'R','\u024C':'R','\u2C64':'R','\uA75A':'R','\uA7A6':'R','\uA782':'R','\u0053':'S','\u24C8':'S','\uFF33':'S','\u1E9E':'S','\u015A':'S','\u1E64':'S','\u015C':'S','\u1E60':'S','\u0160':'S','\u1E66':'S','\u1E62':'S','\u1E68':'S','\u0218':'S','\u015E':'S','\u2C7E':'S','\uA7A8':'S','\uA784':'S','\u0054':'T','\u24C9':'T','\uFF34':'T','\u1E6A':'T','\u0164':'T','\u1E6C':'T','\u021A':'T','\u0162':'T','\u1E70':'T','\u1E6E':'T','\u0166':'T','\u01AC':'T','\u01AE':'T','\u023E':'T','\uA786':'T','\uA728':'TZ','\u0055':'U','\u24CA':'U','\uFF35':'U','\u00D9':'U','\u00DA':'U','\u00DB':'U','\u0168':'U','\u1E78':'U','\u016A':'U','\u1E7A':'U','\u016C':'U','\u00DC':'U','\u01DB':'U','\u01D7':'U','\u01D5':'U','\u01D9':'U','\u1EE6':'U','\u016E':'U','\u0170':'U','\u01D3':'U','\u0214':'U','\u0216':'U','\u01AF':'U','\u1EEA':'U','\u1EE8':'U','\u1EEE':'U','\u1EEC':'U','\u1EF0':'U','\u1EE4':'U','\u1E72':'U','\u0172':'U','\u1E76':'U','\u1E74':'U','\u0244':'U','\u0056':'V','\u24CB':'V','\uFF36':'V','\u1E7C':'V','\u1E7E':'V','\u01B2':'V','\uA75E':'V','\u0245':'V','\uA760':'VY','\u0057':'W','\u24CC':'W','\uFF37':'W','\u1E80':'W','\u1E82':'W','\u0174':'W','\u1E86':'W','\u1E84':'W','\u1E88':'W','\u2C72':'W','\u0058':'X','\u24CD':'X','\uFF38':'X','\u1E8A':'X','\u1E8C':'X','\u0059':'Y','\u24CE':'Y','\uFF39':'Y','\u1EF2':'Y','\u00DD':'Y','\u0176':'Y','\u1EF8':'Y','\u0232':'Y','\u1E8E':'Y','\u0178':'Y','\u1EF6':'Y','\u1EF4':'Y','\u01B3':'Y','\u024E':'Y','\u1EFE':'Y','\u005A':'Z','\u24CF':'Z','\uFF3A':'Z','\u0179':'Z','\u1E90':'Z','\u017B':'Z','\u017D':'Z','\u1E92':'Z','\u1E94':'Z','\u01B5':'Z','\u0224':'Z','\u2C7F':'Z','\u2C6B':'Z','\uA762':'Z','\u0061':'a','\u24D0':'a','\uFF41':'a','\u1E9A':'a','\u00E0':'a','\u00E1':'a','\u00E2':'a','\u1EA7':'a','\u1EA5':'a','\u1EAB':'a','\u1EA9':'a','\u00E3':'a','\u0101':'a','\u0103':'a','\u1EB1':'a','\u1EAF':'a','\u1EB5':'a','\u1EB3':'a','\u0227':'a','\u01E1':'a','\u00E4':'a','\u01DF':'a','\u1EA3':'a','\u00E5':'a','\u01FB':'a','\u01CE':'a','\u0201':'a','\u0203':'a','\u1EA1':'a','\u1EAD':'a','\u1EB7':'a','\u1E01':'a','\u0105':'a','\u2C65':'a','\u0250':'a','\uA733':'aa','\u00E6':'ae','\u01FD':'ae','\u01E3':'ae','\uA735':'ao','\uA737':'au','\uA739':'av','\uA73B':'av','\uA73D':'ay','\u0062':'b','\u24D1':'b','\uFF42':'b','\u1E03':'b','\u1E05':'b','\u1E07':'b','\u0180':'b','\u0183':'b','\u0253':'b','\u0063':'c','\u24D2':'c','\uFF43':'c','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u00E7':'c','\u1E09':'c','\u0188':'c','\u023C':'c','\uA73F':'c','\u2184':'c','\u0064':'d','\u24D3':'d','\uFF44':'d','\u1E0B':'d','\u010F':'d','\u1E0D':'d','\u1E11':'d','\u1E13':'d','\u1E0F':'d','\u0111':'d','\u018C':'d','\u0256':'d','\u0257':'d','\uA77A':'d','\u01F3':'dz','\u01C6':'dz','\u0065':'e','\u24D4':'e','\uFF45':'e','\u00E8':'e','\u00E9':'e','\u00EA':'e','\u1EC1':'e','\u1EBF':'e','\u1EC5':'e','\u1EC3':'e','\u1EBD':'e','\u0113':'e','\u1E15':'e','\u1E17':'e','\u0115':'e','\u0117':'e','\u00EB':'e','\u1EBB':'e','\u011B':'e','\u0205':'e','\u0207':'e','\u1EB9':'e','\u1EC7':'e','\u0229':'e','\u1E1D':'e','\u0119':'e','\u1E19':'e','\u1E1B':'e','\u0247':'e','\u025B':'e','\u01DD':'e','\u0066':'f','\u24D5':'f','\uFF46':'f','\u1E1F':'f','\u0192':'f','\uA77C':'f','\u0067':'g','\u24D6':'g','\uFF47':'g','\u01F5':'g','\u011D':'g','\u1E21':'g','\u011F':'g','\u0121':'g','\u01E7':'g','\u0123':'g','\u01E5':'g','\u0260':'g','\uA7A1':'g','\u1D79':'g','\uA77F':'g','\u0068':'h','\u24D7':'h','\uFF48':'h','\u0125':'h','\u1E23':'h','\u1E27':'h','\u021F':'h','\u1E25':'h','\u1E29':'h','\u1E2B':'h','\u1E96':'h','\u0127':'h','\u2C68':'h','\u2C76':'h','\u0265':'h','\u0195':'hv','\u0069':'i','\u24D8':'i','\uFF49':'i','\u00EC':'i','\u00ED':'i','\u00EE':'i','\u0129':'i','\u012B':'i','\u012D':'i','\u00EF':'i','\u1E2F':'i','\u1EC9':'i','\u01D0':'i','\u0209':'i','\u020B':'i','\u1ECB':'i','\u012F':'i','\u1E2D':'i','\u0268':'i','\u0131':'i','\u006A':'j','\u24D9':'j','\uFF4A':'j','\u0135':'j','\u01F0':'j','\u0249':'j','\u006B':'k','\u24DA':'k','\uFF4B':'k','\u1E31':'k','\u01E9':'k','\u1E33':'k','\u0137':'k','\u1E35':'k','\u0199':'k','\u2C6A':'k','\uA741':'k','\uA743':'k','\uA745':'k','\uA7A3':'k','\u006C':'l','\u24DB':'l','\uFF4C':'l','\u0140':'l','\u013A':'l','\u013E':'l','\u1E37':'l','\u1E39':'l','\u013C':'l','\u1E3D':'l','\u1E3B':'l','\u017F':'l','\u0142':'l','\u019A':'l','\u026B':'l','\u2C61':'l','\uA749':'l','\uA781':'l','\uA747':'l','\u01C9':'lj','\u006D':'m','\u24DC':'m','\uFF4D':'m','\u1E3F':'m','\u1E41':'m','\u1E43':'m','\u0271':'m','\u026F':'m','\u006E':'n','\u24DD':'n','\uFF4E':'n','\u01F9':'n','\u0144':'n','\u00F1':'n','\u1E45':'n','\u0148':'n','\u1E47':'n','\u0146':'n','\u1E4B':'n','\u1E49':'n','\u019E':'n','\u0272':'n','\u0149':'n','\uA791':'n','\uA7A5':'n','\u01CC':'nj','\u006F':'o','\u24DE':'o','\uFF4F':'o','\u00F2':'o','\u00F3':'o','\u00F4':'o','\u1ED3':'o','\u1ED1':'o','\u1ED7':'o','\u1ED5':'o','\u00F5':'o','\u1E4D':'o','\u022D':'o','\u1E4F':'o','\u014D':'o','\u1E51':'o','\u1E53':'o','\u014F':'o','\u022F':'o','\u0231':'o','\u00F6':'o','\u022B':'o','\u1ECF':'o','\u0151':'o','\u01D2':'o','\u020D':'o','\u020F':'o','\u01A1':'o','\u1EDD':'o','\u1EDB':'o','\u1EE1':'o','\u1EDF':'o','\u1EE3':'o','\u1ECD':'o','\u1ED9':'o','\u01EB':'o','\u01ED':'o','\u00F8':'o','\u01FF':'o','\u0254':'o','\uA74B':'o','\uA74D':'o','\u0275':'o','\u01A3':'oi','\u0223':'ou','\uA74F':'oo','\u0070':'p','\u24DF':'p','\uFF50':'p','\u1E55':'p','\u1E57':'p','\u01A5':'p','\u1D7D':'p','\uA751':'p','\uA753':'p','\uA755':'p','\u0071':'q','\u24E0':'q','\uFF51':'q','\u024B':'q','\uA757':'q','\uA759':'q','\u0072':'r','\u24E1':'r','\uFF52':'r','\u0155':'r','\u1E59':'r','\u0159':'r','\u0211':'r','\u0213':'r','\u1E5B':'r','\u1E5D':'r','\u0157':'r','\u1E5F':'r','\u024D':'r','\u027D':'r','\uA75B':'r','\uA7A7':'r','\uA783':'r','\u0073':'s','\u24E2':'s','\uFF53':'s','\u00DF':'s','\u015B':'s','\u1E65':'s','\u015D':'s','\u1E61':'s','\u0161':'s','\u1E67':'s','\u1E63':'s','\u1E69':'s','\u0219':'s','\u015F':'s','\u023F':'s','\uA7A9':'s','\uA785':'s','\u1E9B':'s','\u0074':'t','\u24E3':'t','\uFF54':'t','\u1E6B':'t','\u1E97':'t','\u0165':'t','\u1E6D':'t','\u021B':'t','\u0163':'t','\u1E71':'t','\u1E6F':'t','\u0167':'t','\u01AD':'t','\u0288':'t','\u2C66':'t','\uA787':'t','\uA729':'tz','\u0075':'u','\u24E4':'u','\uFF55':'u','\u00F9':'u','\u00FA':'u','\u00FB':'u','\u0169':'u','\u1E79':'u','\u016B':'u','\u1E7B':'u','\u016D':'u','\u00FC':'u','\u01DC':'u','\u01D8':'u','\u01D6':'u','\u01DA':'u','\u1EE7':'u','\u016F':'u','\u0171':'u','\u01D4':'u','\u0215':'u','\u0217':'u','\u01B0':'u','\u1EEB':'u','\u1EE9':'u','\u1EEF':'u','\u1EED':'u','\u1EF1':'u','\u1EE5':'u','\u1E73':'u','\u0173':'u','\u1E77':'u','\u1E75':'u','\u0289':'u','\u0076':'v','\u24E5':'v','\uFF56':'v','\u1E7D':'v','\u1E7F':'v','\u028B':'v','\uA75F':'v','\u028C':'v','\uA761':'vy','\u0077':'w','\u24E6':'w','\uFF57':'w','\u1E81':'w','\u1E83':'w','\u0175':'w','\u1E87':'w','\u1E85':'w','\u1E98':'w','\u1E89':'w','\u2C73':'w','\u0078':'x','\u24E7':'x','\uFF58':'x','\u1E8B':'x','\u1E8D':'x','\u0079':'y','\u24E8':'y','\uFF59':'y','\u1EF3':'y','\u00FD':'y','\u0177':'y','\u1EF9':'y','\u0233':'y','\u1E8F':'y','\u00FF':'y','\u1EF7':'y','\u1E99':'y','\u1EF5':'y','\u01B4':'y','\u024F':'y','\u1EFF':'y','\u007A':'z','\u24E9':'z','\uFF5A':'z','\u017A':'z','\u1E91':'z','\u017C':'z','\u017E':'z','\u1E93':'z','\u1E95':'z','\u01B6':'z','\u0225':'z','\u0240':'z','\u2C6C':'z','\uA763':'z',};__exports.unaccent=unaccent;function unaccent(str,caseSensitive){str=str.replace(/[^\u0000-\u007E]/g,function(accented){return diacriticsMap[accented]||accented;});return caseSensitive?str:str.toLowerCase();}
__exports.isEmail=isEmail;function isEmail(value){const re=/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i;return re.test(value);}
return __exports;});;

/* /web/static/src/core/utils/timing.js */
odoo.define('@web/core/utils/timing',['@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{onWillUnmount,useComponent}=require("@odoo/owl");__exports.batched=batched;function batched(callback,synchronize=()=>Promise.resolve()){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await synchronize();scheduled=false;callback(...args);}};}
__exports.debounce=debounce;function debounce(func,delay,options){let handle;const funcName=func.name?func.name+" (debounce)":"debounce";const useAnimationFrame=delay==="animationFrame";const setFnName=useAnimationFrame?"requestAnimationFrame":"setTimeout";const clearFnName=useAnimationFrame?"cancelAnimationFrame":"clearTimeout";let lastArgs;let leading=false;let trailing=true;if(typeof options==="boolean"){leading=options;trailing=!options;}else if(options){leading=options.leading??leading;trailing=options.trailing??trailing;}
return Object.assign({[funcName](...args){return new Promise((resolve)=>{if(leading&&!handle){Promise.resolve(func.apply(this,args)).then(resolve);}else{lastArgs=args;}
browser[clearFnName](handle);handle=browser[setFnName](()=>{handle=null;if(trailing&&lastArgs){Promise.resolve(func.apply(this,lastArgs)).then(resolve);lastArgs=null;}},delay);});},}[funcName],{cancel(execNow=false){browser[clearFnName](handle);if(execNow&&lastArgs){func.apply(this,lastArgs);}},});}
__exports.setRecurringAnimationFrame=setRecurringAnimationFrame;function setRecurringAnimationFrame(callback){const handler=(timestamp)=>{callback(timestamp-lastTimestamp);lastTimestamp=timestamp;handle=browser.requestAnimationFrame(handler);};const stop=()=>{browser.cancelAnimationFrame(handle);};let lastTimestamp=browser.performance.now();let handle=browser.requestAnimationFrame(handler);return stop;}
__exports.throttleForAnimation=throttleForAnimation;function throttleForAnimation(func){let handle=null;const calls=new Set();const funcName=func.name?`${func.name} (throttleForAnimation)`:"throttleForAnimation";const pending=()=>{if(calls.size){handle=browser.requestAnimationFrame(pending);const{args,resolve}=[...calls].pop();calls.clear();Promise.resolve(func.apply(this,args)).then(resolve);}else{handle=null;}};return Object.assign({[funcName](...args){return new Promise((resolve)=>{const isNew=handle===null;if(isNew){handle=browser.requestAnimationFrame(pending);Promise.resolve(func.apply(this,args)).then(resolve);}else{calls.add({args,resolve});}});},}[funcName],{cancel(){browser.cancelAnimationFrame(handle);calls.clear();handle=null;},});}
__exports.useDebounced=useDebounced;function useDebounced(callback,delay,{execBeforeUnmount=false,immediate=false}={}){const component=useComponent();const debounced=debounce(callback.bind(component),delay,immediate);onWillUnmount(()=>debounced.cancel(execBeforeUnmount));return debounced;}
__exports.useThrottleForAnimation=useThrottleForAnimation;function useThrottleForAnimation(func){const component=useComponent();const throttledForAnimation=throttleForAnimation(func.bind(component));onWillUnmount(()=>throttledForAnimation.cancel());return throttledForAnimation;}
return __exports;});;

/* /web/static/src/core/utils/ui.js */
odoo.define('@web/core/utils/ui',[],function(require){'use strict';let __exports={};__exports.closest=closest;function closest(elements,targetPos){let closestEl=null;let closestDistance=Infinity;for(const el of elements){const rect=el.getBoundingClientRect();const distance=getQuadrance(rect,targetPos);if(!closestEl||distance<closestDistance){closestEl=el;closestDistance=distance;}}
return closestEl;}
__exports.isVisible=isVisible;function isVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0&&el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0&&rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports._legacyIsVisible=_legacyIsVisible;function _legacyIsVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0||el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0||rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports.getQuadrance=getQuadrance;function getQuadrance(rect,pos){let q=0;if(pos.x<rect.x){q+=(rect.x-pos.x)**2;}else if(rect.x+rect.width<pos.x){q+=(pos.x-(rect.x+rect.width))**2;}
if(pos.y<rect.y){q+=(rect.y-pos.y)**2;}else if(rect.y+rect.height<pos.y){q+=(pos.y-(rect.y+rect.height))**2;}
return q;}
__exports.getVisibleElements=getVisibleElements;function getVisibleElements(activeElement,selector){const visibleElements=[];const elements=activeElement.querySelectorAll(selector);for(const el of elements){if(isVisible(el)){visibleElements.push(el);}}
return visibleElements;}
__exports.touching=touching;function touching(elements,targetRect){const r1={x:0,y:0,width:0,height:0,...targetRect};return[...elements].filter((el)=>{const r2=el.getBoundingClientRect();return(r2.x+r2.width>=r1.x&&r2.x<=r1.x+r1.width&&r2.y+r2.height>=r1.y&&r2.y<=r1.y+r1.height);});}
const TABABLE_SELECTOR=["[tabindex]","a","area","button","frame","iframe","input","object","select","textarea","details > summary:nth-child(1)",].map((sel)=>`${sel}:not([tabindex="-1"]):not(:disabled)`).join(",");__exports.getTabableElements=getTabableElements;function getTabableElements(container=document.body){const elements=[...container.querySelectorAll(TABABLE_SELECTOR)].filter(isVisible);const byTabIndex={};for(const el of[...elements]){if(!byTabIndex[el.tabIndex]){byTabIndex[el.tabIndex]=[];}
byTabIndex[el.tabIndex].push(el);}
const withTabIndexZero=byTabIndex[0]||[];delete byTabIndex[0];return[...Object.values(byTabIndex).flat(),...withTabIndexZero];}
__exports.getNextTabableElement=getNextTabableElement;function getNextTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[0]:tabableElements[index+1]||null;}
__exports.getPreviousTabableElement=getPreviousTabableElement;function getPreviousTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[tabableElements.length-1]:tabableElements[index-1]||null;}
return __exports;});;

/* /web/static/src/core/utils/urls.js */
odoo.define('@web/core/utils/urls',['@web/session','@web/core/browser/browser'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const RedirectionError=__exports.RedirectionError=class RedirectionError extends Error{}
__exports.objectToUrlEncodedString=objectToUrlEncodedString;function objectToUrlEncodedString(obj){return Object.entries(obj).map(([k,v])=>`${encodeURIComponent(k)}=${encodeURIComponent(v || "")}`).join("&");}
__exports.getOrigin=getOrigin;function getOrigin(origin){if(origin){origin=origin.replace(/\/+$/,"");}else{const{host,protocol}=browser.location;origin=`${protocol}//${host}`;}
return origin;}
__exports.url=url;function url(route,queryParams,options={}){const origin=getOrigin(options.origin??session.origin);if(!route){return origin;}
let queryString=objectToUrlEncodedString(queryParams||{});queryString=queryString.length>0?`?${queryString}`:queryString;let prefix=["http://","https://","//"].some((el)=>route.length>=el.length&&route.slice(0,el.length)===el);prefix=prefix?"":origin;return`${prefix}${route}${queryString}`;}
__exports.getDataURLFromFile=getDataURLFromFile;function getDataURLFromFile(file){if(!file){return Promise.reject();}
return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{if(reader.result==="data:"){resolve(`data:${file.type};base64,`);}else{resolve(reader.result);}});reader.addEventListener("abort",reject);reader.addEventListener("error",reject);reader.readAsDataURL(file);});}
__exports.redirect=redirect;function redirect(url){const{origin,pathname}=browser.location;const _url=new URL(url,`${origin}${pathname}`);if(_url.origin!==origin){throw new RedirectionError("Can't redirect to another origin");}
browser.location=_url.href;}
return __exports;});;

/* /web/static/src/core/utils/xml.js */
odoo.define('@web/core/utils/xml',[],function(require){'use strict';let __exports={};const serializer=new XMLSerializer();const parser=new DOMParser();const xmlDocument=parser.parseFromString("<templates/>","text/xml");function hasParsingError(parsedDocument){return parsedDocument.getElementsByTagName("parsererror").length>0;}
__exports.parseXML=parseXML;function parseXML(str){const xml=parser.parseFromString(str,"text/xml");if(hasParsingError(xml)){throw new Error(`An error occured while parsing ${str}: ${xml.getElementsByTagName("parsererror")}`);}
return xml.documentElement;}
__exports.serializeXML=serializeXML;function serializeXML(xml){return serializer.serializeToString(xml);}
__exports.visitXML=visitXML;function visitXML(xml,callback){const visit=(el)=>{if(el){let didVisitChildren=false;const visitChildren=()=>{for(const child of el.children){visit(child);}
didVisitChildren=true;};const shouldVisitChildren=callback(el,visitChildren);if(shouldVisitChildren!==false&&!didVisitChildren){visitChildren();}}};const xmlDoc=typeof xml==="string"?parseXML(xml):xml;visit(xmlDoc);}
__exports.append=append;function append(parent,node){const nodes=Array.isArray(node)?node:[node];parent.append(...nodes.filter(Boolean));return parent;}
__exports.combineAttributes=combineAttributes;function combineAttributes(el,attr,parts,glue=" "){const allValues=[];if(el.hasAttribute(attr)){allValues.push(el.getAttribute(attr));}
parts=Array.isArray(parts)?parts:[parts];parts=parts.filter((part)=>!!part);allValues.push(...parts);el.setAttribute(attr,allValues.join(glue));}
__exports.createElement=createElement;function createElement(tagName,...args){const el=xmlDocument.createElement(tagName);for(const arg of args){if(!arg){continue;}
if(Symbol.iterator in arg){el.append(...arg);}else if(typeof arg==="object"){for(const name in arg){el.setAttribute(name,arg[name]);}}}
return el;}
__exports.createTextNode=createTextNode;function createTextNode(data){return xmlDocument.createTextNode(data);}
__exports.extractAttributes=extractAttributes;function extractAttributes(el,attributes){const attrs=Object.create(null);for(const attr of attributes){attrs[attr]=el.getAttribute(attr)||"";el.removeAttribute(attr);}
return attrs;}
__exports.getTag=getTag;function getTag(node,lower=false){const tag=(node&&node.nodeName)||"";return lower?tag.toLowerCase():tag;}
__exports.setAttributes=setAttributes;function setAttributes(node,attributes){for(const[name,value]of Object.entries(attributes)){node.setAttribute(name,value);}}
return __exports;});;

/* /web/static/src/core/virtual_hook.js */
odoo.define('@web/core/virtual_hook',['@odoo/owl','@web/core/utils/arrays','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{onWillRender,onWillStart,toRaw,useEffect,useExternalListener,useState,}=require("@odoo/owl");const{shallowEqual}=require("@web/core/utils/arrays");const{useThrottleForAnimation}=require("@web/core/utils/timing");__exports.useVirtual=useVirtual;function useVirtual({getItems,scrollableRef,initialScroll,getItemHeight}){const computeVirtualItems=()=>{const{items,scroll}=current;const yStart=scroll.top-window.innerHeight;const yEnd=scroll.top+2*window.innerHeight;let[startIndex,endIndex]=[0,0];let currentTop=0;for(const item of items){const height=getItemHeight(item);if(currentTop+height<yStart){startIndex++;endIndex++;}else if(currentTop+height<=yEnd+height){endIndex++;}else{break;}
currentTop+=height;}
const prevItems=toRaw(virtualItems);const newItems=items.slice(startIndex,endIndex);if(!shallowEqual(prevItems,newItems)){virtualItems.length=0;virtualItems.push(...newItems);}};const current={items:getItems(),scroll:{top:0,...initialScroll},};const virtualItems=useState([]);onWillStart(computeVirtualItems);onWillRender(()=>{const previousItems=current.items;current.items=getItems();if(!shallowEqual(previousItems,current.items)){computeVirtualItems();}});const throttledCompute=useThrottleForAnimation(computeVirtualItems);const scrollListener=(ev)=>{current.scroll.top=ev.target.scrollTop;throttledCompute();};useExternalListener(window,"resize",throttledCompute);useEffect((el)=>{if(el){el.addEventListener("scroll",scrollListener);return()=>el.removeEventListener("scroll",scrollListener);}},()=>[scrollableRef.el]);return virtualItems;}
return __exports;});;

/* /web/static/src/polyfills/clipboard.js */
odoo.define('@web/polyfills/clipboard',[],function(require){'use strict';let __exports={};class ClipboardItemImpl{constructor(items,options={}){this.items=items;this.options=options;}
get presentationStyle(){return this.options.presentationStyle;}
get types(){return Object.keys(this.items);}
getType(type){return this.items[type];}}
function blobToStr(blob){return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{const{result}=reader;if(typeof result==="string"){resolve(result);}else{reject("Cannot read Blob as String");}});reader.addEventListener("error",()=>{reject("Cannot read Blob");});reader.readAsText(blob);});}
async function stringify(item){const strItem={};for(const type of item.types){strItem[type]=await blobToStr(item.getType(type));}
return strItem;}
async function write(items){if(!items[0].getType("text/plain")){throw new Error(`Calling clipboard.write() without a "text/plain" type may result in an empty clipboard on some platforms.`);}
const strItem=await stringify(items[0]);const stubContainer=document.createElement("div");const shadowContainer=stubContainer.attachShadow({mode:"open"});const stub=document.createElement("span");stub.innerText=strItem["text/plain"];shadowContainer.appendChild(stub);document.body.appendChild(stubContainer);const selection=document.getSelection();const range=document.createRange();range.selectNodeContents(stub);selection.removeAllRanges();selection.addRange(range);const onCopy=(ev)=>{for(const type in strItem){ev.clipboardData.setData(type,strItem[type]);}
ev.preventDefault();};document.addEventListener("copy",onCopy);let result;try{result=document.execCommand("copy");}finally{document.removeEventListener("copy",onCopy);}
selection.removeAllRanges();document.body.removeChild(stubContainer);return result;}
if(window.navigator.clipboard){if(!window.navigator.clipboard.write){window.navigator.clipboard.write=write.bind(window);}
if(!window.ClipboardItem){window.ClipboardItem=ClipboardItemImpl;}}
return __exports;});;

/* /web/static/lib/jquery/jquery.js */
(function(global,factory){"use strict";if(typeof module==="object"&&typeof module.exports==="object"){module.exports=global.document?factory(global,true):function(w){if(!w.document){throw new Error("jQuery requires a window with a document");}
return factory(w);};}else{factory(global);}})(typeof window!=="undefined"?window:this,function(window,noGlobal){"use strict";var arr=[];var getProto=Object.getPrototypeOf;var slice=arr.slice;var flat=arr.flat?function(array){return arr.flat.call(array);}:function(array){return arr.concat.apply([],array);};var push=arr.push;var indexOf=arr.indexOf;var class2type={};var toString=class2type.toString;var hasOwn=class2type.hasOwnProperty;var fnToString=hasOwn.toString;var ObjectFunctionString=fnToString.call(Object);var support={};var isFunction=function isFunction(obj){return typeof obj==="function"&&typeof obj.nodeType!=="number"&&typeof obj.item!=="function";};var isWindow=function isWindow(obj){return obj!=null&&obj===obj.window;};var document=window.document;var preservedScriptAttributes={type:true,src:true,nonce:true,noModule:true};function DOMEval(code,node,doc){doc=doc||document;var i,val,script=doc.createElement("script");script.text=code;if(node){for(i in preservedScriptAttributes){val=node[i]||node.getAttribute&&node.getAttribute(i);if(val){script.setAttribute(i,val);}}}
doc.head.appendChild(script).parentNode.removeChild(script);}
function toType(obj){if(obj==null){return obj+"";}
return typeof obj==="object"||typeof obj==="function"?class2type[toString.call(obj)]||"object":typeof obj;}
var
version="3.6.3",jQuery=function(selector,context){return new jQuery.fn.init(selector,context);};jQuery.fn=jQuery.prototype={jquery:version,constructor:jQuery,length:0,toArray:function(){return slice.call(this);},get:function(num){if(num==null){return slice.call(this);}
return num<0?this[num+this.length]:this[num];},pushStack:function(elems){var ret=jQuery.merge(this.constructor(),elems);ret.prevObject=this;return ret;},each:function(callback){return jQuery.each(this,callback);},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},slice:function(){return this.pushStack(slice.apply(this,arguments));},first:function(){return this.eq(0);},last:function(){return this.eq(-1);},even:function(){return this.pushStack(jQuery.grep(this,function(_elem,i){return(i+1)%2;}));},odd:function(){return this.pushStack(jQuery.grep(this,function(_elem,i){return i%2;}));},eq:function(i){var len=this.length,j=+i+(i<0?len:0);return this.pushStack(j>=0&&j<len?[this[j]]:[]);},end:function(){return this.prevObject||this.constructor();},push:push,sort:arr.sort,splice:arr.splice};jQuery.extend=jQuery.fn.extend=function(){var options,name,src,copy,copyIsArray,clone,target=arguments[0]||{},i=1,length=arguments.length,deep=false;if(typeof target==="boolean"){deep=target;target=arguments[i]||{};i++;}
if(typeof target!=="object"&&!isFunction(target)){target={};}
if(i===length){target=this;i--;}
for(;i<length;i++){if((options=arguments[i])!=null){for(name in options){copy=options[name];if(name==="__proto__"||target===copy){continue;}
if(deep&&copy&&(jQuery.isPlainObject(copy)||(copyIsArray=Array.isArray(copy)))){src=target[name];if(copyIsArray&&!Array.isArray(src)){clone=[];}else if(!copyIsArray&&!jQuery.isPlainObject(src)){clone={};}else{clone=src;}
copyIsArray=false;target[name]=jQuery.extend(deep,clone,copy);}else if(copy!==undefined){target[name]=copy;}}}}
return target;};jQuery.extend({expando:"jQuery"+(version+Math.random()).replace(/\D/g,""),isReady:true,error:function(msg){throw new Error(msg);},noop:function(){},isPlainObject:function(obj){var proto,Ctor;if(!obj||toString.call(obj)!=="[object Object]"){return false;}
proto=getProto(obj);if(!proto){return true;}
Ctor=hasOwn.call(proto,"constructor")&&proto.constructor;return typeof Ctor==="function"&&fnToString.call(Ctor)===ObjectFunctionString;},isEmptyObject:function(obj){var name;for(name in obj){return false;}
return true;},globalEval:function(code,options,doc){DOMEval(code,{nonce:options&&options.nonce},doc);},each:function(obj,callback){var length,i=0;if(isArrayLike(obj)){length=obj.length;for(;i<length;i++){if(callback.call(obj[i],i,obj[i])===false){break;}}}else{for(i in obj){if(callback.call(obj[i],i,obj[i])===false){break;}}}
return obj;},makeArray:function(arr,results){var ret=results||[];if(arr!=null){if(isArrayLike(Object(arr))){jQuery.merge(ret,typeof arr==="string"?[arr]:arr);}else{push.call(ret,arr);}}
return ret;},inArray:function(elem,arr,i){return arr==null?-1:indexOf.call(arr,elem,i);},merge:function(first,second){var len=+second.length,j=0,i=first.length;for(;j<len;j++){first[i++]=second[j];}
first.length=i;return first;},grep:function(elems,callback,invert){var callbackInverse,matches=[],i=0,length=elems.length,callbackExpect=!invert;for(;i<length;i++){callbackInverse=!callback(elems[i],i);if(callbackInverse!==callbackExpect){matches.push(elems[i]);}}
return matches;},map:function(elems,callback,arg){var length,value,i=0,ret=[];if(isArrayLike(elems)){length=elems.length;for(;i<length;i++){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}else{for(i in elems){value=callback(elems[i],i,arg);if(value!=null){ret.push(value);}}}
return flat(ret);},guid:1,support:support});if(typeof Symbol==="function"){jQuery.fn[Symbol.iterator]=arr[Symbol.iterator];}
jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(_i,name){class2type["[object "+name+"]"]=name.toLowerCase();});function isArrayLike(obj){var length=!!obj&&"length"in obj&&obj.length,type=toType(obj);if(isFunction(obj)||isWindow(obj)){return false;}
return type==="array"||length===0||typeof length==="number"&&length>0&&(length-1)in obj;}
var Sizzle=(function(window){var i,support,Expr,getText,isXML,tokenize,compile,select,outermostContext,sortInput,hasDuplicate,setDocument,document,docElem,documentIsHTML,rbuggyQSA,rbuggyMatches,matches,contains,expando="sizzle"+1*new Date(),preferredDoc=window.document,dirruns=0,done=0,classCache=createCache(),tokenCache=createCache(),compilerCache=createCache(),nonnativeSelectorCache=createCache(),sortOrder=function(a,b){if(a===b){hasDuplicate=true;}
return 0;},hasOwn=({}).hasOwnProperty,arr=[],pop=arr.pop,pushNative=arr.push,push=arr.push,slice=arr.slice,indexOf=function(list,elem){var i=0,len=list.length;for(;i<len;i++){if(list[i]===elem){return i;}}
return-1;},booleans="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|"+"ismap|loop|multiple|open|readonly|required|scoped",whitespace="[\\x20\\t\\r\\n\\f]",identifier="(?:\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",attributes="\\["+whitespace+"*("+identifier+")(?:"+whitespace+"*([*^$|!~]?=)"+whitespace+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+identifier+"))|)"+
whitespace+"*\\]",pseudos=":("+identifier+")(?:\\(("+"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|"+"((?:\\\\.|[^\\\\()[\\]]|"+attributes+")*)|"+".*"+")\\)|)",rwhitespace=new RegExp(whitespace+"+","g"),rtrim=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+
whitespace+"+$","g"),rcomma=new RegExp("^"+whitespace+"*,"+whitespace+"*"),rcombinators=new RegExp("^"+whitespace+"*([>+~]|"+whitespace+")"+whitespace+"*"),rdescend=new RegExp(whitespace+"|>"),rpseudo=new RegExp(pseudos),ridentifier=new RegExp("^"+identifier+"$"),matchExpr={"ID":new RegExp("^#("+identifier+")"),"CLASS":new RegExp("^\\.("+identifier+")"),"TAG":new RegExp("^("+identifier+"|[*])"),"ATTR":new RegExp("^"+attributes),"PSEUDO":new RegExp("^"+pseudos),"CHILD":new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+
whitespace+"*(even|odd|(([+-]|)(\\d*)n|)"+whitespace+"*(?:([+-]|)"+
whitespace+"*(\\d+)|))"+whitespace+"*\\)|)","i"),"bool":new RegExp("^(?:"+booleans+")$","i"),"needsContext":new RegExp("^"+whitespace+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+whitespace+"*((?:-\\d)?\\d*)"+whitespace+"*\\)|)(?=[^-]|$)","i")},rhtml=/HTML$/i,rinputs=/^(?:input|select|textarea|button)$/i,rheader=/^h\d$/i,rnative=/^[^{]+\{\s*\[native \w/,rquickExpr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,rsibling=/[+~]/,runescape=new RegExp("\\\\[\\da-fA-F]{1,6}"+whitespace+"?|\\\\([^\\r\\n\\f])","g"),funescape=function(escape,nonHex){var high="0x"+escape.slice(1)-0x10000;return nonHex?nonHex:high<0?String.fromCharCode(high+0x10000):String.fromCharCode(high>>10|0xD800,high&0x3FF|0xDC00);},rcssescape=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,fcssescape=function(ch,asCodePoint){if(asCodePoint){if(ch==="\0"){return"\uFFFD";}
return ch.slice(0,-1)+"\\"+
ch.charCodeAt(ch.length-1).toString(16)+" ";}
return"\\"+ch;},unloadHandler=function(){setDocument();},inDisabledFieldset=addCombinator(function(elem){return elem.disabled===true&&elem.nodeName.toLowerCase()==="fieldset";},{dir:"parentNode",next:"legend"});try{push.apply((arr=slice.call(preferredDoc.childNodes)),preferredDoc.childNodes);arr[preferredDoc.childNodes.length].nodeType;}catch(e){push={apply:arr.length?function(target,els){pushNative.apply(target,slice.call(els));}:function(target,els){var j=target.length,i=0;while((target[j++]=els[i++])){}
target.length=j-1;}};}
function Sizzle(selector,context,results,seed){var m,i,elem,nid,match,groups,newSelector,newContext=context&&context.ownerDocument,nodeType=context?context.nodeType:9;results=results||[];if(typeof selector!=="string"||!selector||nodeType!==1&&nodeType!==9&&nodeType!==11){return results;}
if(!seed){setDocument(context);context=context||document;if(documentIsHTML){if(nodeType!==11&&(match=rquickExpr.exec(selector))){if((m=match[1])){if(nodeType===9){if((elem=context.getElementById(m))){if(elem.id===m){results.push(elem);return results;}}else{return results;}}else{if(newContext&&(elem=newContext.getElementById(m))&&contains(context,elem)&&elem.id===m){results.push(elem);return results;}}}else if(match[2]){push.apply(results,context.getElementsByTagName(selector));return results;}else if((m=match[3])&&support.getElementsByClassName&&context.getElementsByClassName){push.apply(results,context.getElementsByClassName(m));return results;}}
if(support.qsa&&!nonnativeSelectorCache[selector+" "]&&(!rbuggyQSA||!rbuggyQSA.test(selector))&&(nodeType!==1||context.nodeName.toLowerCase()!=="object")){newSelector=selector;newContext=context;if(nodeType===1&&(rdescend.test(selector)||rcombinators.test(selector))){newContext=rsibling.test(selector)&&testContext(context.parentNode)||context;if(newContext!==context||!support.scope){if((nid=context.getAttribute("id"))){nid=nid.replace(rcssescape,fcssescape);}else{context.setAttribute("id",(nid=expando));}}
groups=tokenize(selector);i=groups.length;while(i--){groups[i]=(nid?"#"+nid:":scope")+" "+
toSelector(groups[i]);}
newSelector=groups.join(",");}
try{if(support.cssSupportsSelector&&!CSS.supports("selector(:is("+newSelector+"))")){throw new Error();}
push.apply(results,newContext.querySelectorAll(newSelector));return results;}catch(qsaError){nonnativeSelectorCache(selector,true);}finally{if(nid===expando){context.removeAttribute("id");}}}}}
return select(selector.replace(rtrim,"$1"),context,results,seed);}
function createCache(){var keys=[];function cache(key,value){if(keys.push(key+" ")>Expr.cacheLength){delete cache[keys.shift()];}
return(cache[key+" "]=value);}
return cache;}
function markFunction(fn){fn[expando]=true;return fn;}
function assert(fn){var el=document.createElement("fieldset");try{return!!fn(el);}catch(e){return false;}finally{if(el.parentNode){el.parentNode.removeChild(el);}
el=null;}}
function addHandle(attrs,handler){var arr=attrs.split("|"),i=arr.length;while(i--){Expr.attrHandle[arr[i]]=handler;}}
function siblingCheck(a,b){var cur=b&&a,diff=cur&&a.nodeType===1&&b.nodeType===1&&a.sourceIndex-b.sourceIndex;if(diff){return diff;}
if(cur){while((cur=cur.nextSibling)){if(cur===b){return-1;}}}
return a?1:-1;}
function createInputPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type===type;};}
function createButtonPseudo(type){return function(elem){var name=elem.nodeName.toLowerCase();return(name==="input"||name==="button")&&elem.type===type;};}
function createDisabledPseudo(disabled){return function(elem){if("form"in elem){if(elem.parentNode&&elem.disabled===false){if("label"in elem){if("label"in elem.parentNode){return elem.parentNode.disabled===disabled;}else{return elem.disabled===disabled;}}
return elem.isDisabled===disabled||elem.isDisabled!==!disabled&&inDisabledFieldset(elem)===disabled;}
return elem.disabled===disabled;}else if("label"in elem){return elem.disabled===disabled;}
return false;};}
function createPositionalPseudo(fn){return markFunction(function(argument){argument=+argument;return markFunction(function(seed,matches){var j,matchIndexes=fn([],seed.length,argument),i=matchIndexes.length;while(i--){if(seed[(j=matchIndexes[i])]){seed[j]=!(matches[j]=seed[j]);}}});});}
function testContext(context){return context&&typeof context.getElementsByTagName!=="undefined"&&context;}
support=Sizzle.support={};isXML=Sizzle.isXML=function(elem){var namespace=elem&&elem.namespaceURI,docElem=elem&&(elem.ownerDocument||elem).documentElement;return!rhtml.test(namespace||docElem&&docElem.nodeName||"HTML");};setDocument=Sizzle.setDocument=function(node){var hasCompare,subWindow,doc=node?node.ownerDocument||node:preferredDoc;if(doc==document||doc.nodeType!==9||!doc.documentElement){return document;}
document=doc;docElem=document.documentElement;documentIsHTML=!isXML(document);if(preferredDoc!=document&&(subWindow=document.defaultView)&&subWindow.top!==subWindow){if(subWindow.addEventListener){subWindow.addEventListener("unload",unloadHandler,false);}else if(subWindow.attachEvent){subWindow.attachEvent("onunload",unloadHandler);}}
support.scope=assert(function(el){docElem.appendChild(el).appendChild(document.createElement("div"));return typeof el.querySelectorAll!=="undefined"&&!el.querySelectorAll(":scope fieldset div").length;});support.cssSupportsSelector=assert(function(){return CSS.supports("selector(*)")&&document.querySelectorAll(":is(:jqfake)")&&!CSS.supports("selector(:is(*,:jqfake))");});support.attributes=assert(function(el){el.className="i";return!el.getAttribute("className");});support.getElementsByTagName=assert(function(el){el.appendChild(document.createComment(""));return!el.getElementsByTagName("*").length;});support.getElementsByClassName=rnative.test(document.getElementsByClassName);support.getById=assert(function(el){docElem.appendChild(el).id=expando;return!document.getElementsByName||!document.getElementsByName(expando).length;});if(support.getById){Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){return elem.getAttribute("id")===attrId;};};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var elem=context.getElementById(id);return elem?[elem]:[];}};}else{Expr.filter["ID"]=function(id){var attrId=id.replace(runescape,funescape);return function(elem){var node=typeof elem.getAttributeNode!=="undefined"&&elem.getAttributeNode("id");return node&&node.value===attrId;};};Expr.find["ID"]=function(id,context){if(typeof context.getElementById!=="undefined"&&documentIsHTML){var node,i,elems,elem=context.getElementById(id);if(elem){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}
elems=context.getElementsByName(id);i=0;while((elem=elems[i++])){node=elem.getAttributeNode("id");if(node&&node.value===id){return[elem];}}}
return[];}};}
Expr.find["TAG"]=support.getElementsByTagName?function(tag,context){if(typeof context.getElementsByTagName!=="undefined"){return context.getElementsByTagName(tag);}else if(support.qsa){return context.querySelectorAll(tag);}}:function(tag,context){var elem,tmp=[],i=0,results=context.getElementsByTagName(tag);if(tag==="*"){while((elem=results[i++])){if(elem.nodeType===1){tmp.push(elem);}}
return tmp;}
return results;};Expr.find["CLASS"]=support.getElementsByClassName&&function(className,context){if(typeof context.getElementsByClassName!=="undefined"&&documentIsHTML){return context.getElementsByClassName(className);}};rbuggyMatches=[];rbuggyQSA=[];if((support.qsa=rnative.test(document.querySelectorAll))){assert(function(el){var input;docElem.appendChild(el).innerHTML="<a id='"+expando+"'></a>"+"<select id='"+expando+"-\r\\' msallowcapture=''>"+"<option selected=''></option></select>";if(el.querySelectorAll("[msallowcapture^='']").length){rbuggyQSA.push("[*^$]="+whitespace+"*(?:''|\"\")");}
if(!el.querySelectorAll("[selected]").length){rbuggyQSA.push("\\["+whitespace+"*(?:value|"+booleans+")");}
if(!el.querySelectorAll("[id~="+expando+"-]").length){rbuggyQSA.push("~=");}
input=document.createElement("input");input.setAttribute("name","");el.appendChild(input);if(!el.querySelectorAll("[name='']").length){rbuggyQSA.push("\\["+whitespace+"*name"+whitespace+"*="+
whitespace+"*(?:''|\"\")");}
if(!el.querySelectorAll(":checked").length){rbuggyQSA.push(":checked");}
if(!el.querySelectorAll("a#"+expando+"+*").length){rbuggyQSA.push(".#.+[+~]");}});assert(function(el){el.innerHTML="<a href='' disabled='disabled'></a>"+"<select disabled='disabled'><option/></select>";var input=document.createElement("input");input.setAttribute("type","hidden");el.appendChild(input).setAttribute("name","D");if(el.querySelectorAll("[name=d]").length){rbuggyQSA.push("name"+whitespace+"*[*^$|!~]?=");}
if(el.querySelectorAll(":enabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}
docElem.appendChild(el).disabled=true;if(el.querySelectorAll(":disabled").length!==2){rbuggyQSA.push(":enabled",":disabled");}});}
if((support.matchesSelector=rnative.test((matches=docElem.matches||docElem.webkitMatchesSelector||docElem.mozMatchesSelector||docElem.oMatchesSelector||docElem.msMatchesSelector)))){assert(function(el){support.disconnectedMatch=matches.call(el,"*");});}
if(!support.cssSupportsSelector){rbuggyQSA.push(":has");}
rbuggyQSA=rbuggyQSA.length&&new RegExp(rbuggyQSA.join("|"));rbuggyMatches=rbuggyMatches.length&&new RegExp(rbuggyMatches.join("|"));hasCompare=rnative.test(docElem.compareDocumentPosition);contains=hasCompare||rnative.test(docElem.contains)?function(a,b){var adown=a.nodeType===9&&a.documentElement||a,bup=b&&b.parentNode;return a===bup||!!(bup&&bup.nodeType===1&&(adown.contains?adown.contains(bup):a.compareDocumentPosition&&a.compareDocumentPosition(bup)&16));}:function(a,b){if(b){while((b=b.parentNode)){if(b===a){return true;}}}
return false;};sortOrder=hasCompare?function(a,b){if(a===b){hasDuplicate=true;return 0;}
var compare=!a.compareDocumentPosition-!b.compareDocumentPosition;if(compare){return compare;}
compare=(a.ownerDocument||a)==(b.ownerDocument||b)?a.compareDocumentPosition(b):1;if(compare&1||(!support.sortDetached&&b.compareDocumentPosition(a)===compare)){if(a==document||a.ownerDocument==preferredDoc&&contains(preferredDoc,a)){return-1;}
if(b==document||b.ownerDocument==preferredDoc&&contains(preferredDoc,b)){return 1;}
return sortInput?(indexOf(sortInput,a)-indexOf(sortInput,b)):0;}
return compare&4?-1:1;}:function(a,b){if(a===b){hasDuplicate=true;return 0;}
var cur,i=0,aup=a.parentNode,bup=b.parentNode,ap=[a],bp=[b];if(!aup||!bup){return a==document?-1:b==document?1:aup?-1:bup?1:sortInput?(indexOf(sortInput,a)-indexOf(sortInput,b)):0;}else if(aup===bup){return siblingCheck(a,b);}
cur=a;while((cur=cur.parentNode)){ap.unshift(cur);}
cur=b;while((cur=cur.parentNode)){bp.unshift(cur);}
while(ap[i]===bp[i]){i++;}
return i?siblingCheck(ap[i],bp[i]):ap[i]==preferredDoc?-1:bp[i]==preferredDoc?1:0;};return document;};Sizzle.matches=function(expr,elements){return Sizzle(expr,null,null,elements);};Sizzle.matchesSelector=function(elem,expr){setDocument(elem);if(support.matchesSelector&&documentIsHTML&&!nonnativeSelectorCache[expr+" "]&&(!rbuggyMatches||!rbuggyMatches.test(expr))&&(!rbuggyQSA||!rbuggyQSA.test(expr))){try{var ret=matches.call(elem,expr);if(ret||support.disconnectedMatch||elem.document&&elem.document.nodeType!==11){return ret;}}catch(e){nonnativeSelectorCache(expr,true);}}
return Sizzle(expr,document,null,[elem]).length>0;};Sizzle.contains=function(context,elem){if((context.ownerDocument||context)!=document){setDocument(context);}
return contains(context,elem);};Sizzle.attr=function(elem,name){if((elem.ownerDocument||elem)!=document){setDocument(elem);}
var fn=Expr.attrHandle[name.toLowerCase()],val=fn&&hasOwn.call(Expr.attrHandle,name.toLowerCase())?fn(elem,name,!documentIsHTML):undefined;return val!==undefined?val:support.attributes||!documentIsHTML?elem.getAttribute(name):(val=elem.getAttributeNode(name))&&val.specified?val.value:null;};Sizzle.escape=function(sel){return(sel+"").replace(rcssescape,fcssescape);};Sizzle.error=function(msg){throw new Error("Syntax error, unrecognized expression: "+msg);};Sizzle.uniqueSort=function(results){var elem,duplicates=[],j=0,i=0;hasDuplicate=!support.detectDuplicates;sortInput=!support.sortStable&&results.slice(0);results.sort(sortOrder);if(hasDuplicate){while((elem=results[i++])){if(elem===results[i]){j=duplicates.push(i);}}
while(j--){results.splice(duplicates[j],1);}}
sortInput=null;return results;};getText=Sizzle.getText=function(elem){var node,ret="",i=0,nodeType=elem.nodeType;if(!nodeType){while((node=elem[i++])){ret+=getText(node);}}else if(nodeType===1||nodeType===9||nodeType===11){if(typeof elem.textContent==="string"){return elem.textContent;}else{for(elem=elem.firstChild;elem;elem=elem.nextSibling){ret+=getText(elem);}}}else if(nodeType===3||nodeType===4){return elem.nodeValue;}
return ret;};Expr=Sizzle.selectors={cacheLength:50,createPseudo:markFunction,match:matchExpr,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:true}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:true},"~":{dir:"previousSibling"}},preFilter:{"ATTR":function(match){match[1]=match[1].replace(runescape,funescape);match[3]=(match[3]||match[4]||match[5]||"").replace(runescape,funescape);if(match[2]==="~="){match[3]=" "+match[3]+" ";}
return match.slice(0,4);},"CHILD":function(match){match[1]=match[1].toLowerCase();if(match[1].slice(0,3)==="nth"){if(!match[3]){Sizzle.error(match[0]);}
match[4]=+(match[4]?match[5]+(match[6]||1):2*(match[3]==="even"||match[3]==="odd"));match[5]=+((match[7]+match[8])||match[3]==="odd");}else if(match[3]){Sizzle.error(match[0]);}
return match;},"PSEUDO":function(match){var excess,unquoted=!match[6]&&match[2];if(matchExpr["CHILD"].test(match[0])){return null;}
if(match[3]){match[2]=match[4]||match[5]||"";}else if(unquoted&&rpseudo.test(unquoted)&&(excess=tokenize(unquoted,true))&&(excess=unquoted.indexOf(")",unquoted.length-excess)-unquoted.length)){match[0]=match[0].slice(0,excess);match[2]=unquoted.slice(0,excess);}
return match.slice(0,3);}},filter:{"TAG":function(nodeNameSelector){var nodeName=nodeNameSelector.replace(runescape,funescape).toLowerCase();return nodeNameSelector==="*"?function(){return true;}:function(elem){return elem.nodeName&&elem.nodeName.toLowerCase()===nodeName;};},"CLASS":function(className){var pattern=classCache[className+" "];return pattern||(pattern=new RegExp("(^|"+whitespace+")"+className+"("+whitespace+"|$)"))&&classCache(className,function(elem){return pattern.test(typeof elem.className==="string"&&elem.className||typeof elem.getAttribute!=="undefined"&&elem.getAttribute("class")||"");});},"ATTR":function(name,operator,check){return function(elem){var result=Sizzle.attr(elem,name);if(result==null){return operator==="!=";}
if(!operator){return true;}
result+="";return operator==="="?result===check:operator==="!="?result!==check:operator==="^="?check&&result.indexOf(check)===0:operator==="*="?check&&result.indexOf(check)>-1:operator==="$="?check&&result.slice(-check.length)===check:operator==="~="?(" "+result.replace(rwhitespace," ")+" ").indexOf(check)>-1:operator==="|="?result===check||result.slice(0,check.length+1)===check+"-":false;};},"CHILD":function(type,what,_argument,first,last){var simple=type.slice(0,3)!=="nth",forward=type.slice(-4)!=="last",ofType=what==="of-type";return first===1&&last===0?function(elem){return!!elem.parentNode;}:function(elem,_context,xml){var cache,uniqueCache,outerCache,node,nodeIndex,start,dir=simple!==forward?"nextSibling":"previousSibling",parent=elem.parentNode,name=ofType&&elem.nodeName.toLowerCase(),useCache=!xml&&!ofType,diff=false;if(parent){if(simple){while(dir){node=elem;while((node=node[dir])){if(ofType?node.nodeName.toLowerCase()===name:node.nodeType===1){return false;}}
start=dir=type==="only"&&!start&&"nextSibling";}
return true;}
start=[forward?parent.firstChild:parent.lastChild];if(forward&&useCache){node=parent;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex&&cache[2];node=nodeIndex&&parent.childNodes[nodeIndex];while((node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop())){if(node.nodeType===1&&++diff&&node===elem){uniqueCache[type]=[dirruns,nodeIndex,diff];break;}}}else{if(useCache){node=elem;outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});cache=uniqueCache[type]||[];nodeIndex=cache[0]===dirruns&&cache[1];diff=nodeIndex;}
if(diff===false){while((node=++nodeIndex&&node&&node[dir]||(diff=nodeIndex=0)||start.pop())){if((ofType?node.nodeName.toLowerCase()===name:node.nodeType===1)&&++diff){if(useCache){outerCache=node[expando]||(node[expando]={});uniqueCache=outerCache[node.uniqueID]||(outerCache[node.uniqueID]={});uniqueCache[type]=[dirruns,diff];}
if(node===elem){break;}}}}}
diff-=last;return diff===first||(diff%first===0&&diff/first>=0);}};},"PSEUDO":function(pseudo,argument){var args,fn=Expr.pseudos[pseudo]||Expr.setFilters[pseudo.toLowerCase()]||Sizzle.error("unsupported pseudo: "+pseudo);if(fn[expando]){return fn(argument);}
if(fn.length>1){args=[pseudo,pseudo,"",argument];return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())?markFunction(function(seed,matches){var idx,matched=fn(seed,argument),i=matched.length;while(i--){idx=indexOf(seed,matched[i]);seed[idx]=!(matches[idx]=matched[i]);}}):function(elem){return fn(elem,0,args);};}
return fn;}},pseudos:{"not":markFunction(function(selector){var input=[],results=[],matcher=compile(selector.replace(rtrim,"$1"));return matcher[expando]?markFunction(function(seed,matches,_context,xml){var elem,unmatched=matcher(seed,null,xml,[]),i=seed.length;while(i--){if((elem=unmatched[i])){seed[i]=!(matches[i]=elem);}}}):function(elem,_context,xml){input[0]=elem;matcher(input,null,xml,results);input[0]=null;return!results.pop();};}),"has":markFunction(function(selector){return function(elem){return Sizzle(selector,elem).length>0;};}),"contains":markFunction(function(text){text=text.replace(runescape,funescape);return function(elem){return(elem.textContent||getText(elem)).indexOf(text)>-1;};}),"lang":markFunction(function(lang){if(!ridentifier.test(lang||"")){Sizzle.error("unsupported lang: "+lang);}
lang=lang.replace(runescape,funescape).toLowerCase();return function(elem){var elemLang;do{if((elemLang=documentIsHTML?elem.lang:elem.getAttribute("xml:lang")||elem.getAttribute("lang"))){elemLang=elemLang.toLowerCase();return elemLang===lang||elemLang.indexOf(lang+"-")===0;}}while((elem=elem.parentNode)&&elem.nodeType===1);return false;};}),"target":function(elem){var hash=window.location&&window.location.hash;return hash&&hash.slice(1)===elem.id;},"root":function(elem){return elem===docElem;},"focus":function(elem){return elem===document.activeElement&&(!document.hasFocus||document.hasFocus())&&!!(elem.type||elem.href||~elem.tabIndex);},"enabled":createDisabledPseudo(false),"disabled":createDisabledPseudo(true),"checked":function(elem){var nodeName=elem.nodeName.toLowerCase();return(nodeName==="input"&&!!elem.checked)||(nodeName==="option"&&!!elem.selected);},"selected":function(elem){if(elem.parentNode){elem.parentNode.selectedIndex;}
return elem.selected===true;},"empty":function(elem){for(elem=elem.firstChild;elem;elem=elem.nextSibling){if(elem.nodeType<6){return false;}}
return true;},"parent":function(elem){return!Expr.pseudos["empty"](elem);},"header":function(elem){return rheader.test(elem.nodeName);},"input":function(elem){return rinputs.test(elem.nodeName);},"button":function(elem){var name=elem.nodeName.toLowerCase();return name==="input"&&elem.type==="button"||name==="button";},"text":function(elem){var attr;return elem.nodeName.toLowerCase()==="input"&&elem.type==="text"&&((attr=elem.getAttribute("type"))==null||attr.toLowerCase()==="text");},"first":createPositionalPseudo(function(){return[0];}),"last":createPositionalPseudo(function(_matchIndexes,length){return[length-1];}),"eq":createPositionalPseudo(function(_matchIndexes,length,argument){return[argument<0?argument+length:argument];}),"even":createPositionalPseudo(function(matchIndexes,length){var i=0;for(;i<length;i+=2){matchIndexes.push(i);}
return matchIndexes;}),"odd":createPositionalPseudo(function(matchIndexes,length){var i=1;for(;i<length;i+=2){matchIndexes.push(i);}
return matchIndexes;}),"lt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument>length?length:argument;for(;--i>=0;){matchIndexes.push(i);}
return matchIndexes;}),"gt":createPositionalPseudo(function(matchIndexes,length,argument){var i=argument<0?argument+length:argument;for(;++i<length;){matchIndexes.push(i);}
return matchIndexes;})}};Expr.pseudos["nth"]=Expr.pseudos["eq"];for(i in{radio:true,checkbox:true,file:true,password:true,image:true}){Expr.pseudos[i]=createInputPseudo(i);}
for(i in{submit:true,reset:true}){Expr.pseudos[i]=createButtonPseudo(i);}
function setFilters(){}
setFilters.prototype=Expr.filters=Expr.pseudos;Expr.setFilters=new setFilters();tokenize=Sizzle.tokenize=function(selector,parseOnly){var matched,match,tokens,type,soFar,groups,preFilters,cached=tokenCache[selector+" "];if(cached){return parseOnly?0:cached.slice(0);}
soFar=selector;groups=[];preFilters=Expr.preFilter;while(soFar){if(!matched||(match=rcomma.exec(soFar))){if(match){soFar=soFar.slice(match[0].length)||soFar;}
groups.push((tokens=[]));}
matched=false;if((match=rcombinators.exec(soFar))){matched=match.shift();tokens.push({value:matched,type:match[0].replace(rtrim," ")});soFar=soFar.slice(matched.length);}
for(type in Expr.filter){if((match=matchExpr[type].exec(soFar))&&(!preFilters[type]||(match=preFilters[type](match)))){matched=match.shift();tokens.push({value:matched,type:type,matches:match});soFar=soFar.slice(matched.length);}}
if(!matched){break;}}
return parseOnly?soFar.length:soFar?Sizzle.error(selector):tokenCache(selector,groups).slice(0);};function toSelector(tokens){var i=0,len=tokens.length,selector="";for(;i<len;i++){selector+=tokens[i].value;}
return selector;}
function addCombinator(matcher,combinator,base){var dir=combinator.dir,skip=combinator.next,key=skip||dir,checkNonElements=base&&key==="parentNode",doneName=done++;return combinator.first?function(elem,context,xml){while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){return matcher(elem,context,xml);}}
return false;}:function(elem,context,xml){var oldCache,uniqueCache,outerCache,newCache=[dirruns,doneName];if(xml){while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){if(matcher(elem,context,xml)){return true;}}}}else{while((elem=elem[dir])){if(elem.nodeType===1||checkNonElements){outerCache=elem[expando]||(elem[expando]={});uniqueCache=outerCache[elem.uniqueID]||(outerCache[elem.uniqueID]={});if(skip&&skip===elem.nodeName.toLowerCase()){elem=elem[dir]||elem;}else if((oldCache=uniqueCache[key])&&oldCache[0]===dirruns&&oldCache[1]===doneName){return(newCache[2]=oldCache[2]);}else{uniqueCache[key]=newCache;if((newCache[2]=matcher(elem,context,xml))){return true;}}}}}
return false;};}
function elementMatcher(matchers){return matchers.length>1?function(elem,context,xml){var i=matchers.length;while(i--){if(!matchers[i](elem,context,xml)){return false;}}
return true;}:matchers[0];}
function multipleContexts(selector,contexts,results){var i=0,len=contexts.length;for(;i<len;i++){Sizzle(selector,contexts[i],results);}
return results;}
function condense(unmatched,map,filter,context,xml){var elem,newUnmatched=[],i=0,len=unmatched.length,mapped=map!=null;for(;i<len;i++){if((elem=unmatched[i])){if(!filter||filter(elem,context,xml)){newUnmatched.push(elem);if(mapped){map.push(i);}}}}
return newUnmatched;}
function setMatcher(preFilter,selector,matcher,postFilter,postFinder,postSelector){if(postFilter&&!postFilter[expando]){postFilter=setMatcher(postFilter);}
if(postFinder&&!postFinder[expando]){postFinder=setMatcher(postFinder,postSelector);}
return markFunction(function(seed,results,context,xml){var temp,i,elem,preMap=[],postMap=[],preexisting=results.length,elems=seed||multipleContexts(selector||"*",context.nodeType?[context]:context,[]),matcherIn=preFilter&&(seed||!selector)?condense(elems,preMap,preFilter,context,xml):elems,matcherOut=matcher?postFinder||(seed?preFilter:preexisting||postFilter)?[]:results:matcherIn;if(matcher){matcher(matcherIn,matcherOut,context,xml);}
if(postFilter){temp=condense(matcherOut,postMap);postFilter(temp,[],context,xml);i=temp.length;while(i--){if((elem=temp[i])){matcherOut[postMap[i]]=!(matcherIn[postMap[i]]=elem);}}}
if(seed){if(postFinder||preFilter){if(postFinder){temp=[];i=matcherOut.length;while(i--){if((elem=matcherOut[i])){temp.push((matcherIn[i]=elem));}}
postFinder(null,(matcherOut=[]),temp,xml);}
i=matcherOut.length;while(i--){if((elem=matcherOut[i])&&(temp=postFinder?indexOf(seed,elem):preMap[i])>-1){seed[temp]=!(results[temp]=elem);}}}}else{matcherOut=condense(matcherOut===results?matcherOut.splice(preexisting,matcherOut.length):matcherOut);if(postFinder){postFinder(null,results,matcherOut,xml);}else{push.apply(results,matcherOut);}}});}
function matcherFromTokens(tokens){var checkContext,matcher,j,len=tokens.length,leadingRelative=Expr.relative[tokens[0].type],implicitRelative=leadingRelative||Expr.relative[" "],i=leadingRelative?1:0,matchContext=addCombinator(function(elem){return elem===checkContext;},implicitRelative,true),matchAnyContext=addCombinator(function(elem){return indexOf(checkContext,elem)>-1;},implicitRelative,true),matchers=[function(elem,context,xml){var ret=(!leadingRelative&&(xml||context!==outermostContext))||((checkContext=context).nodeType?matchContext(elem,context,xml):matchAnyContext(elem,context,xml));checkContext=null;return ret;}];for(;i<len;i++){if((matcher=Expr.relative[tokens[i].type])){matchers=[addCombinator(elementMatcher(matchers),matcher)];}else{matcher=Expr.filter[tokens[i].type].apply(null,tokens[i].matches);if(matcher[expando]){j=++i;for(;j<len;j++){if(Expr.relative[tokens[j].type]){break;}}
return setMatcher(i>1&&elementMatcher(matchers),i>1&&toSelector(tokens.slice(0,i-1).concat({value:tokens[i-2].type===" "?"*":""})).replace(rtrim,"$1"),matcher,i<j&&matcherFromTokens(tokens.slice(i,j)),j<len&&matcherFromTokens((tokens=tokens.slice(j))),j<len&&toSelector(tokens));}
matchers.push(matcher);}}
return elementMatcher(matchers);}
function matcherFromGroupMatchers(elementMatchers,setMatchers){var bySet=setMatchers.length>0,byElement=elementMatchers.length>0,superMatcher=function(seed,context,xml,results,outermost){var elem,j,matcher,matchedCount=0,i="0",unmatched=seed&&[],setMatched=[],contextBackup=outermostContext,elems=seed||byElement&&Expr.find["TAG"]("*",outermost),dirrunsUnique=(dirruns+=contextBackup==null?1:Math.random()||0.1),len=elems.length;if(outermost){outermostContext=context==document||context||outermost;}
for(;i!==len&&(elem=elems[i])!=null;i++){if(byElement&&elem){j=0;if(!context&&elem.ownerDocument!=document){setDocument(elem);xml=!documentIsHTML;}
while((matcher=elementMatchers[j++])){if(matcher(elem,context||document,xml)){results.push(elem);break;}}
if(outermost){dirruns=dirrunsUnique;}}
if(bySet){if((elem=!matcher&&elem)){matchedCount--;}
if(seed){unmatched.push(elem);}}}
matchedCount+=i;if(bySet&&i!==matchedCount){j=0;while((matcher=setMatchers[j++])){matcher(unmatched,setMatched,context,xml);}
if(seed){if(matchedCount>0){while(i--){if(!(unmatched[i]||setMatched[i])){setMatched[i]=pop.call(results);}}}
setMatched=condense(setMatched);}
push.apply(results,setMatched);if(outermost&&!seed&&setMatched.length>0&&(matchedCount+setMatchers.length)>1){Sizzle.uniqueSort(results);}}
if(outermost){dirruns=dirrunsUnique;outermostContext=contextBackup;}
return unmatched;};return bySet?markFunction(superMatcher):superMatcher;}
compile=Sizzle.compile=function(selector,match){var i,setMatchers=[],elementMatchers=[],cached=compilerCache[selector+" "];if(!cached){if(!match){match=tokenize(selector);}
i=match.length;while(i--){cached=matcherFromTokens(match[i]);if(cached[expando]){setMatchers.push(cached);}else{elementMatchers.push(cached);}}
cached=compilerCache(selector,matcherFromGroupMatchers(elementMatchers,setMatchers));cached.selector=selector;}
return cached;};select=Sizzle.select=function(selector,context,results,seed){var i,tokens,token,type,find,compiled=typeof selector==="function"&&selector,match=!seed&&tokenize((selector=compiled.selector||selector));results=results||[];if(match.length===1){tokens=match[0]=match[0].slice(0);if(tokens.length>2&&(token=tokens[0]).type==="ID"&&context.nodeType===9&&documentIsHTML&&Expr.relative[tokens[1].type]){context=(Expr.find["ID"](token.matches[0].replace(runescape,funescape),context)||[])[0];if(!context){return results;}else if(compiled){context=context.parentNode;}
selector=selector.slice(tokens.shift().value.length);}
i=matchExpr["needsContext"].test(selector)?0:tokens.length;while(i--){token=tokens[i];if(Expr.relative[(type=token.type)]){break;}
if((find=Expr.find[type])){if((seed=find(token.matches[0].replace(runescape,funescape),rsibling.test(tokens[0].type)&&testContext(context.parentNode)||context))){tokens.splice(i,1);selector=seed.length&&toSelector(tokens);if(!selector){push.apply(results,seed);return results;}
break;}}}}
(compiled||compile(selector,match))(seed,context,!documentIsHTML,results,!context||rsibling.test(selector)&&testContext(context.parentNode)||context);return results;};support.sortStable=expando.split("").sort(sortOrder).join("")===expando;support.detectDuplicates=!!hasDuplicate;setDocument();support.sortDetached=assert(function(el){return el.compareDocumentPosition(document.createElement("fieldset"))&1;});if(!assert(function(el){el.innerHTML="<a href='#'></a>";return el.firstChild.getAttribute("href")==="#";})){addHandle("type|href|height|width",function(elem,name,isXML){if(!isXML){return elem.getAttribute(name,name.toLowerCase()==="type"?1:2);}});}
if(!support.attributes||!assert(function(el){el.innerHTML="<input/>";el.firstChild.setAttribute("value","");return el.firstChild.getAttribute("value")==="";})){addHandle("value",function(elem,_name,isXML){if(!isXML&&elem.nodeName.toLowerCase()==="input"){return elem.defaultValue;}});}
if(!assert(function(el){return el.getAttribute("disabled")==null;})){addHandle(booleans,function(elem,name,isXML){var val;if(!isXML){return elem[name]===true?name.toLowerCase():(val=elem.getAttributeNode(name))&&val.specified?val.value:null;}});}
return Sizzle;})(window);jQuery.find=Sizzle;jQuery.expr=Sizzle.selectors;jQuery.expr[":"]=jQuery.expr.pseudos;jQuery.uniqueSort=jQuery.unique=Sizzle.uniqueSort;jQuery.text=Sizzle.getText;jQuery.isXMLDoc=Sizzle.isXML;jQuery.contains=Sizzle.contains;jQuery.escapeSelector=Sizzle.escape;var dir=function(elem,dir,until){var matched=[],truncate=until!==undefined;while((elem=elem[dir])&&elem.nodeType!==9){if(elem.nodeType===1){if(truncate&&jQuery(elem).is(until)){break;}
matched.push(elem);}}
return matched;};var siblings=function(n,elem){var matched=[];for(;n;n=n.nextSibling){if(n.nodeType===1&&n!==elem){matched.push(n);}}
return matched;};var rneedsContext=jQuery.expr.match.needsContext;function nodeName(elem,name){return elem.nodeName&&elem.nodeName.toLowerCase()===name.toLowerCase();}
var rsingleTag=(/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i);function winnow(elements,qualifier,not){if(isFunction(qualifier)){return jQuery.grep(elements,function(elem,i){return!!qualifier.call(elem,i,elem)!==not;});}
if(qualifier.nodeType){return jQuery.grep(elements,function(elem){return(elem===qualifier)!==not;});}
if(typeof qualifier!=="string"){return jQuery.grep(elements,function(elem){return(indexOf.call(qualifier,elem)>-1)!==not;});}
return jQuery.filter(qualifier,elements,not);}
jQuery.filter=function(expr,elems,not){var elem=elems[0];if(not){expr=":not("+expr+")";}
if(elems.length===1&&elem.nodeType===1){return jQuery.find.matchesSelector(elem,expr)?[elem]:[];}
return jQuery.find.matches(expr,jQuery.grep(elems,function(elem){return elem.nodeType===1;}));};jQuery.fn.extend({find:function(selector){var i,ret,len=this.length,self=this;if(typeof selector!=="string"){return this.pushStack(jQuery(selector).filter(function(){for(i=0;i<len;i++){if(jQuery.contains(self[i],this)){return true;}}}));}
ret=this.pushStack([]);for(i=0;i<len;i++){jQuery.find(selector,self[i],ret);}
return len>1?jQuery.uniqueSort(ret):ret;},filter:function(selector){return this.pushStack(winnow(this,selector||[],false));},not:function(selector){return this.pushStack(winnow(this,selector||[],true));},is:function(selector){return!!winnow(this,typeof selector==="string"&&rneedsContext.test(selector)?jQuery(selector):selector||[],false).length;}});var rootjQuery,rquickExpr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,init=jQuery.fn.init=function(selector,context,root){var match,elem;if(!selector){return this;}
root=root||rootjQuery;if(typeof selector==="string"){if(selector[0]==="<"&&selector[selector.length-1]===">"&&selector.length>=3){match=[null,selector,null];}else{match=rquickExpr.exec(selector);}
if(match&&(match[1]||!context)){if(match[1]){context=context instanceof jQuery?context[0]:context;jQuery.merge(this,jQuery.parseHTML(match[1],context&&context.nodeType?context.ownerDocument||context:document,true));if(rsingleTag.test(match[1])&&jQuery.isPlainObject(context)){for(match in context){if(isFunction(this[match])){this[match](context[match]);}else{this.attr(match,context[match]);}}}
return this;}else{elem=document.getElementById(match[2]);if(elem){this[0]=elem;this.length=1;}
return this;}}else if(!context||context.jquery){return(context||root).find(selector);}else{return this.constructor(context).find(selector);}}else if(selector.nodeType){this[0]=selector;this.length=1;return this;}else if(isFunction(selector)){return root.ready!==undefined?root.ready(selector):selector(jQuery);}
return jQuery.makeArray(selector,this);};init.prototype=jQuery.fn;rootjQuery=jQuery(document);var rparentsprev=/^(?:parents|prev(?:Until|All))/,guaranteedUnique={children:true,contents:true,next:true,prev:true};jQuery.fn.extend({has:function(target){var targets=jQuery(target,this),l=targets.length;return this.filter(function(){var i=0;for(;i<l;i++){if(jQuery.contains(this,targets[i])){return true;}}});},closest:function(selectors,context){var cur,i=0,l=this.length,matched=[],targets=typeof selectors!=="string"&&jQuery(selectors);if(!rneedsContext.test(selectors)){for(;i<l;i++){for(cur=this[i];cur&&cur!==context;cur=cur.parentNode){if(cur.nodeType<11&&(targets?targets.index(cur)>-1:cur.nodeType===1&&jQuery.find.matchesSelector(cur,selectors))){matched.push(cur);break;}}}}
return this.pushStack(matched.length>1?jQuery.uniqueSort(matched):matched);},index:function(elem){if(!elem){return(this[0]&&this[0].parentNode)?this.first().prevAll().length:-1;}
if(typeof elem==="string"){return indexOf.call(jQuery(elem),this[0]);}
return indexOf.call(this,elem.jquery?elem[0]:elem);},add:function(selector,context){return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(),jQuery(selector,context))));},addBack:function(selector){return this.add(selector==null?this.prevObject:this.prevObject.filter(selector));}});function sibling(cur,dir){while((cur=cur[dir])&&cur.nodeType!==1){}
return cur;}
jQuery.each({parent:function(elem){var parent=elem.parentNode;return parent&&parent.nodeType!==11?parent:null;},parents:function(elem){return dir(elem,"parentNode");},parentsUntil:function(elem,_i,until){return dir(elem,"parentNode",until);},next:function(elem){return sibling(elem,"nextSibling");},prev:function(elem){return sibling(elem,"previousSibling");},nextAll:function(elem){return dir(elem,"nextSibling");},prevAll:function(elem){return dir(elem,"previousSibling");},nextUntil:function(elem,_i,until){return dir(elem,"nextSibling",until);},prevUntil:function(elem,_i,until){return dir(elem,"previousSibling",until);},siblings:function(elem){return siblings((elem.parentNode||{}).firstChild,elem);},children:function(elem){return siblings(elem.firstChild);},contents:function(elem){if(elem.contentDocument!=null&&getProto(elem.contentDocument)){return elem.contentDocument;}
if(nodeName(elem,"template")){elem=elem.content||elem;}
return jQuery.merge([],elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(until,selector){var matched=jQuery.map(this,fn,until);if(name.slice(-5)!=="Until"){selector=until;}
if(selector&&typeof selector==="string"){matched=jQuery.filter(selector,matched);}
if(this.length>1){if(!guaranteedUnique[name]){jQuery.uniqueSort(matched);}
if(rparentsprev.test(name)){matched.reverse();}}
return this.pushStack(matched);};});var rnothtmlwhite=(/[^\x20\t\r\n\f]+/g);function createOptions(options){var object={};jQuery.each(options.match(rnothtmlwhite)||[],function(_,flag){object[flag]=true;});return object;}
jQuery.Callbacks=function(options){options=typeof options==="string"?createOptions(options):jQuery.extend({},options);var
firing,memory,fired,locked,list=[],queue=[],firingIndex=-1,fire=function(){locked=locked||options.once;fired=firing=true;for(;queue.length;firingIndex=-1){memory=queue.shift();while(++firingIndex<list.length){if(list[firingIndex].apply(memory[0],memory[1])===false&&options.stopOnFalse){firingIndex=list.length;memory=false;}}}
if(!options.memory){memory=false;}
firing=false;if(locked){if(memory){list=[];}else{list="";}}},self={add:function(){if(list){if(memory&&!firing){firingIndex=list.length-1;queue.push(memory);}
(function add(args){jQuery.each(args,function(_,arg){if(isFunction(arg)){if(!options.unique||!self.has(arg)){list.push(arg);}}else if(arg&&arg.length&&toType(arg)!=="string"){add(arg);}});})(arguments);if(memory&&!firing){fire();}}
return this;},remove:function(){jQuery.each(arguments,function(_,arg){var index;while((index=jQuery.inArray(arg,list,index))>-1){list.splice(index,1);if(index<=firingIndex){firingIndex--;}}});return this;},has:function(fn){return fn?jQuery.inArray(fn,list)>-1:list.length>0;},empty:function(){if(list){list=[];}
return this;},disable:function(){locked=queue=[];list=memory="";return this;},disabled:function(){return!list;},lock:function(){locked=queue=[];if(!memory&&!firing){list=memory="";}
return this;},locked:function(){return!!locked;},fireWith:function(context,args){if(!locked){args=args||[];args=[context,args.slice?args.slice():args];queue.push(args);if(!firing){fire();}}
return this;},fire:function(){self.fireWith(this,arguments);return this;},fired:function(){return!!fired;}};return self;};function Identity(v){return v;}
function Thrower(ex){throw ex;}
function adoptValue(value,resolve,reject,noValue){var method;try{if(value&&isFunction((method=value.promise))){method.call(value).done(resolve).fail(reject);}else if(value&&isFunction((method=value.then))){method.call(value,resolve,reject);}else{resolve.apply(undefined,[value].slice(noValue));}}catch(value){reject.apply(undefined,[value]);}}
jQuery.extend({Deferred:function(func){var tuples=[["notify","progress",jQuery.Callbacks("memory"),jQuery.Callbacks("memory"),2],["resolve","done",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),0,"resolved"],["reject","fail",jQuery.Callbacks("once memory"),jQuery.Callbacks("once memory"),1,"rejected"]],state="pending",promise={state:function(){return state;},always:function(){deferred.done(arguments).fail(arguments);return this;},"catch":function(fn){return promise.then(null,fn);},pipe:function(){var fns=arguments;return jQuery.Deferred(function(newDefer){jQuery.each(tuples,function(_i,tuple){var fn=isFunction(fns[tuple[4]])&&fns[tuple[4]];deferred[tuple[1]](function(){var returned=fn&&fn.apply(this,arguments);if(returned&&isFunction(returned.promise)){returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);}else{newDefer[tuple[0]+"With"](this,fn?[returned]:arguments);}});});fns=null;}).promise();},then:function(onFulfilled,onRejected,onProgress){var maxDepth=0;function resolve(depth,deferred,handler,special){return function(){var that=this,args=arguments,mightThrow=function(){var returned,then;if(depth<maxDepth){return;}
returned=handler.apply(that,args);if(returned===deferred.promise()){throw new TypeError("Thenable self-resolution");}
then=returned&&(typeof returned==="object"||typeof returned==="function")&&returned.then;if(isFunction(then)){if(special){then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special));}else{maxDepth++;then.call(returned,resolve(maxDepth,deferred,Identity,special),resolve(maxDepth,deferred,Thrower,special),resolve(maxDepth,deferred,Identity,deferred.notifyWith));}}else{if(handler!==Identity){that=undefined;args=[returned];}
(special||deferred.resolveWith)(that,args);}},process=special?mightThrow:function(){try{mightThrow();}catch(e){if(jQuery.Deferred.exceptionHook){jQuery.Deferred.exceptionHook(e,process.stackTrace);}
if(depth+1>=maxDepth){if(handler!==Thrower){that=undefined;args=[e];}
deferred.rejectWith(that,args);}}};if(depth){process();}else{if(jQuery.Deferred.getStackHook){process.stackTrace=jQuery.Deferred.getStackHook();}
window.setTimeout(process);}};}
return jQuery.Deferred(function(newDefer){tuples[0][3].add(resolve(0,newDefer,isFunction(onProgress)?onProgress:Identity,newDefer.notifyWith));tuples[1][3].add(resolve(0,newDefer,isFunction(onFulfilled)?onFulfilled:Identity));tuples[2][3].add(resolve(0,newDefer,isFunction(onRejected)?onRejected:Thrower));}).promise();},promise:function(obj){return obj!=null?jQuery.extend(obj,promise):promise;}},deferred={};jQuery.each(tuples,function(i,tuple){var list=tuple[2],stateString=tuple[5];promise[tuple[1]]=list.add;if(stateString){list.add(function(){state=stateString;},tuples[3-i][2].disable,tuples[3-i][3].disable,tuples[0][2].lock,tuples[0][3].lock);}
list.add(tuple[3].fire);deferred[tuple[0]]=function(){deferred[tuple[0]+"With"](this===deferred?undefined:this,arguments);return this;};deferred[tuple[0]+"With"]=list.fireWith;});promise.promise(deferred);if(func){func.call(deferred,deferred);}
return deferred;},when:function(singleValue){var
remaining=arguments.length,i=remaining,resolveContexts=Array(i),resolveValues=slice.call(arguments),primary=jQuery.Deferred(),updateFunc=function(i){return function(value){resolveContexts[i]=this;resolveValues[i]=arguments.length>1?slice.call(arguments):value;if(!(--remaining)){primary.resolveWith(resolveContexts,resolveValues);}};};if(remaining<=1){adoptValue(singleValue,primary.done(updateFunc(i)).resolve,primary.reject,!remaining);if(primary.state()==="pending"||isFunction(resolveValues[i]&&resolveValues[i].then)){return primary.then();}}
while(i--){adoptValue(resolveValues[i],updateFunc(i),primary.reject);}
return primary.promise();}});var rerrorNames=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;jQuery.Deferred.exceptionHook=function(error,stack){if(window.console&&window.console.warn&&error&&rerrorNames.test(error.name)){window.console.warn("jQuery.Deferred exception: "+error.message,error.stack,stack);}};jQuery.readyException=function(error){window.setTimeout(function(){throw error;});};var readyList=jQuery.Deferred();jQuery.fn.ready=function(fn){readyList.then(fn).catch(function(error){jQuery.readyException(error);});return this;};jQuery.extend({isReady:false,readyWait:1,ready:function(wait){if(wait===true?--jQuery.readyWait:jQuery.isReady){return;}
jQuery.isReady=true;if(wait!==true&&--jQuery.readyWait>0){return;}
readyList.resolveWith(document,[jQuery]);}});jQuery.ready.then=readyList.then;function completed(){document.removeEventListener("DOMContentLoaded",completed);window.removeEventListener("load",completed);jQuery.ready();}
if(document.readyState==="complete"||(document.readyState!=="loading"&&!document.documentElement.doScroll)){window.setTimeout(jQuery.ready);}else{document.addEventListener("DOMContentLoaded",completed);window.addEventListener("load",completed);}
var access=function(elems,fn,key,value,chainable,emptyGet,raw){var i=0,len=elems.length,bulk=key==null;if(toType(key)==="object"){chainable=true;for(i in key){access(elems,fn,i,key[i],true,emptyGet,raw);}}else if(value!==undefined){chainable=true;if(!isFunction(value)){raw=true;}
if(bulk){if(raw){fn.call(elems,value);fn=null;}else{bulk=fn;fn=function(elem,_key,value){return bulk.call(jQuery(elem),value);};}}
if(fn){for(;i<len;i++){fn(elems[i],key,raw?value:value.call(elems[i],i,fn(elems[i],key)));}}}
if(chainable){return elems;}
if(bulk){return fn.call(elems);}
return len?fn(elems[0],key):emptyGet;};var rmsPrefix=/^-ms-/,rdashAlpha=/-([a-z])/g;function fcamelCase(_all,letter){return letter.toUpperCase();}
function camelCase(string){return string.replace(rmsPrefix,"ms-").replace(rdashAlpha,fcamelCase);}
var acceptData=function(owner){return owner.nodeType===1||owner.nodeType===9||!(+owner.nodeType);};function Data(){this.expando=jQuery.expando+Data.uid++;}
Data.uid=1;Data.prototype={cache:function(owner){var value=owner[this.expando];if(!value){value={};if(acceptData(owner)){if(owner.nodeType){owner[this.expando]=value;}else{Object.defineProperty(owner,this.expando,{value:value,configurable:true});}}}
return value;},set:function(owner,data,value){var prop,cache=this.cache(owner);if(typeof data==="string"){cache[camelCase(data)]=value;}else{for(prop in data){cache[camelCase(prop)]=data[prop];}}
return cache;},get:function(owner,key){return key===undefined?this.cache(owner):owner[this.expando]&&owner[this.expando][camelCase(key)];},access:function(owner,key,value){if(key===undefined||((key&&typeof key==="string")&&value===undefined)){return this.get(owner,key);}
this.set(owner,key,value);return value!==undefined?value:key;},remove:function(owner,key){var i,cache=owner[this.expando];if(cache===undefined){return;}
if(key!==undefined){if(Array.isArray(key)){key=key.map(camelCase);}else{key=camelCase(key);key=key in cache?[key]:(key.match(rnothtmlwhite)||[]);}
i=key.length;while(i--){delete cache[key[i]];}}
if(key===undefined||jQuery.isEmptyObject(cache)){if(owner.nodeType){owner[this.expando]=undefined;}else{delete owner[this.expando];}}},hasData:function(owner){var cache=owner[this.expando];return cache!==undefined&&!jQuery.isEmptyObject(cache);}};var dataPriv=new Data();var dataUser=new Data();var rbrace=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,rmultiDash=/[A-Z]/g;function getData(data){if(data==="true"){return true;}
if(data==="false"){return false;}
if(data==="null"){return null;}
if(data===+data+""){return+data;}
if(rbrace.test(data)){return JSON.parse(data);}
return data;}
function dataAttr(elem,key,data){var name;if(data===undefined&&elem.nodeType===1){name="data-"+key.replace(rmultiDash,"-$&").toLowerCase();data=elem.getAttribute(name);if(typeof data==="string"){try{data=getData(data);}catch(e){}
dataUser.set(elem,key,data);}else{data=undefined;}}
return data;}
jQuery.extend({hasData:function(elem){return dataUser.hasData(elem)||dataPriv.hasData(elem);},data:function(elem,name,data){return dataUser.access(elem,name,data);},removeData:function(elem,name){dataUser.remove(elem,name);},_data:function(elem,name,data){return dataPriv.access(elem,name,data);},_removeData:function(elem,name){dataPriv.remove(elem,name);}});jQuery.fn.extend({data:function(key,value){var i,name,data,elem=this[0],attrs=elem&&elem.attributes;if(key===undefined){if(this.length){data=dataUser.get(elem);if(elem.nodeType===1&&!dataPriv.get(elem,"hasDataAttrs")){i=attrs.length;while(i--){if(attrs[i]){name=attrs[i].name;if(name.indexOf("data-")===0){name=camelCase(name.slice(5));dataAttr(elem,name,data[name]);}}}
dataPriv.set(elem,"hasDataAttrs",true);}}
return data;}
if(typeof key==="object"){return this.each(function(){dataUser.set(this,key);});}
return access(this,function(value){var data;if(elem&&value===undefined){data=dataUser.get(elem,key);if(data!==undefined){return data;}
data=dataAttr(elem,key);if(data!==undefined){return data;}
return;}
this.each(function(){dataUser.set(this,key,value);});},null,value,arguments.length>1,null,true);},removeData:function(key){return this.each(function(){dataUser.remove(this,key);});}});jQuery.extend({queue:function(elem,type,data){var queue;if(elem){type=(type||"fx")+"queue";queue=dataPriv.get(elem,type);if(data){if(!queue||Array.isArray(data)){queue=dataPriv.access(elem,type,jQuery.makeArray(data));}else{queue.push(data);}}
return queue||[];}},dequeue:function(elem,type){type=type||"fx";var queue=jQuery.queue(elem,type),startLength=queue.length,fn=queue.shift(),hooks=jQuery._queueHooks(elem,type),next=function(){jQuery.dequeue(elem,type);};if(fn==="inprogress"){fn=queue.shift();startLength--;}
if(fn){if(type==="fx"){queue.unshift("inprogress");}
delete hooks.stop;fn.call(elem,next,hooks);}
if(!startLength&&hooks){hooks.empty.fire();}},_queueHooks:function(elem,type){var key=type+"queueHooks";return dataPriv.get(elem,key)||dataPriv.access(elem,key,{empty:jQuery.Callbacks("once memory").add(function(){dataPriv.remove(elem,[type+"queue",key]);})});}});jQuery.fn.extend({queue:function(type,data){var setter=2;if(typeof type!=="string"){data=type;type="fx";setter--;}
if(arguments.length<setter){return jQuery.queue(this[0],type);}
return data===undefined?this:this.each(function(){var queue=jQuery.queue(this,type,data);jQuery._queueHooks(this,type);if(type==="fx"&&queue[0]!=="inprogress"){jQuery.dequeue(this,type);}});},dequeue:function(type){return this.each(function(){jQuery.dequeue(this,type);});},clearQueue:function(type){return this.queue(type||"fx",[]);},promise:function(type,obj){var tmp,count=1,defer=jQuery.Deferred(),elements=this,i=this.length,resolve=function(){if(!(--count)){defer.resolveWith(elements,[elements]);}};if(typeof type!=="string"){obj=type;type=undefined;}
type=type||"fx";while(i--){tmp=dataPriv.get(elements[i],type+"queueHooks");if(tmp&&tmp.empty){count++;tmp.empty.add(resolve);}}
resolve();return defer.promise(obj);}});var pnum=(/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;var rcssNum=new RegExp("^(?:([+-])=|)("+pnum+")([a-z%]*)$","i");var cssExpand=["Top","Right","Bottom","Left"];var documentElement=document.documentElement;var isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem);},composed={composed:true};if(documentElement.getRootNode){isAttached=function(elem){return jQuery.contains(elem.ownerDocument,elem)||elem.getRootNode(composed)===elem.ownerDocument;};}
var isHiddenWithinTree=function(elem,el){elem=el||elem;return elem.style.display==="none"||elem.style.display===""&&isAttached(elem)&&jQuery.css(elem,"display")==="none";};function adjustCSS(elem,prop,valueParts,tween){var adjusted,scale,maxIterations=20,currentValue=tween?function(){return tween.cur();}:function(){return jQuery.css(elem,prop,"");},initial=currentValue(),unit=valueParts&&valueParts[3]||(jQuery.cssNumber[prop]?"":"px"),initialInUnit=elem.nodeType&&(jQuery.cssNumber[prop]||unit!=="px"&&+initial)&&rcssNum.exec(jQuery.css(elem,prop));if(initialInUnit&&initialInUnit[3]!==unit){initial=initial/2;unit=unit||initialInUnit[3];initialInUnit=+initial||1;while(maxIterations--){jQuery.style(elem,prop,initialInUnit+unit);if((1-scale)*(1-(scale=currentValue()/initial||0.5))<=0){maxIterations=0;}
initialInUnit=initialInUnit/scale;}
initialInUnit=initialInUnit*2;jQuery.style(elem,prop,initialInUnit+unit);valueParts=valueParts||[];}
if(valueParts){initialInUnit=+initialInUnit||+initial||0;adjusted=valueParts[1]?initialInUnit+(valueParts[1]+1)*valueParts[2]:+valueParts[2];if(tween){tween.unit=unit;tween.start=initialInUnit;tween.end=adjusted;}}
return adjusted;}
var defaultDisplayMap={};function getDefaultDisplay(elem){var temp,doc=elem.ownerDocument,nodeName=elem.nodeName,display=defaultDisplayMap[nodeName];if(display){return display;}
temp=doc.body.appendChild(doc.createElement(nodeName));display=jQuery.css(temp,"display");temp.parentNode.removeChild(temp);if(display==="none"){display="block";}
defaultDisplayMap[nodeName]=display;return display;}
function showHide(elements,show){var display,elem,values=[],index=0,length=elements.length;for(;index<length;index++){elem=elements[index];if(!elem.style){continue;}
display=elem.style.display;if(show){if(display==="none"){values[index]=dataPriv.get(elem,"display")||null;if(!values[index]){elem.style.display="";}}
if(elem.style.display===""&&isHiddenWithinTree(elem)){values[index]=getDefaultDisplay(elem);}}else{if(display!=="none"){values[index]="none";dataPriv.set(elem,"display",display);}}}
for(index=0;index<length;index++){if(values[index]!=null){elements[index].style.display=values[index];}}
return elements;}
jQuery.fn.extend({show:function(){return showHide(this,true);},hide:function(){return showHide(this);},toggle:function(state){if(typeof state==="boolean"){return state?this.show():this.hide();}
return this.each(function(){if(isHiddenWithinTree(this)){jQuery(this).show();}else{jQuery(this).hide();}});}});var rcheckableType=(/^(?:checkbox|radio)$/i);var rtagName=(/<([a-z][^\/\0>\x20\t\r\n\f]*)/i);var rscriptType=(/^$|^module$|\/(?:java|ecma)script/i);(function(){var fragment=document.createDocumentFragment(),div=fragment.appendChild(document.createElement("div")),input=document.createElement("input");input.setAttribute("type","radio");input.setAttribute("checked","checked");input.setAttribute("name","t");div.appendChild(input);support.checkClone=div.cloneNode(true).cloneNode(true).lastChild.checked;div.innerHTML="<textarea>x</textarea>";support.noCloneChecked=!!div.cloneNode(true).lastChild.defaultValue;div.innerHTML="<option></option>";support.option=!!div.lastChild;})();var wrapMap={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};wrapMap.tbody=wrapMap.tfoot=wrapMap.colgroup=wrapMap.caption=wrapMap.thead;wrapMap.th=wrapMap.td;if(!support.option){wrapMap.optgroup=wrapMap.option=[1,"<select multiple='multiple'>","</select>"];}
function getAll(context,tag){var ret;if(typeof context.getElementsByTagName!=="undefined"){ret=context.getElementsByTagName(tag||"*");}else if(typeof context.querySelectorAll!=="undefined"){ret=context.querySelectorAll(tag||"*");}else{ret=[];}
if(tag===undefined||tag&&nodeName(context,tag)){return jQuery.merge([context],ret);}
return ret;}
function setGlobalEval(elems,refElements){var i=0,l=elems.length;for(;i<l;i++){dataPriv.set(elems[i],"globalEval",!refElements||dataPriv.get(refElements[i],"globalEval"));}}
var rhtml=/<|&#?\w+;/;function buildFragment(elems,context,scripts,selection,ignored){var elem,tmp,tag,wrap,attached,j,fragment=context.createDocumentFragment(),nodes=[],i=0,l=elems.length;for(;i<l;i++){elem=elems[i];if(elem||elem===0){if(toType(elem)==="object"){jQuery.merge(nodes,elem.nodeType?[elem]:elem);}else if(!rhtml.test(elem)){nodes.push(context.createTextNode(elem));}else{tmp=tmp||fragment.appendChild(context.createElement("div"));tag=(rtagName.exec(elem)||["",""])[1].toLowerCase();wrap=wrapMap[tag]||wrapMap._default;tmp.innerHTML=wrap[1]+jQuery.htmlPrefilter(elem)+wrap[2];j=wrap[0];while(j--){tmp=tmp.lastChild;}
jQuery.merge(nodes,tmp.childNodes);tmp=fragment.firstChild;tmp.textContent="";}}}
fragment.textContent="";i=0;while((elem=nodes[i++])){if(selection&&jQuery.inArray(elem,selection)>-1){if(ignored){ignored.push(elem);}
continue;}
attached=isAttached(elem);tmp=getAll(fragment.appendChild(elem),"script");if(attached){setGlobalEval(tmp);}
if(scripts){j=0;while((elem=tmp[j++])){if(rscriptType.test(elem.type||"")){scripts.push(elem);}}}}
return fragment;}
var rtypenamespace=/^([^.]*)(?:\.(.+)|)/;function returnTrue(){return true;}
function returnFalse(){return false;}
function expectSync(elem,type){return(elem===safeActiveElement())===(type==="focus");}
function safeActiveElement(){try{return document.activeElement;}catch(err){}}
function on(elem,types,selector,data,fn,one){var origFn,type;if(typeof types==="object"){if(typeof selector!=="string"){data=data||selector;selector=undefined;}
for(type in types){on(elem,type,selector,data,types[type],one);}
return elem;}
if(data==null&&fn==null){fn=selector;data=selector=undefined;}else if(fn==null){if(typeof selector==="string"){fn=data;data=undefined;}else{fn=data;data=selector;selector=undefined;}}
if(fn===false){fn=returnFalse;}else if(!fn){return elem;}
if(one===1){origFn=fn;fn=function(event){jQuery().off(event);return origFn.apply(this,arguments);};fn.guid=origFn.guid||(origFn.guid=jQuery.guid++);}
return elem.each(function(){jQuery.event.add(this,types,fn,data,selector);});}
jQuery.event={global:{},add:function(elem,types,handler,data,selector){var handleObjIn,eventHandle,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.get(elem);if(!acceptData(elem)){return;}
if(handler.handler){handleObjIn=handler;handler=handleObjIn.handler;selector=handleObjIn.selector;}
if(selector){jQuery.find.matchesSelector(documentElement,selector);}
if(!handler.guid){handler.guid=jQuery.guid++;}
if(!(events=elemData.events)){events=elemData.events=Object.create(null);}
if(!(eventHandle=elemData.handle)){eventHandle=elemData.handle=function(e){return typeof jQuery!=="undefined"&&jQuery.event.triggered!==e.type?jQuery.event.dispatch.apply(elem,arguments):undefined;};}
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){continue;}
special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;special=jQuery.event.special[type]||{};handleObj=jQuery.extend({type:type,origType:origType,data:data,handler:handler,guid:handler.guid,selector:selector,needsContext:selector&&jQuery.expr.match.needsContext.test(selector),namespace:namespaces.join(".")},handleObjIn);if(!(handlers=events[type])){handlers=events[type]=[];handlers.delegateCount=0;if(!special.setup||special.setup.call(elem,data,namespaces,eventHandle)===false){if(elem.addEventListener){elem.addEventListener(type,eventHandle);}}}
if(special.add){special.add.call(elem,handleObj);if(!handleObj.handler.guid){handleObj.handler.guid=handler.guid;}}
if(selector){handlers.splice(handlers.delegateCount++,0,handleObj);}else{handlers.push(handleObj);}
jQuery.event.global[type]=true;}},remove:function(elem,types,handler,selector,mappedTypes){var j,origCount,tmp,events,t,handleObj,special,handlers,type,namespaces,origType,elemData=dataPriv.hasData(elem)&&dataPriv.get(elem);if(!elemData||!(events=elemData.events)){return;}
types=(types||"").match(rnothtmlwhite)||[""];t=types.length;while(t--){tmp=rtypenamespace.exec(types[t])||[];type=origType=tmp[1];namespaces=(tmp[2]||"").split(".").sort();if(!type){for(type in events){jQuery.event.remove(elem,type+types[t],handler,selector,true);}
continue;}
special=jQuery.event.special[type]||{};type=(selector?special.delegateType:special.bindType)||type;handlers=events[type]||[];tmp=tmp[2]&&new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)");origCount=j=handlers.length;while(j--){handleObj=handlers[j];if((mappedTypes||origType===handleObj.origType)&&(!handler||handler.guid===handleObj.guid)&&(!tmp||tmp.test(handleObj.namespace))&&(!selector||selector===handleObj.selector||selector==="**"&&handleObj.selector)){handlers.splice(j,1);if(handleObj.selector){handlers.delegateCount--;}
if(special.remove){special.remove.call(elem,handleObj);}}}
if(origCount&&!handlers.length){if(!special.teardown||special.teardown.call(elem,namespaces,elemData.handle)===false){jQuery.removeEvent(elem,type,elemData.handle);}
delete events[type];}}
if(jQuery.isEmptyObject(events)){dataPriv.remove(elem,"handle events");}},dispatch:function(nativeEvent){var i,j,ret,matched,handleObj,handlerQueue,args=new Array(arguments.length),event=jQuery.event.fix(nativeEvent),handlers=(dataPriv.get(this,"events")||Object.create(null))[event.type]||[],special=jQuery.event.special[event.type]||{};args[0]=event;for(i=1;i<arguments.length;i++){args[i]=arguments[i];}
event.delegateTarget=this;if(special.preDispatch&&special.preDispatch.call(this,event)===false){return;}
handlerQueue=jQuery.event.handlers.call(this,event,handlers);i=0;while((matched=handlerQueue[i++])&&!event.isPropagationStopped()){event.currentTarget=matched.elem;j=0;while((handleObj=matched.handlers[j++])&&!event.isImmediatePropagationStopped()){if(!event.rnamespace||handleObj.namespace===false||event.rnamespace.test(handleObj.namespace)){event.handleObj=handleObj;event.data=handleObj.data;ret=((jQuery.event.special[handleObj.origType]||{}).handle||handleObj.handler).apply(matched.elem,args);if(ret!==undefined){if((event.result=ret)===false){event.preventDefault();event.stopPropagation();}}}}}
if(special.postDispatch){special.postDispatch.call(this,event);}
return event.result;},handlers:function(event,handlers){var i,handleObj,sel,matchedHandlers,matchedSelectors,handlerQueue=[],delegateCount=handlers.delegateCount,cur=event.target;if(delegateCount&&cur.nodeType&&!(event.type==="click"&&event.button>=1)){for(;cur!==this;cur=cur.parentNode||this){if(cur.nodeType===1&&!(event.type==="click"&&cur.disabled===true)){matchedHandlers=[];matchedSelectors={};for(i=0;i<delegateCount;i++){handleObj=handlers[i];sel=handleObj.selector+" ";if(matchedSelectors[sel]===undefined){matchedSelectors[sel]=handleObj.needsContext?jQuery(sel,this).index(cur)>-1:jQuery.find(sel,this,null,[cur]).length;}
if(matchedSelectors[sel]){matchedHandlers.push(handleObj);}}
if(matchedHandlers.length){handlerQueue.push({elem:cur,handlers:matchedHandlers});}}}}
cur=this;if(delegateCount<handlers.length){handlerQueue.push({elem:cur,handlers:handlers.slice(delegateCount)});}
return handlerQueue;},addProp:function(name,hook){Object.defineProperty(jQuery.Event.prototype,name,{enumerable:true,configurable:true,get:isFunction(hook)?function(){if(this.originalEvent){return hook(this.originalEvent);}}:function(){if(this.originalEvent){return this.originalEvent[name];}},set:function(value){Object.defineProperty(this,name,{enumerable:true,configurable:true,writable:true,value:value});}});},fix:function(originalEvent){return originalEvent[jQuery.expando]?originalEvent:new jQuery.Event(originalEvent);},special:{load:{noBubble:true},click:{setup:function(data){var el=this||data;if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){leverageNative(el,"click",returnTrue);}
return false;},trigger:function(data){var el=this||data;if(rcheckableType.test(el.type)&&el.click&&nodeName(el,"input")){leverageNative(el,"click");}
return true;},_default:function(event){var target=event.target;return rcheckableType.test(target.type)&&target.click&&nodeName(target,"input")&&dataPriv.get(target,"click")||nodeName(target,"a");}},beforeunload:{postDispatch:function(event){if(event.result!==undefined&&event.originalEvent){event.originalEvent.returnValue=event.result;}}}}};function leverageNative(el,type,expectSync){if(!expectSync){if(dataPriv.get(el,type)===undefined){jQuery.event.add(el,type,returnTrue);}
return;}
dataPriv.set(el,type,false);jQuery.event.add(el,type,{namespace:false,handler:function(event){var notAsync,result,saved=dataPriv.get(this,type);if((event.isTrigger&1)&&this[type]){if(!saved.length){saved=slice.call(arguments);dataPriv.set(this,type,saved);notAsync=expectSync(this,type);this[type]();result=dataPriv.get(this,type);if(saved!==result||notAsync){dataPriv.set(this,type,false);}else{result={};}
if(saved!==result){event.stopImmediatePropagation();event.preventDefault();return result&&result.value;}}else if((jQuery.event.special[type]||{}).delegateType){event.stopPropagation();}}else if(saved.length){dataPriv.set(this,type,{value:jQuery.event.trigger(jQuery.extend(saved[0],jQuery.Event.prototype),saved.slice(1),this)});event.stopImmediatePropagation();}}});}
jQuery.removeEvent=function(elem,type,handle){if(elem.removeEventListener){elem.removeEventListener(type,handle);}};jQuery.Event=function(src,props){if(!(this instanceof jQuery.Event)){return new jQuery.Event(src,props);}
if(src&&src.type){this.originalEvent=src;this.type=src.type;this.isDefaultPrevented=src.defaultPrevented||src.defaultPrevented===undefined&&src.returnValue===false?returnTrue:returnFalse;this.target=(src.target&&src.target.nodeType===3)?src.target.parentNode:src.target;this.currentTarget=src.currentTarget;this.relatedTarget=src.relatedTarget;}else{this.type=src;}
if(props){jQuery.extend(this,props);}
this.timeStamp=src&&src.timeStamp||Date.now();this[jQuery.expando]=true;};jQuery.Event.prototype={constructor:jQuery.Event,isDefaultPrevented:returnFalse,isPropagationStopped:returnFalse,isImmediatePropagationStopped:returnFalse,isSimulated:false,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=returnTrue;if(e&&!this.isSimulated){e.preventDefault();}},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopPropagation();}},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=returnTrue;if(e&&!this.isSimulated){e.stopImmediatePropagation();}
this.stopPropagation();}};jQuery.each({altKey:true,bubbles:true,cancelable:true,changedTouches:true,ctrlKey:true,detail:true,eventPhase:true,metaKey:true,pageX:true,pageY:true,shiftKey:true,view:true,"char":true,code:true,charCode:true,key:true,keyCode:true,button:true,buttons:true,clientX:true,clientY:true,offsetX:true,offsetY:true,pointerId:true,pointerType:true,screenX:true,screenY:true,targetTouches:true,toElement:true,touches:true,which:true},jQuery.event.addProp);jQuery.each({focus:"focusin",blur:"focusout"},function(type,delegateType){jQuery.event.special[type]={setup:function(){leverageNative(this,type,expectSync);return false;},trigger:function(){leverageNative(this,type);return true;},_default:function(event){return dataPriv.get(event.target,type);},delegateType:delegateType};});jQuery.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(orig,fix){jQuery.event.special[orig]={delegateType:fix,bindType:fix,handle:function(event){var ret,target=this,related=event.relatedTarget,handleObj=event.handleObj;if(!related||(related!==target&&!jQuery.contains(target,related))){event.type=handleObj.origType;ret=handleObj.handler.apply(this,arguments);event.type=fix;}
return ret;}};});jQuery.fn.extend({on:function(types,selector,data,fn){return on(this,types,selector,data,fn);},one:function(types,selector,data,fn){return on(this,types,selector,data,fn,1);},off:function(types,selector,fn){var handleObj,type;if(types&&types.preventDefault&&types.handleObj){handleObj=types.handleObj;jQuery(types.delegateTarget).off(handleObj.namespace?handleObj.origType+"."+handleObj.namespace:handleObj.origType,handleObj.selector,handleObj.handler);return this;}
if(typeof types==="object"){for(type in types){this.off(type,selector,types[type]);}
return this;}
if(selector===false||typeof selector==="function"){fn=selector;selector=undefined;}
if(fn===false){fn=returnFalse;}
return this.each(function(){jQuery.event.remove(this,types,fn,selector);});}});var
rnoInnerhtml=/<script|<style|<link/i,rchecked=/checked\s*(?:[^=]|=\s*.checked.)/i,rcleanScript=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function manipulationTarget(elem,content){if(nodeName(elem,"table")&&nodeName(content.nodeType!==11?content:content.firstChild,"tr")){return jQuery(elem).children("tbody")[0]||elem;}
return elem;}
function disableScript(elem){elem.type=(elem.getAttribute("type")!==null)+"/"+elem.type;return elem;}
function restoreScript(elem){if((elem.type||"").slice(0,5)==="true/"){elem.type=elem.type.slice(5);}else{elem.removeAttribute("type");}
return elem;}
function cloneCopyEvent(src,dest){var i,l,type,pdataOld,udataOld,udataCur,events;if(dest.nodeType!==1){return;}
if(dataPriv.hasData(src)){pdataOld=dataPriv.get(src);events=pdataOld.events;if(events){dataPriv.remove(dest,"handle events");for(type in events){for(i=0,l=events[type].length;i<l;i++){jQuery.event.add(dest,type,events[type][i]);}}}}
if(dataUser.hasData(src)){udataOld=dataUser.access(src);udataCur=jQuery.extend({},udataOld);dataUser.set(dest,udataCur);}}
function fixInput(src,dest){var nodeName=dest.nodeName.toLowerCase();if(nodeName==="input"&&rcheckableType.test(src.type)){dest.checked=src.checked;}else if(nodeName==="input"||nodeName==="textarea"){dest.defaultValue=src.defaultValue;}}
function domManip(collection,args,callback,ignored){args=flat(args);var fragment,first,scripts,hasScripts,node,doc,i=0,l=collection.length,iNoClone=l-1,value=args[0],valueIsFunction=isFunction(value);if(valueIsFunction||(l>1&&typeof value==="string"&&!support.checkClone&&rchecked.test(value))){return collection.each(function(index){var self=collection.eq(index);if(valueIsFunction){args[0]=value.call(this,index,self.html());}
domManip(self,args,callback,ignored);});}
if(l){fragment=buildFragment(args,collection[0].ownerDocument,false,collection,ignored);first=fragment.firstChild;if(fragment.childNodes.length===1){fragment=first;}
if(first||ignored){scripts=jQuery.map(getAll(fragment,"script"),disableScript);hasScripts=scripts.length;for(;i<l;i++){node=fragment;if(i!==iNoClone){node=jQuery.clone(node,true,true);if(hasScripts){jQuery.merge(scripts,getAll(node,"script"));}}
callback.call(collection[i],node,i);}
if(hasScripts){doc=scripts[scripts.length-1].ownerDocument;jQuery.map(scripts,restoreScript);for(i=0;i<hasScripts;i++){node=scripts[i];if(rscriptType.test(node.type||"")&&!dataPriv.access(node,"globalEval")&&jQuery.contains(doc,node)){if(node.src&&(node.type||"").toLowerCase()!=="module"){if(jQuery._evalUrl&&!node.noModule){jQuery._evalUrl(node.src,{nonce:node.nonce||node.getAttribute("nonce")},doc);}}else{DOMEval(node.textContent.replace(rcleanScript,""),node,doc);}}}}}}
return collection;}
function remove(elem,selector,keepData){var node,nodes=selector?jQuery.filter(selector,elem):elem,i=0;for(;(node=nodes[i])!=null;i++){if(!keepData&&node.nodeType===1){jQuery.cleanData(getAll(node));}
if(node.parentNode){if(keepData&&isAttached(node)){setGlobalEval(getAll(node,"script"));}
node.parentNode.removeChild(node);}}
return elem;}
jQuery.extend({htmlPrefilter:function(html){return html;},clone:function(elem,dataAndEvents,deepDataAndEvents){var i,l,srcElements,destElements,clone=elem.cloneNode(true),inPage=isAttached(elem);if(!support.noCloneChecked&&(elem.nodeType===1||elem.nodeType===11)&&!jQuery.isXMLDoc(elem)){destElements=getAll(clone);srcElements=getAll(elem);for(i=0,l=srcElements.length;i<l;i++){fixInput(srcElements[i],destElements[i]);}}
if(dataAndEvents){if(deepDataAndEvents){srcElements=srcElements||getAll(elem);destElements=destElements||getAll(clone);for(i=0,l=srcElements.length;i<l;i++){cloneCopyEvent(srcElements[i],destElements[i]);}}else{cloneCopyEvent(elem,clone);}}
destElements=getAll(clone,"script");if(destElements.length>0){setGlobalEval(destElements,!inPage&&getAll(elem,"script"));}
return clone;},cleanData:function(elems){var data,elem,type,special=jQuery.event.special,i=0;for(;(elem=elems[i])!==undefined;i++){if(acceptData(elem)){if((data=elem[dataPriv.expando])){if(data.events){for(type in data.events){if(special[type]){jQuery.event.remove(elem,type);}else{jQuery.removeEvent(elem,type,data.handle);}}}
elem[dataPriv.expando]=undefined;}
if(elem[dataUser.expando]){elem[dataUser.expando]=undefined;}}}}});jQuery.fn.extend({detach:function(selector){return remove(this,selector,true);},remove:function(selector){return remove(this,selector);},text:function(value){return access(this,function(value){return value===undefined?jQuery.text(this):this.empty().each(function(){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){this.textContent=value;}});},null,value,arguments.length);},append:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.appendChild(elem);}});},prepend:function(){return domManip(this,arguments,function(elem){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var target=manipulationTarget(this,elem);target.insertBefore(elem,target.firstChild);}});},before:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this);}});},after:function(){return domManip(this,arguments,function(elem){if(this.parentNode){this.parentNode.insertBefore(elem,this.nextSibling);}});},empty:function(){var elem,i=0;for(;(elem=this[i])!=null;i++){if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.textContent="";}}
return this;},clone:function(dataAndEvents,deepDataAndEvents){dataAndEvents=dataAndEvents==null?false:dataAndEvents;deepDataAndEvents=deepDataAndEvents==null?dataAndEvents:deepDataAndEvents;return this.map(function(){return jQuery.clone(this,dataAndEvents,deepDataAndEvents);});},html:function(value){return access(this,function(value){var elem=this[0]||{},i=0,l=this.length;if(value===undefined&&elem.nodeType===1){return elem.innerHTML;}
if(typeof value==="string"&&!rnoInnerhtml.test(value)&&!wrapMap[(rtagName.exec(value)||["",""])[1].toLowerCase()]){value=jQuery.htmlPrefilter(value);try{for(;i<l;i++){elem=this[i]||{};if(elem.nodeType===1){jQuery.cleanData(getAll(elem,false));elem.innerHTML=value;}}
elem=0;}catch(e){}}
if(elem){this.empty().append(value);}},null,value,arguments.length);},replaceWith:function(){var ignored=[];return domManip(this,arguments,function(elem){var parent=this.parentNode;if(jQuery.inArray(this,ignored)<0){jQuery.cleanData(getAll(this));if(parent){parent.replaceChild(elem,this);}}},ignored);}});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(selector){var elems,ret=[],insert=jQuery(selector),last=insert.length-1,i=0;for(;i<=last;i++){elems=i===last?this:this.clone(true);jQuery(insert[i])[original](elems);push.apply(ret,elems.get());}
return this.pushStack(ret);};});var rnumnonpx=new RegExp("^("+pnum+")(?!px)[a-z%]+$","i");var rcustomProp=/^--/;var getStyles=function(elem){var view=elem.ownerDocument.defaultView;if(!view||!view.opener){view=window;}
return view.getComputedStyle(elem);};var swap=function(elem,options,callback){var ret,name,old={};for(name in options){old[name]=elem.style[name];elem.style[name]=options[name];}
ret=callback.call(elem);for(name in options){elem.style[name]=old[name];}
return ret;};var rboxStyle=new RegExp(cssExpand.join("|"),"i");var whitespace="[\\x20\\t\\r\\n\\f]";var rtrimCSS=new RegExp("^"+whitespace+"+|((?:^|[^\\\\])(?:\\\\.)*)"+whitespace+"+$","g");(function(){function computeStyleTests(){if(!div){return;}
container.style.cssText="position:absolute;left:-11111px;width:60px;"+"margin-top:1px;padding:0;border:0";div.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;"+"margin:auto;border:1px;padding:1px;"+"width:60%;top:1%";documentElement.appendChild(container).appendChild(div);var divStyle=window.getComputedStyle(div);pixelPositionVal=divStyle.top!=="1%";reliableMarginLeftVal=roundPixelMeasures(divStyle.marginLeft)===12;div.style.right="60%";pixelBoxStylesVal=roundPixelMeasures(divStyle.right)===36;boxSizingReliableVal=roundPixelMeasures(divStyle.width)===36;div.style.position="absolute";scrollboxSizeVal=roundPixelMeasures(div.offsetWidth/3)===12;documentElement.removeChild(container);div=null;}
function roundPixelMeasures(measure){return Math.round(parseFloat(measure));}
var pixelPositionVal,boxSizingReliableVal,scrollboxSizeVal,pixelBoxStylesVal,reliableTrDimensionsVal,reliableMarginLeftVal,container=document.createElement("div"),div=document.createElement("div");if(!div.style){return;}
div.style.backgroundClip="content-box";div.cloneNode(true).style.backgroundClip="";support.clearCloneStyle=div.style.backgroundClip==="content-box";jQuery.extend(support,{boxSizingReliable:function(){computeStyleTests();return boxSizingReliableVal;},pixelBoxStyles:function(){computeStyleTests();return pixelBoxStylesVal;},pixelPosition:function(){computeStyleTests();return pixelPositionVal;},reliableMarginLeft:function(){computeStyleTests();return reliableMarginLeftVal;},scrollboxSize:function(){computeStyleTests();return scrollboxSizeVal;},reliableTrDimensions:function(){var table,tr,trChild,trStyle;if(reliableTrDimensionsVal==null){table=document.createElement("table");tr=document.createElement("tr");trChild=document.createElement("div");table.style.cssText="position:absolute;left:-11111px;border-collapse:separate";tr.style.cssText="border:1px solid";tr.style.height="1px";trChild.style.height="9px";trChild.style.display="block";documentElement.appendChild(table).appendChild(tr).appendChild(trChild);trStyle=window.getComputedStyle(tr);reliableTrDimensionsVal=(parseInt(trStyle.height,10)+
parseInt(trStyle.borderTopWidth,10)+
parseInt(trStyle.borderBottomWidth,10))===tr.offsetHeight;documentElement.removeChild(table);}
return reliableTrDimensionsVal;}});})();function curCSS(elem,name,computed){var width,minWidth,maxWidth,ret,isCustomProp=rcustomProp.test(name),style=elem.style;computed=computed||getStyles(elem);if(computed){ret=computed.getPropertyValue(name)||computed[name];if(isCustomProp&&ret){ret=ret.replace(rtrimCSS,"$1")||undefined;}
if(ret===""&&!isAttached(elem)){ret=jQuery.style(elem,name);}
if(!support.pixelBoxStyles()&&rnumnonpx.test(ret)&&rboxStyle.test(name)){width=style.width;minWidth=style.minWidth;maxWidth=style.maxWidth;style.minWidth=style.maxWidth=style.width=ret;ret=computed.width;style.width=width;style.minWidth=minWidth;style.maxWidth=maxWidth;}}
return ret!==undefined?ret+"":ret;}
function addGetHookIf(conditionFn,hookFn){return{get:function(){if(conditionFn()){delete this.get;return;}
return(this.get=hookFn).apply(this,arguments);}};}
var cssPrefixes=["Webkit","Moz","ms"],emptyStyle=document.createElement("div").style,vendorProps={};function vendorPropName(name){var capName=name[0].toUpperCase()+name.slice(1),i=cssPrefixes.length;while(i--){name=cssPrefixes[i]+capName;if(name in emptyStyle){return name;}}}
function finalPropName(name){var final=jQuery.cssProps[name]||vendorProps[name];if(final){return final;}
if(name in emptyStyle){return name;}
return vendorProps[name]=vendorPropName(name)||name;}
var
rdisplayswap=/^(none|table(?!-c[ea]).+)/,cssShow={position:"absolute",visibility:"hidden",display:"block"},cssNormalTransform={letterSpacing:"0",fontWeight:"400"};function setPositiveNumber(_elem,value,subtract){var matches=rcssNum.exec(value);return matches?Math.max(0,matches[2]-(subtract||0))+(matches[3]||"px"):value;}
function boxModelAdjustment(elem,dimension,box,isBorderBox,styles,computedVal){var i=dimension==="width"?1:0,extra=0,delta=0;if(box===(isBorderBox?"border":"content")){return 0;}
for(;i<4;i+=2){if(box==="margin"){delta+=jQuery.css(elem,box+cssExpand[i],true,styles);}
if(!isBorderBox){delta+=jQuery.css(elem,"padding"+cssExpand[i],true,styles);if(box!=="padding"){delta+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}else{extra+=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}}else{if(box==="content"){delta-=jQuery.css(elem,"padding"+cssExpand[i],true,styles);}
if(box!=="margin"){delta-=jQuery.css(elem,"border"+cssExpand[i]+"Width",true,styles);}}}
if(!isBorderBox&&computedVal>=0){delta+=Math.max(0,Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-
computedVal-
delta-
extra-
0.5))||0;}
return delta;}
function getWidthOrHeight(elem,dimension,extra){var styles=getStyles(elem),boxSizingNeeded=!support.boxSizingReliable()||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",valueIsBorderBox=isBorderBox,val=curCSS(elem,dimension,styles),offsetProp="offset"+dimension[0].toUpperCase()+dimension.slice(1);if(rnumnonpx.test(val)){if(!extra){return val;}
val="auto";}
if((!support.boxSizingReliable()&&isBorderBox||!support.reliableTrDimensions()&&nodeName(elem,"tr")||val==="auto"||!parseFloat(val)&&jQuery.css(elem,"display",false,styles)==="inline")&&elem.getClientRects().length){isBorderBox=jQuery.css(elem,"boxSizing",false,styles)==="border-box";valueIsBorderBox=offsetProp in elem;if(valueIsBorderBox){val=elem[offsetProp];}}
val=parseFloat(val)||0;return(val+
boxModelAdjustment(elem,dimension,extra||(isBorderBox?"border":"content"),valueIsBorderBox,styles,val))+"px";}
jQuery.extend({cssHooks:{opacity:{get:function(elem,computed){if(computed){var ret=curCSS(elem,"opacity");return ret===""?"1":ret;}}}},cssNumber:{"animationIterationCount":true,"columnCount":true,"fillOpacity":true,"flexGrow":true,"flexShrink":true,"fontWeight":true,"gridArea":true,"gridColumn":true,"gridColumnEnd":true,"gridColumnStart":true,"gridRow":true,"gridRowEnd":true,"gridRowStart":true,"lineHeight":true,"opacity":true,"order":true,"orphans":true,"widows":true,"zIndex":true,"zoom":true},cssProps:{},style:function(elem,name,value,extra){if(!elem||elem.nodeType===3||elem.nodeType===8||!elem.style){return;}
var ret,type,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name),style=elem.style;if(!isCustomProp){name=finalPropName(origName);}
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(value!==undefined){type=typeof value;if(type==="string"&&(ret=rcssNum.exec(value))&&ret[1]){value=adjustCSS(elem,name,ret);type="number";}
if(value==null||value!==value){return;}
if(type==="number"&&!isCustomProp){value+=ret&&ret[3]||(jQuery.cssNumber[origName]?"":"px");}
if(!support.clearCloneStyle&&value===""&&name.indexOf("background")===0){style[name]="inherit";}
if(!hooks||!("set"in hooks)||(value=hooks.set(elem,value,extra))!==undefined){if(isCustomProp){style.setProperty(name,value);}else{style[name]=value;}}}else{if(hooks&&"get"in hooks&&(ret=hooks.get(elem,false,extra))!==undefined){return ret;}
return style[name];}},css:function(elem,name,extra,styles){var val,num,hooks,origName=camelCase(name),isCustomProp=rcustomProp.test(name);if(!isCustomProp){name=finalPropName(origName);}
hooks=jQuery.cssHooks[name]||jQuery.cssHooks[origName];if(hooks&&"get"in hooks){val=hooks.get(elem,true,extra);}
if(val===undefined){val=curCSS(elem,name,styles);}
if(val==="normal"&&name in cssNormalTransform){val=cssNormalTransform[name];}
if(extra===""||extra){num=parseFloat(val);return extra===true||isFinite(num)?num||0:val;}
return val;}});jQuery.each(["height","width"],function(_i,dimension){jQuery.cssHooks[dimension]={get:function(elem,computed,extra){if(computed){return rdisplayswap.test(jQuery.css(elem,"display"))&&(!elem.getClientRects().length||!elem.getBoundingClientRect().width)?swap(elem,cssShow,function(){return getWidthOrHeight(elem,dimension,extra);}):getWidthOrHeight(elem,dimension,extra);}},set:function(elem,value,extra){var matches,styles=getStyles(elem),scrollboxSizeBuggy=!support.scrollboxSize()&&styles.position==="absolute",boxSizingNeeded=scrollboxSizeBuggy||extra,isBorderBox=boxSizingNeeded&&jQuery.css(elem,"boxSizing",false,styles)==="border-box",subtract=extra?boxModelAdjustment(elem,dimension,extra,isBorderBox,styles):0;if(isBorderBox&&scrollboxSizeBuggy){subtract-=Math.ceil(elem["offset"+dimension[0].toUpperCase()+dimension.slice(1)]-
parseFloat(styles[dimension])-
boxModelAdjustment(elem,dimension,"border",false,styles)-
0.5);}
if(subtract&&(matches=rcssNum.exec(value))&&(matches[3]||"px")!=="px"){elem.style[dimension]=value;value=jQuery.css(elem,dimension);}
return setPositiveNumber(elem,value,subtract);}};});jQuery.cssHooks.marginLeft=addGetHookIf(support.reliableMarginLeft,function(elem,computed){if(computed){return(parseFloat(curCSS(elem,"marginLeft"))||elem.getBoundingClientRect().left-
swap(elem,{marginLeft:0},function(){return elem.getBoundingClientRect().left;}))+"px";}});jQuery.each({margin:"",padding:"",border:"Width"},function(prefix,suffix){jQuery.cssHooks[prefix+suffix]={expand:function(value){var i=0,expanded={},parts=typeof value==="string"?value.split(" "):[value];for(;i<4;i++){expanded[prefix+cssExpand[i]+suffix]=parts[i]||parts[i-2]||parts[0];}
return expanded;}};if(prefix!=="margin"){jQuery.cssHooks[prefix+suffix].set=setPositiveNumber;}});jQuery.fn.extend({css:function(name,value){return access(this,function(elem,name,value){var styles,len,map={},i=0;if(Array.isArray(name)){styles=getStyles(elem);len=name.length;for(;i<len;i++){map[name[i]]=jQuery.css(elem,name[i],false,styles);}
return map;}
return value!==undefined?jQuery.style(elem,name,value):jQuery.css(elem,name);},name,value,arguments.length>1);}});function Tween(elem,options,prop,end,easing){return new Tween.prototype.init(elem,options,prop,end,easing);}
jQuery.Tween=Tween;Tween.prototype={constructor:Tween,init:function(elem,options,prop,end,easing,unit){this.elem=elem;this.prop=prop;this.easing=easing||jQuery.easing._default;this.options=options;this.start=this.now=this.cur();this.end=end;this.unit=unit||(jQuery.cssNumber[prop]?"":"px");},cur:function(){var hooks=Tween.propHooks[this.prop];return hooks&&hooks.get?hooks.get(this):Tween.propHooks._default.get(this);},run:function(percent){var eased,hooks=Tween.propHooks[this.prop];if(this.options.duration){this.pos=eased=jQuery.easing[this.easing](percent,this.options.duration*percent,0,1,this.options.duration);}else{this.pos=eased=percent;}
this.now=(this.end-this.start)*eased+this.start;if(this.options.step){this.options.step.call(this.elem,this.now,this);}
if(hooks&&hooks.set){hooks.set(this);}else{Tween.propHooks._default.set(this);}
return this;}};Tween.prototype.init.prototype=Tween.prototype;Tween.propHooks={_default:{get:function(tween){var result;if(tween.elem.nodeType!==1||tween.elem[tween.prop]!=null&&tween.elem.style[tween.prop]==null){return tween.elem[tween.prop];}
result=jQuery.css(tween.elem,tween.prop,"");return!result||result==="auto"?0:result;},set:function(tween){if(jQuery.fx.step[tween.prop]){jQuery.fx.step[tween.prop](tween);}else if(tween.elem.nodeType===1&&(jQuery.cssHooks[tween.prop]||tween.elem.style[finalPropName(tween.prop)]!=null)){jQuery.style(tween.elem,tween.prop,tween.now+tween.unit);}else{tween.elem[tween.prop]=tween.now;}}}};Tween.propHooks.scrollTop=Tween.propHooks.scrollLeft={set:function(tween){if(tween.elem.nodeType&&tween.elem.parentNode){tween.elem[tween.prop]=tween.now;}}};jQuery.easing={linear:function(p){return p;},swing:function(p){return 0.5-Math.cos(p*Math.PI)/2;},_default:"swing"};jQuery.fx=Tween.prototype.init;jQuery.fx.step={};var
fxNow,inProgress,rfxtypes=/^(?:toggle|show|hide)$/,rrun=/queueHooks$/;function schedule(){if(inProgress){if(document.hidden===false&&window.requestAnimationFrame){window.requestAnimationFrame(schedule);}else{window.setTimeout(schedule,jQuery.fx.interval);}
jQuery.fx.tick();}}
function createFxNow(){window.setTimeout(function(){fxNow=undefined;});return(fxNow=Date.now());}
function genFx(type,includeWidth){var which,i=0,attrs={height:type};includeWidth=includeWidth?1:0;for(;i<4;i+=2-includeWidth){which=cssExpand[i];attrs["margin"+which]=attrs["padding"+which]=type;}
if(includeWidth){attrs.opacity=attrs.width=type;}
return attrs;}
function createTween(value,prop,animation){var tween,collection=(Animation.tweeners[prop]||[]).concat(Animation.tweeners["*"]),index=0,length=collection.length;for(;index<length;index++){if((tween=collection[index].call(animation,prop,value))){return tween;}}}
function defaultPrefilter(elem,props,opts){var prop,value,toggle,hooks,oldfire,propTween,restoreDisplay,display,isBox="width"in props||"height"in props,anim=this,orig={},style=elem.style,hidden=elem.nodeType&&isHiddenWithinTree(elem),dataShow=dataPriv.get(elem,"fxshow");if(!opts.queue){hooks=jQuery._queueHooks(elem,"fx");if(hooks.unqueued==null){hooks.unqueued=0;oldfire=hooks.empty.fire;hooks.empty.fire=function(){if(!hooks.unqueued){oldfire();}};}
hooks.unqueued++;anim.always(function(){anim.always(function(){hooks.unqueued--;if(!jQuery.queue(elem,"fx").length){hooks.empty.fire();}});});}
for(prop in props){value=props[prop];if(rfxtypes.test(value)){delete props[prop];toggle=toggle||value==="toggle";if(value===(hidden?"hide":"show")){if(value==="show"&&dataShow&&dataShow[prop]!==undefined){hidden=true;}else{continue;}}
orig[prop]=dataShow&&dataShow[prop]||jQuery.style(elem,prop);}}
propTween=!jQuery.isEmptyObject(props);if(!propTween&&jQuery.isEmptyObject(orig)){return;}
if(isBox&&elem.nodeType===1){opts.overflow=[style.overflow,style.overflowX,style.overflowY];restoreDisplay=dataShow&&dataShow.display;if(restoreDisplay==null){restoreDisplay=dataPriv.get(elem,"display");}
display=jQuery.css(elem,"display");if(display==="none"){if(restoreDisplay){display=restoreDisplay;}else{showHide([elem],true);restoreDisplay=elem.style.display||restoreDisplay;display=jQuery.css(elem,"display");showHide([elem]);}}
if(display==="inline"||display==="inline-block"&&restoreDisplay!=null){if(jQuery.css(elem,"float")==="none"){if(!propTween){anim.done(function(){style.display=restoreDisplay;});if(restoreDisplay==null){display=style.display;restoreDisplay=display==="none"?"":display;}}
style.display="inline-block";}}}
if(opts.overflow){style.overflow="hidden";anim.always(function(){style.overflow=opts.overflow[0];style.overflowX=opts.overflow[1];style.overflowY=opts.overflow[2];});}
propTween=false;for(prop in orig){if(!propTween){if(dataShow){if("hidden"in dataShow){hidden=dataShow.hidden;}}else{dataShow=dataPriv.access(elem,"fxshow",{display:restoreDisplay});}
if(toggle){dataShow.hidden=!hidden;}
if(hidden){showHide([elem],true);}
anim.done(function(){if(!hidden){showHide([elem]);}
dataPriv.remove(elem,"fxshow");for(prop in orig){jQuery.style(elem,prop,orig[prop]);}});}
propTween=createTween(hidden?dataShow[prop]:0,prop,anim);if(!(prop in dataShow)){dataShow[prop]=propTween.start;if(hidden){propTween.end=propTween.start;propTween.start=0;}}}}
function propFilter(props,specialEasing){var index,name,easing,value,hooks;for(index in props){name=camelCase(index);easing=specialEasing[name];value=props[index];if(Array.isArray(value)){easing=value[1];value=props[index]=value[0];}
if(index!==name){props[name]=value;delete props[index];}
hooks=jQuery.cssHooks[name];if(hooks&&"expand"in hooks){value=hooks.expand(value);delete props[name];for(index in value){if(!(index in props)){props[index]=value[index];specialEasing[index]=easing;}}}else{specialEasing[name]=easing;}}}
function Animation(elem,properties,options){var result,stopped,index=0,length=Animation.prefilters.length,deferred=jQuery.Deferred().always(function(){delete tick.elem;}),tick=function(){if(stopped){return false;}
var currentTime=fxNow||createFxNow(),remaining=Math.max(0,animation.startTime+animation.duration-currentTime),temp=remaining/animation.duration||0,percent=1-temp,index=0,length=animation.tweens.length;for(;index<length;index++){animation.tweens[index].run(percent);}
deferred.notifyWith(elem,[animation,percent,remaining]);if(percent<1&&length){return remaining;}
if(!length){deferred.notifyWith(elem,[animation,1,0]);}
deferred.resolveWith(elem,[animation]);return false;},animation=deferred.promise({elem:elem,props:jQuery.extend({},properties),opts:jQuery.extend(true,{specialEasing:{},easing:jQuery.easing._default},options),originalProperties:properties,originalOptions:options,startTime:fxNow||createFxNow(),duration:options.duration,tweens:[],createTween:function(prop,end){var tween=jQuery.Tween(elem,animation.opts,prop,end,animation.opts.specialEasing[prop]||animation.opts.easing);animation.tweens.push(tween);return tween;},stop:function(gotoEnd){var index=0,length=gotoEnd?animation.tweens.length:0;if(stopped){return this;}
stopped=true;for(;index<length;index++){animation.tweens[index].run(1);}
if(gotoEnd){deferred.notifyWith(elem,[animation,1,0]);deferred.resolveWith(elem,[animation,gotoEnd]);}else{deferred.rejectWith(elem,[animation,gotoEnd]);}
return this;}}),props=animation.props;propFilter(props,animation.opts.specialEasing);for(;index<length;index++){result=Animation.prefilters[index].call(animation,elem,props,animation.opts);if(result){if(isFunction(result.stop)){jQuery._queueHooks(animation.elem,animation.opts.queue).stop=result.stop.bind(result);}
return result;}}
jQuery.map(props,createTween,animation);if(isFunction(animation.opts.start)){animation.opts.start.call(elem,animation);}
animation.progress(animation.opts.progress).done(animation.opts.done,animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);jQuery.fx.timer(jQuery.extend(tick,{elem:elem,anim:animation,queue:animation.opts.queue}));return animation;}
jQuery.Animation=jQuery.extend(Animation,{tweeners:{"*":[function(prop,value){var tween=this.createTween(prop,value);adjustCSS(tween.elem,prop,rcssNum.exec(value),tween);return tween;}]},tweener:function(props,callback){if(isFunction(props)){callback=props;props=["*"];}else{props=props.match(rnothtmlwhite);}
var prop,index=0,length=props.length;for(;index<length;index++){prop=props[index];Animation.tweeners[prop]=Animation.tweeners[prop]||[];Animation.tweeners[prop].unshift(callback);}},prefilters:[defaultPrefilter],prefilter:function(callback,prepend){if(prepend){Animation.prefilters.unshift(callback);}else{Animation.prefilters.push(callback);}}});jQuery.speed=function(speed,easing,fn){var opt=speed&&typeof speed==="object"?jQuery.extend({},speed):{complete:fn||!fn&&easing||isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&!isFunction(easing)&&easing};if(jQuery.fx.off){opt.duration=0;}else{if(typeof opt.duration!=="number"){if(opt.duration in jQuery.fx.speeds){opt.duration=jQuery.fx.speeds[opt.duration];}else{opt.duration=jQuery.fx.speeds._default;}}}
if(opt.queue==null||opt.queue===true){opt.queue="fx";}
opt.old=opt.complete;opt.complete=function(){if(isFunction(opt.old)){opt.old.call(this);}
if(opt.queue){jQuery.dequeue(this,opt.queue);}};return opt;};jQuery.fn.extend({fadeTo:function(speed,to,easing,callback){return this.filter(isHiddenWithinTree).css("opacity",0).show().end().animate({opacity:to},speed,easing,callback);},animate:function(prop,speed,easing,callback){var empty=jQuery.isEmptyObject(prop),optall=jQuery.speed(speed,easing,callback),doAnimation=function(){var anim=Animation(this,jQuery.extend({},prop),optall);if(empty||dataPriv.get(this,"finish")){anim.stop(true);}};doAnimation.finish=doAnimation;return empty||optall.queue===false?this.each(doAnimation):this.queue(optall.queue,doAnimation);},stop:function(type,clearQueue,gotoEnd){var stopQueue=function(hooks){var stop=hooks.stop;delete hooks.stop;stop(gotoEnd);};if(typeof type!=="string"){gotoEnd=clearQueue;clearQueue=type;type=undefined;}
if(clearQueue){this.queue(type||"fx",[]);}
return this.each(function(){var dequeue=true,index=type!=null&&type+"queueHooks",timers=jQuery.timers,data=dataPriv.get(this);if(index){if(data[index]&&data[index].stop){stopQueue(data[index]);}}else{for(index in data){if(data[index]&&data[index].stop&&rrun.test(index)){stopQueue(data[index]);}}}
for(index=timers.length;index--;){if(timers[index].elem===this&&(type==null||timers[index].queue===type)){timers[index].anim.stop(gotoEnd);dequeue=false;timers.splice(index,1);}}
if(dequeue||!gotoEnd){jQuery.dequeue(this,type);}});},finish:function(type){if(type!==false){type=type||"fx";}
return this.each(function(){var index,data=dataPriv.get(this),queue=data[type+"queue"],hooks=data[type+"queueHooks"],timers=jQuery.timers,length=queue?queue.length:0;data.finish=true;jQuery.queue(this,type,[]);if(hooks&&hooks.stop){hooks.stop.call(this,true);}
for(index=timers.length;index--;){if(timers[index].elem===this&&timers[index].queue===type){timers[index].anim.stop(true);timers.splice(index,1);}}
for(index=0;index<length;index++){if(queue[index]&&queue[index].finish){queue[index].finish.call(this);}}
delete data.finish;});}});jQuery.each(["toggle","show","hide"],function(_i,name){var cssFn=jQuery.fn[name];jQuery.fn[name]=function(speed,easing,callback){return speed==null||typeof speed==="boolean"?cssFn.apply(this,arguments):this.animate(genFx(name,true),speed,easing,callback);};});jQuery.each({slideDown:genFx("show"),slideUp:genFx("hide"),slideToggle:genFx("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(name,props){jQuery.fn[name]=function(speed,easing,callback){return this.animate(props,speed,easing,callback);};});jQuery.timers=[];jQuery.fx.tick=function(){var timer,i=0,timers=jQuery.timers;fxNow=Date.now();for(;i<timers.length;i++){timer=timers[i];if(!timer()&&timers[i]===timer){timers.splice(i--,1);}}
if(!timers.length){jQuery.fx.stop();}
fxNow=undefined;};jQuery.fx.timer=function(timer){jQuery.timers.push(timer);jQuery.fx.start();};jQuery.fx.interval=13;jQuery.fx.start=function(){if(inProgress){return;}
inProgress=true;schedule();};jQuery.fx.stop=function(){inProgress=null;};jQuery.fx.speeds={slow:600,fast:200,_default:400};jQuery.fn.delay=function(time,type){time=jQuery.fx?jQuery.fx.speeds[time]||time:time;type=type||"fx";return this.queue(type,function(next,hooks){var timeout=window.setTimeout(next,time);hooks.stop=function(){window.clearTimeout(timeout);};});};(function(){var input=document.createElement("input"),select=document.createElement("select"),opt=select.appendChild(document.createElement("option"));input.type="checkbox";support.checkOn=input.value!=="";support.optSelected=opt.selected;input=document.createElement("input");input.value="t";input.type="radio";support.radioValue=input.value==="t";})();var boolHook,attrHandle=jQuery.expr.attrHandle;jQuery.fn.extend({attr:function(name,value){return access(this,jQuery.attr,name,value,arguments.length>1);},removeAttr:function(name){return this.each(function(){jQuery.removeAttr(this,name);});}});jQuery.extend({attr:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return;}
if(typeof elem.getAttribute==="undefined"){return jQuery.prop(elem,name,value);}
if(nType!==1||!jQuery.isXMLDoc(elem)){hooks=jQuery.attrHooks[name.toLowerCase()]||(jQuery.expr.match.bool.test(name)?boolHook:undefined);}
if(value!==undefined){if(value===null){jQuery.removeAttr(elem,name);return;}
if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}
elem.setAttribute(name,value+"");return value;}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}
ret=jQuery.find.attr(elem,name);return ret==null?undefined:ret;},attrHooks:{type:{set:function(elem,value){if(!support.radioValue&&value==="radio"&&nodeName(elem,"input")){var val=elem.value;elem.setAttribute("type",value);if(val){elem.value=val;}
return value;}}}},removeAttr:function(elem,value){var name,i=0,attrNames=value&&value.match(rnothtmlwhite);if(attrNames&&elem.nodeType===1){while((name=attrNames[i++])){elem.removeAttribute(name);}}}});boolHook={set:function(elem,value,name){if(value===false){jQuery.removeAttr(elem,name);}else{elem.setAttribute(name,name);}
return name;}};jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g),function(_i,name){var getter=attrHandle[name]||jQuery.find.attr;attrHandle[name]=function(elem,name,isXML){var ret,handle,lowercaseName=name.toLowerCase();if(!isXML){handle=attrHandle[lowercaseName];attrHandle[lowercaseName]=ret;ret=getter(elem,name,isXML)!=null?lowercaseName:null;attrHandle[lowercaseName]=handle;}
return ret;};});var rfocusable=/^(?:input|select|textarea|button)$/i,rclickable=/^(?:a|area)$/i;jQuery.fn.extend({prop:function(name,value){return access(this,jQuery.prop,name,value,arguments.length>1);},removeProp:function(name){return this.each(function(){delete this[jQuery.propFix[name]||name];});}});jQuery.extend({prop:function(elem,name,value){var ret,hooks,nType=elem.nodeType;if(nType===3||nType===8||nType===2){return;}
if(nType!==1||!jQuery.isXMLDoc(elem)){name=jQuery.propFix[name]||name;hooks=jQuery.propHooks[name];}
if(value!==undefined){if(hooks&&"set"in hooks&&(ret=hooks.set(elem,value,name))!==undefined){return ret;}
return(elem[name]=value);}
if(hooks&&"get"in hooks&&(ret=hooks.get(elem,name))!==null){return ret;}
return elem[name];},propHooks:{tabIndex:{get:function(elem){var tabindex=jQuery.find.attr(elem,"tabindex");if(tabindex){return parseInt(tabindex,10);}
if(rfocusable.test(elem.nodeName)||rclickable.test(elem.nodeName)&&elem.href){return 0;}
return-1;}}},propFix:{"for":"htmlFor","class":"className"}});if(!support.optSelected){jQuery.propHooks.selected={get:function(elem){var parent=elem.parentNode;if(parent&&parent.parentNode){parent.parentNode.selectedIndex;}
return null;},set:function(elem){var parent=elem.parentNode;if(parent){parent.selectedIndex;if(parent.parentNode){parent.parentNode.selectedIndex;}}}};}
jQuery.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){jQuery.propFix[this.toLowerCase()]=this;});function stripAndCollapse(value){var tokens=value.match(rnothtmlwhite)||[];return tokens.join(" ");}
function getClass(elem){return elem.getAttribute&&elem.getAttribute("class")||"";}
function classesToArray(value){if(Array.isArray(value)){return value;}
if(typeof value==="string"){return value.match(rnothtmlwhite)||[];}
return[];}
jQuery.fn.extend({addClass:function(value){var classNames,cur,curValue,className,i,finalValue;if(isFunction(value)){return this.each(function(j){jQuery(this).addClass(value.call(this,j,getClass(this)));});}
classNames=classesToArray(value);if(classNames.length){return this.each(function(){curValue=getClass(this);cur=this.nodeType===1&&(" "+stripAndCollapse(curValue)+" ");if(cur){for(i=0;i<classNames.length;i++){className=classNames[i];if(cur.indexOf(" "+className+" ")<0){cur+=className+" ";}}
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){this.setAttribute("class",finalValue);}}});}
return this;},removeClass:function(value){var classNames,cur,curValue,className,i,finalValue;if(isFunction(value)){return this.each(function(j){jQuery(this).removeClass(value.call(this,j,getClass(this)));});}
if(!arguments.length){return this.attr("class","");}
classNames=classesToArray(value);if(classNames.length){return this.each(function(){curValue=getClass(this);cur=this.nodeType===1&&(" "+stripAndCollapse(curValue)+" ");if(cur){for(i=0;i<classNames.length;i++){className=classNames[i];while(cur.indexOf(" "+className+" ")>-1){cur=cur.replace(" "+className+" "," ");}}
finalValue=stripAndCollapse(cur);if(curValue!==finalValue){this.setAttribute("class",finalValue);}}});}
return this;},toggleClass:function(value,stateVal){var classNames,className,i,self,type=typeof value,isValidValue=type==="string"||Array.isArray(value);if(isFunction(value)){return this.each(function(i){jQuery(this).toggleClass(value.call(this,i,getClass(this),stateVal),stateVal);});}
if(typeof stateVal==="boolean"&&isValidValue){return stateVal?this.addClass(value):this.removeClass(value);}
classNames=classesToArray(value);return this.each(function(){if(isValidValue){self=jQuery(this);for(i=0;i<classNames.length;i++){className=classNames[i];if(self.hasClass(className)){self.removeClass(className);}else{self.addClass(className);}}}else if(value===undefined||type==="boolean"){className=getClass(this);if(className){dataPriv.set(this,"__className__",className);}
if(this.setAttribute){this.setAttribute("class",className||value===false?"":dataPriv.get(this,"__className__")||"");}}});},hasClass:function(selector){var className,elem,i=0;className=" "+selector+" ";while((elem=this[i++])){if(elem.nodeType===1&&(" "+stripAndCollapse(getClass(elem))+" ").indexOf(className)>-1){return true;}}
return false;}});var rreturn=/\r/g;jQuery.fn.extend({val:function(value){var hooks,ret,valueIsFunction,elem=this[0];if(!arguments.length){if(elem){hooks=jQuery.valHooks[elem.type]||jQuery.valHooks[elem.nodeName.toLowerCase()];if(hooks&&"get"in hooks&&(ret=hooks.get(elem,"value"))!==undefined){return ret;}
ret=elem.value;if(typeof ret==="string"){return ret.replace(rreturn,"");}
return ret==null?"":ret;}
return;}
valueIsFunction=isFunction(value);return this.each(function(i){var val;if(this.nodeType!==1){return;}
if(valueIsFunction){val=value.call(this,i,jQuery(this).val());}else{val=value;}
if(val==null){val="";}else if(typeof val==="number"){val+="";}else if(Array.isArray(val)){val=jQuery.map(val,function(value){return value==null?"":value+"";});}
hooks=jQuery.valHooks[this.type]||jQuery.valHooks[this.nodeName.toLowerCase()];if(!hooks||!("set"in hooks)||hooks.set(this,val,"value")===undefined){this.value=val;}});}});jQuery.extend({valHooks:{option:{get:function(elem){var val=jQuery.find.attr(elem,"value");return val!=null?val:stripAndCollapse(jQuery.text(elem));}},select:{get:function(elem){var value,option,i,options=elem.options,index=elem.selectedIndex,one=elem.type==="select-one",values=one?null:[],max=one?index+1:options.length;if(index<0){i=max;}else{i=one?index:0;}
for(;i<max;i++){option=options[i];if((option.selected||i===index)&&!option.disabled&&(!option.parentNode.disabled||!nodeName(option.parentNode,"optgroup"))){value=jQuery(option).val();if(one){return value;}
values.push(value);}}
return values;},set:function(elem,value){var optionSet,option,options=elem.options,values=jQuery.makeArray(value),i=options.length;while(i--){option=options[i];if(option.selected=jQuery.inArray(jQuery.valHooks.option.get(option),values)>-1){optionSet=true;}}
if(!optionSet){elem.selectedIndex=-1;}
return values;}}}});jQuery.each(["radio","checkbox"],function(){jQuery.valHooks[this]={set:function(elem,value){if(Array.isArray(value)){return(elem.checked=jQuery.inArray(jQuery(elem).val(),value)>-1);}}};if(!support.checkOn){jQuery.valHooks[this].get=function(elem){return elem.getAttribute("value")===null?"on":elem.value;};}});support.focusin="onfocusin"in window;var rfocusMorph=/^(?:focusinfocus|focusoutblur)$/,stopPropagationCallback=function(e){e.stopPropagation();};jQuery.extend(jQuery.event,{trigger:function(event,data,elem,onlyHandlers){var i,cur,tmp,bubbleType,ontype,handle,special,lastElement,eventPath=[elem||document],type=hasOwn.call(event,"type")?event.type:event,namespaces=hasOwn.call(event,"namespace")?event.namespace.split("."):[];cur=lastElement=tmp=elem=elem||document;if(elem.nodeType===3||elem.nodeType===8){return;}
if(rfocusMorph.test(type+jQuery.event.triggered)){return;}
if(type.indexOf(".")>-1){namespaces=type.split(".");type=namespaces.shift();namespaces.sort();}
ontype=type.indexOf(":")<0&&"on"+type;event=event[jQuery.expando]?event:new jQuery.Event(type,typeof event==="object"&&event);event.isTrigger=onlyHandlers?2:3;event.namespace=namespaces.join(".");event.rnamespace=event.namespace?new RegExp("(^|\\.)"+namespaces.join("\\.(?:.*\\.|)")+"(\\.|$)"):null;event.result=undefined;if(!event.target){event.target=elem;}
data=data==null?[event]:jQuery.makeArray(data,[event]);special=jQuery.event.special[type]||{};if(!onlyHandlers&&special.trigger&&special.trigger.apply(elem,data)===false){return;}
if(!onlyHandlers&&!special.noBubble&&!isWindow(elem)){bubbleType=special.delegateType||type;if(!rfocusMorph.test(bubbleType+type)){cur=cur.parentNode;}
for(;cur;cur=cur.parentNode){eventPath.push(cur);tmp=cur;}
if(tmp===(elem.ownerDocument||document)){eventPath.push(tmp.defaultView||tmp.parentWindow||window);}}
i=0;while((cur=eventPath[i++])&&!event.isPropagationStopped()){lastElement=cur;event.type=i>1?bubbleType:special.bindType||type;handle=(dataPriv.get(cur,"events")||Object.create(null))[event.type]&&dataPriv.get(cur,"handle");if(handle){handle.apply(cur,data);}
handle=ontype&&cur[ontype];if(handle&&handle.apply&&acceptData(cur)){event.result=handle.apply(cur,data);if(event.result===false){event.preventDefault();}}}
event.type=type;if(!onlyHandlers&&!event.isDefaultPrevented()){if((!special._default||special._default.apply(eventPath.pop(),data)===false)&&acceptData(elem)){if(ontype&&isFunction(elem[type])&&!isWindow(elem)){tmp=elem[ontype];if(tmp){elem[ontype]=null;}
jQuery.event.triggered=type;if(event.isPropagationStopped()){lastElement.addEventListener(type,stopPropagationCallback);}
elem[type]();if(event.isPropagationStopped()){lastElement.removeEventListener(type,stopPropagationCallback);}
jQuery.event.triggered=undefined;if(tmp){elem[ontype]=tmp;}}}}
return event.result;},simulate:function(type,elem,event){var e=jQuery.extend(new jQuery.Event(),event,{type:type,isSimulated:true});jQuery.event.trigger(e,null,elem);}});jQuery.fn.extend({trigger:function(type,data){return this.each(function(){jQuery.event.trigger(type,data,this);});},triggerHandler:function(type,data){var elem=this[0];if(elem){return jQuery.event.trigger(type,data,elem,true);}}});if(!support.focusin){jQuery.each({focus:"focusin",blur:"focusout"},function(orig,fix){var handler=function(event){jQuery.event.simulate(fix,event.target,jQuery.event.fix(event));};jQuery.event.special[fix]={setup:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix);if(!attaches){doc.addEventListener(orig,handler,true);}
dataPriv.access(doc,fix,(attaches||0)+1);},teardown:function(){var doc=this.ownerDocument||this.document||this,attaches=dataPriv.access(doc,fix)-1;if(!attaches){doc.removeEventListener(orig,handler,true);dataPriv.remove(doc,fix);}else{dataPriv.access(doc,fix,attaches);}}};});}
var location=window.location;var nonce={guid:Date.now()};var rquery=(/\?/);jQuery.parseXML=function(data){var xml,parserErrorElem;if(!data||typeof data!=="string"){return null;}
try{xml=(new window.DOMParser()).parseFromString(data,"text/xml");}catch(e){}
parserErrorElem=xml&&xml.getElementsByTagName("parsererror")[0];if(!xml||parserErrorElem){jQuery.error("Invalid XML: "+(parserErrorElem?jQuery.map(parserErrorElem.childNodes,function(el){return el.textContent;}).join("\n"):data));}
return xml;};var
rbracket=/\[\]$/,rCRLF=/\r?\n/g,rsubmitterTypes=/^(?:submit|button|image|reset|file)$/i,rsubmittable=/^(?:input|select|textarea|keygen)/i;function buildParams(prefix,obj,traditional,add){var name;if(Array.isArray(obj)){jQuery.each(obj,function(i,v){if(traditional||rbracket.test(prefix)){add(prefix,v);}else{buildParams(prefix+"["+(typeof v==="object"&&v!=null?i:"")+"]",v,traditional,add);}});}else if(!traditional&&toType(obj)==="object"){for(name in obj){buildParams(prefix+"["+name+"]",obj[name],traditional,add);}}else{add(prefix,obj);}}
jQuery.param=function(a,traditional){var prefix,s=[],add=function(key,valueOrFunction){var value=isFunction(valueOrFunction)?valueOrFunction():valueOrFunction;s[s.length]=encodeURIComponent(key)+"="+
encodeURIComponent(value==null?"":value);};if(a==null){return"";}
if(Array.isArray(a)||(a.jquery&&!jQuery.isPlainObject(a))){jQuery.each(a,function(){add(this.name,this.value);});}else{for(prefix in a){buildParams(prefix,a[prefix],traditional,add);}}
return s.join("&");};jQuery.fn.extend({serialize:function(){return jQuery.param(this.serializeArray());},serializeArray:function(){return this.map(function(){var elements=jQuery.prop(this,"elements");return elements?jQuery.makeArray(elements):this;}).filter(function(){var type=this.type;return this.name&&!jQuery(this).is(":disabled")&&rsubmittable.test(this.nodeName)&&!rsubmitterTypes.test(type)&&(this.checked||!rcheckableType.test(type));}).map(function(_i,elem){var val=jQuery(this).val();if(val==null){return null;}
if(Array.isArray(val)){return jQuery.map(val,function(val){return{name:elem.name,value:val.replace(rCRLF,"\r\n")};});}
return{name:elem.name,value:val.replace(rCRLF,"\r\n")};}).get();}});var
r20=/%20/g,rhash=/#.*$/,rantiCache=/([?&])_=[^&]*/,rheaders=/^(.*?):[ \t]*([^\r\n]*)$/mg,rlocalProtocol=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,rnoContent=/^(?:GET|HEAD)$/,rprotocol=/^\/\//,prefilters={},transports={},allTypes="*/".concat("*"),originAnchor=document.createElement("a");originAnchor.href=location.href;function addToPrefiltersOrTransports(structure){return function(dataTypeExpression,func){if(typeof dataTypeExpression!=="string"){func=dataTypeExpression;dataTypeExpression="*";}
var dataType,i=0,dataTypes=dataTypeExpression.toLowerCase().match(rnothtmlwhite)||[];if(isFunction(func)){while((dataType=dataTypes[i++])){if(dataType[0]==="+"){dataType=dataType.slice(1)||"*";(structure[dataType]=structure[dataType]||[]).unshift(func);}else{(structure[dataType]=structure[dataType]||[]).push(func);}}}};}
function inspectPrefiltersOrTransports(structure,options,originalOptions,jqXHR){var inspected={},seekingTransport=(structure===transports);function inspect(dataType){var selected;inspected[dataType]=true;jQuery.each(structure[dataType]||[],function(_,prefilterOrFactory){var dataTypeOrTransport=prefilterOrFactory(options,originalOptions,jqXHR);if(typeof dataTypeOrTransport==="string"&&!seekingTransport&&!inspected[dataTypeOrTransport]){options.dataTypes.unshift(dataTypeOrTransport);inspect(dataTypeOrTransport);return false;}else if(seekingTransport){return!(selected=dataTypeOrTransport);}});return selected;}
return inspect(options.dataTypes[0])||!inspected["*"]&&inspect("*");}
function ajaxExtend(target,src){var key,deep,flatOptions=jQuery.ajaxSettings.flatOptions||{};for(key in src){if(src[key]!==undefined){(flatOptions[key]?target:(deep||(deep={})))[key]=src[key];}}
if(deep){jQuery.extend(true,target,deep);}
return target;}
function ajaxHandleResponses(s,jqXHR,responses){var ct,type,finalDataType,firstDataType,contents=s.contents,dataTypes=s.dataTypes;while(dataTypes[0]==="*"){dataTypes.shift();if(ct===undefined){ct=s.mimeType||jqXHR.getResponseHeader("Content-Type");}}
if(ct){for(type in contents){if(contents[type]&&contents[type].test(ct)){dataTypes.unshift(type);break;}}}
if(dataTypes[0]in responses){finalDataType=dataTypes[0];}else{for(type in responses){if(!dataTypes[0]||s.converters[type+" "+dataTypes[0]]){finalDataType=type;break;}
if(!firstDataType){firstDataType=type;}}
finalDataType=finalDataType||firstDataType;}
if(finalDataType){if(finalDataType!==dataTypes[0]){dataTypes.unshift(finalDataType);}
return responses[finalDataType];}}
function ajaxConvert(s,response,jqXHR,isSuccess){var conv2,current,conv,tmp,prev,converters={},dataTypes=s.dataTypes.slice();if(dataTypes[1]){for(conv in s.converters){converters[conv.toLowerCase()]=s.converters[conv];}}
current=dataTypes.shift();while(current){if(s.responseFields[current]){jqXHR[s.responseFields[current]]=response;}
if(!prev&&isSuccess&&s.dataFilter){response=s.dataFilter(response,s.dataType);}
prev=current;current=dataTypes.shift();if(current){if(current==="*"){current=prev;}else if(prev!=="*"&&prev!==current){conv=converters[prev+" "+current]||converters["* "+current];if(!conv){for(conv2 in converters){tmp=conv2.split(" ");if(tmp[1]===current){conv=converters[prev+" "+tmp[0]]||converters["* "+tmp[0]];if(conv){if(conv===true){conv=converters[conv2];}else if(converters[conv2]!==true){current=tmp[0];dataTypes.unshift(tmp[1]);}
break;}}}}
if(conv!==true){if(conv&&s.throws){response=conv(response);}else{try{response=conv(response);}catch(e){return{state:"parsererror",error:conv?e:"No conversion from "+prev+" to "+current};}}}}}}
return{state:"success",data:response};}
jQuery.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:location.href,type:"GET",isLocal:rlocalProtocol.test(location.protocol),global:true,processData:true,async:true,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":allTypes,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":true,"text json":JSON.parse,"text xml":jQuery.parseXML},flatOptions:{url:true,context:true}},ajaxSetup:function(target,settings){return settings?ajaxExtend(ajaxExtend(target,jQuery.ajaxSettings),settings):ajaxExtend(jQuery.ajaxSettings,target);},ajaxPrefilter:addToPrefiltersOrTransports(prefilters),ajaxTransport:addToPrefiltersOrTransports(transports),ajax:function(url,options){if(typeof url==="object"){options=url;url=undefined;}
options=options||{};var transport,cacheURL,responseHeadersString,responseHeaders,timeoutTimer,urlAnchor,completed,fireGlobals,i,uncached,s=jQuery.ajaxSetup({},options),callbackContext=s.context||s,globalEventContext=s.context&&(callbackContext.nodeType||callbackContext.jquery)?jQuery(callbackContext):jQuery.event,deferred=jQuery.Deferred(),completeDeferred=jQuery.Callbacks("once memory"),statusCode=s.statusCode||{},requestHeaders={},requestHeadersNames={},strAbort="canceled",jqXHR={readyState:0,getResponseHeader:function(key){var match;if(completed){if(!responseHeaders){responseHeaders={};while((match=rheaders.exec(responseHeadersString))){responseHeaders[match[1].toLowerCase()+" "]=(responseHeaders[match[1].toLowerCase()+" "]||[]).concat(match[2]);}}
match=responseHeaders[key.toLowerCase()+" "];}
return match==null?null:match.join(", ");},getAllResponseHeaders:function(){return completed?responseHeadersString:null;},setRequestHeader:function(name,value){if(completed==null){name=requestHeadersNames[name.toLowerCase()]=requestHeadersNames[name.toLowerCase()]||name;requestHeaders[name]=value;}
return this;},overrideMimeType:function(type){if(completed==null){s.mimeType=type;}
return this;},statusCode:function(map){var code;if(map){if(completed){jqXHR.always(map[jqXHR.status]);}else{for(code in map){statusCode[code]=[statusCode[code],map[code]];}}}
return this;},abort:function(statusText){var finalText=statusText||strAbort;if(transport){transport.abort(finalText);}
done(0,finalText);return this;}};deferred.promise(jqXHR);s.url=((url||s.url||location.href)+"").replace(rprotocol,location.protocol+"//");s.type=options.method||options.type||s.method||s.type;s.dataTypes=(s.dataType||"*").toLowerCase().match(rnothtmlwhite)||[""];if(s.crossDomain==null){urlAnchor=document.createElement("a");try{urlAnchor.href=s.url;urlAnchor.href=urlAnchor.href;s.crossDomain=originAnchor.protocol+"//"+originAnchor.host!==urlAnchor.protocol+"//"+urlAnchor.host;}catch(e){s.crossDomain=true;}}
if(s.data&&s.processData&&typeof s.data!=="string"){s.data=jQuery.param(s.data,s.traditional);}
inspectPrefiltersOrTransports(prefilters,s,options,jqXHR);if(completed){return jqXHR;}
fireGlobals=jQuery.event&&s.global;if(fireGlobals&&jQuery.active++===0){jQuery.event.trigger("ajaxStart");}
s.type=s.type.toUpperCase();s.hasContent=!rnoContent.test(s.type);cacheURL=s.url.replace(rhash,"");if(!s.hasContent){uncached=s.url.slice(cacheURL.length);if(s.data&&(s.processData||typeof s.data==="string")){cacheURL+=(rquery.test(cacheURL)?"&":"?")+s.data;delete s.data;}
if(s.cache===false){cacheURL=cacheURL.replace(rantiCache,"$1");uncached=(rquery.test(cacheURL)?"&":"?")+"_="+(nonce.guid++)+
uncached;}
s.url=cacheURL+uncached;}else if(s.data&&s.processData&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0){s.data=s.data.replace(r20,"+");}
if(s.ifModified){if(jQuery.lastModified[cacheURL]){jqXHR.setRequestHeader("If-Modified-Since",jQuery.lastModified[cacheURL]);}
if(jQuery.etag[cacheURL]){jqXHR.setRequestHeader("If-None-Match",jQuery.etag[cacheURL]);}}
if(s.data&&s.hasContent&&s.contentType!==false||options.contentType){jqXHR.setRequestHeader("Content-Type",s.contentType);}
jqXHR.setRequestHeader("Accept",s.dataTypes[0]&&s.accepts[s.dataTypes[0]]?s.accepts[s.dataTypes[0]]+
(s.dataTypes[0]!=="*"?", "+allTypes+"; q=0.01":""):s.accepts["*"]);for(i in s.headers){jqXHR.setRequestHeader(i,s.headers[i]);}
if(s.beforeSend&&(s.beforeSend.call(callbackContext,jqXHR,s)===false||completed)){return jqXHR.abort();}
strAbort="abort";completeDeferred.add(s.complete);jqXHR.done(s.success);jqXHR.fail(s.error);transport=inspectPrefiltersOrTransports(transports,s,options,jqXHR);if(!transport){done(-1,"No Transport");}else{jqXHR.readyState=1;if(fireGlobals){globalEventContext.trigger("ajaxSend",[jqXHR,s]);}
if(completed){return jqXHR;}
if(s.async&&s.timeout>0){timeoutTimer=window.setTimeout(function(){jqXHR.abort("timeout");},s.timeout);}
try{completed=false;transport.send(requestHeaders,done);}catch(e){if(completed){throw e;}
done(-1,e);}}
function done(status,nativeStatusText,responses,headers){var isSuccess,success,error,response,modified,statusText=nativeStatusText;if(completed){return;}
completed=true;if(timeoutTimer){window.clearTimeout(timeoutTimer);}
transport=undefined;responseHeadersString=headers||"";jqXHR.readyState=status>0?4:0;isSuccess=status>=200&&status<300||status===304;if(responses){response=ajaxHandleResponses(s,jqXHR,responses);}
if(!isSuccess&&jQuery.inArray("script",s.dataTypes)>-1&&jQuery.inArray("json",s.dataTypes)<0){s.converters["text script"]=function(){};}
response=ajaxConvert(s,response,jqXHR,isSuccess);if(isSuccess){if(s.ifModified){modified=jqXHR.getResponseHeader("Last-Modified");if(modified){jQuery.lastModified[cacheURL]=modified;}
modified=jqXHR.getResponseHeader("etag");if(modified){jQuery.etag[cacheURL]=modified;}}
if(status===204||s.type==="HEAD"){statusText="nocontent";}else if(status===304){statusText="notmodified";}else{statusText=response.state;success=response.data;error=response.error;isSuccess=!error;}}else{error=statusText;if(status||!statusText){statusText="error";if(status<0){status=0;}}}
jqXHR.status=status;jqXHR.statusText=(nativeStatusText||statusText)+"";if(isSuccess){deferred.resolveWith(callbackContext,[success,statusText,jqXHR]);}else{deferred.rejectWith(callbackContext,[jqXHR,statusText,error]);}
jqXHR.statusCode(statusCode);statusCode=undefined;if(fireGlobals){globalEventContext.trigger(isSuccess?"ajaxSuccess":"ajaxError",[jqXHR,s,isSuccess?success:error]);}
completeDeferred.fireWith(callbackContext,[jqXHR,statusText]);if(fireGlobals){globalEventContext.trigger("ajaxComplete",[jqXHR,s]);if(!(--jQuery.active)){jQuery.event.trigger("ajaxStop");}}}
return jqXHR;},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json");},getScript:function(url,callback){return jQuery.get(url,undefined,callback,"script");}});jQuery.each(["get","post"],function(_i,method){jQuery[method]=function(url,data,callback,type){if(isFunction(data)){type=type||callback;callback=data;data=undefined;}
return jQuery.ajax(jQuery.extend({url:url,type:method,dataType:type,data:data,success:callback},jQuery.isPlainObject(url)&&url));};});jQuery.ajaxPrefilter(function(s){var i;for(i in s.headers){if(i.toLowerCase()==="content-type"){s.contentType=s.headers[i]||"";}}});jQuery._evalUrl=function(url,options,doc){return jQuery.ajax({url:url,type:"GET",dataType:"script",cache:true,async:false,global:false,converters:{"text script":function(){}},dataFilter:function(response){jQuery.globalEval(response,options,doc);}});};jQuery.fn.extend({wrapAll:function(html){var wrap;if(this[0]){if(isFunction(html)){html=html.call(this[0]);}
wrap=jQuery(html,this[0].ownerDocument).eq(0).clone(true);if(this[0].parentNode){wrap.insertBefore(this[0]);}
wrap.map(function(){var elem=this;while(elem.firstElementChild){elem=elem.firstElementChild;}
return elem;}).append(this);}
return this;},wrapInner:function(html){if(isFunction(html)){return this.each(function(i){jQuery(this).wrapInner(html.call(this,i));});}
return this.each(function(){var self=jQuery(this),contents=self.contents();if(contents.length){contents.wrapAll(html);}else{self.append(html);}});},wrap:function(html){var htmlIsFunction=isFunction(html);return this.each(function(i){jQuery(this).wrapAll(htmlIsFunction?html.call(this,i):html);});},unwrap:function(selector){this.parent(selector).not("body").each(function(){jQuery(this).replaceWith(this.childNodes);});return this;}});jQuery.expr.pseudos.hidden=function(elem){return!jQuery.expr.pseudos.visible(elem);};jQuery.expr.pseudos.visible=function(elem){return!!(elem.offsetWidth||elem.offsetHeight||elem.getClientRects().length);};jQuery.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest();}catch(e){}};var xhrSuccessStatus={0:200,1223:204},xhrSupported=jQuery.ajaxSettings.xhr();support.cors=!!xhrSupported&&("withCredentials"in xhrSupported);support.ajax=xhrSupported=!!xhrSupported;jQuery.ajaxTransport(function(options){var callback,errorCallback;if(support.cors||xhrSupported&&!options.crossDomain){return{send:function(headers,complete){var i,xhr=options.xhr();xhr.open(options.type,options.url,options.async,options.username,options.password);if(options.xhrFields){for(i in options.xhrFields){xhr[i]=options.xhrFields[i];}}
if(options.mimeType&&xhr.overrideMimeType){xhr.overrideMimeType(options.mimeType);}
if(!options.crossDomain&&!headers["X-Requested-With"]){headers["X-Requested-With"]="XMLHttpRequest";}
for(i in headers){xhr.setRequestHeader(i,headers[i]);}
callback=function(type){return function(){if(callback){callback=errorCallback=xhr.onload=xhr.onerror=xhr.onabort=xhr.ontimeout=xhr.onreadystatechange=null;if(type==="abort"){xhr.abort();}else if(type==="error"){if(typeof xhr.status!=="number"){complete(0,"error");}else{complete(xhr.status,xhr.statusText);}}else{complete(xhrSuccessStatus[xhr.status]||xhr.status,xhr.statusText,(xhr.responseType||"text")!=="text"||typeof xhr.responseText!=="string"?{binary:xhr.response}:{text:xhr.responseText},xhr.getAllResponseHeaders());}}};};xhr.onload=callback();errorCallback=xhr.onerror=xhr.ontimeout=callback("error");if(xhr.onabort!==undefined){xhr.onabort=errorCallback;}else{xhr.onreadystatechange=function(){if(xhr.readyState===4){window.setTimeout(function(){if(callback){errorCallback();}});}};}
callback=callback("abort");try{xhr.send(options.hasContent&&options.data||null);}catch(e){if(callback){throw e;}}},abort:function(){if(callback){callback();}}};}});jQuery.ajaxPrefilter(function(s){if(s.crossDomain){s.contents.script=false;}});jQuery.ajaxSetup({accepts:{script:"text/javascript, application/javascript, "+"application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(text){jQuery.globalEval(text);return text;}}});jQuery.ajaxPrefilter("script",function(s){if(s.cache===undefined){s.cache=false;}
if(s.crossDomain){s.type="GET";}});jQuery.ajaxTransport("script",function(s){if(s.crossDomain||s.scriptAttrs){var script,callback;return{send:function(_,complete){script=jQuery("<script>").attr(s.scriptAttrs||{}).prop({charset:s.scriptCharset,src:s.url}).on("load error",callback=function(evt){script.remove();callback=null;if(evt){complete(evt.type==="error"?404:200,evt.type);}});document.head.appendChild(script[0]);},abort:function(){if(callback){callback();}}};}});var oldCallbacks=[],rjsonp=/(=)\?(?=&|$)|\?\?/;jQuery.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var callback=oldCallbacks.pop()||(jQuery.expando+"_"+(nonce.guid++));this[callback]=true;return callback;}});jQuery.ajaxPrefilter("json jsonp",function(s,originalSettings,jqXHR){var callbackName,overwritten,responseContainer,jsonProp=s.jsonp!==false&&(rjsonp.test(s.url)?"url":typeof s.data==="string"&&(s.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&rjsonp.test(s.data)&&"data");if(jsonProp||s.dataTypes[0]==="jsonp"){callbackName=s.jsonpCallback=isFunction(s.jsonpCallback)?s.jsonpCallback():s.jsonpCallback;if(jsonProp){s[jsonProp]=s[jsonProp].replace(rjsonp,"$1"+callbackName);}else if(s.jsonp!==false){s.url+=(rquery.test(s.url)?"&":"?")+s.jsonp+"="+callbackName;}
s.converters["script json"]=function(){if(!responseContainer){jQuery.error(callbackName+" was not called");}
return responseContainer[0];};s.dataTypes[0]="json";overwritten=window[callbackName];window[callbackName]=function(){responseContainer=arguments;};jqXHR.always(function(){if(overwritten===undefined){jQuery(window).removeProp(callbackName);}else{window[callbackName]=overwritten;}
if(s[callbackName]){s.jsonpCallback=originalSettings.jsonpCallback;oldCallbacks.push(callbackName);}
if(responseContainer&&isFunction(overwritten)){overwritten(responseContainer[0]);}
responseContainer=overwritten=undefined;});return"script";}});support.createHTMLDocument=(function(){var body=document.implementation.createHTMLDocument("").body;body.innerHTML="<form></form><form></form>";return body.childNodes.length===2;})();jQuery.parseHTML=function(data,context,keepScripts){if(typeof data!=="string"){return[];}
if(typeof context==="boolean"){keepScripts=context;context=false;}
var base,parsed,scripts;if(!context){if(support.createHTMLDocument){context=document.implementation.createHTMLDocument("");base=context.createElement("base");base.href=document.location.href;context.head.appendChild(base);}else{context=document;}}
parsed=rsingleTag.exec(data);scripts=!keepScripts&&[];if(parsed){return[context.createElement(parsed[1])];}
parsed=buildFragment([data],context,scripts);if(scripts&&scripts.length){jQuery(scripts).remove();}
return jQuery.merge([],parsed.childNodes);};jQuery.fn.load=function(url,params,callback){var selector,type,response,self=this,off=url.indexOf(" ");if(off>-1){selector=stripAndCollapse(url.slice(off));url=url.slice(0,off);}
if(isFunction(params)){callback=params;params=undefined;}else if(params&&typeof params==="object"){type="POST";}
if(self.length>0){jQuery.ajax({url:url,type:type||"GET",dataType:"html",data:params}).done(function(responseText){response=arguments;self.html(selector?jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector):responseText);}).always(callback&&function(jqXHR,status){self.each(function(){callback.apply(this,response||[jqXHR.responseText,status,jqXHR]);});});}
return this;};jQuery.expr.pseudos.animated=function(elem){return jQuery.grep(jQuery.timers,function(fn){return elem===fn.elem;}).length;};jQuery.offset={setOffset:function(elem,options,i){var curPosition,curLeft,curCSSTop,curTop,curOffset,curCSSLeft,calculatePosition,position=jQuery.css(elem,"position"),curElem=jQuery(elem),props={};if(position==="static"){elem.style.position="relative";}
curOffset=curElem.offset();curCSSTop=jQuery.css(elem,"top");curCSSLeft=jQuery.css(elem,"left");calculatePosition=(position==="absolute"||position==="fixed")&&(curCSSTop+curCSSLeft).indexOf("auto")>-1;if(calculatePosition){curPosition=curElem.position();curTop=curPosition.top;curLeft=curPosition.left;}else{curTop=parseFloat(curCSSTop)||0;curLeft=parseFloat(curCSSLeft)||0;}
if(isFunction(options)){options=options.call(elem,i,jQuery.extend({},curOffset));}
if(options.top!=null){props.top=(options.top-curOffset.top)+curTop;}
if(options.left!=null){props.left=(options.left-curOffset.left)+curLeft;}
if("using"in options){options.using.call(elem,props);}else{curElem.css(props);}}};jQuery.fn.extend({offset:function(options){if(arguments.length){return options===undefined?this:this.each(function(i){jQuery.offset.setOffset(this,options,i);});}
var rect,win,elem=this[0];if(!elem){return;}
if(!elem.getClientRects().length){return{top:0,left:0};}
rect=elem.getBoundingClientRect();win=elem.ownerDocument.defaultView;return{top:rect.top+win.pageYOffset,left:rect.left+win.pageXOffset};},position:function(){if(!this[0]){return;}
var offsetParent,offset,doc,elem=this[0],parentOffset={top:0,left:0};if(jQuery.css(elem,"position")==="fixed"){offset=elem.getBoundingClientRect();}else{offset=this.offset();doc=elem.ownerDocument;offsetParent=elem.offsetParent||doc.documentElement;while(offsetParent&&(offsetParent===doc.body||offsetParent===doc.documentElement)&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.parentNode;}
if(offsetParent&&offsetParent!==elem&&offsetParent.nodeType===1){parentOffset=jQuery(offsetParent).offset();parentOffset.top+=jQuery.css(offsetParent,"borderTopWidth",true);parentOffset.left+=jQuery.css(offsetParent,"borderLeftWidth",true);}}
return{top:offset.top-parentOffset.top-jQuery.css(elem,"marginTop",true),left:offset.left-parentOffset.left-jQuery.css(elem,"marginLeft",true)};},offsetParent:function(){return this.map(function(){var offsetParent=this.offsetParent;while(offsetParent&&jQuery.css(offsetParent,"position")==="static"){offsetParent=offsetParent.offsetParent;}
return offsetParent||documentElement;});}});jQuery.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(method,prop){var top="pageYOffset"===prop;jQuery.fn[method]=function(val){return access(this,function(elem,method,val){var win;if(isWindow(elem)){win=elem;}else if(elem.nodeType===9){win=elem.defaultView;}
if(val===undefined){return win?win[prop]:elem[method];}
if(win){win.scrollTo(!top?val:win.pageXOffset,top?val:win.pageYOffset);}else{elem[method]=val;}},method,val,arguments.length);};});jQuery.each(["top","left"],function(_i,prop){jQuery.cssHooks[prop]=addGetHookIf(support.pixelPosition,function(elem,computed){if(computed){computed=curCSS(elem,prop);return rnumnonpx.test(computed)?jQuery(elem).position()[prop]+"px":computed;}});});jQuery.each({Height:"height",Width:"width"},function(name,type){jQuery.each({padding:"inner"+name,content:type,"":"outer"+name},function(defaultExtra,funcName){jQuery.fn[funcName]=function(margin,value){var chainable=arguments.length&&(defaultExtra||typeof margin!=="boolean"),extra=defaultExtra||(margin===true||value===true?"margin":"border");return access(this,function(elem,type,value){var doc;if(isWindow(elem)){return funcName.indexOf("outer")===0?elem["inner"+name]:elem.document.documentElement["client"+name];}
if(elem.nodeType===9){doc=elem.documentElement;return Math.max(elem.body["scroll"+name],doc["scroll"+name],elem.body["offset"+name],doc["offset"+name],doc["client"+name]);}
return value===undefined?jQuery.css(elem,type,extra):jQuery.style(elem,type,value,extra);},type,chainable?margin:undefined,chainable);};});});jQuery.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(_i,type){jQuery.fn[type]=function(fn){return this.on(type,fn);};});jQuery.fn.extend({bind:function(types,data,fn){return this.on(types,null,data,fn);},unbind:function(types,fn){return this.off(types,null,fn);},delegate:function(selector,types,data,fn){return this.on(types,selector,data,fn);},undelegate:function(selector,types,fn){return arguments.length===1?this.off(selector,"**"):this.off(types,selector||"**",fn);},hover:function(fnOver,fnOut){return this.mouseenter(fnOver).mouseleave(fnOut||fnOver);}});jQuery.each(("blur focus focusin focusout resize scroll click dblclick "+"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave "+"change select submit keydown keypress keyup contextmenu").split(" "),function(_i,name){jQuery.fn[name]=function(data,fn){return arguments.length>0?this.on(name,null,data,fn):this.trigger(name);};});var rtrim=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;jQuery.proxy=function(fn,context){var tmp,args,proxy;if(typeof context==="string"){tmp=fn[context];context=fn;fn=tmp;}
if(!isFunction(fn)){return undefined;}
args=slice.call(arguments,2);proxy=function(){return fn.apply(context||this,args.concat(slice.call(arguments)));};proxy.guid=fn.guid=fn.guid||jQuery.guid++;return proxy;};jQuery.holdReady=function(hold){if(hold){jQuery.readyWait++;}else{jQuery.ready(true);}};jQuery.isArray=Array.isArray;jQuery.parseJSON=JSON.parse;jQuery.nodeName=nodeName;jQuery.isFunction=isFunction;jQuery.isWindow=isWindow;jQuery.camelCase=camelCase;jQuery.type=toType;jQuery.now=Date.now;jQuery.isNumeric=function(obj){var type=jQuery.type(obj);return(type==="number"||type==="string")&&!isNaN(obj-parseFloat(obj));};jQuery.trim=function(text){return text==null?"":(text+"").replace(rtrim,"$1");};if(typeof define==="function"&&define.amd){define("jquery",[],function(){return jQuery;});}
var
_jQuery=window.jQuery,_$=window.$;jQuery.noConflict=function(deep){if(window.$===jQuery){window.$=_$;}
if(deep&&window.jQuery===jQuery){window.jQuery=_jQuery;}
return jQuery;};if(typeof noGlobal==="undefined"){window.jQuery=window.$=jQuery;}
return jQuery;});;

/* /web/static/lib/popper/popper.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.Popper={}));}(this,(function(exports){'use strict';function getWindow(node){if(node==null){return window;}
if(node.toString()!=='[object Window]'){var ownerDocument=node.ownerDocument;return ownerDocument?ownerDocument.defaultView||window:window;}
return node;}
function isElement(node){var OwnElement=getWindow(node).Element;return node instanceof OwnElement||node.nodeType===Node.ELEMENT_NODE;}
function isHTMLElement(node){var OwnElement=getWindow(node).HTMLElement;return node instanceof OwnElement||node.nodeType===Node.ELEMENT_NODE;}
function isShadowRoot(node){if(typeof ShadowRoot==='undefined'){return false;}
var OwnElement=getWindow(node).ShadowRoot;return node instanceof OwnElement||node instanceof ShadowRoot;}
var max=Math.max;var min=Math.min;var round=Math.round;function getBoundingClientRect(element,includeScale){if(includeScale===void 0){includeScale=false;}
var rect=element.getBoundingClientRect();var scaleX=1;var scaleY=1;if(isHTMLElement(element)&&includeScale){var offsetHeight=element.offsetHeight;var offsetWidth=element.offsetWidth;if(offsetWidth>0){scaleX=round(rect.width)/offsetWidth||1;}
if(offsetHeight>0){scaleY=round(rect.height)/offsetHeight||1;}}
return{width:rect.width/scaleX,height:rect.height/scaleY,top:rect.top/scaleY,right:rect.right/scaleX,bottom:rect.bottom/scaleY,left:rect.left/scaleX,x:rect.left/scaleX,y:rect.top/scaleY};}
function getWindowScroll(node){var win=getWindow(node);var scrollLeft=win.pageXOffset;var scrollTop=win.pageYOffset;return{scrollLeft:scrollLeft,scrollTop:scrollTop};}
function getHTMLElementScroll(element){return{scrollLeft:element.scrollLeft,scrollTop:element.scrollTop};}
function getNodeScroll(node){if(node===getWindow(node)||!isHTMLElement(node)){return getWindowScroll(node);}else{return getHTMLElementScroll(node);}}
function getNodeName(element){return element?(element.nodeName||'').toLowerCase():null;}
function getDocumentElement(element){return((isElement(element)?element.ownerDocument:element.document)||window.document).documentElement;}
function getWindowScrollBarX(element){return getBoundingClientRect(getDocumentElement(element)).left+getWindowScroll(element).scrollLeft;}
function getComputedStyle(element){return getWindow(element).getComputedStyle(element);}
function isScrollParent(element){var _getComputedStyle=getComputedStyle(element),overflow=_getComputedStyle.overflow,overflowX=_getComputedStyle.overflowX,overflowY=_getComputedStyle.overflowY;return/auto|scroll|overlay|hidden/.test(overflow+overflowY+overflowX);}
function isElementScaled(element){var rect=element.getBoundingClientRect();var scaleX=round(rect.width)/element.offsetWidth||1;var scaleY=round(rect.height)/element.offsetHeight||1;return scaleX!==1||scaleY!==1;}
function getCompositeRect(elementOrVirtualElement,offsetParent,isFixed){if(isFixed===void 0){isFixed=false;}
var isOffsetParentAnElement=isHTMLElement(offsetParent);var offsetParentIsScaled=isHTMLElement(offsetParent)&&isElementScaled(offsetParent);var documentElement=getDocumentElement(offsetParent);var rect=getBoundingClientRect(elementOrVirtualElement,offsetParentIsScaled);var scroll={scrollLeft:0,scrollTop:0};var offsets={x:0,y:0};if(isOffsetParentAnElement||!isOffsetParentAnElement&&!isFixed){if(getNodeName(offsetParent)!=='body'||isScrollParent(documentElement)){scroll=getNodeScroll(offsetParent);}
if(isHTMLElement(offsetParent)){offsets=getBoundingClientRect(offsetParent,true);offsets.x+=offsetParent.clientLeft;offsets.y+=offsetParent.clientTop;}else if(documentElement){offsets.x=getWindowScrollBarX(documentElement);}}
return{x:rect.left+scroll.scrollLeft-offsets.x,y:rect.top+scroll.scrollTop-offsets.y,width:rect.width,height:rect.height};}
function getLayoutRect(element){var clientRect=getBoundingClientRect(element);var width=element.offsetWidth;var height=element.offsetHeight;if(Math.abs(clientRect.width-width)<=1){width=clientRect.width;}
if(Math.abs(clientRect.height-height)<=1){height=clientRect.height;}
return{x:element.offsetLeft,y:element.offsetTop,width:width,height:height};}
function getParentNode(element){if(getNodeName(element)==='html'){return element;}
return(element.assignedSlot||element.parentNode||(isShadowRoot(element)?element.host:null)||getDocumentElement(element));}
function getScrollParent(node){if(['html','body','#document'].indexOf(getNodeName(node))>=0){return node.ownerDocument.body;}
if(isHTMLElement(node)&&isScrollParent(node)){return node;}
return getScrollParent(getParentNode(node));}
function listScrollParents(element,list){var _element$ownerDocumen;if(list===void 0){list=[];}
var scrollParent=getScrollParent(element);var isBody=scrollParent===((_element$ownerDocumen=element.ownerDocument)==null?void 0:_element$ownerDocumen.body);var win=getWindow(scrollParent);var target=isBody?[win].concat(win.visualViewport||[],isScrollParent(scrollParent)?scrollParent:[]):scrollParent;var updatedList=list.concat(target);return isBody?updatedList:updatedList.concat(listScrollParents(getParentNode(target)));}
function isTableElement(element){return['table','td','th'].indexOf(getNodeName(element))>=0;}
function getTrueOffsetParent(element){if(!isHTMLElement(element)||getComputedStyle(element).position==='fixed'){return null;}
return element.offsetParent;}
function getContainingBlock(element){var isFirefox=navigator.userAgent.toLowerCase().indexOf('firefox')!==-1;var isIE=navigator.userAgent.indexOf('Trident')!==-1;if(isIE&&isHTMLElement(element)){var elementCss=getComputedStyle(element);if(elementCss.position==='fixed'){return null;}}
var currentNode=getParentNode(element);while(isHTMLElement(currentNode)&&['html','body'].indexOf(getNodeName(currentNode))<0){var css=getComputedStyle(currentNode);if(css.transform!=='none'||css.perspective!=='none'||css.contain==='paint'||['transform','perspective'].indexOf(css.willChange)!==-1||isFirefox&&css.willChange==='filter'||isFirefox&&css.filter&&css.filter!=='none'){return currentNode;}else{currentNode=currentNode.parentNode;}}
return null;}
function getOffsetParent(element){var window=getWindow(element);var offsetParent=getTrueOffsetParent(element);while(offsetParent&&isTableElement(offsetParent)&&getComputedStyle(offsetParent).position==='static'){offsetParent=getTrueOffsetParent(offsetParent);}
if(offsetParent&&(getNodeName(offsetParent)==='html'||getNodeName(offsetParent)==='body'&&getComputedStyle(offsetParent).position==='static')){return window;}
return offsetParent||getContainingBlock(element)||window;}
var top='top';var bottom='bottom';var right='right';var left='left';var auto='auto';var basePlacements=[top,bottom,right,left];var start='start';var end='end';var clippingParents='clippingParents';var viewport='viewport';var popper='popper';var reference='reference';var variationPlacements=basePlacements.reduce(function(acc,placement){return acc.concat([placement+"-"+start,placement+"-"+end]);},[]);var placements=[].concat(basePlacements,[auto]).reduce(function(acc,placement){return acc.concat([placement,placement+"-"+start,placement+"-"+end]);},[]);var beforeRead='beforeRead';var read='read';var afterRead='afterRead';var beforeMain='beforeMain';var main='main';var afterMain='afterMain';var beforeWrite='beforeWrite';var write='write';var afterWrite='afterWrite';var modifierPhases=[beforeRead,read,afterRead,beforeMain,main,afterMain,beforeWrite,write,afterWrite];function order(modifiers){var map=new Map();var visited=new Set();var result=[];modifiers.forEach(function(modifier){map.set(modifier.name,modifier);});function sort(modifier){visited.add(modifier.name);var requires=[].concat(modifier.requires||[],modifier.requiresIfExists||[]);requires.forEach(function(dep){if(!visited.has(dep)){var depModifier=map.get(dep);if(depModifier){sort(depModifier);}}});result.push(modifier);}
modifiers.forEach(function(modifier){if(!visited.has(modifier.name)){sort(modifier);}});return result;}
function orderModifiers(modifiers){var orderedModifiers=order(modifiers);return modifierPhases.reduce(function(acc,phase){return acc.concat(orderedModifiers.filter(function(modifier){return modifier.phase===phase;}));},[]);}
function debounce(fn){var pending;return function(){if(!pending){pending=new Promise(function(resolve){Promise.resolve().then(function(){pending=undefined;resolve(fn());});});}
return pending;};}
function format(str){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}
return[].concat(args).reduce(function(p,c){return p.replace(/%s/,c);},str);}
var INVALID_MODIFIER_ERROR='Popper: modifier "%s" provided an invalid %s property, expected %s but got %s';var MISSING_DEPENDENCY_ERROR='Popper: modifier "%s" requires "%s", but "%s" modifier is not available';var VALID_PROPERTIES=['name','enabled','phase','fn','effect','requires','options'];function validateModifiers(modifiers){modifiers.forEach(function(modifier){[].concat(Object.keys(modifier),VALID_PROPERTIES).filter(function(value,index,self){return self.indexOf(value)===index;}).forEach(function(key){switch(key){case'name':if(typeof modifier.name!=='string'){console.error(format(INVALID_MODIFIER_ERROR,String(modifier.name),'"name"','"string"',"\""+String(modifier.name)+"\""));}
break;case'enabled':if(typeof modifier.enabled!=='boolean'){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"enabled"','"boolean"',"\""+String(modifier.enabled)+"\""));}
break;case'phase':if(modifierPhases.indexOf(modifier.phase)<0){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"phase"',"either "+modifierPhases.join(', '),"\""+String(modifier.phase)+"\""));}
break;case'fn':if(typeof modifier.fn!=='function'){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"fn"','"function"',"\""+String(modifier.fn)+"\""));}
break;case'effect':if(modifier.effect!=null&&typeof modifier.effect!=='function'){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"effect"','"function"',"\""+String(modifier.fn)+"\""));}
break;case'requires':if(modifier.requires!=null&&!Array.isArray(modifier.requires)){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"requires"','"array"',"\""+String(modifier.requires)+"\""));}
break;case'requiresIfExists':if(!Array.isArray(modifier.requiresIfExists)){console.error(format(INVALID_MODIFIER_ERROR,modifier.name,'"requiresIfExists"','"array"',"\""+String(modifier.requiresIfExists)+"\""));}
break;case'options':case'data':break;default:console.error("PopperJS: an invalid property has been provided to the \""+modifier.name+"\" modifier, valid properties are "+VALID_PROPERTIES.map(function(s){return"\""+s+"\"";}).join(', ')+"; but \""+key+"\" was provided.");}
modifier.requires&&modifier.requires.forEach(function(requirement){if(modifiers.find(function(mod){return mod.name===requirement;})==null){console.error(format(MISSING_DEPENDENCY_ERROR,String(modifier.name),requirement,requirement));}});});});}
function uniqueBy(arr,fn){var identifiers=new Set();return arr.filter(function(item){var identifier=fn(item);if(!identifiers.has(identifier)){identifiers.add(identifier);return true;}});}
function getBasePlacement(placement){return placement.split('-')[0];}
function mergeByName(modifiers){var merged=modifiers.reduce(function(merged,current){var existing=merged[current.name];merged[current.name]=existing?Object.assign({},existing,current,{options:Object.assign({},existing.options,current.options),data:Object.assign({},existing.data,current.data)}):current;return merged;},{});return Object.keys(merged).map(function(key){return merged[key];});}
function getViewportRect(element){var win=getWindow(element);var html=getDocumentElement(element);var visualViewport=win.visualViewport;var width=html.clientWidth;var height=html.clientHeight;var x=0;var y=0;if(visualViewport){width=visualViewport.width;height=visualViewport.height;if(!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)){x=visualViewport.offsetLeft;y=visualViewport.offsetTop;}}
return{width:width,height:height,x:x+getWindowScrollBarX(element),y:y};}
function getDocumentRect(element){var _element$ownerDocumen;var html=getDocumentElement(element);var winScroll=getWindowScroll(element);var body=(_element$ownerDocumen=element.ownerDocument)==null?void 0:_element$ownerDocumen.body;var width=max(html.scrollWidth,html.clientWidth,body?body.scrollWidth:0,body?body.clientWidth:0);var height=max(html.scrollHeight,html.clientHeight,body?body.scrollHeight:0,body?body.clientHeight:0);var x=-winScroll.scrollLeft+getWindowScrollBarX(element);var y=-winScroll.scrollTop;if(getComputedStyle(body||html).direction==='rtl'){x+=max(html.clientWidth,body?body.clientWidth:0)-width;}
return{width:width,height:height,x:x,y:y};}
function contains(parent,child){var rootNode=child.getRootNode&&child.getRootNode();if(parent.contains(child)){return true;}
else if(rootNode&&isShadowRoot(rootNode)){var next=child;do{if(next&&parent.isSameNode(next)){return true;}
next=next.parentNode||next.host;}while(next);}
return false;}
function rectToClientRect(rect){return Object.assign({},rect,{left:rect.x,top:rect.y,right:rect.x+rect.width,bottom:rect.y+rect.height});}
function getInnerBoundingClientRect(element){var rect=getBoundingClientRect(element);rect.top=rect.top+element.clientTop;rect.left=rect.left+element.clientLeft;rect.bottom=rect.top+element.clientHeight;rect.right=rect.left+element.clientWidth;rect.width=element.clientWidth;rect.height=element.clientHeight;rect.x=rect.left;rect.y=rect.top;return rect;}
function getClientRectFromMixedType(element,clippingParent){return clippingParent===viewport?rectToClientRect(getViewportRect(element)):isElement(clippingParent)?getInnerBoundingClientRect(clippingParent):rectToClientRect(getDocumentRect(getDocumentElement(element)));}
function getClippingParents(element){var clippingParents=listScrollParents(getParentNode(element));var canEscapeClipping=['absolute','fixed'].indexOf(getComputedStyle(element).position)>=0;var clipperElement=canEscapeClipping&&isHTMLElement(element)?getOffsetParent(element):element;if(!isElement(clipperElement)){return[];}
return clippingParents.filter(function(clippingParent){return isElement(clippingParent)&&contains(clippingParent,clipperElement)&&getNodeName(clippingParent)!=='body';});}
function getClippingRect(element,boundary,rootBoundary){var mainClippingParents=boundary==='clippingParents'?getClippingParents(element):[].concat(boundary);var clippingParents=[].concat(mainClippingParents,[rootBoundary]);var firstClippingParent=clippingParents[0];var clippingRect=clippingParents.reduce(function(accRect,clippingParent){var rect=getClientRectFromMixedType(element,clippingParent);accRect.top=max(rect.top,accRect.top);accRect.right=min(rect.right,accRect.right);accRect.bottom=min(rect.bottom,accRect.bottom);accRect.left=max(rect.left,accRect.left);return accRect;},getClientRectFromMixedType(element,firstClippingParent));clippingRect.width=clippingRect.right-clippingRect.left;clippingRect.height=clippingRect.bottom-clippingRect.top;clippingRect.x=clippingRect.left;clippingRect.y=clippingRect.top;return clippingRect;}
function getVariation(placement){return placement.split('-')[1];}
function getMainAxisFromPlacement(placement){return['top','bottom'].indexOf(placement)>=0?'x':'y';}
function computeOffsets(_ref){var reference=_ref.reference,element=_ref.element,placement=_ref.placement;var basePlacement=placement?getBasePlacement(placement):null;var variation=placement?getVariation(placement):null;var commonX=reference.x+reference.width/2-element.width/2;var commonY=reference.y+reference.height/2-element.height/2;var offsets;switch(basePlacement){case top:offsets={x:commonX,y:reference.y-element.height};break;case bottom:offsets={x:commonX,y:reference.y+reference.height};break;case right:offsets={x:reference.x+reference.width,y:commonY};break;case left:offsets={x:reference.x-element.width,y:commonY};break;default:offsets={x:reference.x,y:reference.y};}
var mainAxis=basePlacement?getMainAxisFromPlacement(basePlacement):null;if(mainAxis!=null){var len=mainAxis==='y'?'height':'width';switch(variation){case start:offsets[mainAxis]=offsets[mainAxis]-(reference[len]/2-element[len]/2);break;case end:offsets[mainAxis]=offsets[mainAxis]+(reference[len]/2-element[len]/2);break;}}
return offsets;}
function getFreshSideObject(){return{top:0,right:0,bottom:0,left:0};}
function mergePaddingObject(paddingObject){return Object.assign({},getFreshSideObject(),paddingObject);}
function expandToHashMap(value,keys){return keys.reduce(function(hashMap,key){hashMap[key]=value;return hashMap;},{});}
function detectOverflow(state,options){if(options===void 0){options={};}
var _options=options,_options$placement=_options.placement,placement=_options$placement===void 0?state.placement:_options$placement,_options$boundary=_options.boundary,boundary=_options$boundary===void 0?clippingParents:_options$boundary,_options$rootBoundary=_options.rootBoundary,rootBoundary=_options$rootBoundary===void 0?viewport:_options$rootBoundary,_options$elementConte=_options.elementContext,elementContext=_options$elementConte===void 0?popper:_options$elementConte,_options$altBoundary=_options.altBoundary,altBoundary=_options$altBoundary===void 0?false:_options$altBoundary,_options$padding=_options.padding,padding=_options$padding===void 0?0:_options$padding;var paddingObject=mergePaddingObject(typeof padding!=='number'?padding:expandToHashMap(padding,basePlacements));var altContext=elementContext===popper?reference:popper;var popperRect=state.rects.popper;var element=state.elements[altBoundary?altContext:elementContext];var clippingClientRect=getClippingRect(isElement(element)?element:element.contextElement||getDocumentElement(state.elements.popper),boundary,rootBoundary);var referenceClientRect=getBoundingClientRect(state.elements.reference);var popperOffsets=computeOffsets({reference:referenceClientRect,element:popperRect,strategy:'absolute',placement:placement});var popperClientRect=rectToClientRect(Object.assign({},popperRect,popperOffsets));var elementClientRect=elementContext===popper?popperClientRect:referenceClientRect;var overflowOffsets={top:clippingClientRect.top-elementClientRect.top+paddingObject.top,bottom:elementClientRect.bottom-clippingClientRect.bottom+paddingObject.bottom,left:clippingClientRect.left-elementClientRect.left+paddingObject.left,right:elementClientRect.right-clippingClientRect.right+paddingObject.right};var offsetData=state.modifiersData.offset;if(elementContext===popper&&offsetData){var offset=offsetData[placement];Object.keys(overflowOffsets).forEach(function(key){var multiply=[right,bottom].indexOf(key)>=0?1:-1;var axis=[top,bottom].indexOf(key)>=0?'y':'x';overflowOffsets[key]+=offset[axis]*multiply;});}
return overflowOffsets;}
var INVALID_ELEMENT_ERROR='Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';var INFINITE_LOOP_ERROR='Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';var DEFAULT_OPTIONS={placement:'bottom',modifiers:[],strategy:'absolute'};function areValidElements(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}
return!args.some(function(element){return!(element&&typeof element.getBoundingClientRect==='function');});}
function popperGenerator(generatorOptions){if(generatorOptions===void 0){generatorOptions={};}
var _generatorOptions=generatorOptions,_generatorOptions$def=_generatorOptions.defaultModifiers,defaultModifiers=_generatorOptions$def===void 0?[]:_generatorOptions$def,_generatorOptions$def2=_generatorOptions.defaultOptions,defaultOptions=_generatorOptions$def2===void 0?DEFAULT_OPTIONS:_generatorOptions$def2;return function createPopper(reference,popper,options){if(options===void 0){options=defaultOptions;}
var state={placement:'bottom',orderedModifiers:[],options:Object.assign({},DEFAULT_OPTIONS,defaultOptions),modifiersData:{},elements:{reference:reference,popper:popper},attributes:{},styles:{}};var effectCleanupFns=[];var isDestroyed=false;var instance={state:state,setOptions:function setOptions(setOptionsAction){var options=typeof setOptionsAction==='function'?setOptionsAction(state.options):setOptionsAction;cleanupModifierEffects();state.options=Object.assign({},defaultOptions,state.options,options);state.scrollParents={reference:isElement(reference)?listScrollParents(reference):reference.contextElement?listScrollParents(reference.contextElement):[],popper:listScrollParents(popper)};var orderedModifiers=orderModifiers(mergeByName([].concat(defaultModifiers,state.options.modifiers)));state.orderedModifiers=orderedModifiers.filter(function(m){return m.enabled;});{var modifiers=uniqueBy([].concat(orderedModifiers,state.options.modifiers),function(_ref){var name=_ref.name;return name;});validateModifiers(modifiers);if(getBasePlacement(state.options.placement)===auto){var flipModifier=state.orderedModifiers.find(function(_ref2){var name=_ref2.name;return name==='flip';});if(!flipModifier){console.error(['Popper: "auto" placements require the "flip" modifier be','present and enabled to work.'].join(' '));}}
var _getComputedStyle=getComputedStyle(popper),marginTop=_getComputedStyle.marginTop,marginRight=_getComputedStyle.marginRight,marginBottom=_getComputedStyle.marginBottom,marginLeft=_getComputedStyle.marginLeft;if([marginTop,marginRight,marginBottom,marginLeft].some(function(margin){return parseFloat(margin);})){console.warn(['Popper: CSS "margin" styles cannot be used to apply padding','between the popper and its reference element or boundary.','To replicate margin, use the `offset` modifier, as well as','the `padding` option in the `preventOverflow` and `flip`','modifiers.'].join(' '));}}
runModifierEffects();return instance.update();},forceUpdate:function forceUpdate(){if(isDestroyed){return;}
var _state$elements=state.elements,reference=_state$elements.reference,popper=_state$elements.popper;if(!areValidElements(reference,popper)){{console.error(INVALID_ELEMENT_ERROR);}
return;}
state.rects={reference:getCompositeRect(reference,getOffsetParent(popper),state.options.strategy==='fixed'),popper:getLayoutRect(popper)};state.reset=false;state.placement=state.options.placement;state.orderedModifiers.forEach(function(modifier){return state.modifiersData[modifier.name]=Object.assign({},modifier.data);});var __debug_loops__=0;for(var index=0;index<state.orderedModifiers.length;index++){{__debug_loops__+=1;if(__debug_loops__>100){console.error(INFINITE_LOOP_ERROR);break;}}
if(state.reset===true){state.reset=false;index=-1;continue;}
var _state$orderedModifie=state.orderedModifiers[index],fn=_state$orderedModifie.fn,_state$orderedModifie2=_state$orderedModifie.options,_options=_state$orderedModifie2===void 0?{}:_state$orderedModifie2,name=_state$orderedModifie.name;if(typeof fn==='function'){state=fn({state:state,options:_options,name:name,instance:instance})||state;}}},update:debounce(function(){return new Promise(function(resolve){instance.forceUpdate();resolve(state);});}),destroy:function destroy(){cleanupModifierEffects();isDestroyed=true;}};if(!areValidElements(reference,popper)){{console.error(INVALID_ELEMENT_ERROR);}
return instance;}
instance.setOptions(options).then(function(state){if(!isDestroyed&&options.onFirstUpdate){options.onFirstUpdate(state);}});function runModifierEffects(){state.orderedModifiers.forEach(function(_ref3){var name=_ref3.name,_ref3$options=_ref3.options,options=_ref3$options===void 0?{}:_ref3$options,effect=_ref3.effect;if(typeof effect==='function'){var cleanupFn=effect({state:state,name:name,instance:instance,options:options});var noopFn=function noopFn(){};effectCleanupFns.push(cleanupFn||noopFn);}});}
function cleanupModifierEffects(){effectCleanupFns.forEach(function(fn){return fn();});effectCleanupFns=[];}
return instance;};}
var passive={passive:true};function effect$2(_ref){var state=_ref.state,instance=_ref.instance,options=_ref.options;var _options$scroll=options.scroll,scroll=_options$scroll===void 0?true:_options$scroll,_options$resize=options.resize,resize=_options$resize===void 0?true:_options$resize;var window=getWindow(state.elements.popper);var scrollParents=[].concat(state.scrollParents.reference,state.scrollParents.popper);if(scroll){scrollParents.forEach(function(scrollParent){scrollParent.addEventListener('scroll',instance.update,passive);});}
if(resize){window.addEventListener('resize',instance.update,passive);}
return function(){if(scroll){scrollParents.forEach(function(scrollParent){scrollParent.removeEventListener('scroll',instance.update,passive);});}
if(resize){window.removeEventListener('resize',instance.update,passive);}};}
var eventListeners={name:'eventListeners',enabled:true,phase:'write',fn:function fn(){},effect:effect$2,data:{}};function popperOffsets(_ref){var state=_ref.state,name=_ref.name;state.modifiersData[name]=computeOffsets({reference:state.rects.reference,element:state.rects.popper,strategy:'absolute',placement:state.placement});}
var popperOffsets$1={name:'popperOffsets',enabled:true,phase:'read',fn:popperOffsets,data:{}};var unsetSides={top:'auto',right:'auto',bottom:'auto',left:'auto'};function roundOffsetsByDPR(_ref){var x=_ref.x,y=_ref.y;var win=window;var dpr=win.devicePixelRatio||1;return{x:round(x*dpr)/dpr||0,y:round(y*dpr)/dpr||0};}
function mapToStyles(_ref2){var _Object$assign2;var popper=_ref2.popper,popperRect=_ref2.popperRect,placement=_ref2.placement,variation=_ref2.variation,offsets=_ref2.offsets,position=_ref2.position,gpuAcceleration=_ref2.gpuAcceleration,adaptive=_ref2.adaptive,roundOffsets=_ref2.roundOffsets,isFixed=_ref2.isFixed;var _offsets$x=offsets.x,x=_offsets$x===void 0?0:_offsets$x,_offsets$y=offsets.y,y=_offsets$y===void 0?0:_offsets$y;var _ref3=typeof roundOffsets==='function'?roundOffsets({x:x,y:y}):{x:x,y:y};x=_ref3.x;y=_ref3.y;var hasX=offsets.hasOwnProperty('x');var hasY=offsets.hasOwnProperty('y');var sideX=left;var sideY=top;var win=window;if(adaptive){var offsetParent=getOffsetParent(popper);var heightProp='clientHeight';var widthProp='clientWidth';if(offsetParent===getWindow(popper)){offsetParent=getDocumentElement(popper);if(getComputedStyle(offsetParent).position!=='static'&&position==='absolute'){heightProp='scrollHeight';widthProp='scrollWidth';}}
offsetParent=offsetParent;if(placement===top||(placement===left||placement===right)&&variation===end){sideY=bottom;var offsetY=isFixed&&win.visualViewport?win.visualViewport.height:offsetParent[heightProp];y-=offsetY-popperRect.height;y*=gpuAcceleration?1:-1;}
if(placement===left||(placement===top||placement===bottom)&&variation===end){sideX=right;var offsetX=isFixed&&win.visualViewport?win.visualViewport.width:offsetParent[widthProp];x-=offsetX-popperRect.width;x*=gpuAcceleration?1:-1;}}
var commonStyles=Object.assign({position:position},adaptive&&unsetSides);var _ref4=roundOffsets===true?roundOffsetsByDPR({x:x,y:y}):{x:x,y:y};x=_ref4.x;y=_ref4.y;if(gpuAcceleration){var _Object$assign;return Object.assign({},commonStyles,(_Object$assign={},_Object$assign[sideY]=hasY?'0':'',_Object$assign[sideX]=hasX?'0':'',_Object$assign.transform=(win.devicePixelRatio||1)<=1?"translate("+x+"px, "+y+"px)":"translate3d("+x+"px, "+y+"px, 0)",_Object$assign));}
return Object.assign({},commonStyles,(_Object$assign2={},_Object$assign2[sideY]=hasY?y+"px":'',_Object$assign2[sideX]=hasX?x+"px":'',_Object$assign2.transform='',_Object$assign2));}
function computeStyles(_ref5){var state=_ref5.state,options=_ref5.options;var _options$gpuAccelerat=options.gpuAcceleration,gpuAcceleration=_options$gpuAccelerat===void 0?true:_options$gpuAccelerat,_options$adaptive=options.adaptive,adaptive=_options$adaptive===void 0?true:_options$adaptive,_options$roundOffsets=options.roundOffsets,roundOffsets=_options$roundOffsets===void 0?true:_options$roundOffsets;{var transitionProperty=getComputedStyle(state.elements.popper).transitionProperty||'';if(adaptive&&['transform','top','right','bottom','left'].some(function(property){return transitionProperty.indexOf(property)>=0;})){console.warn(['Popper: Detected CSS transitions on at least one of the following','CSS properties: "transform", "top", "right", "bottom", "left".','\n\n','Disable the "computeStyles" modifier\'s `adaptive` option to allow','for smooth transitions, or remove these properties from the CSS','transition declaration on the popper element if only transitioning','opacity or background-color for example.','\n\n','We recommend using the popper element as a wrapper around an inner','element that can have any CSS property transitioned for animations.'].join(' '));}}
var commonStyles={placement:getBasePlacement(state.placement),variation:getVariation(state.placement),popper:state.elements.popper,popperRect:state.rects.popper,gpuAcceleration:gpuAcceleration,isFixed:state.options.strategy==='fixed'};if(state.modifiersData.popperOffsets!=null){state.styles.popper=Object.assign({},state.styles.popper,mapToStyles(Object.assign({},commonStyles,{offsets:state.modifiersData.popperOffsets,position:state.options.strategy,adaptive:adaptive,roundOffsets:roundOffsets})));}
if(state.modifiersData.arrow!=null){state.styles.arrow=Object.assign({},state.styles.arrow,mapToStyles(Object.assign({},commonStyles,{offsets:state.modifiersData.arrow,position:'absolute',adaptive:false,roundOffsets:roundOffsets})));}
state.attributes.popper=Object.assign({},state.attributes.popper,{'data-popper-placement':state.placement});}
var computeStyles$1={name:'computeStyles',enabled:true,phase:'beforeWrite',fn:computeStyles,data:{}};function applyStyles(_ref){var state=_ref.state;Object.keys(state.elements).forEach(function(name){var style=state.styles[name]||{};var attributes=state.attributes[name]||{};var element=state.elements[name];if(!isHTMLElement(element)||!getNodeName(element)){return;}
Object.assign(element.style,style);Object.keys(attributes).forEach(function(name){var value=attributes[name];if(value===false){element.removeAttribute(name);}else{element.setAttribute(name,value===true?'':value);}});});}
function effect$1(_ref2){var state=_ref2.state;var initialStyles={popper:{position:state.options.strategy,left:'0',top:'0',margin:'0'},arrow:{position:'absolute'},reference:{}};Object.assign(state.elements.popper.style,initialStyles.popper);state.styles=initialStyles;if(state.elements.arrow){Object.assign(state.elements.arrow.style,initialStyles.arrow);}
return function(){Object.keys(state.elements).forEach(function(name){var element=state.elements[name];var attributes=state.attributes[name]||{};var styleProperties=Object.keys(state.styles.hasOwnProperty(name)?state.styles[name]:initialStyles[name]);var style=styleProperties.reduce(function(style,property){style[property]='';return style;},{});if(!isHTMLElement(element)||!getNodeName(element)){return;}
Object.assign(element.style,style);Object.keys(attributes).forEach(function(attribute){element.removeAttribute(attribute);});});};}
var applyStyles$1={name:'applyStyles',enabled:true,phase:'write',fn:applyStyles,effect:effect$1,requires:['computeStyles']};function distanceAndSkiddingToXY(placement,rects,offset){var basePlacement=getBasePlacement(placement);var invertDistance=[left,top].indexOf(basePlacement)>=0?-1:1;var _ref=typeof offset==='function'?offset(Object.assign({},rects,{placement:placement})):offset,skidding=_ref[0],distance=_ref[1];skidding=skidding||0;distance=(distance||0)*invertDistance;return[left,right].indexOf(basePlacement)>=0?{x:distance,y:skidding}:{x:skidding,y:distance};}
function offset(_ref2){var state=_ref2.state,options=_ref2.options,name=_ref2.name;var _options$offset=options.offset,offset=_options$offset===void 0?[0,0]:_options$offset;var data=placements.reduce(function(acc,placement){acc[placement]=distanceAndSkiddingToXY(placement,state.rects,offset);return acc;},{});var _data$state$placement=data[state.placement],x=_data$state$placement.x,y=_data$state$placement.y;if(state.modifiersData.popperOffsets!=null){state.modifiersData.popperOffsets.x+=x;state.modifiersData.popperOffsets.y+=y;}
state.modifiersData[name]=data;}
var offset$1={name:'offset',enabled:true,phase:'main',requires:['popperOffsets'],fn:offset};var hash$1={left:'right',right:'left',bottom:'top',top:'bottom'};function getOppositePlacement(placement){return placement.replace(/left|right|bottom|top/g,function(matched){return hash$1[matched];});}
var hash={start:'end',end:'start'};function getOppositeVariationPlacement(placement){return placement.replace(/start|end/g,function(matched){return hash[matched];});}
function computeAutoPlacement(state,options){if(options===void 0){options={};}
var _options=options,placement=_options.placement,boundary=_options.boundary,rootBoundary=_options.rootBoundary,padding=_options.padding,flipVariations=_options.flipVariations,_options$allowedAutoP=_options.allowedAutoPlacements,allowedAutoPlacements=_options$allowedAutoP===void 0?placements:_options$allowedAutoP;var variation=getVariation(placement);var placements$1=variation?flipVariations?variationPlacements:variationPlacements.filter(function(placement){return getVariation(placement)===variation;}):basePlacements;var allowedPlacements=placements$1.filter(function(placement){return allowedAutoPlacements.indexOf(placement)>=0;});if(allowedPlacements.length===0){allowedPlacements=placements$1;{console.error(['Popper: The `allowedAutoPlacements` option did not allow any','placements. Ensure the `placement` option matches the variation','of the allowed placements.','For example, "auto" cannot be used to allow "bottom-start".','Use "auto-start" instead.'].join(' '));}}
var overflows=allowedPlacements.reduce(function(acc,placement){acc[placement]=detectOverflow(state,{placement:placement,boundary:boundary,rootBoundary:rootBoundary,padding:padding})[getBasePlacement(placement)];return acc;},{});return Object.keys(overflows).sort(function(a,b){return overflows[a]-overflows[b];});}
function getExpandedFallbackPlacements(placement){if(getBasePlacement(placement)===auto){return[];}
var oppositePlacement=getOppositePlacement(placement);return[getOppositeVariationPlacement(placement),oppositePlacement,getOppositeVariationPlacement(oppositePlacement)];}
function flip(_ref){var state=_ref.state,options=_ref.options,name=_ref.name;if(state.modifiersData[name]._skip){return;}
var _options$mainAxis=options.mainAxis,checkMainAxis=_options$mainAxis===void 0?true:_options$mainAxis,_options$altAxis=options.altAxis,checkAltAxis=_options$altAxis===void 0?true:_options$altAxis,specifiedFallbackPlacements=options.fallbackPlacements,padding=options.padding,boundary=options.boundary,rootBoundary=options.rootBoundary,altBoundary=options.altBoundary,_options$flipVariatio=options.flipVariations,flipVariations=_options$flipVariatio===void 0?true:_options$flipVariatio,allowedAutoPlacements=options.allowedAutoPlacements;var preferredPlacement=state.options.placement;var basePlacement=getBasePlacement(preferredPlacement);var isBasePlacement=basePlacement===preferredPlacement;var fallbackPlacements=specifiedFallbackPlacements||(isBasePlacement||!flipVariations?[getOppositePlacement(preferredPlacement)]:getExpandedFallbackPlacements(preferredPlacement));var placements=[preferredPlacement].concat(fallbackPlacements).reduce(function(acc,placement){return acc.concat(getBasePlacement(placement)===auto?computeAutoPlacement(state,{placement:placement,boundary:boundary,rootBoundary:rootBoundary,padding:padding,flipVariations:flipVariations,allowedAutoPlacements:allowedAutoPlacements}):placement);},[]);var referenceRect=state.rects.reference;var popperRect=state.rects.popper;var checksMap=new Map();var makeFallbackChecks=true;var firstFittingPlacement=placements[0];for(var i=0;i<placements.length;i++){var placement=placements[i];var _basePlacement=getBasePlacement(placement);var isStartVariation=getVariation(placement)===start;var isVertical=[top,bottom].indexOf(_basePlacement)>=0;var len=isVertical?'width':'height';var overflow=detectOverflow(state,{placement:placement,boundary:boundary,rootBoundary:rootBoundary,altBoundary:altBoundary,padding:padding});var mainVariationSide=isVertical?isStartVariation?right:left:isStartVariation?bottom:top;if(referenceRect[len]>popperRect[len]){mainVariationSide=getOppositePlacement(mainVariationSide);}
var altVariationSide=getOppositePlacement(mainVariationSide);var checks=[];if(checkMainAxis){checks.push(overflow[_basePlacement]<=0);}
if(checkAltAxis){checks.push(overflow[mainVariationSide]<=0,overflow[altVariationSide]<=0);}
if(checks.every(function(check){return check;})){firstFittingPlacement=placement;makeFallbackChecks=false;break;}
checksMap.set(placement,checks);}
if(makeFallbackChecks){var numberOfChecks=flipVariations?3:1;var _loop=function _loop(_i){var fittingPlacement=placements.find(function(placement){var checks=checksMap.get(placement);if(checks){return checks.slice(0,_i).every(function(check){return check;});}});if(fittingPlacement){firstFittingPlacement=fittingPlacement;return"break";}};for(var _i=numberOfChecks;_i>0;_i--){var _ret=_loop(_i);if(_ret==="break")break;}}
if(state.placement!==firstFittingPlacement){state.modifiersData[name]._skip=true;state.placement=firstFittingPlacement;state.reset=true;}}
var flip$1={name:'flip',enabled:true,phase:'main',fn:flip,requiresIfExists:['offset'],data:{_skip:false}};function getAltAxis(axis){return axis==='x'?'y':'x';}
function within(min$1,value,max$1){return max(min$1,min(value,max$1));}
function withinMaxClamp(min,value,max){var v=within(min,value,max);return v>max?max:v;}
function preventOverflow(_ref){var state=_ref.state,options=_ref.options,name=_ref.name;var _options$mainAxis=options.mainAxis,checkMainAxis=_options$mainAxis===void 0?true:_options$mainAxis,_options$altAxis=options.altAxis,checkAltAxis=_options$altAxis===void 0?false:_options$altAxis,boundary=options.boundary,rootBoundary=options.rootBoundary,altBoundary=options.altBoundary,padding=options.padding,_options$tether=options.tether,tether=_options$tether===void 0?true:_options$tether,_options$tetherOffset=options.tetherOffset,tetherOffset=_options$tetherOffset===void 0?0:_options$tetherOffset;var overflow=detectOverflow(state,{boundary:boundary,rootBoundary:rootBoundary,padding:padding,altBoundary:altBoundary});var basePlacement=getBasePlacement(state.placement);var variation=getVariation(state.placement);var isBasePlacement=!variation;var mainAxis=getMainAxisFromPlacement(basePlacement);var altAxis=getAltAxis(mainAxis);var popperOffsets=state.modifiersData.popperOffsets;var referenceRect=state.rects.reference;var popperRect=state.rects.popper;var tetherOffsetValue=typeof tetherOffset==='function'?tetherOffset(Object.assign({},state.rects,{placement:state.placement})):tetherOffset;var normalizedTetherOffsetValue=typeof tetherOffsetValue==='number'?{mainAxis:tetherOffsetValue,altAxis:tetherOffsetValue}:Object.assign({mainAxis:0,altAxis:0},tetherOffsetValue);var offsetModifierState=state.modifiersData.offset?state.modifiersData.offset[state.placement]:null;var data={x:0,y:0};if(!popperOffsets){return;}
if(checkMainAxis){var _offsetModifierState$;var mainSide=mainAxis==='y'?top:left;var altSide=mainAxis==='y'?bottom:right;var len=mainAxis==='y'?'height':'width';var offset=popperOffsets[mainAxis];var min$1=offset+overflow[mainSide];var max$1=offset-overflow[altSide];var additive=tether?-popperRect[len]/2:0;var minLen=variation===start?referenceRect[len]:popperRect[len];var maxLen=variation===start?-popperRect[len]:-referenceRect[len];var arrowElement=state.elements.arrow;var arrowRect=tether&&arrowElement?getLayoutRect(arrowElement):{width:0,height:0};var arrowPaddingObject=state.modifiersData['arrow#persistent']?state.modifiersData['arrow#persistent'].padding:getFreshSideObject();var arrowPaddingMin=arrowPaddingObject[mainSide];var arrowPaddingMax=arrowPaddingObject[altSide];var arrowLen=within(0,referenceRect[len],arrowRect[len]);var minOffset=isBasePlacement?referenceRect[len]/2-additive-arrowLen-arrowPaddingMin-normalizedTetherOffsetValue.mainAxis:minLen-arrowLen-arrowPaddingMin-normalizedTetherOffsetValue.mainAxis;var maxOffset=isBasePlacement?-referenceRect[len]/2+additive+arrowLen+arrowPaddingMax+normalizedTetherOffsetValue.mainAxis:maxLen+arrowLen+arrowPaddingMax+normalizedTetherOffsetValue.mainAxis;var arrowOffsetParent=state.elements.arrow&&getOffsetParent(state.elements.arrow);var clientOffset=arrowOffsetParent?mainAxis==='y'?arrowOffsetParent.clientTop||0:arrowOffsetParent.clientLeft||0:0;var offsetModifierValue=(_offsetModifierState$=offsetModifierState==null?void 0:offsetModifierState[mainAxis])!=null?_offsetModifierState$:0;var tetherMin=offset+minOffset-offsetModifierValue-clientOffset;var tetherMax=offset+maxOffset-offsetModifierValue;var preventedOffset=within(tether?min(min$1,tetherMin):min$1,offset,tether?max(max$1,tetherMax):max$1);popperOffsets[mainAxis]=preventedOffset;data[mainAxis]=preventedOffset-offset;}
if(checkAltAxis){var _offsetModifierState$2;var _mainSide=mainAxis==='x'?top:left;var _altSide=mainAxis==='x'?bottom:right;var _offset=popperOffsets[altAxis];var _len=altAxis==='y'?'height':'width';var _min=_offset+overflow[_mainSide];var _max=_offset-overflow[_altSide];var isOriginSide=[top,left].indexOf(basePlacement)!==-1;var _offsetModifierValue=(_offsetModifierState$2=offsetModifierState==null?void 0:offsetModifierState[altAxis])!=null?_offsetModifierState$2:0;var _tetherMin=isOriginSide?_min:_offset-referenceRect[_len]-popperRect[_len]-_offsetModifierValue+normalizedTetherOffsetValue.altAxis;var _tetherMax=isOriginSide?_offset+referenceRect[_len]+popperRect[_len]-_offsetModifierValue-normalizedTetherOffsetValue.altAxis:_max;var _preventedOffset=tether&&isOriginSide?withinMaxClamp(_tetherMin,_offset,_tetherMax):within(tether?_tetherMin:_min,_offset,tether?_tetherMax:_max);popperOffsets[altAxis]=_preventedOffset;data[altAxis]=_preventedOffset-_offset;}
state.modifiersData[name]=data;}
var preventOverflow$1={name:'preventOverflow',enabled:true,phase:'main',fn:preventOverflow,requiresIfExists:['offset']};var toPaddingObject=function toPaddingObject(padding,state){padding=typeof padding==='function'?padding(Object.assign({},state.rects,{placement:state.placement})):padding;return mergePaddingObject(typeof padding!=='number'?padding:expandToHashMap(padding,basePlacements));};function arrow(_ref){var _state$modifiersData$;var state=_ref.state,name=_ref.name,options=_ref.options;var arrowElement=state.elements.arrow;var popperOffsets=state.modifiersData.popperOffsets;var basePlacement=getBasePlacement(state.placement);var axis=getMainAxisFromPlacement(basePlacement);var isVertical=[left,right].indexOf(basePlacement)>=0;var len=isVertical?'height':'width';if(!arrowElement||!popperOffsets){return;}
var paddingObject=toPaddingObject(options.padding,state);var arrowRect=getLayoutRect(arrowElement);var minProp=axis==='y'?top:left;var maxProp=axis==='y'?bottom:right;var endDiff=state.rects.reference[len]+state.rects.reference[axis]-popperOffsets[axis]-state.rects.popper[len];var startDiff=popperOffsets[axis]-state.rects.reference[axis];var arrowOffsetParent=getOffsetParent(arrowElement);var clientSize=arrowOffsetParent?axis==='y'?arrowOffsetParent.clientHeight||0:arrowOffsetParent.clientWidth||0:0;var centerToReference=endDiff/2-startDiff/2;var min=paddingObject[minProp];var max=clientSize-arrowRect[len]-paddingObject[maxProp];var center=clientSize/2-arrowRect[len]/2+centerToReference;var offset=within(min,center,max);var axisProp=axis;state.modifiersData[name]=(_state$modifiersData$={},_state$modifiersData$[axisProp]=offset,_state$modifiersData$.centerOffset=offset-center,_state$modifiersData$);}
function effect(_ref2){var state=_ref2.state,options=_ref2.options;var _options$element=options.element,arrowElement=_options$element===void 0?'[data-popper-arrow]':_options$element;if(arrowElement==null){return;}
if(typeof arrowElement==='string'){arrowElement=state.elements.popper.querySelector(arrowElement);if(!arrowElement){return;}}
{if(!isHTMLElement(arrowElement)){console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).','To use an SVG arrow, wrap it in an HTMLElement that will be used as','the arrow.'].join(' '));}}
if(!contains(state.elements.popper,arrowElement)){{console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper','element.'].join(' '));}
return;}
state.elements.arrow=arrowElement;}
var arrow$1={name:'arrow',enabled:true,phase:'main',fn:arrow,effect:effect,requires:['popperOffsets'],requiresIfExists:['preventOverflow']};function getSideOffsets(overflow,rect,preventedOffsets){if(preventedOffsets===void 0){preventedOffsets={x:0,y:0};}
return{top:overflow.top-rect.height-preventedOffsets.y,right:overflow.right-rect.width+preventedOffsets.x,bottom:overflow.bottom-rect.height+preventedOffsets.y,left:overflow.left-rect.width-preventedOffsets.x};}
function isAnySideFullyClipped(overflow){return[top,right,bottom,left].some(function(side){return overflow[side]>=0;});}
function hide(_ref){var state=_ref.state,name=_ref.name;var referenceRect=state.rects.reference;var popperRect=state.rects.popper;var preventedOffsets=state.modifiersData.preventOverflow;var referenceOverflow=detectOverflow(state,{elementContext:'reference'});var popperAltOverflow=detectOverflow(state,{altBoundary:true});var referenceClippingOffsets=getSideOffsets(referenceOverflow,referenceRect);var popperEscapeOffsets=getSideOffsets(popperAltOverflow,popperRect,preventedOffsets);var isReferenceHidden=isAnySideFullyClipped(referenceClippingOffsets);var hasPopperEscaped=isAnySideFullyClipped(popperEscapeOffsets);state.modifiersData[name]={referenceClippingOffsets:referenceClippingOffsets,popperEscapeOffsets:popperEscapeOffsets,isReferenceHidden:isReferenceHidden,hasPopperEscaped:hasPopperEscaped};state.attributes.popper=Object.assign({},state.attributes.popper,{'data-popper-reference-hidden':isReferenceHidden,'data-popper-escaped':hasPopperEscaped});}
var hide$1={name:'hide',enabled:true,phase:'main',requiresIfExists:['preventOverflow'],fn:hide};var defaultModifiers$1=[eventListeners,popperOffsets$1,computeStyles$1,applyStyles$1];var createPopper$1=popperGenerator({defaultModifiers:defaultModifiers$1});var defaultModifiers=[eventListeners,popperOffsets$1,computeStyles$1,applyStyles$1,offset$1,flip$1,preventOverflow$1,arrow$1,hide$1];var createPopper=popperGenerator({defaultModifiers:defaultModifiers});exports.applyStyles=applyStyles$1;exports.arrow=arrow$1;exports.computeStyles=computeStyles$1;exports.createPopper=createPopper;exports.createPopperLite=createPopper$1;exports.defaultModifiers=defaultModifiers;exports.detectOverflow=detectOverflow;exports.eventListeners=eventListeners;exports.flip=flip$1;exports.hide=hide$1;exports.offset=offset$1;exports.popperGenerator=popperGenerator;exports.popperOffsets=popperOffsets$1;exports.preventOverflow=preventOverflow$1;Object.defineProperty(exports,'__esModule',{value:true});})));;

/* /web/static/lib/bootstrap/js/dist/dom/data.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Data=factory());})(this,(function(){'use strict';const elementMap=new Map();const data={set(element,key,instance){if(!elementMap.has(element)){elementMap.set(element,new Map());}
const instanceMap=elementMap.get(element);if(!instanceMap.has(key)&&instanceMap.size!==0){console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);return;}
instanceMap.set(key,instance);},get(element,key){if(elementMap.has(element)){return elementMap.get(element).get(key)||null;}
return null;},remove(element,key){if(!elementMap.has(element)){return;}
const instanceMap=elementMap.get(element);instanceMap.delete(key);if(instanceMap.size===0){elementMap.delete(element);}}};return data;}));;

/* /web/static/lib/bootstrap/js/dist/dom/event-handler.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.EventHandler=factory());})(this,(function(){'use strict';const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const namespaceRegex=/[^.]*(?=\..*)\.|.*/;const stripNameRegex=/\..*/;const stripUidRegex=/::\d+$/;const eventRegistry={};let uidEvent=1;const customEvents={mouseenter:'mouseover',mouseleave:'mouseout'};const customEventsRegex=/^(mouseenter|mouseleave)/i;const nativeEvents=new Set(['click','dblclick','mouseup','mousedown','contextmenu','mousewheel','DOMMouseScroll','mouseover','mouseout','mousemove','selectstart','selectend','keydown','keypress','keyup','orientationchange','touchstart','touchmove','touchend','touchcancel','pointerdown','pointermove','pointerup','pointerleave','pointercancel','gesturestart','gesturechange','gestureend','focus','blur','change','reset','select','submit','focusin','focusout','load','unload','beforeunload','resize','move','DOMContentLoaded','readystatechange','error','abort','scroll']);function getUidEvent(element,uid){return uid&&`${uid}::${uidEvent++}`||element.uidEvent||uidEvent++;}
function getEvent(element){const uid=getUidEvent(element);element.uidEvent=uid;eventRegistry[uid]=eventRegistry[uid]||{};return eventRegistry[uid];}
function bootstrapHandler(element,fn){return function handler(event){event.delegateTarget=element;if(handler.oneOff){EventHandler.off(element,event.type,fn);}
return fn.apply(element,[event]);};}
function bootstrapDelegationHandler(element,selector,fn){return function handler(event){const domElements=element.querySelectorAll(selector);for(let{target}=event;target&&target!==this;target=target.parentNode){for(let i=domElements.length;i--;){if(domElements[i]===target){event.delegateTarget=target;if(handler.oneOff){EventHandler.off(element,event.type,selector,fn);}
return fn.apply(target,[event]);}}}
return null;};}
function findHandler(events,handler,delegationSelector=null){const uidEventList=Object.keys(events);for(let i=0,len=uidEventList.length;i<len;i++){const event=events[uidEventList[i]];if(event.originalHandler===handler&&event.delegationSelector===delegationSelector){return event;}}
return null;}
function normalizeParams(originalTypeEvent,handler,delegationFn){const delegation=typeof handler==='string';const originalHandler=delegation?delegationFn:handler;let typeEvent=getTypeEvent(originalTypeEvent);const isNative=nativeEvents.has(typeEvent);if(!isNative){typeEvent=originalTypeEvent;}
return[delegation,originalHandler,typeEvent];}
function addHandler(element,originalTypeEvent,handler,delegationFn,oneOff){if(typeof originalTypeEvent!=='string'||!element){return;}
if(!handler){handler=delegationFn;delegationFn=null;}
if(customEventsRegex.test(originalTypeEvent)){const wrapFn=fn=>{return function(event){if(!event.relatedTarget||event.relatedTarget!==event.delegateTarget&&!event.delegateTarget.contains(event.relatedTarget)){return fn.call(this,event);}};};if(delegationFn){delegationFn=wrapFn(delegationFn);}else{handler=wrapFn(handler);}}
const[delegation,originalHandler,typeEvent]=normalizeParams(originalTypeEvent,handler,delegationFn);const events=getEvent(element);const handlers=events[typeEvent]||(events[typeEvent]={});const previousFn=findHandler(handlers,originalHandler,delegation?handler:null);if(previousFn){previousFn.oneOff=previousFn.oneOff&&oneOff;return;}
const uid=getUidEvent(originalHandler,originalTypeEvent.replace(namespaceRegex,''));const fn=delegation?bootstrapDelegationHandler(element,handler,delegationFn):bootstrapHandler(element,handler);fn.delegationSelector=delegation?handler:null;fn.originalHandler=originalHandler;fn.oneOff=oneOff;fn.uidEvent=uid;handlers[uid]=fn;element.addEventListener(typeEvent,fn,delegation);}
function removeHandler(element,events,typeEvent,handler,delegationSelector){const fn=findHandler(events[typeEvent],handler,delegationSelector);if(!fn){return;}
element.removeEventListener(typeEvent,fn,Boolean(delegationSelector));delete events[typeEvent][fn.uidEvent];}
function removeNamespacedHandlers(element,events,typeEvent,namespace){const storeElementEvent=events[typeEvent]||{};Object.keys(storeElementEvent).forEach(handlerKey=>{if(handlerKey.includes(namespace)){const event=storeElementEvent[handlerKey];removeHandler(element,events,typeEvent,event.originalHandler,event.delegationSelector);}});}
function getTypeEvent(event){event=event.replace(stripNameRegex,'');return customEvents[event]||event;}
const EventHandler={on(element,event,handler,delegationFn){addHandler(element,event,handler,delegationFn,false);},one(element,event,handler,delegationFn){addHandler(element,event,handler,delegationFn,true);},off(element,originalTypeEvent,handler,delegationFn){if(typeof originalTypeEvent!=='string'||!element){return;}
const[delegation,originalHandler,typeEvent]=normalizeParams(originalTypeEvent,handler,delegationFn);const inNamespace=typeEvent!==originalTypeEvent;const events=getEvent(element);const isNamespace=originalTypeEvent.startsWith('.');if(typeof originalHandler!=='undefined'){if(!events||!events[typeEvent]){return;}
removeHandler(element,events,typeEvent,originalHandler,delegation?handler:null);return;}
if(isNamespace){Object.keys(events).forEach(elementEvent=>{removeNamespacedHandlers(element,events,elementEvent,originalTypeEvent.slice(1));});}
const storeElementEvent=events[typeEvent]||{};Object.keys(storeElementEvent).forEach(keyHandlers=>{const handlerKey=keyHandlers.replace(stripUidRegex,'');if(!inNamespace||originalTypeEvent.includes(handlerKey)){const event=storeElementEvent[keyHandlers];removeHandler(element,events,typeEvent,event.originalHandler,event.delegationSelector);}});},trigger(element,event,args){if(typeof event!=='string'||!element){return null;}
const $=getjQuery();const typeEvent=getTypeEvent(event);const inNamespace=event!==typeEvent;const isNative=nativeEvents.has(typeEvent);let jQueryEvent;let bubbles=true;let nativeDispatch=true;let defaultPrevented=false;let evt=null;if(inNamespace&&$){jQueryEvent=$.Event(event,args);$(element).trigger(jQueryEvent);bubbles=!jQueryEvent.isPropagationStopped();nativeDispatch=!jQueryEvent.isImmediatePropagationStopped();defaultPrevented=jQueryEvent.isDefaultPrevented();}
if(isNative){evt=document.createEvent('HTMLEvents');evt.initEvent(typeEvent,bubbles,true);}else{evt=new CustomEvent(event,{bubbles,cancelable:true});}
if(typeof args!=='undefined'){Object.keys(args).forEach(key=>{Object.defineProperty(evt,key,{get(){return args[key];}});});}
if(defaultPrevented){evt.preventDefault();}
if(nativeDispatch){element.dispatchEvent(evt);}
if(evt.defaultPrevented&&typeof jQueryEvent!=='undefined'){jQueryEvent.preventDefault();}
return evt;}};return EventHandler;}));;

/* /web/static/lib/bootstrap/js/dist/dom/manipulator.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Manipulator=factory());})(this,(function(){'use strict';function normalizeData(val){if(val==='true'){return true;}
if(val==='false'){return false;}
if(val===Number(val).toString()){return Number(val);}
if(val===''||val==='null'){return null;}
return val;}
function normalizeDataKey(key){return key.replace(/[A-Z]/g,chr=>`-${chr.toLowerCase()}`);}
const Manipulator={setDataAttribute(element,key,value){element.setAttribute(`data-bs-${normalizeDataKey(key)}`,value);},removeDataAttribute(element,key){element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);},getDataAttributes(element){if(!element){return{};}
const attributes={};Object.keys(element.dataset).filter(key=>key.startsWith('bs')).forEach(key=>{let pureKey=key.replace(/^bs/,'');pureKey=pureKey.charAt(0).toLowerCase()+pureKey.slice(1,pureKey.length);attributes[pureKey]=normalizeData(element.dataset[key]);});return attributes;},getDataAttribute(element,key){return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));},offset(element){const rect=element.getBoundingClientRect();return{top:rect.top+window.pageYOffset,left:rect.left+window.pageXOffset};},position(element){return{top:element.offsetTop,left:element.offsetLeft};}};return Manipulator;}));;

/* /web/static/lib/bootstrap/js/dist/dom/selector-engine.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.SelectorEngine=factory());})(this,(function(){'use strict';const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const isVisible=element=>{if(!isElement(element)||element.getClientRects().length===0){return false;}
return getComputedStyle(element).getPropertyValue('visibility')==='visible';};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const NODE_TEXT=3;const SelectorEngine={find(selector,element=document.documentElement){return[].concat(...Element.prototype.querySelectorAll.call(element,selector));},findOne(selector,element=document.documentElement){return Element.prototype.querySelector.call(element,selector);},children(element,selector){return[].concat(...element.children).filter(child=>child.matches(selector));},parents(element,selector){const parents=[];let ancestor=element.parentNode;while(ancestor&&ancestor.nodeType===Node.ELEMENT_NODE&&ancestor.nodeType!==NODE_TEXT){if(ancestor.matches(selector)){parents.push(ancestor);}
ancestor=ancestor.parentNode;}
return parents;},prev(element,selector){let previous=element.previousElementSibling;while(previous){if(previous.matches(selector)){return[previous];}
previous=previous.previousElementSibling;}
return[];},next(element,selector){let next=element.nextElementSibling;while(next){if(next.matches(selector)){return[next];}
next=next.nextElementSibling;}
return[];},focusableChildren(element){const focusables=['a','button','input','textarea','select','details','[tabindex]','[contenteditable="true"]'].map(selector=>`${selector}:not([tabindex^="-"])`).join(', ');return this.find(focusables,element).filter(el=>!isDisabled(el)&&isVisible(el));}};return SelectorEngine;}));;

/* /web/static/lib/bootstrap/js/dist/base-component.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/data.js'),require('./dom/event-handler.js')):typeof define==='function'&&define.amd?define(['./dom/data','./dom/event-handler'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Base=factory(global.Data,global.EventHandler));})(this,(function(Data,EventHandler){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const Data__default=_interopDefaultLegacy(Data);const EventHandler__default=_interopDefaultLegacy(EventHandler);const MILLISECONDS_MULTIPLIER=1000;const TRANSITION_END='transitionend';const getTransitionDurationFromElement=element=>{if(!element){return 0;}
let{transitionDuration,transitionDelay}=window.getComputedStyle(element);const floatTransitionDuration=Number.parseFloat(transitionDuration);const floatTransitionDelay=Number.parseFloat(transitionDelay);if(!floatTransitionDuration&&!floatTransitionDelay){return 0;}
transitionDuration=transitionDuration.split(',')[0];transitionDelay=transitionDelay.split(',')[0];return(Number.parseFloat(transitionDuration)+Number.parseFloat(transitionDelay))*MILLISECONDS_MULTIPLIER;};const triggerTransitionEnd=element=>{element.dispatchEvent(new Event(TRANSITION_END));};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const execute=callback=>{if(typeof callback==='function'){callback();}};const executeAfterTransition=(callback,transitionElement,waitForTransition=true)=>{if(!waitForTransition){execute(callback);return;}
const durationPadding=5;const emulatedDuration=getTransitionDurationFromElement(transitionElement)+durationPadding;let called=false;const handler=({target})=>{if(target!==transitionElement){return;}
called=true;transitionElement.removeEventListener(TRANSITION_END,handler);execute(callback);};transitionElement.addEventListener(TRANSITION_END,handler);setTimeout(()=>{if(!called){triggerTransitionEnd(transitionElement);}},emulatedDuration);};const VERSION='5.1.3';class BaseComponent{constructor(element){element=getElement(element);if(!element){return;}
this._element=element;Data__default.default.set(this._element,this.constructor.DATA_KEY,this);}
dispose(){Data__default.default.remove(this._element,this.constructor.DATA_KEY);EventHandler__default.default.off(this._element,this.constructor.EVENT_KEY);Object.getOwnPropertyNames(this).forEach(propertyName=>{this[propertyName]=null;});}
_queueCallback(callback,element,isAnimated=true){executeAfterTransition(callback,element,isAnimated);}
static getInstance(element){return Data__default.default.get(getElement(element),this.DATA_KEY);}
static getOrCreateInstance(element,config={}){return this.getInstance(element)||new this(element,typeof config==='object'?config:null);}
static get VERSION(){return VERSION;}
static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!');}
static get DATA_KEY(){return`bs.${this.NAME}`;}
static get EVENT_KEY(){return`.${this.DATA_KEY}`;}}
return BaseComponent;}));;

/* /web/static/lib/bootstrap/js/dist/alert.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Alert=factory(global.EventHandler,global.Base));})(this,(function(EventHandler,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const enableDismissTrigger=(component,method='hide')=>{const clickEvent=`click.dismiss${component.EVENT_KEY}`;const name=component.NAME;EventHandler__default.default.on(document,clickEvent,`[data-bs-dismiss="${name}"]`,function(event){if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
const target=getElementFromSelector(this)||this.closest(`.${name}`);const instance=component.getOrCreateInstance(target);instance[method]();});};const NAME='alert';const DATA_KEY='bs.alert';const EVENT_KEY=`.${DATA_KEY}`;const EVENT_CLOSE=`close${EVENT_KEY}`;const EVENT_CLOSED=`closed${EVENT_KEY}`;const CLASS_NAME_FADE='fade';const CLASS_NAME_SHOW='show';class Alert extends BaseComponent__default.default{static get NAME(){return NAME;}
close(){const closeEvent=EventHandler__default.default.trigger(this._element,EVENT_CLOSE);if(closeEvent.defaultPrevented){return;}
this._element.classList.remove(CLASS_NAME_SHOW);const isAnimated=this._element.classList.contains(CLASS_NAME_FADE);this._queueCallback(()=>this._destroyElement(),this._element,isAnimated);}
_destroyElement(){this._element.remove();EventHandler__default.default.trigger(this._element,EVENT_CLOSED);this.dispose();}
static jQueryInterface(config){return this.each(function(){const data=Alert.getOrCreateInstance(this);if(typeof config!=='string'){return;}
if(data[config]===undefined||config.startsWith('_')||config==='constructor'){throw new TypeError(`No method named "${config}"`);}
data[config](this);});}}
enableDismissTrigger(Alert,'close');defineJQueryPlugin(Alert);return Alert;}));;

/* /web/static/lib/bootstrap/js/dist/button.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Button=factory(global.EventHandler,global.Base));})(this,(function(EventHandler,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const NAME='button';const DATA_KEY='bs.button';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const CLASS_NAME_ACTIVE='active';const SELECTOR_DATA_TOGGLE='[data-bs-toggle="button"]';const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;class Button extends BaseComponent__default.default{static get NAME(){return NAME;}
toggle(){this._element.setAttribute('aria-pressed',this._element.classList.toggle(CLASS_NAME_ACTIVE));}
static jQueryInterface(config){return this.each(function(){const data=Button.getOrCreateInstance(this);if(config==='toggle'){data[config]();}});}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,event=>{event.preventDefault();const button=event.target.closest(SELECTOR_DATA_TOGGLE);const data=Button.getOrCreateInstance(button);data.toggle();});defineJQueryPlugin(Button);return Button;}));;

/* /web/static/lib/bootstrap/js/dist/carousel.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Carousel=factory(global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const TRANSITION_END='transitionend';const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const triggerTransitionEnd=element=>{element.dispatchEvent(new Event(TRANSITION_END));};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const isVisible=element=>{if(!isElement(element)||element.getClientRects().length===0){return false;}
return getComputedStyle(element).getPropertyValue('visibility')==='visible';};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const isRTL=()=>document.documentElement.dir==='rtl';const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const getNextActiveElement=(list,activeElement,shouldGetNext,isCycleAllowed)=>{let index=list.indexOf(activeElement);if(index===-1){return list[!shouldGetNext&&isCycleAllowed?list.length-1:0];}
const listLength=list.length;index+=shouldGetNext?1:-1;if(isCycleAllowed){index=(index+listLength)%listLength;}
return list[Math.max(0,Math.min(index,listLength-1))];};const NAME='carousel';const DATA_KEY='bs.carousel';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const ARROW_LEFT_KEY='ArrowLeft';const ARROW_RIGHT_KEY='ArrowRight';const TOUCHEVENT_COMPAT_WAIT=500;const SWIPE_THRESHOLD=40;const Default={interval:5000,keyboard:true,slide:false,pause:'hover',wrap:true,touch:true};const DefaultType={interval:'(number|boolean)',keyboard:'boolean',slide:'(boolean|string)',pause:'(string|boolean)',wrap:'boolean',touch:'boolean'};const ORDER_NEXT='next';const ORDER_PREV='prev';const DIRECTION_LEFT='left';const DIRECTION_RIGHT='right';const KEY_TO_DIRECTION={[ARROW_LEFT_KEY]:DIRECTION_RIGHT,[ARROW_RIGHT_KEY]:DIRECTION_LEFT};const EVENT_SLIDE=`slide${EVENT_KEY}`;const EVENT_SLID=`slid${EVENT_KEY}`;const EVENT_KEYDOWN=`keydown${EVENT_KEY}`;const EVENT_MOUSEENTER=`mouseenter${EVENT_KEY}`;const EVENT_MOUSELEAVE=`mouseleave${EVENT_KEY}`;const EVENT_TOUCHSTART=`touchstart${EVENT_KEY}`;const EVENT_TOUCHMOVE=`touchmove${EVENT_KEY}`;const EVENT_TOUCHEND=`touchend${EVENT_KEY}`;const EVENT_POINTERDOWN=`pointerdown${EVENT_KEY}`;const EVENT_POINTERUP=`pointerup${EVENT_KEY}`;const EVENT_DRAG_START=`dragstart${EVENT_KEY}`;const EVENT_LOAD_DATA_API=`load${EVENT_KEY}${DATA_API_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_CAROUSEL='carousel';const CLASS_NAME_ACTIVE='active';const CLASS_NAME_SLIDE='slide';const CLASS_NAME_END='carousel-item-end';const CLASS_NAME_START='carousel-item-start';const CLASS_NAME_NEXT='carousel-item-next';const CLASS_NAME_PREV='carousel-item-prev';const CLASS_NAME_POINTER_EVENT='pointer-event';const SELECTOR_ACTIVE='.active';const SELECTOR_ACTIVE_ITEM='.active.carousel-item';const SELECTOR_ITEM='.carousel-item';const SELECTOR_ITEM_IMG='.carousel-item img';const SELECTOR_NEXT_PREV='.carousel-item-next, .carousel-item-prev';const SELECTOR_INDICATORS='.carousel-indicators';const SELECTOR_INDICATOR='[data-bs-target]';const SELECTOR_DATA_SLIDE='[data-bs-slide], [data-bs-slide-to]';const SELECTOR_DATA_RIDE='[data-bs-ride="carousel"]';const POINTER_TYPE_TOUCH='touch';const POINTER_TYPE_PEN='pen';class Carousel extends BaseComponent__default.default{constructor(element,config){super(element);this._items=null;this._interval=null;this._activeElement=null;this._isPaused=false;this._isSliding=false;this.touchTimeout=null;this.touchStartX=0;this.touchDeltaX=0;this._config=this._getConfig(config);this._indicatorsElement=SelectorEngine__default.default.findOne(SELECTOR_INDICATORS,this._element);this._touchSupported='ontouchstart'in document.documentElement||navigator.maxTouchPoints>0;this._pointerEvent=Boolean(window.PointerEvent);this._addEventListeners();}
static get Default(){return Default;}
static get NAME(){return NAME;}
next(){this._slide(ORDER_NEXT);}
nextWhenVisible(){if(!document.hidden&&isVisible(this._element)){this.next();}}
prev(){this._slide(ORDER_PREV);}
pause(event){if(!event){this._isPaused=true;}
if(SelectorEngine__default.default.findOne(SELECTOR_NEXT_PREV,this._element)){triggerTransitionEnd(this._element);this.cycle(true);}
clearInterval(this._interval);this._interval=null;}
cycle(event){if(!event){this._isPaused=false;}
if(this._interval){clearInterval(this._interval);this._interval=null;}
if(this._config&&this._config.interval&&!this._isPaused){this._updateInterval();this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval);}}
to(index){this._activeElement=SelectorEngine__default.default.findOne(SELECTOR_ACTIVE_ITEM,this._element);const activeIndex=this._getItemIndex(this._activeElement);if(index>this._items.length-1||index<0){return;}
if(this._isSliding){EventHandler__default.default.one(this._element,EVENT_SLID,()=>this.to(index));return;}
if(activeIndex===index){this.pause();this.cycle();return;}
const order=index>activeIndex?ORDER_NEXT:ORDER_PREV;this._slide(order,this._items[index]);}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...(typeof config==='object'?config:{})};typeCheckConfig(NAME,config,DefaultType);return config;}
_handleSwipe(){const absDeltax=Math.abs(this.touchDeltaX);if(absDeltax<=SWIPE_THRESHOLD){return;}
const direction=absDeltax/this.touchDeltaX;this.touchDeltaX=0;if(!direction){return;}
this._slide(direction>0?DIRECTION_RIGHT:DIRECTION_LEFT);}
_addEventListeners(){if(this._config.keyboard){EventHandler__default.default.on(this._element,EVENT_KEYDOWN,event=>this._keydown(event));}
if(this._config.pause==='hover'){EventHandler__default.default.on(this._element,EVENT_MOUSEENTER,event=>this.pause(event));EventHandler__default.default.on(this._element,EVENT_MOUSELEAVE,event=>this.cycle(event));}
if(this._config.touch&&this._touchSupported){this._addTouchEventListeners();}}
_addTouchEventListeners(){const hasPointerPenTouch=event=>{return this._pointerEvent&&(event.pointerType===POINTER_TYPE_PEN||event.pointerType===POINTER_TYPE_TOUCH);};const start=event=>{if(hasPointerPenTouch(event)){this.touchStartX=event.clientX;}else if(!this._pointerEvent){this.touchStartX=event.touches[0].clientX;}};const move=event=>{this.touchDeltaX=event.touches&&event.touches.length>1?0:event.touches[0].clientX-this.touchStartX;};const end=event=>{if(hasPointerPenTouch(event)){this.touchDeltaX=event.clientX-this.touchStartX;}
this._handleSwipe();if(this._config.pause==='hover'){this.pause();if(this.touchTimeout){clearTimeout(this.touchTimeout);}
this.touchTimeout=setTimeout(event=>this.cycle(event),TOUCHEVENT_COMPAT_WAIT+this._config.interval);}};SelectorEngine__default.default.find(SELECTOR_ITEM_IMG,this._element).forEach(itemImg=>{EventHandler__default.default.on(itemImg,EVENT_DRAG_START,event=>event.preventDefault());});if(this._pointerEvent){EventHandler__default.default.on(this._element,EVENT_POINTERDOWN,event=>start(event));EventHandler__default.default.on(this._element,EVENT_POINTERUP,event=>end(event));this._element.classList.add(CLASS_NAME_POINTER_EVENT);}else{EventHandler__default.default.on(this._element,EVENT_TOUCHSTART,event=>start(event));EventHandler__default.default.on(this._element,EVENT_TOUCHMOVE,event=>move(event));EventHandler__default.default.on(this._element,EVENT_TOUCHEND,event=>end(event));}}
_keydown(event){if(/input|textarea/i.test(event.target.tagName)){return;}
const direction=KEY_TO_DIRECTION[event.key];if(direction){event.preventDefault();this._slide(direction);}}
_getItemIndex(element){this._items=element&&element.parentNode?SelectorEngine__default.default.find(SELECTOR_ITEM,element.parentNode):[];return this._items.indexOf(element);}
_getItemByOrder(order,activeElement){const isNext=order===ORDER_NEXT;return getNextActiveElement(this._items,activeElement,isNext,this._config.wrap);}
_triggerSlideEvent(relatedTarget,eventDirectionName){const targetIndex=this._getItemIndex(relatedTarget);const fromIndex=this._getItemIndex(SelectorEngine__default.default.findOne(SELECTOR_ACTIVE_ITEM,this._element));return EventHandler__default.default.trigger(this._element,EVENT_SLIDE,{relatedTarget,direction:eventDirectionName,from:fromIndex,to:targetIndex});}
_setActiveIndicatorElement(element){if(this._indicatorsElement){const activeIndicator=SelectorEngine__default.default.findOne(SELECTOR_ACTIVE,this._indicatorsElement);activeIndicator.classList.remove(CLASS_NAME_ACTIVE);activeIndicator.removeAttribute('aria-current');const indicators=SelectorEngine__default.default.find(SELECTOR_INDICATOR,this._indicatorsElement);for(let i=0;i<indicators.length;i++){if(Number.parseInt(indicators[i].getAttribute('data-bs-slide-to'),10)===this._getItemIndex(element)){indicators[i].classList.add(CLASS_NAME_ACTIVE);indicators[i].setAttribute('aria-current','true');break;}}}}
_updateInterval(){const element=this._activeElement||SelectorEngine__default.default.findOne(SELECTOR_ACTIVE_ITEM,this._element);if(!element){return;}
const elementInterval=Number.parseInt(element.getAttribute('data-bs-interval'),10);if(elementInterval){this._config.defaultInterval=this._config.defaultInterval||this._config.interval;this._config.interval=elementInterval;}else{this._config.interval=this._config.defaultInterval||this._config.interval;}}
_slide(directionOrOrder,element){const order=this._directionToOrder(directionOrOrder);const activeElement=SelectorEngine__default.default.findOne(SELECTOR_ACTIVE_ITEM,this._element);const activeElementIndex=this._getItemIndex(activeElement);const nextElement=element||this._getItemByOrder(order,activeElement);const nextElementIndex=this._getItemIndex(nextElement);const isCycling=Boolean(this._interval);const isNext=order===ORDER_NEXT;const directionalClassName=isNext?CLASS_NAME_START:CLASS_NAME_END;const orderClassName=isNext?CLASS_NAME_NEXT:CLASS_NAME_PREV;const eventDirectionName=this._orderToDirection(order);if(nextElement&&nextElement.classList.contains(CLASS_NAME_ACTIVE)){this._isSliding=false;return;}
if(this._isSliding){return;}
const slideEvent=this._triggerSlideEvent(nextElement,eventDirectionName);if(slideEvent.defaultPrevented){return;}
if(!activeElement||!nextElement){return;}
this._isSliding=true;if(isCycling){this.pause();}
this._setActiveIndicatorElement(nextElement);this._activeElement=nextElement;const triggerSlidEvent=()=>{EventHandler__default.default.trigger(this._element,EVENT_SLID,{relatedTarget:nextElement,direction:eventDirectionName,from:activeElementIndex,to:nextElementIndex});};if(this._element.classList.contains(CLASS_NAME_SLIDE)){nextElement.classList.add(orderClassName);reflow(nextElement);activeElement.classList.add(directionalClassName);nextElement.classList.add(directionalClassName);const completeCallBack=()=>{nextElement.classList.remove(directionalClassName,orderClassName);nextElement.classList.add(CLASS_NAME_ACTIVE);activeElement.classList.remove(CLASS_NAME_ACTIVE,orderClassName,directionalClassName);this._isSliding=false;setTimeout(triggerSlidEvent,0);};this._queueCallback(completeCallBack,activeElement,true);}else{activeElement.classList.remove(CLASS_NAME_ACTIVE);nextElement.classList.add(CLASS_NAME_ACTIVE);this._isSliding=false;triggerSlidEvent();}
if(isCycling){this.cycle();}}
_directionToOrder(direction){if(![DIRECTION_RIGHT,DIRECTION_LEFT].includes(direction)){return direction;}
if(isRTL()){return direction===DIRECTION_LEFT?ORDER_PREV:ORDER_NEXT;}
return direction===DIRECTION_LEFT?ORDER_NEXT:ORDER_PREV;}
_orderToDirection(order){if(![ORDER_NEXT,ORDER_PREV].includes(order)){return order;}
if(isRTL()){return order===ORDER_PREV?DIRECTION_LEFT:DIRECTION_RIGHT;}
return order===ORDER_PREV?DIRECTION_RIGHT:DIRECTION_LEFT;}
static carouselInterface(element,config){const data=Carousel.getOrCreateInstance(element,config);let{_config}=data;if(typeof config==='object'){_config={..._config,...config};}
const action=typeof config==='string'?config:_config.slide;if(typeof config==='number'){data.to(config);}else if(typeof action==='string'){if(typeof data[action]==='undefined'){throw new TypeError(`No method named "${action}"`);}
data[action]();}else if(_config.interval&&_config.ride){data.pause();data.cycle();}}
static jQueryInterface(config){return this.each(function(){Carousel.carouselInterface(this,config);});}
static dataApiClickHandler(event){const target=getElementFromSelector(this);if(!target||!target.classList.contains(CLASS_NAME_CAROUSEL)){return;}
const config={...Manipulator__default.default.getDataAttributes(target),...Manipulator__default.default.getDataAttributes(this)};const slideIndex=this.getAttribute('data-bs-slide-to');if(slideIndex){config.interval=false;}
Carousel.carouselInterface(target,config);if(slideIndex){Carousel.getInstance(target).to(slideIndex);}
event.preventDefault();}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_SLIDE,Carousel.dataApiClickHandler);EventHandler__default.default.on(window,EVENT_LOAD_DATA_API,()=>{const carousels=SelectorEngine__default.default.find(SELECTOR_DATA_RIDE);for(let i=0,len=carousels.length;i<len;i++){Carousel.carouselInterface(carousels[i],Carousel.getInstance(carousels[i]));}});defineJQueryPlugin(Carousel);return Carousel;}));;

/* /web/static/lib/bootstrap/js/dist/collapse.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/data.js'),require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/data','./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Collapse=factory(global.Data,global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(Data,EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const Data__default=_interopDefaultLegacy(Data);const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getSelectorFromElement=element=>{const selector=getSelector(element);if(selector){return document.querySelector(selector)?selector:null;}
return null;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const NAME='collapse';const DATA_KEY='bs.collapse';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const Default={toggle:true,parent:null};const DefaultType={toggle:'boolean',parent:'(null|element)'};const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_SHOW='show';const CLASS_NAME_COLLAPSE='collapse';const CLASS_NAME_COLLAPSING='collapsing';const CLASS_NAME_COLLAPSED='collapsed';const CLASS_NAME_DEEPER_CHILDREN=`:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;const CLASS_NAME_HORIZONTAL='collapse-horizontal';const WIDTH='width';const HEIGHT='height';const SELECTOR_ACTIVES='.collapse.show, .collapse.collapsing';const SELECTOR_DATA_TOGGLE='[data-bs-toggle="collapse"]';class Collapse extends BaseComponent__default.default{constructor(element,config){super(element);this._isTransitioning=false;this._config=this._getConfig(config);this._triggerArray=[];const toggleList=SelectorEngine__default.default.find(SELECTOR_DATA_TOGGLE);for(let i=0,len=toggleList.length;i<len;i++){const elem=toggleList[i];const selector=getSelectorFromElement(elem);const filterElement=SelectorEngine__default.default.find(selector).filter(foundElem=>foundElem===this._element);if(selector!==null&&filterElement.length){this._selector=selector;this._triggerArray.push(elem);}}
this._initializeChildren();if(!this._config.parent){this._addAriaAndCollapsedClass(this._triggerArray,this._isShown());}
if(this._config.toggle){this.toggle();}}
static get Default(){return Default;}
static get NAME(){return NAME;}
toggle(){if(this._isShown()){this.hide();}else{this.show();}}
show(){if(this._isTransitioning||this._isShown()){return;}
let actives=[];let activesData;if(this._config.parent){const children=SelectorEngine__default.default.find(CLASS_NAME_DEEPER_CHILDREN,this._config.parent);actives=SelectorEngine__default.default.find(SELECTOR_ACTIVES,this._config.parent).filter(elem=>!children.includes(elem));}
const container=SelectorEngine__default.default.findOne(this._selector);if(actives.length){const tempActiveData=actives.find(elem=>container!==elem);activesData=tempActiveData?Collapse.getInstance(tempActiveData):null;if(activesData&&activesData._isTransitioning){return;}}
const startEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW);if(startEvent.defaultPrevented){return;}
actives.forEach(elemActive=>{if(container!==elemActive){Collapse.getOrCreateInstance(elemActive,{toggle:false}).hide();}
if(!activesData){Data__default.default.set(elemActive,DATA_KEY,null);}});const dimension=this._getDimension();this._element.classList.remove(CLASS_NAME_COLLAPSE);this._element.classList.add(CLASS_NAME_COLLAPSING);this._element.style[dimension]=0;this._addAriaAndCollapsedClass(this._triggerArray,true);this._isTransitioning=true;const complete=()=>{this._isTransitioning=false;this._element.classList.remove(CLASS_NAME_COLLAPSING);this._element.classList.add(CLASS_NAME_COLLAPSE,CLASS_NAME_SHOW);this._element.style[dimension]='';EventHandler__default.default.trigger(this._element,EVENT_SHOWN);};const capitalizedDimension=dimension[0].toUpperCase()+dimension.slice(1);const scrollSize=`scroll${capitalizedDimension}`;this._queueCallback(complete,this._element,true);this._element.style[dimension]=`${this._element[scrollSize]}px`;}
hide(){if(this._isTransitioning||!this._isShown()){return;}
const startEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE);if(startEvent.defaultPrevented){return;}
const dimension=this._getDimension();this._element.style[dimension]=`${this._element.getBoundingClientRect()[dimension]}px`;reflow(this._element);this._element.classList.add(CLASS_NAME_COLLAPSING);this._element.classList.remove(CLASS_NAME_COLLAPSE,CLASS_NAME_SHOW);const triggerArrayLength=this._triggerArray.length;for(let i=0;i<triggerArrayLength;i++){const trigger=this._triggerArray[i];const elem=getElementFromSelector(trigger);if(elem&&!this._isShown(elem)){this._addAriaAndCollapsedClass([trigger],false);}}
this._isTransitioning=true;const complete=()=>{this._isTransitioning=false;this._element.classList.remove(CLASS_NAME_COLLAPSING);this._element.classList.add(CLASS_NAME_COLLAPSE);EventHandler__default.default.trigger(this._element,EVENT_HIDDEN);};this._element.style[dimension]='';this._queueCallback(complete,this._element,true);}
_isShown(element=this._element){return element.classList.contains(CLASS_NAME_SHOW);}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...config};config.toggle=Boolean(config.toggle);config.parent=getElement(config.parent);typeCheckConfig(NAME,config,DefaultType);return config;}
_getDimension(){return this._element.classList.contains(CLASS_NAME_HORIZONTAL)?WIDTH:HEIGHT;}
_initializeChildren(){if(!this._config.parent){return;}
const children=SelectorEngine__default.default.find(CLASS_NAME_DEEPER_CHILDREN,this._config.parent);SelectorEngine__default.default.find(SELECTOR_DATA_TOGGLE,this._config.parent).filter(elem=>!children.includes(elem)).forEach(element=>{const selected=getElementFromSelector(element);if(selected){this._addAriaAndCollapsedClass([element],this._isShown(selected));}});}
_addAriaAndCollapsedClass(triggerArray,isOpen){if(!triggerArray.length){return;}
triggerArray.forEach(elem=>{if(isOpen){elem.classList.remove(CLASS_NAME_COLLAPSED);}else{elem.classList.add(CLASS_NAME_COLLAPSED);}
elem.setAttribute('aria-expanded',isOpen);});}
static jQueryInterface(config){return this.each(function(){const _config={};if(typeof config==='string'&&/show|hide/.test(config)){_config.toggle=false;}
const data=Collapse.getOrCreateInstance(this,_config);if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();}});}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,function(event){if(event.target.tagName==='A'||event.delegateTarget&&event.delegateTarget.tagName==='A'){event.preventDefault();}
const selector=getSelectorFromElement(this);const selectorElements=SelectorEngine__default.default.find(selector);selectorElements.forEach(element=>{Collapse.getOrCreateInstance(element,{toggle:false}).toggle();});});defineJQueryPlugin(Collapse);return Collapse;}));;

/* /web/static/lib/bootstrap/js/dist/dropdown.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('@popperjs/core'),require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['@popperjs/core','./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Dropdown=factory(global.Popper,global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(Popper,EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};function _interopNamespace(e){if(e&&e.__esModule)return e;const n=Object.create(null);if(e){for(const k in e){if(k!=='default'){const d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:()=>e[k]});}}}
n.default=e;return Object.freeze(n);}
const Popper__namespace=_interopNamespace(Popper);const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const isVisible=element=>{if(!isElement(element)||element.getClientRects().length===0){return false;}
return getComputedStyle(element).getPropertyValue('visibility')==='visible';};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const noop=()=>{};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const isRTL=()=>document.documentElement.dir==='rtl';const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const getNextActiveElement=(list,activeElement,shouldGetNext,isCycleAllowed)=>{let index=list.indexOf(activeElement);if(index===-1){return list[!shouldGetNext&&isCycleAllowed?list.length-1:0];}
const listLength=list.length;index+=shouldGetNext?1:-1;if(isCycleAllowed){index=(index+listLength)%listLength;}
return list[Math.max(0,Math.min(index,listLength-1))];};const NAME='dropdown';const DATA_KEY='bs.dropdown';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const ESCAPE_KEY='Escape';const SPACE_KEY='Space';const TAB_KEY='Tab';const ARROW_UP_KEY='ArrowUp';const ARROW_DOWN_KEY='ArrowDown';const RIGHT_MOUSE_BUTTON=2;const REGEXP_KEYDOWN=new RegExp(`${ARROW_UP_KEY}|${ARROW_DOWN_KEY}|${ESCAPE_KEY}`);const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const EVENT_KEYDOWN_DATA_API=`keydown${EVENT_KEY}${DATA_API_KEY}`;const EVENT_KEYUP_DATA_API=`keyup${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_SHOW='show';const CLASS_NAME_DROPUP='dropup';const CLASS_NAME_DROPEND='dropend';const CLASS_NAME_DROPSTART='dropstart';const CLASS_NAME_NAVBAR='navbar';const SELECTOR_DATA_TOGGLE='[data-bs-toggle="dropdown"]';const SELECTOR_MENU='.dropdown-menu:not(.o-dropdown--menu)';const SELECTOR_MENU_NOT_SUB='.dropdown-menu:not(.o-dropdown--menu):not(.o_wysiwyg_submenu)';const SELECTOR_NAVBAR_NAV='.navbar-nav';const SELECTOR_VISIBLE_ITEMS='.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';const PLACEMENT_TOP=isRTL()?'top-end':'top-start';const PLACEMENT_TOPEND=isRTL()?'top-start':'top-end';const PLACEMENT_BOTTOM=isRTL()?'bottom-end':'bottom-start';const PLACEMENT_BOTTOMEND=isRTL()?'bottom-start':'bottom-end';const PLACEMENT_RIGHT=isRTL()?'left-start':'right-start';const PLACEMENT_LEFT=isRTL()?'right-start':'left-start';const Default={offset:[0,2],boundary:'clippingParents',reference:'toggle',display:'dynamic',popperConfig:null,autoClose:true};const DefaultType={offset:'(array|string|function)',boundary:'(string|element)',reference:'(string|element|object)',display:'string',popperConfig:'(null|object|function)',autoClose:'(boolean|string)'};class Dropdown extends BaseComponent__default.default{constructor(element,config){super(element);this._popper=null;this._config=this._getConfig(config);this._menu=this._getMenuElement();this._inNavbar=this._detectNavbar();}
static get Default(){return Default;}
static get DefaultType(){return DefaultType;}
static get NAME(){return NAME;}
toggle(){return this._isShown()?this.hide():this.show();}
show(){if(isDisabled(this._element)||this._isShown(this._menu)){return;}
const relatedTarget={relatedTarget:this._element};const showEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW,relatedTarget);if(showEvent.defaultPrevented){return;}
const parent=Dropdown.getParentFromElement(this._element);if(this._inNavbar){Manipulator__default.default.setDataAttribute(this._menu,'popper','none');}else{this._createPopper(parent);}
if('ontouchstart'in document.documentElement&&!parent.closest(SELECTOR_NAVBAR_NAV)){[].concat(...document.body.children).forEach(elem=>EventHandler__default.default.on(elem,'mouseover',noop));}
this._element.focus();this._element.setAttribute('aria-expanded',true);this._menu.classList.add(CLASS_NAME_SHOW);this._element.classList.add(CLASS_NAME_SHOW);EventHandler__default.default.trigger(this._element,EVENT_SHOWN,relatedTarget);}
hide(){if(isDisabled(this._element)||!this._isShown(this._menu)){return;}
const relatedTarget={relatedTarget:this._element};this._completeHide(relatedTarget);}
dispose(){if(this._popper){this._popper.destroy();}
super.dispose();}
update(){this._inNavbar=this._detectNavbar();if(this._popper){this._popper.update();}}
_completeHide(relatedTarget){const hideEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE,relatedTarget);if(hideEvent.defaultPrevented){return;}
if('ontouchstart'in document.documentElement){[].concat(...document.body.children).forEach(elem=>EventHandler__default.default.off(elem,'mouseover',noop));}
if(this._popper){this._popper.destroy();}
this._menu.classList.remove(CLASS_NAME_SHOW);this._element.classList.remove(CLASS_NAME_SHOW);this._element.setAttribute('aria-expanded','false');Manipulator__default.default.removeDataAttribute(this._menu,'popper');EventHandler__default.default.trigger(this._element,EVENT_HIDDEN,relatedTarget);}
_getConfig(config){config={...this.constructor.Default,...Manipulator__default.default.getDataAttributes(this._element),...config};typeCheckConfig(NAME,config,this.constructor.DefaultType);if(typeof config.reference==='object'&&!isElement(config.reference)&&typeof config.reference.getBoundingClientRect!=='function'){throw new TypeError(`${NAME.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);}
return config;}
_createPopper(parent){if(typeof Popper__namespace==='undefined'){throw new TypeError('Bootstrap\'s dropdowns require Popper (https://popper.js.org)');}
let referenceElement=this._element;if(this._config.reference==='parent'){referenceElement=parent;}else if(isElement(this._config.reference)){referenceElement=getElement(this._config.reference);}else if(typeof this._config.reference==='object'){referenceElement=this._config.reference;}
const popperConfig=this._getPopperConfig();const isDisplayStatic=popperConfig.modifiers.find(modifier=>modifier.name==='applyStyles'&&modifier.enabled===false);this._popper=Popper__namespace.createPopper(referenceElement,this._menu,popperConfig);if(isDisplayStatic){Manipulator__default.default.setDataAttribute(this._menu,'popper','static');}}
_isShown(element=this._element){return element.classList.contains(CLASS_NAME_SHOW);}
_getMenuElement(){return SelectorEngine__default.default.next(this._element,SELECTOR_MENU)[0];}
_getPlacement(){const parentDropdown=this._element.parentNode;if(parentDropdown.classList.contains(CLASS_NAME_DROPEND)){return PLACEMENT_RIGHT;}
if(parentDropdown.classList.contains(CLASS_NAME_DROPSTART)){return PLACEMENT_LEFT;}
const isEnd=getComputedStyle(this._menu).getPropertyValue('--bs-position').trim()==='end';if(parentDropdown.classList.contains(CLASS_NAME_DROPUP)){return isEnd?PLACEMENT_TOPEND:PLACEMENT_TOP;}
return isEnd?PLACEMENT_BOTTOMEND:PLACEMENT_BOTTOM;}
_detectNavbar(){return this._element.closest(`.${CLASS_NAME_NAVBAR}`)!==null;}
_getOffset(){const{offset}=this._config;if(typeof offset==='string'){return offset.split(',').map(val=>Number.parseInt(val,10));}
if(typeof offset==='function'){return popperData=>offset(popperData,this._element);}
return offset;}
_getPopperConfig(){const defaultBsPopperConfig={placement:this._getPlacement(),modifiers:[{name:'preventOverflow',options:{boundary:this._config.boundary}},{name:'offset',options:{offset:this._getOffset()}}]};if(this._config.display==='static'){defaultBsPopperConfig.modifiers=[{name:'applyStyles',enabled:false}];}
return{...defaultBsPopperConfig,...(typeof this._config.popperConfig==='function'?this._config.popperConfig(defaultBsPopperConfig):this._config.popperConfig)};}
_selectMenuItem({key,target}){const items=SelectorEngine__default.default.find(SELECTOR_VISIBLE_ITEMS,this._menu).filter(isVisible);if(!items.length){return;}
getNextActiveElement(items,target,key===ARROW_DOWN_KEY,!items.includes(target)).focus();}
static jQueryInterface(config){return this.each(function(){const data=Dropdown.getOrCreateInstance(this,config);if(typeof config!=='string'){return;}
if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();});}
static clearMenus(event){if(event&&(event.button===RIGHT_MOUSE_BUTTON||event.type==='keyup'&&event.key!==TAB_KEY)){return;}
const toggles=SelectorEngine__default.default.find(SELECTOR_DATA_TOGGLE);for(let i=0,len=toggles.length;i<len;i++){const context=Dropdown.getInstance(toggles[i]);if(!context||context._config.autoClose===false){continue;}
if(!context._isShown()){continue;}
const relatedTarget={relatedTarget:context._element};if(event){const composedPath=event.composedPath();const isMenuTarget=composedPath.includes(context._menu);if(composedPath.includes(context._element)||context._config.autoClose==='inside'&&!isMenuTarget||context._config.autoClose==='outside'&&isMenuTarget){continue;}
if(context._menu.contains(event.target)&&(event.type==='keyup'&&event.key===TAB_KEY||/input|select|option|textarea|form/i.test(event.target.tagName))){continue;}
if(event.type==='click'){relatedTarget.clickEvent=event;}}
context._completeHide(relatedTarget);}}
static getParentFromElement(element){return getElementFromSelector(element)||element.parentNode;}
static dataApiKeydownHandler(event){if(/input|textarea/i.test(event.target.tagName)?event.key===SPACE_KEY||event.key!==ESCAPE_KEY&&(event.key!==ARROW_DOWN_KEY&&event.key!==ARROW_UP_KEY||event.target.closest(SELECTOR_MENU)):!REGEXP_KEYDOWN.test(event.key)){return;}
const isActive=this.classList.contains(CLASS_NAME_SHOW);if(!isActive&&event.key===ESCAPE_KEY){return;}
event.preventDefault();event.stopPropagation();if(isDisabled(this)){return;}
const getToggleButton=this.matches(SELECTOR_DATA_TOGGLE)?this:SelectorEngine__default.default.prev(this,SELECTOR_DATA_TOGGLE)[0];const instance=Dropdown.getOrCreateInstance(getToggleButton);if(event.key===ESCAPE_KEY){instance.hide();return;}
if(event.key===ARROW_UP_KEY||event.key===ARROW_DOWN_KEY){if(!isActive){instance.show();}
instance._selectMenuItem(event);return;}
if(!isActive||event.key===SPACE_KEY){Dropdown.clearMenus();}}}
EventHandler__default.default.on(document,EVENT_KEYDOWN_DATA_API,SELECTOR_DATA_TOGGLE,Dropdown.dataApiKeydownHandler);EventHandler__default.default.on(document,EVENT_KEYDOWN_DATA_API,SELECTOR_MENU_NOT_SUB,Dropdown.dataApiKeydownHandler);EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,Dropdown.clearMenus);EventHandler__default.default.on(document,EVENT_KEYUP_DATA_API,Dropdown.clearMenus);EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,function(event){event.preventDefault();Dropdown.getOrCreateInstance(this).toggle();});defineJQueryPlugin(Dropdown);return Dropdown;}));;

/* /web/static/lib/bootstrap/js/dist/modal.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Modal=factory(global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const MILLISECONDS_MULTIPLIER=1000;const TRANSITION_END='transitionend';const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const getTransitionDurationFromElement=element=>{if(!element){return 0;}
let{transitionDuration,transitionDelay}=window.getComputedStyle(element);const floatTransitionDuration=Number.parseFloat(transitionDuration);const floatTransitionDelay=Number.parseFloat(transitionDelay);if(!floatTransitionDuration&&!floatTransitionDelay){return 0;}
transitionDuration=transitionDuration.split(',')[0];transitionDelay=transitionDelay.split(',')[0];return(Number.parseFloat(transitionDuration)+Number.parseFloat(transitionDelay))*MILLISECONDS_MULTIPLIER;};const triggerTransitionEnd=element=>{element.dispatchEvent(new Event(TRANSITION_END));};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const isVisible=element=>{if(!isElement(element)||element.getClientRects().length===0){return false;}
return getComputedStyle(element).getPropertyValue('visibility')==='visible';};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const isRTL=()=>document.documentElement.dir==='rtl';const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const execute=callback=>{if(typeof callback==='function'){callback();}};const executeAfterTransition=(callback,transitionElement,waitForTransition=true)=>{if(!waitForTransition){execute(callback);return;}
const durationPadding=5;const emulatedDuration=getTransitionDurationFromElement(transitionElement)+durationPadding;let called=false;const handler=({target})=>{if(target!==transitionElement){return;}
called=true;transitionElement.removeEventListener(TRANSITION_END,handler);execute(callback);};transitionElement.addEventListener(TRANSITION_END,handler);setTimeout(()=>{if(!called){triggerTransitionEnd(transitionElement);}},emulatedDuration);};const SELECTOR_FIXED_CONTENT='.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';const SELECTOR_STICKY_CONTENT='.sticky-top';class ScrollBarHelper{constructor(){this._element=document.body;}
getWidth(){const documentWidth=document.documentElement.clientWidth;return Math.abs(window.innerWidth-documentWidth);}
hide(){const width=this.getWidth();this._disableOverFlow();this._setElementAttributes(this._element,'paddingRight',calculatedValue=>calculatedValue+width);this._setElementAttributes(SELECTOR_FIXED_CONTENT,'paddingRight',calculatedValue=>calculatedValue+width);this._setElementAttributes(SELECTOR_STICKY_CONTENT,'marginRight',calculatedValue=>calculatedValue-width);}
_disableOverFlow(){this._saveInitialAttribute(this._element,'overflow');this._element.style.overflow='hidden';}
_setElementAttributes(selector,styleProp,callback){const scrollbarWidth=this.getWidth();const manipulationCallBack=element=>{if(element!==this._element&&window.innerWidth>element.clientWidth+scrollbarWidth){return;}
this._saveInitialAttribute(element,styleProp);const calculatedValue=window.getComputedStyle(element)[styleProp];element.style[styleProp]=`${callback(Number.parseFloat(calculatedValue))}px`;};this._applyManipulationCallback(selector,manipulationCallBack);}
reset(){this._resetElementAttributes(this._element,'overflow');this._resetElementAttributes(this._element,'paddingRight');this._resetElementAttributes(SELECTOR_FIXED_CONTENT,'paddingRight');this._resetElementAttributes(SELECTOR_STICKY_CONTENT,'marginRight');}
_saveInitialAttribute(element,styleProp){const actualValue=element.style[styleProp];if(actualValue){Manipulator__default.default.setDataAttribute(element,styleProp,actualValue);}}
_resetElementAttributes(selector,styleProp){const manipulationCallBack=element=>{const value=Manipulator__default.default.getDataAttribute(element,styleProp);if(typeof value==='undefined'){element.style.removeProperty(styleProp);}else{Manipulator__default.default.removeDataAttribute(element,styleProp);element.style[styleProp]=value;}};this._applyManipulationCallback(selector,manipulationCallBack);}
_applyManipulationCallback(selector,callBack){if(isElement(selector)){callBack(selector);}else{SelectorEngine__default.default.find(selector,this._element).forEach(callBack);}}
isOverflowing(){return this.getWidth()>0;}}
const Default$2={className:'modal-backdrop',isVisible:true,isAnimated:false,rootElement:'body',clickCallback:null};const DefaultType$2={className:'string',isVisible:'boolean',isAnimated:'boolean',rootElement:'(element|string)',clickCallback:'(function|null)'};const NAME$2='backdrop';const CLASS_NAME_FADE$1='fade';const CLASS_NAME_SHOW$1='show';const EVENT_MOUSEDOWN=`mousedown.bs.${NAME$2}`;class Backdrop{constructor(config){this._config=this._getConfig(config);this._isAppended=false;this._element=null;}
show(callback){if(!this._config.isVisible){execute(callback);return;}
this._append();if(this._config.isAnimated){reflow(this._getElement());}
this._getElement().classList.add(CLASS_NAME_SHOW$1);this._emulateAnimation(()=>{execute(callback);});}
hide(callback){if(!this._config.isVisible){execute(callback);return;}
this._getElement().classList.remove(CLASS_NAME_SHOW$1);this._emulateAnimation(()=>{this.dispose();execute(callback);});}
_getElement(){if(!this._element){const backdrop=document.createElement('div');backdrop.className=this._config.className;if(this._config.isAnimated){backdrop.classList.add(CLASS_NAME_FADE$1);}
this._element=backdrop;}
return this._element;}
_getConfig(config){config={...Default$2,...(typeof config==='object'?config:{})};config.rootElement=getElement(config.rootElement);typeCheckConfig(NAME$2,config,DefaultType$2);return config;}
_append(){if(this._isAppended){return;}
this._config.rootElement.append(this._getElement());EventHandler__default.default.on(this._getElement(),EVENT_MOUSEDOWN,()=>{execute(this._config.clickCallback);});this._isAppended=true;}
dispose(){if(!this._isAppended){return;}
EventHandler__default.default.off(this._element,EVENT_MOUSEDOWN);this._element.remove();this._isAppended=false;}
_emulateAnimation(callback){executeAfterTransition(callback,this._getElement(),this._config.isAnimated);}}
const Default$1={trapElement:null,autofocus:true};const DefaultType$1={trapElement:'element',autofocus:'boolean'};const NAME$1='focustrap';const DATA_KEY$1='bs.focustrap';const EVENT_KEY$1=`.${DATA_KEY$1}`;const EVENT_FOCUSIN=`focusin${EVENT_KEY$1}`;const EVENT_KEYDOWN_TAB=`keydown.tab${EVENT_KEY$1}`;const TAB_KEY='Tab';const TAB_NAV_FORWARD='forward';const TAB_NAV_BACKWARD='backward';class FocusTrap{constructor(config){this._config=this._getConfig(config);this._isActive=false;this._lastTabNavDirection=null;}
activate(){const{trapElement,autofocus}=this._config;if(this._isActive){return;}
if(autofocus){trapElement.focus();}
EventHandler__default.default.off(document,EVENT_KEY$1);EventHandler__default.default.on(document,EVENT_FOCUSIN,event=>this._handleFocusin(event));EventHandler__default.default.on(document,EVENT_KEYDOWN_TAB,event=>this._handleKeydown(event));this._isActive=true;}
deactivate(){if(!this._isActive){return;}
this._isActive=false;EventHandler__default.default.off(document,EVENT_KEY$1);}
_handleFocusin(event){const{target}=event;const{trapElement}=this._config;if(target===document||target===trapElement||trapElement.contains(target)){return;}
const elements=SelectorEngine__default.default.focusableChildren(trapElement);if(elements.length===0){trapElement.focus();}else if(this._lastTabNavDirection===TAB_NAV_BACKWARD){elements[elements.length-1].focus();}else{elements[0].focus();}}
_handleKeydown(event){if(event.key!==TAB_KEY){return;}
this._lastTabNavDirection=event.shiftKey?TAB_NAV_BACKWARD:TAB_NAV_FORWARD;}
_getConfig(config){config={...Default$1,...(typeof config==='object'?config:{})};typeCheckConfig(NAME$1,config,DefaultType$1);return config;}}
const enableDismissTrigger=(component,method='hide')=>{const clickEvent=`click.dismiss${component.EVENT_KEY}`;const name=component.NAME;EventHandler__default.default.on(document,clickEvent,`[data-bs-dismiss="${name}"]`,function(event){if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
const target=getElementFromSelector(this)||this.closest(`.${name}`);const instance=component.getOrCreateInstance(target);instance[method]();});};const NAME='modal';const DATA_KEY='bs.modal';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const ESCAPE_KEY='Escape';const Default={backdrop:true,keyboard:true,focus:true};const DefaultType={backdrop:'(boolean|string)',keyboard:'boolean',focus:'boolean'};const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDE_PREVENTED=`hidePrevented${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const EVENT_RESIZE=`resize${EVENT_KEY}`;const EVENT_CLICK_DISMISS=`click.dismiss${EVENT_KEY}`;const EVENT_KEYDOWN_DISMISS=`keydown.dismiss${EVENT_KEY}`;const EVENT_MOUSEUP_DISMISS=`mouseup.dismiss${EVENT_KEY}`;const EVENT_MOUSEDOWN_DISMISS=`mousedown.dismiss${EVENT_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_OPEN='modal-open';const CLASS_NAME_FADE='fade';const CLASS_NAME_SHOW='show';const CLASS_NAME_STATIC='modal-static';const OPEN_SELECTOR='.modal.show';const SELECTOR_DIALOG='.modal-dialog';const SELECTOR_MODAL_BODY='.modal-body';const SELECTOR_DATA_TOGGLE='[data-bs-toggle="modal"]';class Modal extends BaseComponent__default.default{constructor(element,config){super(element);this._config=this._getConfig(config);this._dialog=SelectorEngine__default.default.findOne(SELECTOR_DIALOG,this._element);this._backdrop=this._initializeBackDrop();this._focustrap=this._initializeFocusTrap();this._isShown=false;this._ignoreBackdropClick=false;this._isTransitioning=false;this._scrollBar=new ScrollBarHelper();}
static get Default(){return Default;}
static get NAME(){return NAME;}
toggle(relatedTarget){return this._isShown?this.hide():this.show(relatedTarget);}
show(relatedTarget){if(this._isShown||this._isTransitioning){return;}
const showEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW,{relatedTarget});if(showEvent.defaultPrevented){return;}
this._isShown=true;if(this._isAnimated()){this._isTransitioning=true;}
this._scrollBar.hide();document.body.classList.add(CLASS_NAME_OPEN);this._adjustDialog();this._setEscapeEvent();this._setResizeEvent();EventHandler__default.default.on(this._dialog,EVENT_MOUSEDOWN_DISMISS,()=>{EventHandler__default.default.one(this._element,EVENT_MOUSEUP_DISMISS,event=>{if(event.target===this._element){this._ignoreBackdropClick=true;}});});this._showBackdrop(()=>this._showElement(relatedTarget));}
hide(){if(!this._isShown||this._isTransitioning){return;}
const hideEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE);if(hideEvent.defaultPrevented){return;}
this._isShown=false;const isAnimated=this._isAnimated();if(isAnimated){this._isTransitioning=true;}
this._setEscapeEvent();this._setResizeEvent();this._focustrap.deactivate();this._element.classList.remove(CLASS_NAME_SHOW);EventHandler__default.default.off(this._element,EVENT_CLICK_DISMISS);EventHandler__default.default.off(this._dialog,EVENT_MOUSEDOWN_DISMISS);this._queueCallback(()=>this._hideModal(),this._element,isAnimated);}
dispose(){[window,this._dialog].forEach(htmlElement=>EventHandler__default.default.off(htmlElement,EVENT_KEY));this._backdrop.dispose();this._focustrap.deactivate();super.dispose();}
handleUpdate(){this._adjustDialog();}
_initializeBackDrop(){return new Backdrop({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()});}
_initializeFocusTrap(){return new FocusTrap({trapElement:this._element});}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...(typeof config==='object'?config:{})};typeCheckConfig(NAME,config,DefaultType);return config;}
_showElement(relatedTarget){const isAnimated=this._isAnimated();const modalBody=SelectorEngine__default.default.findOne(SELECTOR_MODAL_BODY,this._dialog);if(!this._element.parentNode||this._element.parentNode.nodeType!==Node.ELEMENT_NODE){document.body.append(this._element);}
this._element.style.display='block';this._element.removeAttribute('aria-hidden');this._element.setAttribute('aria-modal',true);this._element.setAttribute('role','dialog');this._element.scrollTop=0;if(modalBody){modalBody.scrollTop=0;}
if(isAnimated){reflow(this._element);}
this._element.classList.add(CLASS_NAME_SHOW);const transitionComplete=()=>{if(this._config.focus){this._focustrap.activate();}
this._isTransitioning=false;EventHandler__default.default.trigger(this._element,EVENT_SHOWN,{relatedTarget});};this._queueCallback(transitionComplete,this._dialog,isAnimated);}
_setEscapeEvent(){if(this._isShown){EventHandler__default.default.on(this._element,EVENT_KEYDOWN_DISMISS,event=>{if(this._config.keyboard&&event.key===ESCAPE_KEY){event.preventDefault();this.hide();}else if(!this._config.keyboard&&event.key===ESCAPE_KEY){this._triggerBackdropTransition();}});}else{EventHandler__default.default.off(this._element,EVENT_KEYDOWN_DISMISS);}}
_setResizeEvent(){if(this._isShown){EventHandler__default.default.on(window,EVENT_RESIZE,()=>this._adjustDialog());}else{EventHandler__default.default.off(window,EVENT_RESIZE);}}
_hideModal(){this._element.style.display='none';this._element.setAttribute('aria-hidden',true);this._element.removeAttribute('aria-modal');this._element.removeAttribute('role');this._isTransitioning=false;this._backdrop.hide(()=>{document.body.classList.remove(CLASS_NAME_OPEN);this._resetAdjustments();this._scrollBar.reset();EventHandler__default.default.trigger(this._element,EVENT_HIDDEN);});}
_showBackdrop(callback){EventHandler__default.default.on(this._element,EVENT_CLICK_DISMISS,event=>{if(this._ignoreBackdropClick){this._ignoreBackdropClick=false;return;}
if(event.target!==event.currentTarget){return;}
if(this._config.backdrop===true){this.hide();}else if(this._config.backdrop==='static'){this._triggerBackdropTransition();}});this._backdrop.show(callback);}
_isAnimated(){return this._element.classList.contains(CLASS_NAME_FADE);}
_triggerBackdropTransition(){const hideEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE_PREVENTED);if(hideEvent.defaultPrevented){return;}
const{classList,scrollHeight,style}=this._element;const isModalOverflowing=scrollHeight>document.documentElement.clientHeight;if(!isModalOverflowing&&style.overflowY==='hidden'||classList.contains(CLASS_NAME_STATIC)){return;}
if(!isModalOverflowing){style.overflowY='hidden';}
classList.add(CLASS_NAME_STATIC);this._queueCallback(()=>{classList.remove(CLASS_NAME_STATIC);if(!isModalOverflowing){this._queueCallback(()=>{style.overflowY='';},this._dialog);}},this._dialog);this._element.focus();}
_adjustDialog(){const isModalOverflowing=this._element.scrollHeight>document.documentElement.clientHeight;const scrollbarWidth=this._scrollBar.getWidth();const isBodyOverflowing=scrollbarWidth>0;if(!isBodyOverflowing&&isModalOverflowing&&!isRTL()||isBodyOverflowing&&!isModalOverflowing&&isRTL()){this._element.style.paddingLeft=`${scrollbarWidth}px`;}
if(isBodyOverflowing&&!isModalOverflowing&&!isRTL()||!isBodyOverflowing&&isModalOverflowing&&isRTL()){this._element.style.paddingRight=`${scrollbarWidth}px`;}}
_resetAdjustments(){this._element.style.paddingLeft='';this._element.style.paddingRight='';}
static jQueryInterface(config,relatedTarget){return this.each(function(){const data=Modal.getOrCreateInstance(this,config);if(typeof config!=='string'){return;}
if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config](relatedTarget);});}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,function(event){const target=getElementFromSelector(this);if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
EventHandler__default.default.one(target,EVENT_SHOW,showEvent=>{if(showEvent.defaultPrevented){return;}
EventHandler__default.default.one(target,EVENT_HIDDEN,()=>{if(isVisible(this)){this.focus();}});});const allReadyOpen=SelectorEngine__default.default.findOne(OPEN_SELECTOR);if(allReadyOpen){Modal.getInstance(allReadyOpen).hide();}
const data=Modal.getOrCreateInstance(target);data.toggle(this);});enableDismissTrigger(Modal);defineJQueryPlugin(Modal);return Modal;}));;

/* /web/static/lib/bootstrap/js/dist/offcanvas.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/selector-engine.js'),require('./dom/manipulator.js'),require('./dom/event-handler.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/selector-engine','./dom/manipulator','./dom/event-handler','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Offcanvas=factory(global.SelectorEngine,global.Manipulator,global.EventHandler,global.Base));})(this,(function(SelectorEngine,Manipulator,EventHandler,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const Manipulator__default=_interopDefaultLegacy(Manipulator);const EventHandler__default=_interopDefaultLegacy(EventHandler);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const MILLISECONDS_MULTIPLIER=1000;const TRANSITION_END='transitionend';const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const getTransitionDurationFromElement=element=>{if(!element){return 0;}
let{transitionDuration,transitionDelay}=window.getComputedStyle(element);const floatTransitionDuration=Number.parseFloat(transitionDuration);const floatTransitionDelay=Number.parseFloat(transitionDelay);if(!floatTransitionDuration&&!floatTransitionDelay){return 0;}
transitionDuration=transitionDuration.split(',')[0];transitionDelay=transitionDelay.split(',')[0];return(Number.parseFloat(transitionDuration)+Number.parseFloat(transitionDelay))*MILLISECONDS_MULTIPLIER;};const triggerTransitionEnd=element=>{element.dispatchEvent(new Event(TRANSITION_END));};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const isVisible=element=>{if(!isElement(element)||element.getClientRects().length===0){return false;}
return getComputedStyle(element).getPropertyValue('visibility')==='visible';};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const execute=callback=>{if(typeof callback==='function'){callback();}};const executeAfterTransition=(callback,transitionElement,waitForTransition=true)=>{if(!waitForTransition){execute(callback);return;}
const durationPadding=5;const emulatedDuration=getTransitionDurationFromElement(transitionElement)+durationPadding;let called=false;const handler=({target})=>{if(target!==transitionElement){return;}
called=true;transitionElement.removeEventListener(TRANSITION_END,handler);execute(callback);};transitionElement.addEventListener(TRANSITION_END,handler);setTimeout(()=>{if(!called){triggerTransitionEnd(transitionElement);}},emulatedDuration);};const SELECTOR_FIXED_CONTENT='.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';const SELECTOR_STICKY_CONTENT='.sticky-top';class ScrollBarHelper{constructor(){this._element=document.body;}
getWidth(){const documentWidth=document.documentElement.clientWidth;return Math.abs(window.innerWidth-documentWidth);}
hide(){const width=this.getWidth();this._disableOverFlow();this._setElementAttributes(this._element,'paddingRight',calculatedValue=>calculatedValue+width);this._setElementAttributes(SELECTOR_FIXED_CONTENT,'paddingRight',calculatedValue=>calculatedValue+width);this._setElementAttributes(SELECTOR_STICKY_CONTENT,'marginRight',calculatedValue=>calculatedValue-width);}
_disableOverFlow(){this._saveInitialAttribute(this._element,'overflow');this._element.style.overflow='hidden';}
_setElementAttributes(selector,styleProp,callback){const scrollbarWidth=this.getWidth();const manipulationCallBack=element=>{if(element!==this._element&&window.innerWidth>element.clientWidth+scrollbarWidth){return;}
this._saveInitialAttribute(element,styleProp);const calculatedValue=window.getComputedStyle(element)[styleProp];element.style[styleProp]=`${callback(Number.parseFloat(calculatedValue))}px`;};this._applyManipulationCallback(selector,manipulationCallBack);}
reset(){this._resetElementAttributes(this._element,'overflow');this._resetElementAttributes(this._element,'paddingRight');this._resetElementAttributes(SELECTOR_FIXED_CONTENT,'paddingRight');this._resetElementAttributes(SELECTOR_STICKY_CONTENT,'marginRight');}
_saveInitialAttribute(element,styleProp){const actualValue=element.style[styleProp];if(actualValue){Manipulator__default.default.setDataAttribute(element,styleProp,actualValue);}}
_resetElementAttributes(selector,styleProp){const manipulationCallBack=element=>{const value=Manipulator__default.default.getDataAttribute(element,styleProp);if(typeof value==='undefined'){element.style.removeProperty(styleProp);}else{Manipulator__default.default.removeDataAttribute(element,styleProp);element.style[styleProp]=value;}};this._applyManipulationCallback(selector,manipulationCallBack);}
_applyManipulationCallback(selector,callBack){if(isElement(selector)){callBack(selector);}else{SelectorEngine__default.default.find(selector,this._element).forEach(callBack);}}
isOverflowing(){return this.getWidth()>0;}}
const Default$2={className:'modal-backdrop',isVisible:true,isAnimated:false,rootElement:'body',clickCallback:null};const DefaultType$2={className:'string',isVisible:'boolean',isAnimated:'boolean',rootElement:'(element|string)',clickCallback:'(function|null)'};const NAME$2='backdrop';const CLASS_NAME_FADE='fade';const CLASS_NAME_SHOW$1='show';const EVENT_MOUSEDOWN=`mousedown.bs.${NAME$2}`;class Backdrop{constructor(config){this._config=this._getConfig(config);this._isAppended=false;this._element=null;}
show(callback){if(!this._config.isVisible){execute(callback);return;}
this._append();if(this._config.isAnimated){reflow(this._getElement());}
this._getElement().classList.add(CLASS_NAME_SHOW$1);this._emulateAnimation(()=>{execute(callback);});}
hide(callback){if(!this._config.isVisible){execute(callback);return;}
this._getElement().classList.remove(CLASS_NAME_SHOW$1);this._emulateAnimation(()=>{this.dispose();execute(callback);});}
_getElement(){if(!this._element){const backdrop=document.createElement('div');backdrop.className=this._config.className;if(this._config.isAnimated){backdrop.classList.add(CLASS_NAME_FADE);}
this._element=backdrop;}
return this._element;}
_getConfig(config){config={...Default$2,...(typeof config==='object'?config:{})};config.rootElement=getElement(config.rootElement);typeCheckConfig(NAME$2,config,DefaultType$2);return config;}
_append(){if(this._isAppended){return;}
this._config.rootElement.append(this._getElement());EventHandler__default.default.on(this._getElement(),EVENT_MOUSEDOWN,()=>{execute(this._config.clickCallback);});this._isAppended=true;}
dispose(){if(!this._isAppended){return;}
EventHandler__default.default.off(this._element,EVENT_MOUSEDOWN);this._element.remove();this._isAppended=false;}
_emulateAnimation(callback){executeAfterTransition(callback,this._getElement(),this._config.isAnimated);}}
const Default$1={trapElement:null,autofocus:true};const DefaultType$1={trapElement:'element',autofocus:'boolean'};const NAME$1='focustrap';const DATA_KEY$1='bs.focustrap';const EVENT_KEY$1=`.${DATA_KEY$1}`;const EVENT_FOCUSIN=`focusin${EVENT_KEY$1}`;const EVENT_KEYDOWN_TAB=`keydown.tab${EVENT_KEY$1}`;const TAB_KEY='Tab';const TAB_NAV_FORWARD='forward';const TAB_NAV_BACKWARD='backward';class FocusTrap{constructor(config){this._config=this._getConfig(config);this._isActive=false;this._lastTabNavDirection=null;}
activate(){const{trapElement,autofocus}=this._config;if(this._isActive){return;}
if(autofocus){trapElement.focus();}
EventHandler__default.default.off(document,EVENT_KEY$1);EventHandler__default.default.on(document,EVENT_FOCUSIN,event=>this._handleFocusin(event));EventHandler__default.default.on(document,EVENT_KEYDOWN_TAB,event=>this._handleKeydown(event));this._isActive=true;}
deactivate(){if(!this._isActive){return;}
this._isActive=false;EventHandler__default.default.off(document,EVENT_KEY$1);}
_handleFocusin(event){const{target}=event;const{trapElement}=this._config;if(target===document||target===trapElement||trapElement.contains(target)){return;}
const elements=SelectorEngine__default.default.focusableChildren(trapElement);if(elements.length===0){trapElement.focus();}else if(this._lastTabNavDirection===TAB_NAV_BACKWARD){elements[elements.length-1].focus();}else{elements[0].focus();}}
_handleKeydown(event){if(event.key!==TAB_KEY){return;}
this._lastTabNavDirection=event.shiftKey?TAB_NAV_BACKWARD:TAB_NAV_FORWARD;}
_getConfig(config){config={...Default$1,...(typeof config==='object'?config:{})};typeCheckConfig(NAME$1,config,DefaultType$1);return config;}}
const enableDismissTrigger=(component,method='hide')=>{const clickEvent=`click.dismiss${component.EVENT_KEY}`;const name=component.NAME;EventHandler__default.default.on(document,clickEvent,`[data-bs-dismiss="${name}"]`,function(event){if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
const target=getElementFromSelector(this)||this.closest(`.${name}`);const instance=component.getOrCreateInstance(target);instance[method]();});};const NAME='offcanvas';const DATA_KEY='bs.offcanvas';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const EVENT_LOAD_DATA_API=`load${EVENT_KEY}${DATA_API_KEY}`;const ESCAPE_KEY='Escape';const Default={backdrop:true,keyboard:true,scroll:false};const DefaultType={backdrop:'boolean',keyboard:'boolean',scroll:'boolean'};const CLASS_NAME_SHOW='show';const CLASS_NAME_BACKDROP='offcanvas-backdrop';const OPEN_SELECTOR='.offcanvas.show';const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const EVENT_KEYDOWN_DISMISS=`keydown.dismiss${EVENT_KEY}`;const SELECTOR_DATA_TOGGLE='[data-bs-toggle="offcanvas"]';class Offcanvas extends BaseComponent__default.default{constructor(element,config){super(element);this._config=this._getConfig(config);this._isShown=false;this._backdrop=this._initializeBackDrop();this._focustrap=this._initializeFocusTrap();this._addEventListeners();}
static get NAME(){return NAME;}
static get Default(){return Default;}
toggle(relatedTarget){return this._isShown?this.hide():this.show(relatedTarget);}
show(relatedTarget){if(this._isShown){return;}
const showEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW,{relatedTarget});if(showEvent.defaultPrevented){return;}
this._isShown=true;this._element.style.visibility='visible';this._backdrop.show();if(!this._config.scroll){new ScrollBarHelper().hide();}
this._element.removeAttribute('aria-hidden');this._element.setAttribute('aria-modal',true);this._element.setAttribute('role','dialog');this._element.classList.add(CLASS_NAME_SHOW);const completeCallBack=()=>{if(!this._config.scroll){this._focustrap.activate();}
EventHandler__default.default.trigger(this._element,EVENT_SHOWN,{relatedTarget});};this._queueCallback(completeCallBack,this._element,true);}
hide(){if(!this._isShown){return;}
const hideEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE);if(hideEvent.defaultPrevented){return;}
this._focustrap.deactivate();this._element.blur();this._isShown=false;this._element.classList.remove(CLASS_NAME_SHOW);this._backdrop.hide();const completeCallback=()=>{this._element.setAttribute('aria-hidden',true);this._element.removeAttribute('aria-modal');this._element.removeAttribute('role');this._element.style.visibility='hidden';if(!this._config.scroll){new ScrollBarHelper().reset();}
EventHandler__default.default.trigger(this._element,EVENT_HIDDEN);};this._queueCallback(completeCallback,this._element,true);}
dispose(){this._backdrop.dispose();this._focustrap.deactivate();super.dispose();}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...(typeof config==='object'?config:{})};typeCheckConfig(NAME,config,DefaultType);return config;}
_initializeBackDrop(){return new Backdrop({className:CLASS_NAME_BACKDROP,isVisible:this._config.backdrop,isAnimated:true,rootElement:this._element.parentNode,clickCallback:()=>this.hide()});}
_initializeFocusTrap(){return new FocusTrap({trapElement:this._element});}
_addEventListeners(){EventHandler__default.default.on(this._element,EVENT_KEYDOWN_DISMISS,event=>{if(this._config.keyboard&&event.key===ESCAPE_KEY){this.hide();}});}
static jQueryInterface(config){return this.each(function(){const data=Offcanvas.getOrCreateInstance(this,config);if(typeof config!=='string'){return;}
if(data[config]===undefined||config.startsWith('_')||config==='constructor'){throw new TypeError(`No method named "${config}"`);}
data[config](this);});}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,function(event){const target=getElementFromSelector(this);if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
EventHandler__default.default.one(target,EVENT_HIDDEN,()=>{if(isVisible(this)){this.focus();}});const allReadyOpen=SelectorEngine__default.default.findOne(OPEN_SELECTOR);if(allReadyOpen&&allReadyOpen!==target){Offcanvas.getInstance(allReadyOpen).hide();}
const data=Offcanvas.getOrCreateInstance(target);data.toggle(this);});EventHandler__default.default.on(window,EVENT_LOAD_DATA_API,()=>SelectorEngine__default.default.find(OPEN_SELECTOR).forEach(el=>Offcanvas.getOrCreateInstance(el).show()));enableDismissTrigger(Offcanvas);defineJQueryPlugin(Offcanvas);return Offcanvas;}));;

/* /web/static/lib/bootstrap/js/dist/tooltip.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('@popperjs/core'),require('./dom/data.js'),require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['@popperjs/core','./dom/data','./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Tooltip=factory(global.Popper,global.Data,global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(Popper,Data,EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};function _interopNamespace(e){if(e&&e.__esModule)return e;const n=Object.create(null);if(e){for(const k in e){if(k!=='default'){const d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:()=>e[k]});}}}
n.default=e;return Object.freeze(n);}
const Popper__namespace=_interopNamespace(Popper);const Data__default=_interopDefaultLegacy(Data);const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const MAX_UID=1000000;const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getUID=prefix=>{do{prefix+=Math.floor(Math.random()*MAX_UID);}while(document.getElementById(prefix));return prefix;};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const findShadowRoot=element=>{if(!document.documentElement.attachShadow){return null;}
if(typeof element.getRootNode==='function'){const root=element.getRootNode();return root instanceof ShadowRoot?root:null;}
if(element instanceof ShadowRoot){return element;}
if(!element.parentNode){return null;}
return findShadowRoot(element.parentNode);};const noop=()=>{};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const isRTL=()=>document.documentElement.dir==='rtl';const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const uriAttributes=new Set(['background','cite','href','itemtype','longdesc','poster','src','xlink:href']);const ARIA_ATTRIBUTE_PATTERN=/^aria-[\w-]*$/i;const SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i;const DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;const allowedAttribute=(attribute,allowedAttributeList)=>{const attributeName=attribute.nodeName.toLowerCase();if(allowedAttributeList.includes(attributeName)){if(uriAttributes.has(attributeName)){return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue)||DATA_URL_PATTERN.test(attribute.nodeValue));}
return true;}
const regExp=allowedAttributeList.filter(attributeRegex=>attributeRegex instanceof RegExp);for(let i=0,len=regExp.length;i<len;i++){if(regExp[i].test(attributeName)){return true;}}
return false;};const DefaultAllowlist={'*':['class','dir','id','lang','role',ARIA_ATTRIBUTE_PATTERN],a:['target','href','title','rel'],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:['src','srcset','alt','title','width','height'],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]};function sanitizeHtml(unsafeHtml,allowList,sanitizeFn){if(!unsafeHtml.length){return unsafeHtml;}
if(sanitizeFn&&typeof sanitizeFn==='function'){return sanitizeFn(unsafeHtml);}
const domParser=new window.DOMParser();const createdDocument=domParser.parseFromString(unsafeHtml,'text/html');const elements=[].concat(...createdDocument.body.querySelectorAll('*'));for(let i=0,len=elements.length;i<len;i++){const element=elements[i];const elementName=element.nodeName.toLowerCase();if(!Object.keys(allowList).includes(elementName)){element.remove();continue;}
const attributeList=[].concat(...element.attributes);const allowedAttributes=[].concat(allowList['*']||[],allowList[elementName]||[]);attributeList.forEach(attribute=>{if(!allowedAttribute(attribute,allowedAttributes)){element.removeAttribute(attribute.nodeName);}});}
return createdDocument.body.innerHTML;}
const NAME='tooltip';const DATA_KEY='bs.tooltip';const EVENT_KEY=`.${DATA_KEY}`;const CLASS_PREFIX='bs-tooltip';const DISALLOWED_ATTRIBUTES=new Set(['sanitize','allowList','sanitizeFn']);const DefaultType={animation:'boolean',template:'string',title:'(string|element|function)',trigger:'string',delay:'(number|object)',html:'boolean',selector:'(string|boolean)',placement:'(string|function)',offset:'(array|string|function)',container:'(string|element|boolean)',fallbackPlacements:'array',boundary:'(string|element)',customClass:'(string|function)',sanitize:'boolean',sanitizeFn:'(null|function)',allowList:'object',popperConfig:'(null|object|function)'};const AttachmentMap={AUTO:'auto',TOP:'top',RIGHT:isRTL()?'left':'right',BOTTOM:'bottom',LEFT:isRTL()?'right':'left'};const Default={animation:true,template:'<div class="tooltip" role="tooltip">'+'<div class="tooltip-arrow"></div>'+'<div class="tooltip-inner"></div>'+'</div>',trigger:'hover focus',title:'',delay:0,html:false,selector:false,placement:'top',offset:[0,0],container:false,fallbackPlacements:['top','right','bottom','left'],boundary:'clippingParents',customClass:'',sanitize:true,sanitizeFn:null,allowList:DefaultAllowlist,popperConfig:null};const Event={HIDE:`hide${EVENT_KEY}`,HIDDEN:`hidden${EVENT_KEY}`,SHOW:`show${EVENT_KEY}`,SHOWN:`shown${EVENT_KEY}`,INSERTED:`inserted${EVENT_KEY}`,CLICK:`click${EVENT_KEY}`,FOCUSIN:`focusin${EVENT_KEY}`,FOCUSOUT:`focusout${EVENT_KEY}`,MOUSEENTER:`mouseenter${EVENT_KEY}`,MOUSELEAVE:`mouseleave${EVENT_KEY}`};const CLASS_NAME_FADE='fade';const CLASS_NAME_MODAL='modal';const CLASS_NAME_SHOW='show';const HOVER_STATE_SHOW='show';const HOVER_STATE_OUT='out';const SELECTOR_TOOLTIP_INNER='.tooltip-inner';const SELECTOR_MODAL=`.${CLASS_NAME_MODAL}`;const EVENT_MODAL_HIDE='hide.bs.modal';const TRIGGER_HOVER='hover';const TRIGGER_FOCUS='focus';const TRIGGER_CLICK='click';const TRIGGER_MANUAL='manual';class Tooltip extends BaseComponent__default.default{constructor(element,config){if(typeof Popper__namespace==='undefined'){throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');}
super(element);this._isEnabled=true;this._timeout=0;this._hoverState='';this._activeTrigger={};this._popper=null;this._config=this._getConfig(config);this.tip=null;this._setListeners();}
static get Default(){return Default;}
static get NAME(){return NAME;}
static get Event(){return Event;}
static get DefaultType(){return DefaultType;}
enable(){this._isEnabled=true;}
disable(){this._isEnabled=false;}
toggleEnabled(){this._isEnabled=!this._isEnabled;}
toggle(event){if(!this._isEnabled){return;}
if(event){const context=this._initializeOnDelegatedTarget(event);context._activeTrigger.click=!context._activeTrigger.click;if(context._isWithActiveTrigger()){context._enter(null,context);}else{context._leave(null,context);}}else{if(this.getTipElement().classList.contains(CLASS_NAME_SHOW)){this._leave(null,this);return;}
this._enter(null,this);}}
dispose(){clearTimeout(this._timeout);EventHandler__default.default.off(this._element.closest(SELECTOR_MODAL),EVENT_MODAL_HIDE,this._hideModalHandler);if(this.tip){this.tip.remove();}
this._disposePopper();super.dispose();}
show(){if(this._element.style.display==='none'){throw new Error('Please use show on visible elements');}
if(!(this.isWithContent()&&this._isEnabled)){return;}
const showEvent=EventHandler__default.default.trigger(this._element,this.constructor.Event.SHOW);const shadowRoot=findShadowRoot(this._element);const isInTheDom=shadowRoot===null?this._element.ownerDocument.documentElement.contains(this._element):shadowRoot.contains(this._element);if(showEvent.defaultPrevented||!isInTheDom){return;}
if(this.constructor.NAME==='tooltip'&&this.tip&&this.getTitle()!==this.tip.querySelector(SELECTOR_TOOLTIP_INNER).innerHTML){this._disposePopper();this.tip.remove();this.tip=null;}
const tip=this.getTipElement();const tipId=getUID(this.constructor.NAME);tip.setAttribute('id',tipId);this._element.setAttribute('aria-describedby',tipId);if(this._config.animation){tip.classList.add(CLASS_NAME_FADE);}
const placement=typeof this._config.placement==='function'?this._config.placement.call(this,tip,this._element):this._config.placement;const attachment=this._getAttachment(placement);this._addAttachmentClass(attachment);const{container}=this._config;Data__default.default.set(tip,this.constructor.DATA_KEY,this);if(!this._element.ownerDocument.documentElement.contains(this.tip)){container.append(tip);EventHandler__default.default.trigger(this._element,this.constructor.Event.INSERTED);}
if(this._popper){this._popper.update();}else{this._popper=Popper__namespace.createPopper(this._element,tip,this._getPopperConfig(attachment));}
tip.classList.add(CLASS_NAME_SHOW);const customClass=this._resolvePossibleFunction(this._config.customClass);if(customClass){tip.classList.add(...customClass.split(' '));}
if('ontouchstart'in document.documentElement){[].concat(...document.body.children).forEach(element=>{EventHandler__default.default.on(element,'mouseover',noop);});}
const complete=()=>{const prevHoverState=this._hoverState;this._hoverState=null;EventHandler__default.default.trigger(this._element,this.constructor.Event.SHOWN);if(prevHoverState===HOVER_STATE_OUT){this._leave(null,this);}};const isAnimated=this.tip.classList.contains(CLASS_NAME_FADE);this._queueCallback(complete,this.tip,isAnimated);}
hide(){if(!this._popper){return;}
const tip=this.getTipElement();const complete=()=>{if(!this._element||!this._config){return;}
if(this._isWithActiveTrigger()){return;}
if(this._hoverState!==HOVER_STATE_SHOW){tip.remove();}
this._cleanTipClass();this._element.removeAttribute('aria-describedby');EventHandler__default.default.trigger(this._element,this.constructor.Event.HIDDEN);this._disposePopper();};const hideEvent=EventHandler__default.default.trigger(this._element,this.constructor.Event.HIDE);if(hideEvent.defaultPrevented){return;}
tip.classList.remove(CLASS_NAME_SHOW);if('ontouchstart'in document.documentElement){[].concat(...document.body.children).forEach(element=>EventHandler__default.default.off(element,'mouseover',noop));}
this._activeTrigger[TRIGGER_CLICK]=false;this._activeTrigger[TRIGGER_FOCUS]=false;this._activeTrigger[TRIGGER_HOVER]=false;const isAnimated=this.tip.classList.contains(CLASS_NAME_FADE);this._queueCallback(complete,this.tip,isAnimated);this._hoverState='';}
update(){if(this._popper!==null){this._popper.update();}}
isWithContent(){return Boolean(this.getTitle());}
getTipElement(){if(this.tip){return this.tip;}
const element=document.createElement('div');element.innerHTML=this._config.template;const tip=element.children[0];this.setContent(tip);tip.classList.remove(CLASS_NAME_FADE,CLASS_NAME_SHOW);this.tip=tip;return this.tip;}
setContent(tip){this._sanitizeAndSetContent(tip,this.getTitle(),SELECTOR_TOOLTIP_INNER);}
_sanitizeAndSetContent(template,content,selector){const templateElement=SelectorEngine__default.default.findOne(selector,template);if(!content&&templateElement){templateElement.remove();return;}
this.setElementContent(templateElement,content);}
setElementContent(element,content){if(element===null){return;}
if(isElement(content)){content=getElement(content);if(this._config.html){if(content.parentNode!==element){element.innerHTML='';element.append(content);}}else{element.textContent=content.textContent;}
return;}
if(this._config.html){if(this._config.sanitize){content=sanitizeHtml(content,this._config.allowList,this._config.sanitizeFn);}
element.innerHTML=content;}else{element.textContent=content;}}
getTitle(){const title=this._element.getAttribute('data-bs-original-title')||this._config.title;return this._resolvePossibleFunction(title);}
updateAttachment(attachment){if(attachment==='right'){return'end';}
if(attachment==='left'){return'start';}
return attachment;}
_initializeOnDelegatedTarget(event,context){return context||this.constructor.getOrCreateInstance(event.delegateTarget,this._getDelegateConfig());}
_getOffset(){const{offset}=this._config;if(typeof offset==='string'){return offset.split(',').map(val=>Number.parseInt(val,10));}
if(typeof offset==='function'){return popperData=>offset(popperData,this._element);}
return offset;}
_resolvePossibleFunction(content){return typeof content==='function'?content.call(this._element):content;}
_getPopperConfig(attachment){const defaultBsPopperConfig={placement:attachment,modifiers:[{name:'flip',options:{fallbackPlacements:this._config.fallbackPlacements}},{name:'offset',options:{offset:this._getOffset()}},{name:'preventOverflow',options:{boundary:this._config.boundary}},{name:'arrow',options:{element:`.${this.constructor.NAME}-arrow`}},{name:'onChange',enabled:true,phase:'afterWrite',fn:data=>this._handlePopperPlacementChange(data)}],onFirstUpdate:data=>{if(data.options.placement!==data.placement){this._handlePopperPlacementChange(data);}}};return{...defaultBsPopperConfig,...(typeof this._config.popperConfig==='function'?this._config.popperConfig(defaultBsPopperConfig):this._config.popperConfig)};}
_addAttachmentClass(attachment){this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(attachment)}`);}
_getAttachment(placement){return AttachmentMap[placement.toUpperCase()];}
_setListeners(){const triggers=this._config.trigger.split(' ');triggers.forEach(trigger=>{if(trigger==='click'){EventHandler__default.default.on(this._element,this.constructor.Event.CLICK,this._config.selector,event=>this.toggle(event));}else if(trigger!==TRIGGER_MANUAL){const eventIn=trigger===TRIGGER_HOVER?this.constructor.Event.MOUSEENTER:this.constructor.Event.FOCUSIN;const eventOut=trigger===TRIGGER_HOVER?this.constructor.Event.MOUSELEAVE:this.constructor.Event.FOCUSOUT;EventHandler__default.default.on(this._element,eventIn,this._config.selector,event=>this._enter(event));EventHandler__default.default.on(this._element,eventOut,this._config.selector,event=>this._leave(event));}});this._hideModalHandler=()=>{if(this._element){this.hide();}};EventHandler__default.default.on(this._element.closest(SELECTOR_MODAL),EVENT_MODAL_HIDE,this._hideModalHandler);if(this._config.selector){this._config={...this._config,trigger:'manual',selector:''};}else{this._fixTitle();}}
_fixTitle(){const title=this._element.getAttribute('title');const originalTitleType=typeof this._element.getAttribute('data-bs-original-title');if(title||originalTitleType!=='string'){this._element.setAttribute('data-bs-original-title',title||'');if(title&&!this._element.getAttribute('aria-label')&&!this._element.textContent){this._element.setAttribute('aria-label',title);}
this._element.setAttribute('title','');}}
_enter(event,context){context=this._initializeOnDelegatedTarget(event,context);if(event){context._activeTrigger[event.type==='focusin'?TRIGGER_FOCUS:TRIGGER_HOVER]=true;}
if(context.getTipElement().classList.contains(CLASS_NAME_SHOW)||context._hoverState===HOVER_STATE_SHOW){context._hoverState=HOVER_STATE_SHOW;return;}
clearTimeout(context._timeout);context._hoverState=HOVER_STATE_SHOW;if(!context._config.delay||!context._config.delay.show){context.show();return;}
context._timeout=setTimeout(()=>{if(context._hoverState===HOVER_STATE_SHOW){context.show();}},context._config.delay.show);}
_leave(event,context){context=this._initializeOnDelegatedTarget(event,context);if(event){context._activeTrigger[event.type==='focusout'?TRIGGER_FOCUS:TRIGGER_HOVER]=context._element.contains(event.relatedTarget);}
if(context._isWithActiveTrigger()){return;}
clearTimeout(context._timeout);context._hoverState=HOVER_STATE_OUT;if(!context._config.delay||!context._config.delay.hide){context.hide();return;}
context._timeout=setTimeout(()=>{if(context._hoverState===HOVER_STATE_OUT){context.hide();}},context._config.delay.hide);}
_isWithActiveTrigger(){for(const trigger in this._activeTrigger){if(this._activeTrigger[trigger]){return true;}}
return false;}
_getConfig(config){const dataAttributes=Manipulator__default.default.getDataAttributes(this._element);Object.keys(dataAttributes).forEach(dataAttr=>{if(DISALLOWED_ATTRIBUTES.has(dataAttr)){delete dataAttributes[dataAttr];}});config={...this.constructor.Default,...dataAttributes,...(typeof config==='object'&&config?config:{})};config.container=config.container===false?document.body:getElement(config.container);if(typeof config.delay==='number'){config.delay={show:config.delay,hide:config.delay};}
if(typeof config.title==='number'){config.title=config.title.toString();}
if(typeof config.content==='number'){config.content=config.content.toString();}
typeCheckConfig(NAME,config,this.constructor.DefaultType);if(config.sanitize){config.template=sanitizeHtml(config.template,config.allowList,config.sanitizeFn);}
return config;}
_getDelegateConfig(){const config={};for(const key in this._config){if(this.constructor.Default[key]!==this._config[key]){config[key]=this._config[key];}}
return config;}
_cleanTipClass(){const tip=this.getTipElement();const basicClassPrefixRegex=new RegExp(`(^|\\s)${this._getBasicClassPrefix()}\\S+`,'g');const tabClass=tip.getAttribute('class').match(basicClassPrefixRegex);if(tabClass!==null&&tabClass.length>0){tabClass.map(token=>token.trim()).forEach(tClass=>tip.classList.remove(tClass));}}
_getBasicClassPrefix(){return CLASS_PREFIX;}
_handlePopperPlacementChange(popperData){const{state}=popperData;if(!state){return;}
this.tip=state.elements.popper;this._cleanTipClass();this._addAttachmentClass(this._getAttachment(state.placement));}
_disposePopper(){if(this._popper){this._popper.destroy();this._popper=null;}}
static jQueryInterface(config){return this.each(function(){const data=Tooltip.getOrCreateInstance(this,config);if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();}});}}
defineJQueryPlugin(Tooltip);return Tooltip;}));;

/* /web/static/lib/bootstrap/js/dist/popover.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./tooltip.js')):typeof define==='function'&&define.amd?define(['./tooltip'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Popover=factory(global.Tooltip));})(this,(function(Tooltip){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const Tooltip__default=_interopDefaultLegacy(Tooltip);const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const NAME='popover';const DATA_KEY='bs.popover';const EVENT_KEY=`.${DATA_KEY}`;const CLASS_PREFIX='bs-popover';const Default={...Tooltip__default.default.Default,placement:'right',offset:[0,8],trigger:'click',content:'',template:'<div class="popover" role="tooltip">'+'<div class="popover-arrow"></div>'+'<h3 class="popover-header"></h3>'+'<div class="popover-body"></div>'+'</div>'};const DefaultType={...Tooltip__default.default.DefaultType,content:'(string|element|function)'};const Event={HIDE:`hide${EVENT_KEY}`,HIDDEN:`hidden${EVENT_KEY}`,SHOW:`show${EVENT_KEY}`,SHOWN:`shown${EVENT_KEY}`,INSERTED:`inserted${EVENT_KEY}`,CLICK:`click${EVENT_KEY}`,FOCUSIN:`focusin${EVENT_KEY}`,FOCUSOUT:`focusout${EVENT_KEY}`,MOUSEENTER:`mouseenter${EVENT_KEY}`,MOUSELEAVE:`mouseleave${EVENT_KEY}`};const SELECTOR_TITLE='.popover-header';const SELECTOR_CONTENT='.popover-body';class Popover extends Tooltip__default.default{static get Default(){return Default;}
static get NAME(){return NAME;}
static get Event(){return Event;}
static get DefaultType(){return DefaultType;}
isWithContent(){return this.getTitle()||this._getContent();}
setContent(tip){this._sanitizeAndSetContent(tip,this.getTitle(),SELECTOR_TITLE);this._sanitizeAndSetContent(tip,this._getContent(),SELECTOR_CONTENT);}
_getContent(){return this._resolvePossibleFunction(this._config.content);}
_getBasicClassPrefix(){return CLASS_PREFIX;}
static jQueryInterface(config){return this.each(function(){const data=Popover.getOrCreateInstance(this,config);if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();}});}}
defineJQueryPlugin(Popover);return Popover;}));;

/* /web/static/lib/bootstrap/js/dist/scrollspy.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./dom/manipulator','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.ScrollSpy=factory(global.EventHandler,global.Manipulator,global.SelectorEngine,global.Base));})(this,(function(EventHandler,Manipulator,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getSelectorFromElement=element=>{const selector=getSelector(element);if(selector){return document.querySelector(selector)?selector:null;}
return null;};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const getElement=obj=>{if(isElement(obj)){return obj.jquery?obj[0]:obj;}
if(typeof obj==='string'&&obj.length>0){return document.querySelector(obj);}
return null;};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const NAME='scrollspy';const DATA_KEY='bs.scrollspy';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const Default={offset:10,method:'auto',target:''};const DefaultType={offset:'number',method:'string',target:'(string|element)'};const EVENT_ACTIVATE=`activate${EVENT_KEY}`;const EVENT_SCROLL=`scroll${EVENT_KEY}`;const EVENT_LOAD_DATA_API=`load${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_DROPDOWN_ITEM='dropdown-item';const CLASS_NAME_ACTIVE='active';const SELECTOR_DATA_SPY='[data-bs-spy="scroll"]';const SELECTOR_NAV_LIST_GROUP='.nav, .list-group';const SELECTOR_NAV_LINKS='.nav-link';const SELECTOR_NAV_ITEMS='.nav-item';const SELECTOR_LIST_ITEMS='.list-group-item';const SELECTOR_LINK_ITEMS=`${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}, .${CLASS_NAME_DROPDOWN_ITEM}`;const SELECTOR_DROPDOWN='.dropdown';const SELECTOR_DROPDOWN_TOGGLE='.dropdown-toggle';const METHOD_OFFSET='offset';const METHOD_POSITION='position';class ScrollSpy extends BaseComponent__default.default{constructor(element,config){super(element);this._scrollElement=this._element.tagName==='BODY'?window:this._element;this._config=this._getConfig(config);this._offsets=[];this._targets=[];this._activeTarget=null;this._scrollHeight=0;EventHandler__default.default.on(this._scrollElement,EVENT_SCROLL,()=>this._process());this.refresh();this._process();}
static get Default(){return Default;}
static get NAME(){return NAME;}
refresh(){const autoMethod=this._scrollElement===this._scrollElement.window?METHOD_OFFSET:METHOD_POSITION;const offsetMethod=this._config.method==='auto'?autoMethod:this._config.method;const offsetBase=offsetMethod===METHOD_POSITION?this._getScrollTop():0;this._offsets=[];this._targets=[];this._scrollHeight=this._getScrollHeight();const targets=SelectorEngine__default.default.find(SELECTOR_LINK_ITEMS,this._config.target);targets.map(element=>{const targetSelector=getSelectorFromElement(element);const target=targetSelector?SelectorEngine__default.default.findOne(targetSelector):null;if(target){const targetBCR=target.getBoundingClientRect();if(targetBCR.width||targetBCR.height){return[Manipulator__default.default[offsetMethod](target).top+offsetBase,targetSelector];}}
return null;}).filter(item=>item).sort((a,b)=>a[0]-b[0]).forEach(item=>{this._offsets.push(item[0]);this._targets.push(item[1]);});}
dispose(){EventHandler__default.default.off(this._scrollElement,EVENT_KEY);super.dispose();}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...(typeof config==='object'&&config?config:{})};config.target=getElement(config.target)||document.documentElement;typeCheckConfig(NAME,config,DefaultType);return config;}
_getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop;}
_getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight);}
_getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height;}
_process(){const scrollTop=this._getScrollTop()+this._config.offset;const scrollHeight=this._getScrollHeight();const maxScroll=this._config.offset+scrollHeight-this._getOffsetHeight();if(this._scrollHeight!==scrollHeight){this.refresh();}
if(scrollTop>=maxScroll){const target=this._targets[this._targets.length-1];if(this._activeTarget!==target){this._activate(target);}
return;}
if(this._activeTarget&&scrollTop<this._offsets[0]&&this._offsets[0]>0){this._activeTarget=null;this._clear();return;}
for(let i=this._offsets.length;i--;){const isActiveTarget=this._activeTarget!==this._targets[i]&&scrollTop>=this._offsets[i]&&(typeof this._offsets[i+1]==='undefined'||scrollTop<this._offsets[i+1]);if(isActiveTarget){this._activate(this._targets[i]);}}}
_activate(target){this._activeTarget=target;this._clear();const queries=SELECTOR_LINK_ITEMS.split(',').map(selector=>`${selector}[data-bs-target="${target}"],${selector}[href="${target}"]`);const link=SelectorEngine__default.default.findOne(queries.join(','),this._config.target);link.classList.add(CLASS_NAME_ACTIVE);if(link.classList.contains(CLASS_NAME_DROPDOWN_ITEM)){SelectorEngine__default.default.findOne(SELECTOR_DROPDOWN_TOGGLE,link.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE);}else{SelectorEngine__default.default.parents(link,SELECTOR_NAV_LIST_GROUP).forEach(listGroup=>{SelectorEngine__default.default.prev(listGroup,`${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`).forEach(item=>item.classList.add(CLASS_NAME_ACTIVE));SelectorEngine__default.default.prev(listGroup,SELECTOR_NAV_ITEMS).forEach(navItem=>{SelectorEngine__default.default.children(navItem,SELECTOR_NAV_LINKS).forEach(item=>item.classList.add(CLASS_NAME_ACTIVE));});});}
EventHandler__default.default.trigger(this._scrollElement,EVENT_ACTIVATE,{relatedTarget:target});}
_clear(){SelectorEngine__default.default.find(SELECTOR_LINK_ITEMS,this._config.target).filter(node=>node.classList.contains(CLASS_NAME_ACTIVE)).forEach(node=>node.classList.remove(CLASS_NAME_ACTIVE));}
static jQueryInterface(config){return this.each(function(){const data=ScrollSpy.getOrCreateInstance(this,config);if(typeof config!=='string'){return;}
if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();});}}
EventHandler__default.default.on(window,EVENT_LOAD_DATA_API,()=>{SelectorEngine__default.default.find(SELECTOR_DATA_SPY).forEach(spy=>new ScrollSpy(spy));});defineJQueryPlugin(ScrollSpy);return ScrollSpy;}));;

/* /web/static/lib/bootstrap/js/dist/tab.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./dom/selector-engine.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./dom/selector-engine','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Tab=factory(global.EventHandler,global.SelectorEngine,global.Base));})(this,(function(EventHandler,SelectorEngine,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const SelectorEngine__default=_interopDefaultLegacy(SelectorEngine);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const NAME='tab';const DATA_KEY='bs.tab';const EVENT_KEY=`.${DATA_KEY}`;const DATA_API_KEY='.data-api';const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const EVENT_CLICK_DATA_API=`click${EVENT_KEY}${DATA_API_KEY}`;const CLASS_NAME_DROPDOWN_MENU='dropdown-menu';const CLASS_NAME_ACTIVE='active';const CLASS_NAME_FADE='fade';const CLASS_NAME_SHOW='show';const SELECTOR_DROPDOWN='.dropdown';const SELECTOR_NAV_LIST_GROUP='.nav, .list-group';const SELECTOR_ACTIVE='.active';const SELECTOR_ACTIVE_UL=':scope > li > .active';const SELECTOR_DATA_TOGGLE='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]';const SELECTOR_DROPDOWN_TOGGLE='.dropdown-toggle';const SELECTOR_DROPDOWN_ACTIVE_CHILD=':scope > .dropdown-menu .active';class Tab extends BaseComponent__default.default{static get NAME(){return NAME;}
show(){if(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.classList.contains(CLASS_NAME_ACTIVE)){return;}
let previous;const target=getElementFromSelector(this._element);const listElement=this._element.closest(SELECTOR_NAV_LIST_GROUP);if(listElement){const itemSelector=listElement.nodeName==='UL'||listElement.nodeName==='OL'?SELECTOR_ACTIVE_UL:SELECTOR_ACTIVE;previous=SelectorEngine__default.default.find(itemSelector,listElement);previous=previous[previous.length-1];}
const hideEvent=previous?EventHandler__default.default.trigger(previous,EVENT_HIDE,{relatedTarget:this._element}):null;const showEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW,{relatedTarget:previous});if(showEvent.defaultPrevented||hideEvent!==null&&hideEvent.defaultPrevented){return;}
this._activate(this._element,listElement);const complete=()=>{EventHandler__default.default.trigger(previous,EVENT_HIDDEN,{relatedTarget:this._element});EventHandler__default.default.trigger(this._element,EVENT_SHOWN,{relatedTarget:previous});};if(target){this._activate(target,target.parentNode,complete);}else{complete();}}
_activate(element,container,callback){const activeElements=container&&(container.nodeName==='UL'||container.nodeName==='OL')?SelectorEngine__default.default.find(SELECTOR_ACTIVE_UL,container):SelectorEngine__default.default.children(container,SELECTOR_ACTIVE);const active=activeElements[0];const isTransitioning=callback&&active&&active.classList.contains(CLASS_NAME_FADE);const complete=()=>this._transitionComplete(element,active,callback);if(active&&isTransitioning){active.classList.remove(CLASS_NAME_SHOW);this._queueCallback(complete,element,true);}else{complete();}}
_transitionComplete(element,active,callback){if(active){active.classList.remove(CLASS_NAME_ACTIVE);const dropdownChild=SelectorEngine__default.default.findOne(SELECTOR_DROPDOWN_ACTIVE_CHILD,active.parentNode);if(dropdownChild){dropdownChild.classList.remove(CLASS_NAME_ACTIVE);}
if(active.getAttribute('role')==='tab'){active.setAttribute('aria-selected',false);}}
element.classList.add(CLASS_NAME_ACTIVE);if(element.getAttribute('role')==='tab'){element.setAttribute('aria-selected',true);}
reflow(element);if(element.classList.contains(CLASS_NAME_FADE)){element.classList.add(CLASS_NAME_SHOW);}
let parent=element.parentNode;if(parent&&parent.nodeName==='LI'){parent=parent.parentNode;}
if(parent&&parent.classList.contains(CLASS_NAME_DROPDOWN_MENU)){const dropdownElement=element.closest(SELECTOR_DROPDOWN);if(dropdownElement){SelectorEngine__default.default.find(SELECTOR_DROPDOWN_TOGGLE,dropdownElement).forEach(dropdown=>dropdown.classList.add(CLASS_NAME_ACTIVE));}
element.setAttribute('aria-expanded',true);}
if(callback){callback();}}
static jQueryInterface(config){return this.each(function(){const data=Tab.getOrCreateInstance(this);if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config]();}});}}
EventHandler__default.default.on(document,EVENT_CLICK_DATA_API,SELECTOR_DATA_TOGGLE,function(event){if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
const data=Tab.getOrCreateInstance(this);data.show();});defineJQueryPlugin(Tab);return Tab;}));;

/* /web/static/lib/bootstrap/js/dist/toast.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory(require('./dom/event-handler.js'),require('./dom/manipulator.js'),require('./base-component.js')):typeof define==='function'&&define.amd?define(['./dom/event-handler','./dom/manipulator','./base-component'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Toast=factory(global.EventHandler,global.Manipulator,global.Base));})(this,(function(EventHandler,Manipulator,BaseComponent){'use strict';const _interopDefaultLegacy=e=>e&&typeof e==='object'&&'default'in e?e:{default:e};const EventHandler__default=_interopDefaultLegacy(EventHandler);const Manipulator__default=_interopDefaultLegacy(Manipulator);const BaseComponent__default=_interopDefaultLegacy(BaseComponent);const toType=obj=>{if(obj===null||obj===undefined){return`${obj}`;}
return{}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();};const getSelector=element=>{let selector=element.getAttribute('data-bs-target');if(!selector||selector==='#'){let hrefAttr=element.getAttribute('href');if(!hrefAttr||!hrefAttr.includes('#')&&!hrefAttr.startsWith('.')){return null;}
if(hrefAttr.includes('#')&&!hrefAttr.startsWith('#')){hrefAttr=`#${hrefAttr.split('#')[1]}`;}
selector=hrefAttr&&hrefAttr!=='#'?hrefAttr.trim():null;}
return selector;};const getElementFromSelector=element=>{const selector=getSelector(element);return selector?document.querySelector(selector):null;};const isElement=obj=>{if(!obj||typeof obj!=='object'){return false;}
if(typeof obj.jquery!=='undefined'){obj=obj[0];}
return typeof obj.nodeType!=='undefined';};const typeCheckConfig=(componentName,config,configTypes)=>{Object.keys(configTypes).forEach(property=>{const expectedTypes=configTypes[property];const value=config[property];const valueType=value&&isElement(value)?'element':toType(value);if(!new RegExp(expectedTypes).test(valueType)){throw new TypeError(`${componentName.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);}});};const isDisabled=element=>{if(!element||element.nodeType!==Node.ELEMENT_NODE){return true;}
if(element.classList.contains('disabled')){return true;}
if(typeof element.disabled!=='undefined'){return element.disabled;}
return element.hasAttribute('disabled')&&element.getAttribute('disabled')!=='false';};const reflow=element=>{element.offsetHeight;};const getjQuery=()=>{const{jQuery}=window;if(jQuery&&!document.body.hasAttribute('data-bs-no-jquery')){return jQuery;}
return null;};const DOMContentLoadedCallbacks=[];const onDOMContentLoaded=callback=>{if(document.readyState==='loading'){if(!DOMContentLoadedCallbacks.length){document.addEventListener('DOMContentLoaded',()=>{DOMContentLoadedCallbacks.forEach(callback=>callback());});}
DOMContentLoadedCallbacks.push(callback);}else{callback();}};const defineJQueryPlugin=plugin=>{onDOMContentLoaded(()=>{const $=getjQuery();if($){const name=plugin.NAME;const JQUERY_NO_CONFLICT=$.fn[name];$.fn[name]=plugin.jQueryInterface;$.fn[name].Constructor=plugin;$.fn[name].noConflict=()=>{$.fn[name]=JQUERY_NO_CONFLICT;return plugin.jQueryInterface;};}});};const enableDismissTrigger=(component,method='hide')=>{const clickEvent=`click.dismiss${component.EVENT_KEY}`;const name=component.NAME;EventHandler__default.default.on(document,clickEvent,`[data-bs-dismiss="${name}"]`,function(event){if(['A','AREA'].includes(this.tagName)){event.preventDefault();}
if(isDisabled(this)){return;}
const target=getElementFromSelector(this)||this.closest(`.${name}`);const instance=component.getOrCreateInstance(target);instance[method]();});};const NAME='toast';const DATA_KEY='bs.toast';const EVENT_KEY=`.${DATA_KEY}`;const EVENT_MOUSEOVER=`mouseover${EVENT_KEY}`;const EVENT_MOUSEOUT=`mouseout${EVENT_KEY}`;const EVENT_FOCUSIN=`focusin${EVENT_KEY}`;const EVENT_FOCUSOUT=`focusout${EVENT_KEY}`;const EVENT_HIDE=`hide${EVENT_KEY}`;const EVENT_HIDDEN=`hidden${EVENT_KEY}`;const EVENT_SHOW=`show${EVENT_KEY}`;const EVENT_SHOWN=`shown${EVENT_KEY}`;const CLASS_NAME_FADE='fade';const CLASS_NAME_HIDE='hide';const CLASS_NAME_SHOW='show';const CLASS_NAME_SHOWING='showing';const DefaultType={animation:'boolean',autohide:'boolean',delay:'number'};const Default={animation:true,autohide:true,delay:5000};class Toast extends BaseComponent__default.default{constructor(element,config){super(element);this._config=this._getConfig(config);this._timeout=null;this._hasMouseInteraction=false;this._hasKeyboardInteraction=false;this._setListeners();}
static get DefaultType(){return DefaultType;}
static get Default(){return Default;}
static get NAME(){return NAME;}
show(){const showEvent=EventHandler__default.default.trigger(this._element,EVENT_SHOW);if(showEvent.defaultPrevented){return;}
this._clearTimeout();if(this._config.animation){this._element.classList.add(CLASS_NAME_FADE);}
const complete=()=>{this._element.classList.remove(CLASS_NAME_SHOWING);EventHandler__default.default.trigger(this._element,EVENT_SHOWN);this._maybeScheduleHide();};this._element.classList.remove(CLASS_NAME_HIDE);reflow(this._element);this._element.classList.add(CLASS_NAME_SHOW);this._element.classList.add(CLASS_NAME_SHOWING);this._queueCallback(complete,this._element,this._config.animation);}
hide(){if(!this._element.classList.contains(CLASS_NAME_SHOW)){return;}
const hideEvent=EventHandler__default.default.trigger(this._element,EVENT_HIDE);if(hideEvent.defaultPrevented){return;}
const complete=()=>{this._element.classList.add(CLASS_NAME_HIDE);this._element.classList.remove(CLASS_NAME_SHOWING);this._element.classList.remove(CLASS_NAME_SHOW);EventHandler__default.default.trigger(this._element,EVENT_HIDDEN);};this._element.classList.add(CLASS_NAME_SHOWING);this._queueCallback(complete,this._element,this._config.animation);}
dispose(){this._clearTimeout();if(this._element.classList.contains(CLASS_NAME_SHOW)){this._element.classList.remove(CLASS_NAME_SHOW);}
super.dispose();}
_getConfig(config){config={...Default,...Manipulator__default.default.getDataAttributes(this._element),...(typeof config==='object'&&config?config:{})};typeCheckConfig(NAME,config,this.constructor.DefaultType);return config;}
_maybeScheduleHide(){if(!this._config.autohide){return;}
if(this._hasMouseInteraction||this._hasKeyboardInteraction){return;}
this._timeout=setTimeout(()=>{this.hide();},this._config.delay);}
_onInteraction(event,isInteracting){switch(event.type){case'mouseover':case'mouseout':this._hasMouseInteraction=isInteracting;break;case'focusin':case'focusout':this._hasKeyboardInteraction=isInteracting;break;}
if(isInteracting){this._clearTimeout();return;}
const nextElement=event.relatedTarget;if(this._element===nextElement||this._element.contains(nextElement)){return;}
this._maybeScheduleHide();}
_setListeners(){EventHandler__default.default.on(this._element,EVENT_MOUSEOVER,event=>this._onInteraction(event,true));EventHandler__default.default.on(this._element,EVENT_MOUSEOUT,event=>this._onInteraction(event,false));EventHandler__default.default.on(this._element,EVENT_FOCUSIN,event=>this._onInteraction(event,true));EventHandler__default.default.on(this._element,EVENT_FOCUSOUT,event=>this._onInteraction(event,false));}
_clearTimeout(){clearTimeout(this._timeout);this._timeout=null;}
static jQueryInterface(config){return this.each(function(){const data=Toast.getOrCreateInstance(this,config);if(typeof config==='string'){if(typeof data[config]==='undefined'){throw new TypeError(`No method named "${config}"`);}
data[config](this);}});}}
enableDismissTrigger(Toast);defineJQueryPlugin(Toast);return Toast;}));;

/* /web/static/src/legacy/js/libs/bootstrap.js */
odoo.define('@web/legacy/js/libs/bootstrap',[],function(require){'use strict';let __exports={};let bsSanitizeAllowList=Tooltip.Default.allowList;bsSanitizeAllowList['*'].push('title','style',/^data-[\w-]+/);bsSanitizeAllowList.header=[];bsSanitizeAllowList.main=[];bsSanitizeAllowList.footer=[];bsSanitizeAllowList.caption=[];bsSanitizeAllowList.col=['span'];bsSanitizeAllowList.colgroup=['span'];bsSanitizeAllowList.table=[];bsSanitizeAllowList.thead=[];bsSanitizeAllowList.tbody=[];bsSanitizeAllowList.tfooter=[];bsSanitizeAllowList.tr=[];bsSanitizeAllowList.th=['colspan','rowspan'];bsSanitizeAllowList.td=['colspan','rowspan'];bsSanitizeAllowList.address=[];bsSanitizeAllowList.article=[];bsSanitizeAllowList.aside=[];bsSanitizeAllowList.blockquote=[];bsSanitizeAllowList.section=[];bsSanitizeAllowList.button=['type'];bsSanitizeAllowList.del=[];__exports.makeExtendedSanitizeWhiteList=makeExtendedSanitizeWhiteList;function makeExtendedSanitizeWhiteList(extensions){let allowList=Object.assign({},Tooltip.Default.allowList);Object.keys(extensions).forEach(key=>{allowList[key]=(allowList[key]||[]).concat(extensions[key]);});return allowList;}
Tooltip.Default.placement='auto';Tooltip.Default.fallbackPlacement=['bottom','right','left','top'];Tooltip.Default.html=true;Tooltip.Default.trigger='hover';Tooltip.Default.container='body';Tooltip.Default.boundary='window';Tooltip.Default.delay={show:1000,hide:0};const bootstrapShowFunction=Tooltip.prototype.show;Tooltip.prototype.show=function(){$('.tooltip').remove();const errorsToIgnore=["Please use show on visible elements"];try{return bootstrapShowFunction.call(this);}catch(error){if(errorsToIgnore.includes(error.message)){return 0;}
throw error;}};const bootstrapSetElementContent=Tooltip.prototype.setElementContent;Tooltip.prototype.setElementContent=function(element,content){if(content&&content.jquery&&content.length){const $rootElement=$('<div/>');$rootElement.append(content);content=$rootElement[0];}
return bootstrapSetElementContent.call(this,element,content);};const bootstrapSpyRefreshFunction=ScrollSpy.prototype.refresh;ScrollSpy.prototype.refresh=function(){bootstrapSpyRefreshFunction.apply(this,arguments);if(this._scrollElement===window||this._config.method!=='offset'){return;}
const baseScrollTop=this._getScrollTop();for(let i=0;i<this._offsets.length;i++){this._offsets[i]+=baseScrollTop;}};const bootstrapSpyProcessFunction=ScrollSpy.prototype._process;ScrollSpy.prototype._process=function(){bootstrapSpyProcessFunction.apply(this,arguments);if(this._activeTarget===null&&this._config.alwaysKeepFirstActive){this._activate(this._targets[0]);}};const bootstrapSpyActivateFunction=ScrollSpy.prototype._activate;ScrollSpy.prototype._activate=function(target){const element=document.querySelector(`[href="${target}"]`);if(!element||$(element).is(':hidden')){return;}
bootstrapSpyActivateFunction.apply(this,arguments);};Dropdown.prototype._detectNavbar=function(){return this._element.closest(".navbar-collapse.show");};const bsAdjustDialogFunction=Modal.prototype._adjustDialog;Modal.prototype._adjustDialog=function(){const document=this._element.ownerDocument;document.body.classList.remove('modal-open');const $scrollable=$().getScrollingElement(document);if(document.body.contains($scrollable[0])){$scrollable.compensateScrollbar(true);}
document.body.classList.add('modal-open');return bsAdjustDialogFunction.apply(this,arguments);};const bsResetAdjustmentsFunction=Modal.prototype._resetAdjustments;Modal.prototype._resetAdjustments=function(){const document=this._element.ownerDocument;document.body.classList.remove('modal-open');const $scrollable=$().getScrollingElement(document);if(document.body.contains($scrollable[0])){$scrollable.compensateScrollbar(false);}
return bsResetAdjustmentsFunction.apply(this,arguments);};return __exports;});;

/* /web/static/src/legacy/js/libs/jquery.js */
odoo.define('@web/legacy/js/libs/jquery',[],function(require){'use strict';let __exports={};$.extend($.expr[':'],{containsLike:function(element,index,matches){return element.innerHTML.toUpperCase().indexOf(matches[3].toUpperCase())>=0;},containsTextLike:function(element,index,matches){return element.innerText.toUpperCase().indexOf(matches[3].toUpperCase())>=0;},containsExact:function(element,index,matches){return $.trim(element.innerHTML)===matches[3];},containsExactText:function(element,index,matches){return element.innerText.trim()===matches[3].trim();},containsRegex:function(element,index,matches){var regreg=/^\/((?:\\\/|[^\/])+)\/([mig]{0,3})$/,reg=regreg.exec(matches[3]);return reg?new RegExp(reg[1],reg[2]).test($.trim(element.innerHTML)):false;},propChecked:function(element,index,matches){return $(element).prop("checked")===true;},propSelected:function(element,index,matches){return $(element).prop("selected")===true;},propValue:function(element,index,matches){return $(element).prop("value")===matches[3];},propValueContains:function(element,index,matches){return $(element).prop("value")&&$(element).prop("value").indexOf(matches[3])!==-1;},hasData:function(element){return!!_.toArray(element.dataset).length;},data:function(element,index,matches){return $(element).data(matches[3]);},hasVisibility:function(element,index,matches){var $element=$(element);if($(element).css('visibility')==='hidden'){return false;}
var $parent=$element.parent();if(!$parent.length||$element.is('html')){return true;}
return $parent.is(':hasVisibility');},hasOpacity:function(element,index,matches){var $element=$(element);if(parseFloat($(element).css('opacity'))<=0.01){return false;}
var $parent=$element.parent();if(!$parent.length||$element.is('html')){return true;}
return $parent.is(':hasOpacity');},});$.fn.extend({getAttributes:function(){var o={};if(this.length){var attrs=this[0].attributes;for(var i=0,l=attrs.length;i<l;i++){var attr=attrs.item(i);o[attr.name]=attr.value;}}
return o;},odooBounce:function(extraClass){for(const el of this){el.classList.add('o_catch_attention',extraClass);setTimeout(()=>el.classList.remove('o_catch_attention',extraClass),400);}
return this;},prependEvent:function(events,selector,data,handler){this.on.apply(this,arguments);events=events.split(' ');return this.each(function(){var el=this;events.forEach((evNameNamespaced)=>{var evName=evNameNamespaced.split('.')[0];var handler=$._data(el,'events')[evName].pop();$._data(el,'events')[evName].unshift(handler);});});},closestScrollable(){const document=this.length?this[0].ownerDocument:window.document;let $el=this;while($el[0]!==document.scrollingElement){if(!$el.length||$el[0]instanceof Document){return $();}
if($el.isScrollable()){return $el;}
$el=$el.parent();}
return $el;},compensateScrollbar(add=true,isScrollElement=true,cssProperty='padding-right'){for(const el of this){const scrollableEl=isScrollElement?el:$(el).parent().closestScrollable()[0];const isRTL=scrollableEl.matches(".o_rtl");if(isRTL){cssProperty=cssProperty.replace("right","left");}
el.style.removeProperty(cssProperty);if(!add){return;}
const style=window.getComputedStyle(el);const borderLeftWidth=Math.ceil(parseFloat(style.borderLeftWidth.replace('px','')));const borderRightWidth=Math.ceil(parseFloat(style.borderRightWidth.replace('px','')));const bordersWidth=borderLeftWidth+borderRightWidth;const newValue=parseInt(style[cssProperty])+scrollableEl.offsetWidth-scrollableEl.clientWidth-bordersWidth;el.style.setProperty(cssProperty,`${newValue}px`,'important');}},getScrollingElement(document=window.document){const $baseScrollingElement=$(document.scrollingElement);if($baseScrollingElement.isScrollable()&&$baseScrollingElement.hasScrollableContent()){return $baseScrollingElement;}
const bodyHeight=$(document.body).height();for(const el of document.body.children){if(bodyHeight-el.scrollHeight>1.5){continue;}
const $el=$(el);if($el.isScrollable()){return $el;}}
return $baseScrollingElement;},getScrollingTarget(contextItem=window.document){const isElement=obj=>obj&&obj.nodeType===Node.ELEMENT_NODE;const isJQuery=obj=>obj&&('jquery'in obj);const $scrollingElement=isElement(contextItem)?$(contextItem):isJQuery(contextItem)?contextItem:$().getScrollingElement(contextItem);const document=$scrollingElement[0].ownerDocument;return $scrollingElement.is(document.scrollingElement)?$(document.defaultView):$scrollingElement;},hasScrollableContent(){return this[0].scrollHeight>this[0].clientHeight;},isScrollable(){if(!this.length){return false;}
const overflow=this.css('overflow-y');const el=this[0];return overflow==='auto'||overflow==='scroll'||(overflow==='visible'&&el===el.ownerDocument.scrollingElement);},});const originalScrollTop=$.fn.scrollTop;$.fn.scrollTop=function(value){if(value!==undefined&&this.filter('html, body').length){const $withRealScrollable=this.not('html, body').add($().getScrollingElement(this[0].ownerDocument));originalScrollTop.apply($withRealScrollable,arguments);return this;}else if(value===undefined&&this.eq(0).is('html, body')){return originalScrollTop.apply($().getScrollingElement(this[0].ownerDocument),arguments);}
return originalScrollTop.apply(this,arguments);};const originalAnimate=$.fn.animate;$.fn.animate=function(properties,...rest){const props=Object.assign({},properties);if('scrollTop'in props&&this.filter('html, body').length){const $withRealScrollable=this.not('html, body').add($().getScrollingElement(this[0].ownerDocument));originalAnimate.call($withRealScrollable,{'scrollTop':props['scrollTop']},...rest);delete props['scrollTop'];}
if(!Object.keys(props).length){return this;}
return originalAnimate.call(this,props,...rest);};return __exports;});;

/* /web/static/src/model/model.js */
odoo.define('@web/model/model',['@web/core/utils/hooks','@web/search/with_search/with_search','@web/views/view_hook','@web/model/sample_server','@odoo/owl'],function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{SEARCH_KEYS}=require("@web/search/with_search/with_search");const{useSetupView}=require("@web/views/view_hook");const{buildSampleORM}=require("@web/model/sample_server");const{EventBus,onWillStart,onWillUpdateProps,useComponent}=require("@odoo/owl");const Model=__exports.Model=class Model{constructor(env,params,services){this.env=env;this.orm=services.orm;this.bus=new EventBus();this.setup(params,services);}
setup(){}
async load(){}
hasData(){return true;}
getGroups(){return null;}
notify(){this.bus.trigger("update");}}
Model.services=[];function getSearchParams(props){const params={};for(const key of SEARCH_KEYS){params[key]=props[key];}
return params;}
__exports.useModel=useModel;function useModel(ModelClass,params,options={}){const component=useComponent();const services={};for(const key of ModelClass.services){services[key]=useService(key);}
services.orm=services.orm||useService("orm");const model=new ModelClass(component.env,params,services);onWillStart(async()=>{await options.beforeFirstLoad?.();return model.load(component.props);});onWillUpdateProps((nextProps)=>model.load(nextProps));return model;}
__exports.useModelWithSampleData=useModelWithSampleData;function useModelWithSampleData(ModelClass,params,options={}){const component=useComponent();if(!(ModelClass.prototype instanceof Model)){throw new Error(`the model class should extend Model`);}
const services={};for(const key of ModelClass.services){services[key]=useService(key);}
services.orm=services.orm||useService("orm");const model=new ModelClass(component.env,params,services);useBus(model.bus,"update",options.onUpdate||(()=>{component.render(true);}));const globalState=component.props.globalState||{};const localState=component.props.state||{};let useSampleModel=component.props.useSampleModel&&(!("useSampleModel"in globalState)||globalState.useSampleModel);model.useSampleModel=useSampleModel;const orm=model.orm;let sampleORM=localState.sampleORM;const user=useService("user");let started=false;async function load(props){const searchParams=getSearchParams(props);await model.load(searchParams);if(useSampleModel&&!model.hasData()){sampleORM=sampleORM||buildSampleORM(component.props.resModel,component.props.fields,user);model.orm=sampleORM;await model.load(searchParams);model.orm=orm;}else{useSampleModel=false;model.useSampleModel=useSampleModel;}
if(started){model.notify();}}
onWillStart(async()=>{if(options.onWillStart){await options.onWillStart();}
await load(component.props);if(options.onWillStartAfterLoad){await options.onWillStartAfterLoad();}
started=true;});onWillUpdateProps((nextProps)=>{useSampleModel=false;load(nextProps);});useSetupView({getGlobalState(){if(component.props.useSampleModel){return{useSampleModel};}},getLocalState:()=>{return{sampleORM};},});return model;}
return __exports;});;

/* /web/static/src/model/record.js */
odoo.define('@web/model/record',['@web/core/utils/hooks','@web/core/utils/objects','@web/model/relational_model/relational_model','@web/model/relational_model/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{getFieldsSpec}=require("@web/model/relational_model/utils");const{Component,xml,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const defaultActiveField={attrs:{},options:{},domain:"[]",string:""};class StandaloneRelationalModel extends RelationalModel{load(params={}){if(params.values){const data=params.values;const config=this._getNextConfig(this.config,params);this.root=this._createRoot(config,data);this.config=config;return;}
return super.load(params);}}
class _Record extends Component{setup(){this.orm=useService("orm");const resModel=this.props.info.resModel;const activeFields=this.getActiveFields();const modelParams={config:{resModel,fields:this.props.fields,isMonoRecord:true,activeFields,resId:this.props.info.resId,mode:this.props.info.mode,},hooks:{onRecordSaved:this.props.info.onRecordSaved||(()=>{}),onWillSaveRecord:this.props.info.onWillSaveRecord||(()=>{}),onRecordChanged:this.props.info.onRecordChanged||(()=>{}),},};const modelServices=Object.fromEntries(StandaloneRelationalModel.services.map((servName)=>{return[servName,useService(servName)];}));modelServices.orm=this.orm;this.model=useState(new StandaloneRelationalModel(this.env,modelParams,modelServices));const prepareLoadWithValues=async(values)=>{values=pick(values,...Object.keys(modelParams.config.activeFields));const proms=[];for(const fieldName in values){if(["one2many","many2many"].includes(this.props.fields[fieldName].type)){if(values[fieldName].length&&typeof values[fieldName][0]==="number"){const resModel=this.props.fields[fieldName].relation;const resIds=values[fieldName];const activeField=modelParams.config.activeFields[fieldName];if(activeField.related){const{activeFields,fields}=activeField.related;const fieldSpec=getFieldsSpec(activeFields,fields,{});const kwargs={context:activeField.context||{},specification:fieldSpec,};proms.push(this.orm.webRead(resModel,resIds,kwargs).then((records)=>{values[fieldName]=records;}));}}}
if(this.props.fields[fieldName].type==="many2one"){const loadDisplayName=async(resId)=>{const resModel=this.props.fields[fieldName].relation;const activeField=modelParams.config.activeFields[fieldName];const kwargs={context:activeField.context||{},specification:{display_name:{}},};const records=await this.orm.webRead(resModel,[resId],kwargs);return records[0].display_name;};if(typeof values[fieldName]==="number"){const prom=loadDisplayName(values[fieldName]);prom.then((displayName)=>{values[fieldName]={id:values[fieldName],display_name:displayName,};});proms.push(prom);}else if(Array.isArray(values[fieldName])){if(values[fieldName][1]===undefined){const prom=loadDisplayName(values[fieldName][0]);prom.then((displayName)=>{values[fieldName]={id:values[fieldName][0],display_name:displayName,};});proms.push(prom);}
values[fieldName]={id:values[fieldName][0],display_name:values[fieldName][1],};}}
await Promise.all(proms);}
return values;};onWillStart(async()=>{if(this.props.values){const values=await prepareLoadWithValues(this.props.values);return this.model.load({values});}else{return this.model.load();}});onWillUpdateProps(async(nextProps)=>{const params={};if(nextProps.info.resId!==this.model.root.resId){params.resId=nextProps.info.resId;}
if(nextProps.values){params.values=await prepareLoadWithValues(nextProps.values);}
if(Object.keys(params).length){return this.model.load(params);}});}
getActiveFields(){if(this.props.info.activeFields){const activeFields={};for(const[fName,fInfo]of Object.entries(this.props.info.activeFields)){activeFields[fName]={...defaultActiveField,...fInfo};}
return activeFields;}
return Object.fromEntries(this.props.info.fieldNames.map((f)=>[f,{...defaultActiveField}]));}}
_Record.template=xml`<t t-slot="default" record="model.root"/>`;_Record.props=["slots","info","fields","values?"];const Record=__exports.Record=class Record extends Component{setup(){if(this.props.fields){this.fields=this.props.fields;}else{const orm=useService("orm");onWillStart(async()=>{this.fields=await orm.call(this.props.resModel,"fields_get",[this.props.fieldNames],{});});}}}
Record.template=xml`<_Record fields="fields" slots="props.slots" values="props.values" info="props" />`;Record.components={_Record};Record.props=["slots","resModel?","fieldNames?","activeFields?","fields?","resId?","mode?","values?","onRecordChanged?","onRecordSaved?","onWillSaveRecord?",];return __exports;});;

/* /web/static/src/model/relational_model/datapoint.js */
odoo.define('@web/model/relational_model/datapoint',['@odoo/owl','@web/core/domain','@web/core/utils/reactive','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{markRaw}=require("@odoo/owl");const{evalDomain}=require("@web/core/domain");const{Reactive}=require("@web/core/utils/reactive");const{getId}=require("@web/model/relational_model/utils");const DataPoint=__exports.DataPoint=class DataPoint extends Reactive{constructor(model,config,data,options){super(...arguments);this.id=getId("datapoint");this.model=model;markRaw(config.activeFields);markRaw(config.fields);this._config=config;this.setup(config,data,options);}
setup(){}
get activeFields(){return this.config.activeFields;}
get fields(){return this.config.fields;}
get fieldNames(){return Object.keys(this.activeFields).filter((fieldName)=>!this.fields[fieldName].relatedPropertyField);}
get resModel(){return this.config.resModel;}
get config(){return this._config;}
get context(){return this.config.context;}
get currentCompanyId(){return this.config.currentCompanyId;}
isFieldReadonly(fieldName){const activeField=this.activeFields[fieldName];const{readonly}=activeField||this.fields[fieldName];return readonly&&evalDomain(readonly,this.evalContext);}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_group_list.js */
odoo.define('@web/model/relational_model/dynamic_group_list',['@web/core/domain','@web/model/relational_model/dynamic_list','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DynamicList}=require("@web/model/relational_model/dynamic_list");const{getGroupServerValue}=require("@web/model/relational_model/utils");const DynamicGroupList=__exports.DynamicGroupList=class DynamicGroupList extends DynamicList{static type="DynamicGroupList";setup(config,data){super.setup(...arguments);this.isGrouped=true;this._setData(data);}
_setData(data){this.groups=data.groups.map((g)=>this._createGroupDatapoint(g));this.count=data.length;}
get groupBy(){return this.config.groupBy;}
get groupByField(){return this.fields[this.groupBy[0].split(":")[0]];}
get hasData(){return this.groups.some((group)=>group.hasData);}
get records(){return this.groups.filter((group)=>!group.isFolded).map((group)=>group.records).flat();}
get recordCount(){return this.groups.reduce((acc,group)=>acc+group.count,0);}
async createGroup(groupName,foldField){if(!this.groupByField||this.groupByField.type!=="many2one"){throw new Error("Cannot create a group on a non many2one group field");}
await this.model.mutex.exec(()=>this._createGroup(groupName,foldField));}
async deleteGroups(groups){await this.model.mutex.exec(()=>this._deleteGroups(groups));}
async moveRecord(dataRecordId,dataGroupId,refId,targetGroupId){const targetGroup=this.groups.find((g)=>g.id===targetGroupId);if(dataGroupId===targetGroupId){await targetGroup.list._resequence(targetGroup.list.records,this.resModel,dataRecordId,refId);return;}
const sourceGroup=this.groups.find((g)=>g.id===dataGroupId);const recordIndex=sourceGroup.list.records.findIndex((r)=>r.id===dataRecordId);const record=sourceGroup.list.records[recordIndex];const refIndex=targetGroup.list.records.findIndex((r)=>r.id===refId);const oldIndex=sourceGroup.list.records.findIndex((r)=>r.id===dataRecordId);const sourceList=sourceGroup.list;const mustReloadSourceList=sourceList.count>sourceList.offset+sourceList.limit;sourceGroup._removeRecords([record.id]);targetGroup._addRecord(record,refIndex+1);const value=targetGroup.groupByField.type==="many2one"?[targetGroup.value,targetGroup.displayName]:targetGroup.value;const revert=()=>{targetGroup._removeRecords([record.id]);sourceGroup._addRecord(record,oldIndex);};try{const changes={[targetGroup.groupByField.name]:value};const res=await record.update(changes,{save:true});if(!res){return revert();}}catch(e){revert();throw e;}
const proms=[];if(mustReloadSourceList){const{offset,limit,orderBy,domain}=sourceGroup.list;proms.push(sourceGroup.list._load(offset,limit,orderBy,domain));}
if(!targetGroup.isFolded){const targetList=targetGroup.list;const records=targetList.records;proms.push(targetList._resequence(records,this.resModel,dataRecordId,refId));}
return Promise.all(proms);}
async resequence(movedGroupId,targetGroupId){if(!this.groupByField||this.groupByField.type!=="many2one"){throw new Error("Cannot resequence a group on a non many2one group field");}
return this.model.mutex.exec(async()=>{await this._resequence(this.groups,this.groupByField.relation,movedGroupId,targetGroupId);});}
_selectDomain(value){for(const group of this.groups){group.list._selectDomain(value);}
super._selectDomain(value);}
async sortBy(fieldName){if(!this.groups.length){return;}
if(this.groups.every((group)=>group.isFolded)){if(this.groupByField.name!==fieldName){if(!(fieldName in this.groups[0].aggregates)){return;}}}
return super.sortBy(fieldName);}
async _createGroup(groupName,foldField=false){const[id]=await this.model.orm.call(this.groupByField.relation,"name_create",[groupName],{context:this.context});if(foldField){await this.model.orm.write(this.groupByField.relation,[id],{[foldField]:true},{context:this.context});}
const lastGroup=this.groups.at(-1);const commonConfig={resModel:this.config.resModel,fields:this.config.fields,activeFields:this.config.activeFields,};const context={...this.context,[`default_${this.groupByField.name}`]:id,};const nextConfigGroups={...this.config.groups};const domain=Domain.and([this.domain,[[this.groupByField.name,"=",id]]]).toList();nextConfigGroups[id]={...commonConfig,context,groupByFieldName:this.groupByField.name,isFolded:Boolean(foldField),initialDomain:domain,list:{...commonConfig,context,domain:domain,groupBy:[],orderBy:this.orderBy,},};this.model._updateConfig(this.config,{groups:nextConfigGroups},{reload:false});const data={count:0,length:0,records:[],__domain:domain,[this.groupByField.name]:[id,groupName],value:id,serverValue:getGroupServerValue(this.groupByField,id),displayName:groupName,rawValue:[id,groupName],};const group=this._createGroupDatapoint(data);if(lastGroup){const groups=[...this.groups,group];await this._resequence(groups,this.groupByField.relation,group.id,lastGroup.id);this.groups=groups;}else{this.groups.push(group);}}
_createGroupDatapoint(data){return new this.model.constructor.Group(this.model,this.config.groups[data.value],data);}
async _deleteGroups(groups){const shouldReload=groups.some((g)=>g.count>0);await this._unlinkGroups(groups);const configGroups={...this.config.groups};for(const group of groups){delete configGroups[group.value];}
if(shouldReload){await this.model._updateConfig(this.config,{groups:configGroups},{commit:this._setData.bind(this)});}else{for(const group of groups){this._removeGroup(group);}
this.model._updateConfig(this.config,{groups:configGroups},{reload:false});}}
_getDPresId(group){return group.value;}
_getDPFieldValue(group,handleField){return group[handleField];}
async _load(offset,limit,orderBy,domain){await this.model._updateConfig(this.config,{offset,limit,orderBy,domain},{commit:this._setData.bind(this)});}
_removeGroup(group){const index=this.groups.findIndex((g)=>g.id===group.id);this.groups.splice(index,1);this.count--;}
_removeRecords(recordIds){const proms=[];for(const group of this.groups){proms.push(group._removeRecords(recordIds));}
return Promise.all(proms);}
_unlinkGroups(groups){const groupResIds=groups.map((g)=>g.value);return this.model.orm.unlink(this.groupByField.relation,groupResIds,{context:this.context,});}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_list.js */
odoo.define('@web/model/relational_model/dynamic_list',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/model/relational_model/datapoint','@web/model/relational_model/record'],function(require){'use strict';let __exports={};const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{DataPoint}=require("@web/model/relational_model/datapoint");const{Record}=require("@web/model/relational_model/record");const DEFAULT_HANDLE_FIELD="sequence";const DynamicList=__exports.DynamicList=class DynamicList extends DataPoint{setup(config){super.setup(...arguments);this.handleField=Object.keys(this.activeFields).find((fieldName)=>this.activeFields[fieldName].isHandle);if(!this.handleField&&DEFAULT_HANDLE_FIELD in this.fields){this.handleField=DEFAULT_HANDLE_FIELD;}
this.isDomainSelected=false;this.evalContext=this.context;}
get groupBy(){return[];}
get orderBy(){return this.config.orderBy;}
get domain(){return this.config.domain;}
get editedRecord(){return this.records.find((record)=>record.isInEdition);}
get limit(){return this.config.limit;}
get offset(){return this.config.offset;}
get selection(){return this.records.filter((record)=>record.selected);}
archive(isSelected){return this.model.mutex.exec(()=>this._toggleArchive(isSelected,true));}
canResequence(){return!!this.handleField;}
deleteRecords(records=[]){return this.model.mutex.exec(()=>this._deleteRecords(records));}
duplicateRecords(records=[]){return this.model.mutex.exec(()=>this._duplicateRecords(records));}
async enterEditMode(record){if(this.editedRecord===record){return true;}
const canProceed=await this.leaveEditMode();if(canProceed){this.model._updateConfig(record.config,{mode:"edit"},{reload:false});}
return canProceed;}
async getResIds(isSelected){let resIds;if(isSelected){if(this.isDomainSelected){resIds=await this.model.orm.search(this.resModel,this.domain,{limit:this.model.activeIdsLimit,context:this.context,});}else{resIds=this.selection.map((r)=>r.resId);}}else{resIds=this.records.map((r)=>r.resId);}
return resIds;}
async leaveEditMode({discard}={}){if(this.editedRecord){let canProceed=true;if(discard){await this.editedRecord.discard();if(this.editedRecord&&this.editedRecord.isNew){this._removeRecords([this.editedRecord.id]);}}else{if(!this.model._urgentSave){await this.editedRecord.checkValidity();if(!this.editedRecord){return true;}}
if(this.editedRecord.isNew&&!this.editedRecord.dirty){this._removeRecords([this.editedRecord.id]);}else{canProceed=await this.editedRecord.save();}}
if(canProceed&&this.editedRecord){this.model._updateConfig(this.editedRecord.config,{mode:"readonly"},{reload:false});}else{return canProceed;}}
return true;}
load(params={}){const limit=params.limit===undefined?this.limit:params.limit;const offset=params.offset===undefined?this.offset:params.offset;const orderBy=params.orderBy===undefined?this.orderBy:params.orderBy;const domain=params.domain===undefined?this.domain:params.domain;return this.model.mutex.exec(()=>this._load(offset,limit,orderBy,domain));}
async multiSave(record){return this.model.mutex.exec(()=>this._multiSave(record));}
selectDomain(value){return this.model.mutex.exec(()=>this._selectDomain(value));}
sortBy(fieldName){return this.model.mutex.exec(()=>{let orderBy=[...this.orderBy];if(orderBy.length&&orderBy[0].name===fieldName){orderBy[0]={name:orderBy[0].name,asc:!orderBy[0].asc};}else{orderBy=orderBy.filter((o)=>o.name!==fieldName);orderBy.unshift({name:fieldName,asc:true,});}
return this._load(this.offset,this.limit,orderBy,this.domain);});}
toggleSelection(){return this.model.mutex.exec(()=>{if(this.selection.length===this.records.length){this.records.forEach((record)=>{record._toggleSelection(false);});this.isDomainSelected=false;}else{this.records.forEach((record)=>{record._toggleSelection(true);});}});}
unarchive(isSelected){return this.model.mutex.exec(()=>this._toggleArchive(isSelected,false));}
async _duplicateRecords(records){let resIds;if(records.length){resIds=records.map((r)=>r.resId);}else{resIds=await this.getResIds(true);}
const duplicated=await this.model.orm.call(this.resModel,"copy_multi",[resIds],{context:this.context,});if(resIds.length>duplicated.length){this.model.notification.add(_t("Some records could not be duplicated"),{title:_t("Warning"),});}
return this.model.load();}
async _deleteRecords(records){let resIds;if(records.length){resIds=records.map((r)=>r.resId);}else{resIds=await this.getResIds(true);records=this.records.filter((r)=>resIds.includes(r.resId));}
const unlinked=await this.model.orm.unlink(this.resModel,resIds,{context:this.context,});if(!unlinked){return false;}
if(this.isDomainSelected&&resIds.length===this.model.activeIdsLimit&&resIds.length<this.count){const msg=_t(`Only the first %s records have been deleted (out of %s selected)`,resIds.length,this.count);this.model.notification.add(msg,{title:_t("Warning")});}
this._removeRecords(records.map((r)=>r.id));await this._load(this.offset,this.limit,this.orderBy,this.domain);return unlinked;}
async _leaveSampleMode(){if(this.model.useSampleModel){await this._load(this.offset,this.limit,this.orderBy,this.domain);this.model.useSampleModel=false;}}
async _multiSave(record){const changes=record._getChanges();if(!Object.keys(changes).length){return;}
const validSelection=this.selection.filter((record)=>{return Object.keys(changes).every((fieldName)=>{if(record._isReadonly(fieldName)){return false;}else if(record._isRequired(fieldName)&&!changes[fieldName]){return false;}
return true;});});const canProceed=await this.model.hooks.onWillSaveMulti(record,changes,validSelection);if(canProceed===false){return false;}
if(validSelection.length===0){this.model.dialog.add(AlertDialog,{body:_t("No valid record to save"),confirm:()=>this.leaveEditMode({discard:true}),dismiss:()=>this.leaveEditMode({discard:true}),});return false;}else{const resIds=validSelection.map((r)=>r.resId);const context=this.context;try{await this.model.orm.write(this.resModel,resIds,changes,{context});}catch(e){record._discard();this.model._updateConfig(record.config,{mode:"readonly"},{reload:false});throw e;}
const records=await this.model._loadRecords({...this.config,resIds});for(const record of validSelection){const serverValues=records.find((r)=>r.id===record.resId);record._applyValues(serverValues);this.model._updateSimilarRecords(record,serverValues);}
record._discard();this.model._updateConfig(record.config,{mode:"readonly"},{reload:false});}
this.model.hooks.onSavedMulti(validSelection);return true;}
async _resequence(originalList,resModel,movedId,targetId){if(this.resModel===resModel&&!this.canResequence()){return;}
const handleField=this.resModel===resModel?this.handleField:DEFAULT_HANDLE_FIELD;const order=this.orderBy.find((o)=>o.name===handleField);const asc=!order||order.asc;const fromIndex=originalList.findIndex((d)=>d.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=originalList.findIndex((d)=>d.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const getSequence=(dp)=>dp&&this._getDPFieldValue(dp,handleField);const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=originalList.some((dp)=>this._getDPFieldValue(dp,handleField)===undefined);if(!reorderAll){let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<originalList.length;index++){const sequence=getSequence(originalList[index]);if(((index<firstIndex||index>=lastIndex)&&((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)))||(index>=firstIndex&&index<lastIndex&&lastSequence===sequence)){reorderAll=true;}
lastSequence=sequence;}}
const originalOrder=[...originalList];const[dp]=originalList.splice(fromIndex,1);originalList.splice(toIndex,0,dp);let toReorder=originalList;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(dp);}else{toReorder.unshift(dp);}}
if(!asc){toReorder.reverse();}
const resIds=toReorder.map((d)=>this._getDPresId(d)).filter((id)=>id&&!isNaN(id));const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const params={model:resModel,ids:resIds,context:this.context,field:handleField,};if(offset){params.offset=offset;}
try{const wasResequenced=await this.model.rpc("/web/dataset/resequence",params);if(!wasResequenced){return;}}catch(error){originalList.splice(0,originalList.length,...originalOrder);throw error;}
const kwargs={context:this.context};const result=await this.model.orm.read(resModel,resIds,[handleField],kwargs);for(const dpData of result){const dp=originalList.find((d)=>this._getDPresId(d)===dpData.id);if(dp instanceof Record){dp._applyValues(dpData);}else{dp[handleField]=dpData[handleField];}}}
_selectDomain(value){this.isDomainSelected=value;}
async _toggleArchive(isSelected,state){const method=state?"action_archive":"action_unarchive";const context=this.context;const resIds=await this.getResIds(isSelected);const action=await this.model.orm.call(this.resModel,method,[resIds],{context});if(this.isDomainSelected&&resIds.length===this.model.activeIdsLimit&&resIds.length<this.count){const msg=_t("Of the %s records selected, only the first %s have been archived/unarchived.",resIds.length,this.count);this.model.notification.add(msg,{title:_t("Warning")});}
const reload=()=>this.model.load();if(action&&Object.keys(action).length){this.model.action.doAction(action,{onClose:reload,});}else{return reload();}}}
return __exports;});;

/* /web/static/src/model/relational_model/dynamic_record_list.js */
odoo.define('@web/model/relational_model/dynamic_record_list',['@web/model/relational_model/dynamic_list'],function(require){'use strict';let __exports={};const{DynamicList}=require("@web/model/relational_model/dynamic_list");const DynamicRecordList=__exports.DynamicRecordList=class DynamicRecordList extends DynamicList{static type="DynamicRecordList";setup(config,data){super.setup(config);this._setData(data);}
_setData(data){this.records=data.records.map((r)=>this._createRecordDatapoint(r));if(this.isDomainSelected){this.records.forEach((r)=>(r.selected=true));}
this._updateCount(data);}
get hasData(){return this.count>0;}
addExistingRecord(resId,atFirstPosition){return this.model.mutex.exec(async()=>{const record=this._createRecordDatapoint({});await record._load({resId});this._addRecord(record,atFirstPosition?0:this.records.length);return record;});}
addNewRecord(atFirstPosition=false){return this.model.mutex.exec(async()=>{await this._leaveSampleMode();return this._addNewRecord(atFirstPosition);});}
async fetchCount(){this.count=await this.model._updateCount(this.config);this.hasLimitedCount=false;return this.count;}
moveRecord(dataRecordId,_dataGroupId,refId,_targetGroupId){return this.resequence(dataRecordId,refId);}
removeRecord(record){if(!record.isNew){throw new Error("removeRecord can't be called on an existing record");}
const index=this.records.findIndex((r)=>r===record);if(index<0){return;}
this.records.splice(index,1);this.count--;return record;}
async resequence(movedRecordId,targetRecordId){return this.model.mutex.exec(async()=>await this._resequence(this.records,this.resModel,movedRecordId,targetRecordId));}
async _addNewRecord(atFirstPosition){const values=await this.model._loadNewRecord({resModel:this.resModel,activeFields:this.activeFields,fields:this.fields,context:this.context,});const record=this._createRecordDatapoint(values,"edit");this._addRecord(record,atFirstPosition?0:this.records.length);return record;}
_addRecord(record,index){this.records.splice(Number.isInteger(index)?index:this.records.length,0,record);this.count++;}
_createRecordDatapoint(data,mode="readonly"){return new this.model.constructor.Record(this.model,{context:this.context,activeFields:this.activeFields,resModel:this.resModel,fields:this.fields,resId:data.id||false,resIds:data.id?[data.id]:[],isMonoRecord:true,currentCompanyId:this.currentCompanyId,mode,},data,{manuallyAdded:!data.id});}
_getDPresId(record){return record.resId;}
_getDPFieldValue(record,handleField){return record.data[handleField];}
async _load(offset,limit,orderBy,domain){await this.model._updateConfig(this.config,{offset,limit,orderBy,domain},{commit:this._setData.bind(this)});}
_removeRecords(recordIds){const keptRecords=this.records.filter((r)=>!recordIds.includes(r.id));this.count-=this.records.length-keptRecords.length;this.records=keptRecords;if(this.offset&&!this.records.length){const offset=Math.max(this.offset-this.limit,0);this.model._updateConfig(this.config,{offset},{reload:false});}}
_updateCount(data){const length=data.length;if(length>=this.config.countLimit+1){this.hasLimitedCount=true;this.count=this.config.countLimit;}else{this.hasLimitedCount=false;this.count=length;}}}
return __exports;});;

/* /web/static/src/model/relational_model/group.js */
odoo.define('@web/model/relational_model/group',['@web/core/domain','@web/model/relational_model/datapoint'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DataPoint}=require("@web/model/relational_model/datapoint");const Group=__exports.Group=class Group extends DataPoint{static type="Group";setup(config,data){super.setup(...arguments);this.groupByField=this.fields[config.groupByFieldName];this.range=data.range;this._rawValue=data.rawValue;this.count=data.count;this.value=data.value;this.serverValue=data.serverValue;this.displayName=data.displayName;this.aggregates=data.aggregates;let List;if(config.list.groupBy.length){List=this.model.constructor.DynamicGroupList;}else{List=this.model.constructor.DynamicRecordList;}
this.list=new List(this.model,config.list,data);if(config.record){config.record.context={...config.record.context,...config.context};this.record=new this.model.constructor.Record(this.model,config.record,data.values);}}
get groupDomain(){return this.config.initialDomain;}
get hasData(){return this.count>0;}
get isFolded(){return this.config.isFolded;}
get records(){return this.list.records;}
async addExistingRecord(resId,atFirstPosition=false){const record=await this.list.addExistingRecord(resId,atFirstPosition);this.count++;return record;}
async addNewRecord(_unused,atFirstPosition=false){const canProceed=await this.model.root.leaveEditMode({discard:true});if(canProceed){const record=await this.list.addNewRecord(atFirstPosition);if(record){this.count++;}}}
async applyFilter(filter){if(filter){await this.list.load({domain:Domain.and([this.groupDomain,filter]).toList(),});}else{await this.list.load({domain:this.groupDomain});this.count=this.list.isGrouped?this.list.recordCount:this.list.count;}
this.model._updateConfig(this.config,{extraDomain:filter},{reload:false});}
deleteRecords(records){return this.model.mutex.exec(()=>this._deleteRecords(records));}
async toggle(){if(this.config.isFolded){await this.list.load();}
this.model._updateConfig(this.config,{isFolded:!this.config.isFolded},{reload:false});}
_addRecord(record,index){this.list._addRecord(record,index);this.count++;}
async _deleteRecords(records){await this.list._deleteRecords(records);this.count-=records.length;}
async _removeRecords(recordIds){const idsToRemove=recordIds.filter((id)=>this.list.records.some((r)=>r.id===id));this.list._removeRecords(idsToRemove);this.count-=idsToRemove.length;}}
return __exports;});;

/* /web/static/src/model/relational_model/record.js */
odoo.define('@web/model/relational_model/record',['@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/domain','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/orm_service','@web/core/py_js/py','@web/core/utils/strings','@web/model/relational_model/datapoint','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{markRaw,markup,toRaw}=require("@odoo/owl");const{AlertDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{x2ManyCommands}=require("@web/core/orm_service");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{escape}=require("@web/core/utils/strings");const{DataPoint}=require("@web/model/relational_model/datapoint");const{FetchRecordError,createPropertyActiveField,getBasicEvalContext,getFieldContext,getFieldsSpec,parseServerValue,}=require("@web/model/relational_model/utils");const Record=__exports.Record=class Record extends DataPoint{static type="Record";setup(config,data,options={}){this._manuallyAdded=options.manuallyAdded===true;this._onUpdate=options.onUpdate||(()=>{});this._parentRecord=options.parentRecord;this._virtualId=options.virtualId||false;this._isEvalContextReady=false;this.dirty=false;this.selected=false;this._invalidFields=new Set();this._unsetRequiredFields=markRaw(new Set());this._closeInvalidFieldsNotification=()=>{};const parentRecord=this._parentRecord;if(parentRecord){this.evalContext={get parent(){return parentRecord.evalContext;},};this.evalContextWithVirtualIds={get parent(){return parentRecord.evalContextWithVirtualIds;},};}else{this.evalContext={};this.evalContextWithVirtualIds={};}
const missingFields=this.fieldNames.filter((fieldName)=>!(fieldName in data));data={...this._getDefaultValues(missingFields),...data};this._textValues=markRaw({});this._setData(data);}
_setData(data){this._isEvalContextReady=false;if(this.resId){this._values=this._parseServerValues(data);this._changes=markRaw({});Object.assign(this._textValues,this._getTextValues(data));}else{this._values=markRaw({});const allVals={...this._getDefaultValues(),...data};this._initialChanges=markRaw(this._parseServerValues(allVals));this._changes=markRaw({...this._initialChanges});Object.assign(this._textValues,this._getTextValues(allVals));}
this.dirty=false;this.data={...this._values,...this._changes};this._setEvalContext();this._initialTextValues={...this._textValues};this._invalidFields.clear();this._savePoint=undefined;}
get canBeAbandoned(){return this.isNew&&!this.dirty&&this._manuallyAdded;}
get hasData(){return true;}
get isActive(){if("active"in this.activeFields){return this.data.active;}else if("x_active"in this.activeFields){return this.data.x_active;}
return true;}
get isInEdition(){if(this.config.mode==="readonly"){return false;}else{return this.config.mode==="edit"||!this.resId;}}
get isNew(){return!this.resId;}
get isValid(){return!this._invalidFields.size;}
get resId(){return this.config.resId;}
get resIds(){return this.config.resIds;}
archive(){return this.model.mutex.exec(()=>this._toggleArchive(true));}
async checkValidity({displayNotification}={}){if(!this._urgentSave){await this.model._askChanges();}
return this._checkValidity({displayNotification});}
delete(){return this.model.mutex.exec(async()=>{const unlinked=await this.model.orm.unlink(this.resModel,[this.resId],{context:this.context,});if(!unlinked){return false;}
const resIds=this.resIds.slice();const index=resIds.indexOf(this.resId);resIds.splice(index,1);const resId=resIds[Math.min(index,resIds.length-1)]||false;if(resId){await this.model.load({resId,resIds});}else{this.model._updateConfig(this.config,{resId:false},{reload:false});this.dirty=false;this._changes=markRaw(this._parseServerValues(this._getDefaultValues()));this._values=markRaw({});this._textValues=markRaw({});this.data={...this._changes};this._setEvalContext();}});}
discard(){if(this.model._closeUrgentSaveNotification){this.model._closeUrgentSaveNotification();}
return this.model.mutex.exec(()=>this._discard());}
duplicate(){return this.model.mutex.exec(async()=>{const kwargs={context:this.context};const index=this.resIds.indexOf(this.resId);const resId=await this.model.orm.call(this.resModel,"copy",[this.resId],kwargs);const resIds=this.resIds.slice();resIds.splice(index+1,0,resId);await this.model.load({resId,resIds,mode:"edit"});});}
getFieldDomain(fieldName){const{domain}=this.fields[fieldName];return domain?new Domain(domain).toList(this.evalContext):[];}
async isDirty(){await this.model._askChanges();return this.dirty;}
isFieldInvalid(fieldName){return this._invalidFields.has(fieldName);}
load(){if(arguments.length>0){throw new Error("Record.load() does not accept arguments");}
return this.model.mutex.exec(()=>this._load());}
async save(options){await this.model._askChanges();return this.model.mutex.exec(()=>this._save(options));}
async setInvalidField(fieldName){this.dirty=true;return this._setInvalidField(fieldName);}
resetFieldValidity(fieldName){this.dirty=true;this._invalidFields.delete(fieldName);}
switchMode(mode){return this.model.mutex.exec(()=>this._switchMode(mode));}
toggleSelection(selected){return this.model.mutex.exec(()=>{this._toggleSelection(selected);});}
unarchive(){return this.model.mutex.exec(()=>this._toggleArchive(false));}
update(changes,{save}={}){if(this.model._urgentSave){return this._update(changes,{save:false});}
return this.model.mutex.exec(async()=>{await this._update(changes,{withoutOnchange:save});if(save){return this._save();}});}
async urgentSave(){this.model._urgentSave=true;this.model.bus.trigger("WILL_SAVE_URGENTLY");const succeeded=await this._save({reload:false});this.model._urgentSave=false;return succeeded;}
_addSavePoint(){this._savePoint=markRaw({dirty:this.dirty,textValues:{...this._textValues},changes:{...this._changes},});for(const fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]._addSavePoint();}}}
_applyChanges(changes,serverChanges={}){const fieldNameChanges=[...Object.keys({...changes,...serverChanges})];const initialTextValues={...this._textValues};const initialChanges={...this._changes};const initialData={...toRaw(this.data)};const invalidFields=toRaw(this._invalidFields);const invalidFieldNames=fieldNameChanges.filter((fieldName)=>invalidFields.has(fieldName));const undoChanges=()=>{for(const fieldName of invalidFieldNames){this.setInvalidField(fieldName);}
Object.assign(this.data,initialData);this._changes=markRaw(initialChanges);Object.assign(this._textValues,initialTextValues);this._setEvalContext();};for(const fieldName in changes){const change=changes[fieldName];this._changes[fieldName]=change;this.data[fieldName]=change;if(this.fields[fieldName].type==="html"){this._textValues[fieldName]=change===false?false:change.toString();}else if(["char","text"].includes(this.fields[fieldName].type)){this._textValues[fieldName]=change;}}
const parsedChanges=this._parseServerValues(serverChanges,this.data);for(const fieldName in parsedChanges){this._changes[fieldName]=parsedChanges[fieldName];this.data[fieldName]=parsedChanges[fieldName];}
Object.assign(this._textValues,this._getTextValues(serverChanges));this._setEvalContext();this._removeInvalidFields(fieldNameChanges);return undoChanges;}
_applyDefaultValues(){const fieldNames=this.fieldNames.filter((fieldName)=>{return!(fieldName in this.data);});const defaultValues=this._getDefaultValues(fieldNames);if(this.isNew){this._applyChanges({},defaultValues);}else{this._applyValues(defaultValues);}}
_applyValues(values){const newValues=this._parseServerValues(values);Object.assign(this._values,newValues);for(const fieldName in newValues){if(fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]=newValues[fieldName];}}}
Object.assign(this.data,this._values,this._changes);const textValues=this._getTextValues(values);Object.assign(this._initialTextValues,textValues);Object.assign(this._textValues,textValues,this._getTextValues(this._changes));this._setEvalContext();}
_checkValidity({silent,displayNotification}={}){const unsetRequiredFields=[];for(const fieldName in this.activeFields){const fieldType=this.fields[fieldName].type;if(this._isInvisible(fieldName)||this.fields[fieldName].relatedPropertyField){continue;}
switch(fieldType){case"boolean":case"float":case"integer":case"monetary":continue;case"html":if(this._isRequired(fieldName)&&this.data[fieldName].length===0){unsetRequiredFields.push(fieldName);}
break;case"one2many":case"many2many":{const list=this.data[fieldName];if((this._isRequired(fieldName)&&!list.count)||!list.records.every((r)=>!r.dirty||r._checkValidity({silent}))){unsetRequiredFields.push(fieldName);}
break;}
case"properties":{const value=this.data[fieldName];if(value){const ok=value.every((propertyDefinition)=>propertyDefinition.name&&propertyDefinition.name.length&&propertyDefinition.string&&propertyDefinition.string.length);if(!ok){unsetRequiredFields.push(fieldName);}}
break;}
case"json":{if(this._isRequired(fieldName)&&(!this.data[fieldName]||!Object.keys(this.data[fieldName]).length)){unsetRequiredFields.push(fieldName);}
break;}
default:if(!this.data[fieldName]&&this._isRequired(fieldName)){unsetRequiredFields.push(fieldName);}}}
if(silent){return!unsetRequiredFields.length;}
for(const fieldName of Array.from(this._unsetRequiredFields)){this._invalidFields.delete(fieldName);}
this._unsetRequiredFields.clear();for(const fieldName of unsetRequiredFields){this._unsetRequiredFields.add(fieldName);this._setInvalidField(fieldName);}
const isValid=!this._invalidFields.size;if(!isValid&&displayNotification){const items=[...this._invalidFields].map((fieldName)=>{return`<li>${escape(this.fields[fieldName].string || fieldName)}</li>`;},this);this._closeInvalidFieldsNotification=this.model.notification.add(markup(`<ul>${items.join("")}</ul>`),{title:_t("Invalid fields: "),type:"danger",});}
return isValid;}
_computeDataContext(){const dataContext={};const x2manyDataContext={withVirtualIds:{},withoutVirtualIds:{},};const data=toRaw(this.data);for(const fieldName in data){const value=data[fieldName];const field=this.fields[fieldName];if(field.relatedPropertyField){continue;}
if(["char","text","html"].includes(field.type)){dataContext[fieldName]=this._textValues[fieldName];}else if(field.type==="one2many"||field.type==="many2many"){x2manyDataContext.withVirtualIds[fieldName]=value.currentIds;x2manyDataContext.withoutVirtualIds[fieldName]=value.currentIds.filter((id)=>typeof id==="number");}else if(value&&field.type==="date"){dataContext[fieldName]=serializeDate(value);}else if(value&&field.type==="datetime"){dataContext[fieldName]=serializeDateTime(value);}else if(value&&field.type==="many2one"){dataContext[fieldName]=value[0];}else if(value&&field.type==="reference"){dataContext[fieldName]=`${value.resModel},${value.resId}`;}else if(field.type==="properties"){dataContext[fieldName]=value.filter((property)=>!property.definition_deleted!==false);}else{dataContext[fieldName]=value;}}
dataContext.id=this.resId||false;return{withVirtualIds:{...dataContext,...x2manyDataContext.withVirtualIds},withoutVirtualIds:{...dataContext,...x2manyDataContext.withoutVirtualIds},};}
_createStaticListDatapoint(data,fieldName){const{related,limit,defaultOrderBy}=this.activeFields[fieldName];const config={resModel:this.fields[fieldName].relation,activeFields:(related&&related.activeFields)||{},fields:(related&&related.fields)||{},relationField:this.fields[fieldName].relation_field||false,offset:0,resIds:data.map((r)=>r.id),orderBy:defaultOrderBy||[],limit:limit||Number.MAX_SAFE_INTEGER,currentCompanyId:this.currentCompanyId,context:{},};const options={onUpdate:({withoutOnchange}={})=>this._update({[fieldName]:[]},{withoutOnchange}),parent:this,};return new this.model.constructor.StaticList(this.model,config,data,options);}
_discard(){for(const fieldName in this._changes){if(["one2many","many2many"].includes(this.fields[fieldName].type)){this._changes[fieldName]._discard();}}
if(this._savePoint){this.dirty=this._savePoint.dirty;this._changes=markRaw({...this._savePoint.changes});this._textValues=markRaw({...this._savePoint.textValues});}else{this.dirty=false;this._changes=markRaw(this.isNew?{...this._initialChanges}:{});this._textValues=markRaw({...this._initialTextValues});}
this.data={...this._values,...this._changes};this._savePoint=undefined;this._setEvalContext();this._invalidFields.clear();this._closeInvalidFieldsNotification();this._closeInvalidFieldsNotification=()=>{};this._restoreActiveFields();}
_formatServerValue(fieldType,value){if(fieldType==="date"){return value?serializeDate(value):false;}else if(fieldType==="datetime"){return value?serializeDateTime(value):false;}else if(fieldType==="char"||fieldType==="text"){return value!==""?value:false;}else if(fieldType==="html"){return value&&value.length?value:false;}else if(fieldType==="many2one"){return value?value[0]:false;}else if(fieldType==="reference"){return value&&value.resModel&&value.resId?`${value.resModel},${value.resId}`:false;}else if(fieldType==="properties"){return value.map((property)=>{let value;if(property.type==="many2one"){value=property.value;}else if((property.type==="date"||property.type==="datetime")&&typeof property.value==="string"){value=property.value;}else{value=this._formatServerValue(property.type,property.value);}
return{...property,value,};});}
return value;}
_getChanges(changes=this._changes,{withReadonly}={}){const result={};for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(fieldName==="id"){continue;}
if(!withReadonly&&fieldName in this.activeFields&&this._isReadonly(fieldName)&&!this.activeFields[fieldName].forceSave){continue;}
if(field.relatedPropertyField){continue;}
if(field.type==="one2many"||field.type==="many2many"){const commands=value._getCommands({withReadonly});if(!this.isNew&&!commands.length&&!withReadonly){continue;}
result[fieldName]=commands;}else{result[fieldName]=this._formatServerValue(field.type,value);}}
return result;}
_getDefaultValues(fieldNames=this.fieldNames){const defaultValues={};for(const fieldName of fieldNames){switch(this.fields[fieldName].type){case"integer":case"float":case"monetary":defaultValues[fieldName]=fieldName==="id"?false:0;break;case"one2many":case"many2many":defaultValues[fieldName]=[];break;default:defaultValues[fieldName]=false;}}
return defaultValues;}
_getTextValues(values){const textValues={};for(const fieldName in values){if(!this.activeFields[fieldName]){continue;}
if(["char","text","html"].includes(this.fields[fieldName].type)){textValues[fieldName]=values[fieldName];}}
return textValues;}
_isInvisible(fieldName){const invisible=this.activeFields[fieldName].invisible;return invisible?evaluateBooleanExpr(invisible,this.evalContextWithVirtualIds):false;}
_isReadonly(fieldName){const readonly=this.activeFields[fieldName].readonly;return readonly?evaluateBooleanExpr(readonly,this.evalContextWithVirtualIds):false;}
_isRequired(fieldName){const required=this.activeFields[fieldName].required;return required?evaluateBooleanExpr(required,this.evalContextWithVirtualIds):false;}
async _load(nextConfig={}){if("resId"in nextConfig&&this.resId){throw new Error("Cannot change resId of a record");}
await this.model._updateConfig(this.config,nextConfig,{commit:(values)=>{if(this.resId){this.model._updateSimilarRecords(this,values);}
this._setData(values);},});}
_processProperties(properties,fieldName,parent,currentValues={}){const data={};const relatedPropertyField={fieldName,};if(parent){relatedPropertyField.id=parent[0];relatedPropertyField.displayName=parent[1];}
const hasCurrentValues=Object.keys(currentValues).length>0;for(const property of properties){const propertyFieldName=`${fieldName}.${property.name}`;if(hasCurrentValues||!this.fields[propertyFieldName]){this.fields[propertyFieldName]={...property,name:propertyFieldName,relatedPropertyField,propertyName:property.name,relation:property.comodel,};}
if(hasCurrentValues||!this.activeFields[propertyFieldName]){this.activeFields[propertyFieldName]=createPropertyActiveField(property);}
if(property.type==="many2many"){let staticList=currentValues[propertyFieldName];if(!staticList){staticList=this._createStaticListDatapoint((property.value||[]).map((record)=>({id:record[0],display_name:record[1],})),propertyFieldName);}
data[propertyFieldName]=staticList;}else if(property.type==="many2one"){data[propertyFieldName]=property.value.length&&property.value[1]===null?[property.value[0],_t("No Access")]:property.value;}else{data[propertyFieldName]=property.value??false;}}
return data;}
_parseServerValues(serverValues,currentValues={}){const parsedValues={};if(!serverValues){return parsedValues;}
for(const fieldName in serverValues){const value=serverValues[fieldName];if(!this.activeFields[fieldName]){continue;}
const field=this.fields[fieldName];if(field.type==="one2many"||field.type==="many2many"){let staticList=currentValues[fieldName];let valueIsCommandList=true;valueIsCommandList=value.length>0&&Array.isArray(value[0]);if(!staticList){let data=valueIsCommandList?[]:value;if(data.length>0&&typeof data[0]==="number"){data=data.map((resId)=>{return{id:resId};});}
staticList=this._createStaticListDatapoint(data,fieldName);}
if(valueIsCommandList){staticList._applyInitialCommands(value);}
parsedValues[fieldName]=staticList;}else{parsedValues[fieldName]=parseServerValue(field,value);if(field.type==="properties"){const parent=serverValues[field.definition_record];Object.assign(parsedValues,this._processProperties(parsedValues[fieldName],fieldName,parent,currentValues));}}}
return parsedValues;}
async _preprocessReferenceChanges(changes){const proms=[];for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type!=="reference"){continue;}
if(!value){changes[fieldName]=false;continue;}
const id=value.resId;const displayName=value.displayName;if(!id&&!displayName){changes[fieldName]=false;continue;}
const context=getFieldContext(this,fieldName);if(!id&&displayName!==undefined){proms.push(this.model.orm.call(value.resModel,"name_create",[displayName],{context,}).then((result)=>{changes[fieldName]=result?{resModel:value.resModel,resId:result[0],displayName,}:false;}));}else if(id&&displayName===undefined){const kwargs={context,specification:{display_name:{}},};proms.push(this.model.orm.webRead(value.resModel,[id],kwargs).then((records)=>{changes[fieldName]={resModel:value.resModel,resId:id,displayName:records[0].display_name,};}));}else{changes[fieldName]=value;}}
return Promise.all(proms);}
async _preprocessMany2oneChanges(changes){const proms=[];for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type!=="many2one"){continue;}
if(!value){changes[fieldName]=false;continue;}
const[id,displayName]=value;const activeField=this.activeFields[fieldName];if(!activeField){changes[fieldName]=value;continue;}
const relation=this.fields[fieldName].relation;const context=getFieldContext(this,fieldName);if(!id&&displayName!==undefined){proms.push(this.model.orm.call(relation,"name_create",[displayName],{context,}).then((result)=>{changes[fieldName]=result;}));}else if(id&&displayName===undefined){const kwargs={context,specification:{display_name:{}},};proms.push(this.model.orm.webRead(relation,[id],kwargs).then((records)=>{changes[fieldName]=[records[0].id,records[0].display_name||""];}));}else{changes[fieldName]=value;}}
return Promise.all(proms);}
async _preprocessX2manyChanges(changes){for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type!=="one2many"&&this.fields[fieldName].type!=="many2many"){continue;}
const list=this.data[fieldName];for(const command of value){switch(command[0]){case x2ManyCommands.SET:await list._replaceWith(command[2]);break;default:await list._applyCommands([command]);}}
changes[fieldName]=list;}}
_preprocessPropertiesChanges(changes){for(const[fieldName,value]of Object.entries(changes)){const field=this.fields[fieldName];if(field.type==="properties"){const parent=changes[field.definition_record]||this.data[field.definition_record];Object.assign(changes,this._processProperties(value,fieldName,parent,this.data));}else if(field&&field.relatedPropertyField){const[propertyFieldName,propertyName]=field.name.split(".");const propertiesData=this.data[propertyFieldName]||[];if(!propertiesData.find((property)=>property.name===propertyName)){this.model.notification.add(_t("This record belongs to a different parent so you can not change this property."),{type:"warning"});return;}
changes[propertyFieldName]=propertiesData.map((property)=>property.name===propertyName?{...property,value}:property);}}}
_preprocessHtmlChanges(changes){for(const[fieldName,value]of Object.entries(changes)){if(this.fields[fieldName].type==="html"){changes[fieldName]=value===false?false:markup(value);}}}
_removeInvalidFields(fieldNames){for(const fieldName of fieldNames){this._invalidFields.delete(fieldName);}}
_restoreActiveFields(){if(!this._activeFieldsToRestore){return;}
this.model._updateConfig(this.config,{activeFields:{...this._activeFieldsToRestore},},{reload:false});this._activeFieldsToRestore=undefined;}
async _save({reload=true,onError,nextId}={}){if(this.model._closeUrgentSaveNotification){this.model._closeUrgentSaveNotification();}
const creation=!this.resId;if(nextId){if(creation){throw new Error("Cannot set nextId on a new record");}
reload=true;}
for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(["one2many","many2many"].includes(field.type)&&!field.relatedPropertyField){this.data[fieldName]._abandonRecords();}}
const changes=this._getChanges();delete changes.id;if(!creation&&!Object.keys(changes).length){return true;}
if(!this._checkValidity({displayNotification:true})){return false;}
if(this.model._urgentSave&&this.model.useSendBeaconToSaveUrgently){const route=`/web/dataset/call_kw/${this.resModel}/web_save`;const params={model:this.resModel,method:"web_save",args:[this.resId?[this.resId]:[],changes],kwargs:{context:this.context,specification:{}},};const data={jsonrpc:"2.0",method:"call",params};const blob=new Blob([JSON.stringify(data)],{type:"application/json"});const succeeded=navigator.sendBeacon(route,blob);if(!succeeded){this.model._closeUrgentSaveNotification=this.model.notification.add(markup(_t(`Heads up! Your recent changes are too large to save automatically. Please click the <i class="fa fa-cloud-upload fa-fw"></i> button now to ensure your work is saved before you exit this tab.`)),{sticky:true});}
return succeeded;}
const canProceed=await this.model.hooks.onWillSaveRecord(this,changes);if(canProceed===false){return false;}
let fieldSpec={};if(reload){fieldSpec=getFieldsSpec(this.activeFields,this.fields,getBasicEvalContext(this.config));}
const kwargs={context:this.context,specification:fieldSpec,next_id:nextId,};let records=[];try{records=await this.model.orm.webSave(this.resModel,this.resId?[this.resId]:[],changes,kwargs);}catch(e){if(onError){return onError(e,{discard:()=>this._discard()});}
if(!this.isInEdition){await this._load({});}
throw e;}
if(reload&&!records.length){throw new FetchRecordError(nextId||this.resId);}
if(creation){const resId=records[0].id;const resIds=this.resIds.concat([resId]);this.model._updateConfig(this.config,{resId,resIds},{reload:false});}
await this.model.hooks.onRecordSaved(this,changes);if(reload){if(this.resId){this.model._updateSimilarRecords(this,records[0]);}
if(nextId){this.model._updateConfig(this.config,{resId:nextId},{reload:false});}
if(this.config.isRoot){this.model.hooks.onWillLoadRoot(this.config);}
this._setData(records[0]);}else{this._values=markRaw({...this._values,...this._changes});if("id"in this.activeFields){this._values.id=records[0].id;}
for(const fieldName in this.activeFields){const field=this.fields[fieldName];if(["one2many","many2many"].includes(field.type)&&!field.relatedPropertyField){this._changes[fieldName]?._clearCommands();}}
this._changes=markRaw({});this.data={...this._values};this.dirty=false;}
return true;}
_setEvalContext(){const evalContext=getBasicEvalContext(this.config);const dataContext=this._computeDataContext();Object.assign(this.evalContext,evalContext,dataContext.withoutVirtualIds);Object.assign(this.evalContextWithVirtualIds,evalContext,dataContext.withVirtualIds);this._isEvalContextReady=true;if(!this._parentRecord||this._parentRecord._isEvalContextReady){for(const[fieldName,value]of Object.entries(toRaw(this.data))){if(["one2many","many2many"].includes(this.fields[fieldName].type)){value._updateContext(getFieldContext(this,fieldName));}}}}
async _setInvalidField(fieldName){const canProceed=this.model.hooks.onWillSetInvalidField(this,fieldName);if(canProceed===false){return;}
if(this.selected&&this.model.multiEdit&&!this._invalidFields.has(fieldName)){await this.model.dialog.add(AlertDialog,{body:_t("No valid record to save"),confirm:async()=>{await this.discard();this.switchMode("readonly");},});}
this._invalidFields.add(fieldName);}
_switchMode(mode){this.model._updateConfig(this.config,{mode},{reload:false});if(mode==="readonly"){this._noUpdateParent=false;this._invalidFields.clear();}}
async _toggleArchive(state){const method=state?"action_archive":"action_unarchive";const action=await this.model.orm.call(this.resModel,method,[[this.resId]],{context:this.context,});if(action&&Object.keys(action).length){this.model.action.doAction(action,{onClose:()=>this._load()});}else{return this._load();}}
_toggleSelection(selected){if(typeof selected==="boolean"){this.selected=selected;}else{this.selected=!this.selected;}}
async _getOnchangeValues(changes){const onChangeFields=Object.keys(changes).filter((fieldName)=>this.activeFields[fieldName]&&this.activeFields[fieldName].onChange);if(!onChangeFields.length){return{};}
const localChanges=this._getChanges({...this._changes,...changes},{withReadonly:true});if(this.config.relationField){const parentRecord=this._parentRecord;localChanges[this.config.relationField]=parentRecord._getChanges(parentRecord._changes,{withReadonly:true});if(!this._parentRecord.isNew){localChanges[this.config.relationField].id=this._parentRecord.resId;}}
return this.model._onchange(this.config,{changes:localChanges,fieldNames:onChangeFields,evalContext:toRaw(this.evalContext),onError:(e)=>{const undoChanges=this._applyChanges(changes);undoChanges();throw e;},});}
async _update(changes,{withoutOnchange,withoutParentUpdate}={}){this.dirty=true;const prom=Promise.all([this._preprocessMany2oneChanges(changes),this._preprocessReferenceChanges(changes),this._preprocessX2manyChanges(changes),this._preprocessPropertiesChanges(changes),this._preprocessHtmlChanges(changes),]);if(!this.model._urgentSave){await prom;}
if(this.selected&&this.model.multiEdit){this._applyChanges(changes);return this.model.root._multiSave(this);}
let onchangeServerValues={};if(!this.model._urgentSave&&!withoutOnchange){onchangeServerValues=await this._getOnchangeValues(changes);}
for(const fieldName in changes){if(this.fields[fieldName].type==="many2one"){const curVal=toRaw(this.data[fieldName]);const nextVal=changes[fieldName];if(curVal&&nextVal&&curVal[0]===nextVal[0]&&curVal[1]===nextVal[1]){delete changes[fieldName];}}}
const undoChanges=this._applyChanges(changes,onchangeServerValues);if(Object.keys(changes).length>0||Object.keys(onchangeServerValues).length>0){try{await this._onUpdate({withoutParentUpdate});}catch(e){undoChanges();throw e;}
await this.model.hooks.onRecordChanged(this,this._getChanges());}}}
return __exports;});;

/* /web/static/src/model/relational_model/relational_model.js */
odoo.define('@web/model/relational_model/relational_model',['@odoo/owl','@web/core/context','@web/core/domain','@web/core/errors/error_dialogs','@web/core/registry','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/order_by','@web/model/model','@web/model/relational_model/dynamic_group_list','@web/model/relational_model/dynamic_record_list','@web/model/relational_model/group','@web/model/relational_model/record','@web/model/relational_model/static_list','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{EventBus,markRaw,toRaw}=require("@odoo/owl");const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{WarningDialog}=require("@web/core/errors/error_dialogs");const{registry}=require("@web/core/registry");const{shallowEqual,unique}=require("@web/core/utils/arrays");const{KeepLast,Mutex}=require("@web/core/utils/concurrency");const{orderByToString}=require("@web/search/utils/order_by");const{Model}=require("@web/model/model");const{DynamicGroupList}=require("@web/model/relational_model/dynamic_group_list");const{DynamicRecordList}=require("@web/model/relational_model/dynamic_record_list");const{Group}=require("@web/model/relational_model/group");const{Record}=require("@web/model/relational_model/record");const{StaticList}=require("@web/model/relational_model/static_list");const{FetchRecordError,extractInfoFromGroupData,getBasicEvalContext,getFieldsSpec,isRelational,makeActiveField,}=require("@web/model/relational_model/utils");const DEFAULT_HOOKS={onWillLoadRoot:()=>{},onRootLoaded:()=>{},onWillSaveRecord:()=>{},onRecordSaved:()=>{},onWillSaveMulti:()=>{},onSavedMulti:()=>{},onWillSetInvalidField:()=>{},onRecordChanged:()=>{},};__exports.fetchRecordErrorHandler=fetchRecordErrorHandler;function fetchRecordErrorHandler(env,error,originalError){if(originalError instanceof FetchRecordError){env.services.notification.add(originalError.message,{sticky:true,type:"danger"});return true;}}
const errorHandlerRegistry=registry.category("error_handlers");errorHandlerRegistry.add("fetchRecordErrorHandler",fetchRecordErrorHandler);const RelationalModel=__exports.RelationalModel=class RelationalModel extends Model{static services=["action","company","dialog","notification","orm","rpc","user"];static Record=Record;static Group=Group;static DynamicRecordList=DynamicRecordList;static DynamicGroupList=DynamicGroupList;static StaticList=StaticList;static DEFAULT_LIMIT=80;static DEFAULT_COUNT_LIMIT=10000;static DEFAULT_GROUP_LIMIT=80;static DEFAULT_OPEN_GROUP_LIMIT=10;static MAX_NUMBER_OPENED_GROUPS=10;setup(params,{action,company,dialog,notification,rpc,user}){this.action=action;this.dialog=dialog;this.notification=notification;this.rpc=rpc;this.user=user;this.bus=new EventBus();this.keepLast=markRaw(new KeepLast());this.mutex=markRaw(new Mutex());this.config={isMonoRecord:false,currentCompanyId:company.currentCompany.id,context:{},...params.config,isRoot:true,};this.hooks=Object.assign({},DEFAULT_HOOKS,params.hooks);this.initialLimit=params.limit||this.constructor.DEFAULT_LIMIT;this.initialGroupsLimit=params.groupsLimit;this.initialCountLimit=params.countLimit||this.constructor.DEFAULT_COUNT_LIMIT;this.defaultOrderBy=params.defaultOrderBy;this.defaultGroupBy=params.defaultGroupBy;this.maxGroupByDepth=params.maxGroupByDepth;this.groupByInfo=params.groupByInfo||{};this.multiEdit=params.multiEdit;this.activeIdsLimit=params.activeIdsLimit||Number.MAX_SAFE_INTEGER;this.specialDataCaches=markRaw(params.state?.specialDataCaches||{});this.useSendBeaconToSaveUrgently=params.useSendBeaconToSaveUrgently||false;this._urgentSave=false;}
exportState(){return{config:toRaw(this.config),specialDataCaches:this.specialDataCaches,};}
hasData(){return this.root.hasData;}
async load(params={}){const config=this._getNextConfig(this.config,params);this.hooks.onWillLoadRoot(config);const data=await this.keepLast.add(this._loadData(config));this.root=this._createRoot(config,data);this.config=config;return this.hooks.onRootLoaded();}
async _getPropertyDefinition(config,propertyFullName){const result=await this.orm.call(config.resModel,"get_property_definition",[propertyFullName],{context:config.context});if(!result){config.groupBy=null;}else{result.propertyName=result.name;result.name=propertyFullName;result.relatedPropertyField={fieldName:propertyFullName.split(".")[0]};result.relation=result.comodel;config.fields[propertyFullName]=result;}}
_askChanges(){const proms=[];this.bus.trigger("NEED_LOCAL_CHANGES",{proms});return Promise.all([...proms,this.mutex.getUnlockedDef()]);}
_createRoot(config,data){if(config.isMonoRecord){return new this.constructor.Record(this,config,data);}
if(config.groupBy.length){return new this.constructor.DynamicGroupList(this,config,data);}
return new this.constructor.DynamicRecordList(this,config,data);}
_getNextConfig(currentConfig,params){const currentGroupBy=currentConfig.groupBy;const config=Object.assign({},currentConfig);config.context="context"in params?params.context:config.context;if(currentConfig.isMonoRecord){config.resId="resId"in params?params.resId:config.resId;config.resIds="resIds"in params?params.resIds:config.resIds;if(!config.resIds){config.resIds=config.resId?[config.resId]:[];}
if(!config.resId&&config.mode!=="edit"){config.mode="edit";}}else{config.domain="domain"in params?params.domain:config.domain;config.comparison="comparison"in params?params.comparison:config.comparison;config.groupBy="groupBy"in params?params.groupBy:config.groupBy;if(this.defaultGroupBy&&!config.groupBy.length){config.groupBy=[this.defaultGroupBy];}
if(this.maxGroupByDepth){config.groupBy=config.groupBy.slice(0,this.maxGroupByDepth);}
config.orderBy="orderBy"in params?params.orderBy:config.orderBy;if(!config.orderBy.length){config.orderBy=currentConfig.orderBy||[];}
if(this.defaultOrderBy&&!config.orderBy.length){config.orderBy=this.defaultOrderBy;}
if(!shallowEqual(config.groupBy||[],currentGroupBy||[])){delete config.groups;}}
if(!config.isMonoRecord&&this.root){const resetOffset=(config)=>{config.offset=0;for(const group of Object.values(config.groups||{})){resetOffset(group.list);}};resetOffset(config);if(!!config.groupBy.length!==!!currentGroupBy.length){delete config.limit;}}
return config;}
async _loadData(config){if(config.isMonoRecord){const evalContext=getBasicEvalContext(config);if(!config.resId){return this._loadNewRecord(config,{evalContext});}
const records=await this._loadRecords({...config,resIds:[config.resId],},evalContext);return records[0];}
if(config.resIds){const resIds=config.resIds.slice(config.offset,config.offset+config.limit);return this._loadRecords({...config,resIds});}
if(config.groupBy.length){return this._loadGroupedList(config);}
Object.assign(config,{limit:config.limit||this.initialLimit,countLimit:"countLimit"in config?config.countLimit:this.initialCountLimit,offset:config.offset||0,});if(config.countLimit!==Number.MAX_SAFE_INTEGER){config.countLimit=Math.max(config.countLimit,config.offset+config.limit);}
return this._loadUngroupedList({...config,context:{...config.context,current_company_id:config.currentCompanyId,},});}
async _loadGroupedList(config){config.offset=config.offset||0;config.limit=config.limit||this.initialGroupsLimit;if(!config.limit){config.limit=config.openGroupsByDefault?this.constructor.DEFAULT_OPEN_GROUP_LIMIT:this.constructor.DEFAULT_GROUP_LIMIT;}
config.groups=config.groups||{};const firstGroupByName=config.groupBy[0].split(":")[0];if(firstGroupByName.includes(".")){if(!config.fields[firstGroupByName]){await this._getPropertyDefinition(config,firstGroupByName);}
const propertiesFieldName=firstGroupByName.split(".")[0];if(!config.activeFields[propertiesFieldName]){config.activeFields[propertiesFieldName]=makeActiveField();}}
const orderBy=config.orderBy.filter((o)=>o.name===firstGroupByName||(o.name in config.activeFields&&config.fields[o.name].group_operator!==undefined));const response=await this._webReadGroup(config,firstGroupByName,orderBy);const{groups:groupsData,length}=response;const groupBy=config.groupBy.slice(1);const groupByField=config.fields[config.groupBy[0].split(":")[0]];const commonConfig={resModel:config.resModel,fields:config.fields,activeFields:config.activeFields,};let groupRecordConfig;const groupRecordResIds=[];if(this.groupByInfo[firstGroupByName]){groupRecordConfig={...this.groupByInfo[firstGroupByName],resModel:config.fields[firstGroupByName].relation,context:{},};}
const proms=[];let nbOpenGroups=0;const groups=[];for(const groupData of groupsData){const group=extractInfoFromGroupData(groupData,config.groupBy,config.fields);if(!config.groups[group.value]){config.groups[group.value]={...commonConfig,groupByFieldName:groupByField.name,isFolded:"__fold"in groupData?groupData.__fold:!config.openGroupsByDefault,extraDomain:false,value:group.value,list:{...commonConfig,groupBy,},};if(isRelational(config.fields[firstGroupByName])&&!group.value){config.groups[group.value].isFolded=true;}
if(groupRecordConfig){config.groups[group.value].record={...groupRecordConfig,resId:group.value??false,};}}
if(groupRecordConfig){const resId=config.groups[group.value].record.resId;if(resId){groupRecordResIds.push(resId);}}
const groupConfig=config.groups[group.value];groupConfig.list.orderBy=config.orderBy;groupConfig.initialDomain=group.domain;if(groupConfig.extraDomain){groupConfig.list.domain=Domain.and([group.domain,groupConfig.extraDomain,]).toList();}else{groupConfig.list.domain=group.domain;}
const context={...config.context,[`default_${firstGroupByName}`]:group.serverValue,};groupConfig.list.context=context;groupConfig.context=context;if(groupBy.length){group.groups=[];}else{group.records=[];}
if(!groupConfig.isFolded){nbOpenGroups++;if(nbOpenGroups>this.constructor.MAX_NUMBER_OPENED_GROUPS){groupConfig.isFolded=true;}}
if(!groupConfig.isFolded&&group.count>0){const prom=this._loadData(groupConfig.list).then((response)=>{if(groupBy.length){group.groups=response?response.groups:[];group.length=response?response.length:0;}else{group.records=response?response.records:[];}});proms.push(prom);}
groups.push(group);}
if(groupRecordConfig&&Object.keys(groupRecordConfig.activeFields).length){const prom=this._loadRecords({...groupRecordConfig,resIds:groupRecordResIds,}).then((records)=>{for(const group of groups){if(!group.value){group.values={id:false};continue;}
group.values=records.find((r)=>group.value&&r.id===group.value);}});proms.push(prom);}
await Promise.all(proms);const params=JSON.stringify([config.domain,config.groupBy,config.offset,config.limit,config.orderBy,]);if(config.currentGroups&&config.currentGroups.params===params){const currentGroups=config.currentGroups.groups;currentGroups.forEach((group,index)=>{if(config.groups[group.value]&&!groups.some((g)=>JSON.stringify(g.value)===JSON.stringify(group.value))){const aggregates=Object.assign({},group.aggregates);for(const key in aggregates){aggregates[key]=0;}
groups.splice(index,0,Object.assign({},group,{count:0,length:0,records:[],aggregates}));}});}
config.currentGroups={params,groups};return{groups,length};}
async _loadNewRecord(config,params={}){return this._onchange(config,params);}
async _loadRecords(config,evalContext=config.context){const{resModel,resIds,activeFields,fields,context}=config;if(!resIds.length){return[];}
const fieldSpec=getFieldsSpec(activeFields,fields,evalContext);if(Object.keys(fieldSpec).length>0){const kwargs={context:{bin_size:true,...context},specification:fieldSpec,};const records=await this.orm.webRead(resModel,resIds,kwargs);if(!records.length){throw new FetchRecordError(resIds);}
return records;}else{return resIds.map((resId)=>{return{id:resId};});}}
async _loadUngroupedList(config){const kwargs={specification:getFieldsSpec(config.activeFields,config.fields,config.context),offset:config.offset,order:orderByToString(config.orderBy),limit:config.limit,context:{bin_size:true,...config.context},count_limit:config.countLimit!==Number.MAX_SAFE_INTEGER?config.countLimit+1:undefined,};return this.orm.webSearchRead(config.resModel,config.domain,kwargs);}
async _onchange(config,{changes={},fieldNames=[],evalContext=config.context,onError}){const{fields,activeFields,resModel,resId}=config;let context=config.context;if(fieldNames.length===1){const fieldContext=config.activeFields[fieldNames[0]].context;context=makeContext([context,fieldContext],evalContext);}
const spec=getFieldsSpec(activeFields,fields,evalContext,{withInvisible:true});const args=[resId?[resId]:[],changes,fieldNames,spec];let response;try{response=await this.orm.call(resModel,"onchange",args,{context});}catch(e){if(onError){return onError(e);}
throw e;}
if(response.warning){const{type,title,message,className,sticky}=response.warning;if(type==="dialog"){this.dialog.add(WarningDialog,{title,message});}else{this.notification.add(message,{className,sticky,title,type:"warning",});}}
return response.value;}
async _updateConfig(config,patch,{reload=true,commit}={}){const tmpConfig={...config,...patch};markRaw(tmpConfig.activeFields);markRaw(tmpConfig.fields);let data;if(reload){if(tmpConfig.isRoot){this.hooks.onWillLoadRoot(tmpConfig);}
data=await this._loadData(tmpConfig);}
Object.assign(config,tmpConfig);if(data&&commit){commit(data);}
if(reload&&config.isRoot){return this.hooks.onRootLoaded();}}
async _updateCount(config){const count=await this.keepLast.add(this.orm.searchCount(config.resModel,config.domain));config.countLimit=Number.MAX_SAFE_INTEGER;return count;}
_updateSimilarRecords(reloadedRecord,serverValues){if(this.config.isMonoRecord||!this.config.groupBy.length){return;}
for(const record of this.root.records){if(record===reloadedRecord){continue;}
if(record.resId===reloadedRecord.resId){record._applyValues(serverValues);}}}
async _webReadGroup(config,firstGroupByName,orderBy){return this.orm.webReadGroup(config.resModel,config.domain,unique([...Object.keys(config.activeFields),firstGroupByName]),[config.groupBy[0]],{orderby:orderByToString(orderBy),lazy:true,offset:config.offset,limit:config.limit,context:config.context,});}}
return __exports;});;

/* /web/static/src/model/relational_model/static_list.js */
odoo.define('@web/model/relational_model/static_list',['@web/core/orm_service','@web/core/utils/arrays','@web/core/utils/objects','@web/model/relational_model/utils','@web/model/relational_model/datapoint','@odoo/owl'],function(require){'use strict';let __exports={};const{x2ManyCommands}=require("@web/core/orm_service");const{intersection}=require("@web/core/utils/arrays");const{pick}=require("@web/core/utils/objects");const{completeActiveFields}=require("@web/model/relational_model/utils");const{DataPoint}=require("@web/model/relational_model/datapoint");const{fromUnityToServerValues,getId,patchActiveFields}=require("@web/model/relational_model/utils");const{markRaw}=require("@odoo/owl");function compareFieldValues(v1,v2,fieldType){if(fieldType==="many2one"){v1=v1?v1[1]:"";v2=v2?v2[1]:"";}
return v1<v2;}
function compareRecords(r1,r2,orderBy,fields){const{name,asc}=orderBy[0];function getValue(record,fieldName){return fieldName==="id"?record.resId:record.data[fieldName];}
const v1=asc?getValue(r1,name):getValue(r2,name);const v2=asc?getValue(r2,name):getValue(r1,name);if(compareFieldValues(v1,v2,fields[name].type)){return-1;}
if(compareFieldValues(v2,v1,fields[name].type)){return 1;}
if(orderBy.length>1){return compareRecords(r1,r2,orderBy.slice(1),fields);}
return 0;}
const StaticList=__exports.StaticList=class StaticList extends DataPoint{static type="StaticList";setup(config,data,options={}){this._parent=options.parent;this._onUpdate=options.onUpdate;this._cache=markRaw({});this._commands=[];this._initialCommands=[];this._savePoint=undefined;this._unknownRecordCommands={};this._currentIds=[...this.resIds];this._initialCurrentIds=[...this.currentIds];this._needsReordering=false;this._tmpIncreaseLimit=0;this._extendedRecords=new Set();this.records=data.slice(this.offset,this.limit).map((r)=>this._createRecordDatapoint(r));this.count=this.resIds.length;this.handleField=Object.keys(this.activeFields).find((fieldName)=>this.activeFields[fieldName].isHandle);}
get currentIds(){return this._currentIds;}
get editedRecord(){return this.records.find((record)=>record.isInEdition);}
get evalContext(){const context=this.config.context;return{context,uid:context.uid,allowed_company_ids:context.allowed_company_ids,current_company_id:this.config.currentCompanyId,parent:this._parent.evalContext,};}
get limit(){return this.config.limit;}
get offset(){return this.config.offset;}
get orderBy(){return this.config.orderBy;}
get resIds(){return this.config.resIds;}
addNewRecord(params){return this.model.mutex.exec(async()=>{const{activeFields,context,mode,position,withoutParent}=params;const record=await this._createNewRecordDatapoint({activeFields,context,position,withoutParent,manuallyAdded:true,mode,});await this._addRecord(record,{position});await this._onUpdate({withoutOnchange:!record._checkValidity({silent:true})});return record;});}
canResequence(){return this.handleField&&this.orderBy.length&&this.orderBy[0].name===this.handleField;}
createAndReplace(contextRecords){return this.model.mutex.exec(async()=>{const proms=[];for(const context of contextRecords){proms.push(this._createNewRecordDatapoint({context,manuallyAdded:true,}));}
this.records=await Promise.all(proms);this._commands=this.records.map((record)=>[x2ManyCommands.CREATE,record._virtualId,]);this._currentIds=this.records.map((record)=>record._virtualId);});}
delete(record){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.DELETE,record.resId||record._virtualId]]);await this._onUpdate();});}
async enterEditMode(record){const canProceed=await this.leaveEditMode();if(canProceed){await record.switchMode("edit");}
return canProceed;}
extendRecord(params,record){return this.model.mutex.exec(async()=>{completeActiveFields(this.config.activeFields,params.activeFields);Object.assign(this.fields,params.fields);const activeFields={...params.activeFields};for(const fieldName in this.activeFields){if(fieldName in activeFields){patchActiveFields(activeFields[fieldName],this.activeFields[fieldName]);}else{activeFields[fieldName]=this.activeFields[fieldName];}}
if(record){record._noUpdateParent=true;record._activeFieldsToRestore={...this.config.activeFields};const config={...record.config,...params,activeFields,};if(this._extendedRecords.has(record.id)){this.model._updateConfig(record.config,config,{reload:false});record._addSavePoint();return record;}
let data={};if(!record.isNew){const evalContext=Object.assign({},record.evalContext,config.context);const resIds=[record.resId];[data]=await this.model._loadRecords({...config,resIds},evalContext);}
this.model._updateConfig(record.config,config,{reload:false});record._applyDefaultValues();for(const fieldName in record.activeFields){if(["one2many","many2many"].includes(record.fields[fieldName].type)){const list=record.data[fieldName];const patch={activeFields:activeFields[fieldName].related.activeFields,fields:activeFields[fieldName].related.fields,};for(const subRecord of Object.values(list._cache)){this.model._updateConfig(subRecord.config,patch,{reload:false,});}
this.model._updateConfig(list.config,patch,{reload:false});}}
record._applyValues(data);const commands=this._unknownRecordCommands[record.resId];delete this._unknownRecordCommands[record.resId];if(commands){this._applyCommands(commands);}
record._addSavePoint();}else{record=await this._createNewRecordDatapoint({activeFields,context:params.context,withoutParent:params.withoutParent,manuallyAdded:true,});record._activeFieldsToRestore={...this.config.activeFields};record._noUpdateParent=true;}
this._extendedRecords.add(record.id);return record;});}
forget(record){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.UNLINK,record.resId]]);await this._onUpdate();});}
async leaveEditMode({discard,canAbandon,validate}={}){if(this.editedRecord){await this.model._askChanges(false);}
return this.model.mutex.exec(async()=>{if(this.editedRecord){const isValid=this.editedRecord._checkValidity();if(!isValid&&validate){return false;}
if(canAbandon!==false&&!validate){this._abandonRecords([this.editedRecord],{force:true});}
if(this.editedRecord){if(isValid&&!this.editedRecord.dirty&&discard){return false;}
if(isValid||(!this.editedRecord.dirty&&!this.editedRecord._manuallyAdded)){this.editedRecord._switchMode("readonly");}}}
return!this.editedRecord;});}
linkTo(resId,serverData){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.LINK,resId,serverData]]);await this._onUpdate();});}
unlinkFrom(resId,serverData){return this.model.mutex.exec(async()=>{await this._applyCommands([[x2ManyCommands.UNLINK,resId,serverData]]);await this._onUpdate();});}
load({limit,offset,orderBy}={}){return this.model.mutex.exec(async()=>{if(this.editedRecord&&!(await this.editedRecord.checkValidity())){return;}
limit=limit!==undefined?limit:this.limit;offset=offset!==undefined?offset:this.offset;orderBy=orderBy!==undefined?orderBy:this.orderBy;return this._load({limit,offset,orderBy});});}
moveRecord(dataRecordId,_dataGroupId,refId,_targetGroupId){return this.resequence(dataRecordId,refId);}
sortBy(fieldName){return this.model.mutex.exec(()=>this._sortBy(fieldName));}
async addAndRemove({add,remove,reload}={}){return this.model.mutex.exec(async()=>{const commands=[...(add||[]).map((id)=>[x2ManyCommands.LINK,id]),...(remove||[]).map((id)=>[x2ManyCommands.UNLINK,id]),];await this._applyCommands(commands,{canAddOverLimit:true,reload});await this._onUpdate();});}
async resequence(movedId,targetId){return this.model.mutex.exec(()=>this._resequence(movedId,targetId));}
validateExtendedRecord(record){return this.model.mutex.exec(async()=>{if(!this._currentIds.includes(record.isNew?record._virtualId:record.resId)){await this._addRecord(record);}else if(!record.dirty){return;}
await this._onUpdate();if(this.orderBy.length){await this._sort();}
record._restoreActiveFields();record._savePoint=undefined;});}
_abandonRecords(records=this.records,{force}={}){for(const record of records){if(record.canBeAbandoned&&(force||!record._checkValidity())){const virtualId=record._virtualId;const index=this._currentIds.findIndex((id)=>id===virtualId);this._currentIds.splice(index,1);this.records.splice(this.records.findIndex((r)=>r===record),1);this._commands=this._commands.filter((c)=>c[1]!==virtualId);this.count--;if(this._tmpIncreaseLimit>0){this.model._updateConfig(this.config,{limit:this.limit-1},{reload:false});this._tmpIncreaseLimit--;}}}}
async _addRecord(record,{position}={}){const command=[x2ManyCommands.CREATE,record._virtualId];if(position==="top"){this.records.unshift(record);if(this.records.length>this.limit){this.records.pop();}
this._currentIds.splice(this.offset,0,record._virtualId);this._commands.unshift(command);}else if(position==="bottom"){this.records.push(record);this._currentIds.splice(this.offset+this.limit,0,record._virtualId);if(this.records.length>this.limit){this._tmpIncreaseLimit++;const nextLimit=this.limit+1;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}
this._commands.push(command);}else{const currentIds=[...this._currentIds,record._virtualId];if(this.orderBy.length){await this._sort(currentIds);}else{if(this.records.length<this.limit){this.records.push(record);}}
this._currentIds=currentIds;this._commands.push(command);}
this.count++;this._needsReordering=true;}
_addSavePoint(){for(const id in this._cache){this._cache[id]._addSavePoint();}
this._savePoint=markRaw({_commands:[...this._commands],_currentIds:[...this._currentIds],count:this.count,});}
_applyCommands(commands,{canAddOverLimit,reload}={}){const{CREATE,UPDATE,DELETE,UNLINK,LINK,SET}=x2ManyCommands;let lastCommandIndex=-1;const commandsByIds={};function addOwnCommand(command){commandsByIds[command[1]]=commandsByIds[command[1]]||[];commandsByIds[command[1]].push({command,index:++lastCommandIndex});}
function getOwnCommands(id){commandsByIds[id]=commandsByIds[id]||[];return commandsByIds[id];}
for(const command of this._commands){addOwnCommand(command);}
const removedIds={};const recordsToLoad=[];for(const command of commands){switch(command[0]){case CREATE:{const virtualId=getId("virtual");const record=this._createRecordDatapoint(command[2],{virtualId});this.records.push(record);addOwnCommand([CREATE,virtualId]);this._currentIds.splice(this.offset+this.limit,0,virtualId);this.count++;break;}
case UPDATE:{const existingCommand=getOwnCommands(command[1]).some((x)=>x.command[0]===CREATE||x.command[0]===UPDATE);if(!existingCommand){addOwnCommand([UPDATE,command[1]]);}
const record=this._cache[command[1]];if(!record){if(!(command[1]in this._unknownRecordCommands)){this._unknownRecordCommands[command[1]]=[];}
this._unknownRecordCommands[command[1]].push(command);}else if(command[1]in this._unknownRecordCommands){this._unknownRecordCommands[command[1]].push(command);}else{const changes={};for(const fieldName in command[2]){if(["one2many","many2many"].includes(this.fields[fieldName].type)){const invisible=record.activeFields[fieldName]?.invisible;if(invisible==="True"||invisible==="1"||!(fieldName in record.activeFields)){if(!(command[1]in this._unknownRecordCommands)){this._unknownRecordCommands[command[1]]=[];}
this._unknownRecordCommands[command[1]].push(command);continue;}}
changes[fieldName]=command[2][fieldName];}
record._applyChanges(record._parseServerValues(changes,record.data));}
break;}
case DELETE:case UNLINK:{if(command[0]===UNLINK){const firstCommand=this._commands[0];const hasReplaceWithCommand=firstCommand&&firstCommand[0]===SET;if(hasReplaceWithCommand&&firstCommand[2].includes(command[1])){firstCommand[2]=firstCommand[2].filter((id)=>id!==command[1]);break;}}
const ownCommands=getOwnCommands(command[1]);if(command[0]===DELETE){const hasCreateCommand=ownCommands.some((x)=>x.command[0]===CREATE);ownCommands.splice(0);if(!hasCreateCommand){addOwnCommand([DELETE,command[1]]);}}else{const linkToIndex=ownCommands.findIndex((x)=>x.command[0]===LINK);if(linkToIndex>=0){ownCommands.splice(linkToIndex,1);}else{addOwnCommand([UNLINK,command[1]]);}}
removedIds[command[1]]=true;break;}
case LINK:{let record;if(command[1]in this._cache){record=this._cache[command[1]];}else{record=this._createRecordDatapoint({...command[2],id:command[1]});}
if(!this.limit||this.records.length<this.limit||canAddOverLimit){if(!command[2]){recordsToLoad.push(record);}
this.records.push(record);if(this.records.length>this.limit){this._tmpIncreaseLimit=this.records.length-this.limit;const nextLimit=this.limit+this._tmpIncreaseLimit;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}}
this._currentIds.push(record.resId);addOwnCommand([command[0],command[1]]);this.count++;break;}}}
this._commands=Object.values(commandsByIds).flat().sort((x,y)=>x.index-y.index).map((x)=>x.command);if(Object.keys(removedIds).length){let removeCommandsByIdsCopy=Object.assign({},removedIds);this.records=this.records.filter((r)=>{const id=r.resId||r._virtualId;if(removeCommandsByIdsCopy[id]){delete removeCommandsByIdsCopy[id];return false;}
return true;});const nextCurrentIds=[];removeCommandsByIdsCopy=Object.assign({},removedIds);for(const id of this._currentIds){if(removeCommandsByIdsCopy[id]){delete removeCommandsByIdsCopy[id];}else{nextCurrentIds.push(id);}}
this._currentIds=nextCurrentIds;this.count=this._currentIds.length;}
const nbMissingRecords=this.limit-this.records.length;if(nbMissingRecords>0){const lastRecordIndex=this.limit+this.offset;const firstRecordIndex=lastRecordIndex-nbMissingRecords;const nextRecordIds=this._currentIds.slice(firstRecordIndex,lastRecordIndex);for(const id of this._getResIdsToLoad(nextRecordIds)){const record=this._createRecordDatapoint({id},{dontApplyCommands:true});recordsToLoad.push(record);}
for(const id of nextRecordIds){this.records.push(this._cache[id]);}}
if(recordsToLoad.length||reload){const resIds=reload?this.records.map((r)=>r.resId):recordsToLoad.map((r)=>r.resId);return this.model._loadRecords({...this.config,resIds}).then((recordValues)=>{if(reload){for(const record of recordValues){this._createRecordDatapoint(record);}
this.records=resIds.map((id)=>this._cache[id]);return;}
for(let i=0;i<recordsToLoad.length;i++){const record=recordsToLoad[i];record._applyValues(recordValues[i]);const commands=this._unknownRecordCommands[record.resId];if(commands){delete this._unknownRecordCommands[record.resId];this._applyCommands(commands);}}});}}
_applyInitialCommands(commands){this._applyCommands(commands);this._initialCommands=[...commands];this._initialCurrentIds=[...this._currentIds];}
async _createNewRecordDatapoint(params={}){const changes={};if(!params.withoutParent&&this.config.relationField){changes[this.config.relationField]=this._parent._getChanges();if(!this._parent.isNew){changes[this.config.relationField].id=this._parent.resId;}}
const values=await this.model._loadNewRecord({resModel:this.resModel,activeFields:params.activeFields||this.activeFields,fields:this.fields,context:Object.assign({},this.context,params.context),},{changes,evalContext:this.evalContext});if(this.canResequence()&&this.records.length){const position=params.position||"bottom";const order=this.orderBy[0];const asc=!order||order.asc;let value;if(position==="top"){const isOnFirstPage=this.offset===0;value=this.records[0].data[this.handleField];if(isOnFirstPage){if(asc){value=value>0?value-1:0;}else{value=value+1;}}}else if(position==="bottom"){value=this.records[this.records.length-1].data[this.handleField];const isOnLastPage=this.limit+this.offset>=this.count;if(isOnLastPage){if(asc){value=value+1;}else{value=value>0?value-1:0;}}}
values[this.handleField]=value;}
return this._createRecordDatapoint(values,{mode:params.mode||"edit",virtualId:getId("virtual"),activeFields:params.activeFields,manuallyAdded:params.manuallyAdded,});}
_createRecordDatapoint(data,params={}){const resId=data.id||false;if(!resId&&!params.virtualId){throw new Error("You must provide a virtualId if the record has no id");}
const id=resId||params.virtualId;const config={context:this.context,activeFields:Object.assign({},params.activeFields||this.activeFields),resModel:this.resModel,fields:params.fields||this.fields,relationField:this.config.relationField,resId,resIds:resId?[resId]:[],mode:params.mode||"readonly",isMonoRecord:true,currentCompanyId:this.currentCompanyId,};const{CREATE,UPDATE}=x2ManyCommands;const options={parentRecord:this._parent,onUpdate:async({withoutParentUpdate})=>{if(!this.currentIds.includes(record.isNew?record._virtualId:record.resId)){return;}
const hasCommand=this._commands.some((c)=>(c[0]===CREATE||c[0]===UPDATE)&&c[1]===id);if(!hasCommand){this._commands.push([UPDATE,id]);}
if(record._noUpdateParent){return;}
if(!withoutParentUpdate){await this._onUpdate({withoutOnchange:!record._checkValidity({silent:true}),});}},virtualId:params.virtualId,manuallyAdded:params.manuallyAdded,};const record=new this.model.constructor.Record(this.model,config,data,options);this._cache[id]=record;if(!params.dontApplyCommands){const commands=this._unknownRecordCommands[id];if(commands){delete this._unknownRecordCommands[id];this._applyCommands(commands);}}
return record;}
_clearCommands(){this._commands=[];this._unknownRecordCommands={};}
_discard(){for(const id in this._cache){this._cache[id]._discard();}
if(this._savePoint){this._commands=this._savePoint._commands;this._currentIds=this._savePoint._currentIds;this.count=this._savePoint.count;}else{this._commands=[];this._currentIds=[...this.resIds];this.count=this.resIds.length;}
this._unknownRecordCommands={};const limit=this.limit-this._tmpIncreaseLimit;this._tmpIncreaseLimit=0;this.model._updateConfig(this.config,{limit},{reload:false});this.records=this._currentIds.slice(this.offset,this.limit).map((resId)=>this._cache[resId]);if(!this._savePoint){this._applyCommands(this._initialCommands);}
this._savePoint=undefined;}
_getCommands({withReadonly}={}){const{CREATE,UPDATE,LINK}=x2ManyCommands;const commands=[];for(const command of this._commands){if(command[0]===UPDATE&&command[1]in this._unknownRecordCommands){const uCommands=this._unknownRecordCommands[command[1]];for(const uCommand of uCommands){const values=fromUnityToServerValues(uCommand[2],this.fields,this.activeFields,{withReadonly,context:this.context});commands.push([uCommand[0],uCommand[1],values]);}}else if(command[0]===CREATE||command[0]===UPDATE){const record=this._cache[command[1]];if(command[0]===CREATE&&record.resId){commands.push([LINK,record.resId]);}else{const values=record._getChanges(record._changes,{withReadonly});if(command[0]===CREATE||Object.keys(values).length){commands.push([command[0],command[1],values]);}}}else{commands.push(command);}}
return commands;}
_getResIdsToLoad(resIds,fieldNames=this.fieldNames){return resIds.filter((resId)=>{if(typeof resId==="string"){return false;}
const record=this._cache[resId];if(!record){return true;}
fieldNames=fieldNames.filter((fieldName)=>fieldName!=="id");return intersection(fieldNames,record.fieldNames).length!==fieldNames.length;});}
async _load({limit=this.limit,offset=this.offset,orderBy=this.orderBy,nextCurrentIds=this._currentIds,}={}){const currentIds=nextCurrentIds.slice(offset,offset+limit);const resIds=this._getResIdsToLoad(currentIds);if(resIds.length){const records=await this.model._loadRecords({...this.config,resIds},this.evalContext);for(const record of records){this._createRecordDatapoint(record);}}
this.records=currentIds.map((id)=>this._cache[id]);this._currentIds=nextCurrentIds;await this.model._updateConfig(this.config,{limit,offset,orderBy},{reload:false});}
async _replaceWith(ids,{reload=false}={}){const resIds=reload?ids:ids.filter((id)=>!this._cache[id]);if(resIds.length){const records=await this.model._loadRecords({...this.config,resIds,context:this.context,});for(const record of records){this._createRecordDatapoint(record);}}
this.records=ids.map((id)=>this._cache[id]);const updateCommandsToKeep=this._commands.filter((c)=>c[0]===x2ManyCommands.UPDATE&&ids.includes(c[1]));this._commands=[x2ManyCommands.set(ids)].concat(updateCommandsToKeep);this._currentIds=[...ids];this.count=this._currentIds.length;if(this._currentIds.length>this.limit){this._tmpIncreaseLimit=this._currentIds.length-this.limit;const nextLimit=this.limit+this._tmpIncreaseLimit;this.model._updateConfig(this.config,{limit:nextLimit},{reload:false});}}
async _resequence(movedId,targetId){const records=[...this.records];const order=this.orderBy.find((o)=>o.name===this.handleField);const asc=!order||order.asc;const fromIndex=records.findIndex((r)=>r.id===movedId);let toIndex=0;if(targetId!==null){const targetIndex=records.findIndex((r)=>r.id===targetId);toIndex=fromIndex>targetIndex?targetIndex+1:targetIndex;}
const getSequence=(rec)=>rec&&rec.data[this.handleField];const firstIndex=Math.min(fromIndex,toIndex);const lastIndex=Math.max(fromIndex,toIndex)+1;let reorderAll=false;let lastSequence=(asc?-1:1)*Infinity;for(let index=0;index<records.length;index++){const sequence=getSequence(records[index]);if(((index<firstIndex||index>=lastIndex)&&((asc&&lastSequence>=sequence)||(!asc&&lastSequence<=sequence)))||(index>=firstIndex&&index<lastIndex&&lastSequence===sequence)){reorderAll=true;}
lastSequence=sequence;}
const[record]=records.splice(fromIndex,1);records.splice(toIndex,0,record);let toReorder=records;if(!reorderAll){toReorder=toReorder.slice(firstIndex,lastIndex).filter((r)=>r.id!==movedId);if(fromIndex<toIndex){toReorder.push(record);}else{toReorder.unshift(record);}}
if(!asc){toReorder.reverse();}
const sequences=toReorder.map(getSequence);const offset=sequences.length&&Math.min(...sequences);const proms=[];for(const[i,record]of Object.entries(toReorder)){proms.push(record._update({[this.handleField]:offset+Number(i)},{withoutParentUpdate:true}));}
await Promise.all(proms);await this._sort();await this._onUpdate();}
async _sort(currentIds=this.currentIds,orderBy=this.orderBy){const fieldNames=orderBy.map((o)=>o.name);const resIds=this._getResIdsToLoad(currentIds,fieldNames);if(resIds.length){const activeFields=pick(this.activeFields,...fieldNames);const config={...this.config,resIds,activeFields};const records=await this.model._loadRecords(config);for(const record of records){this._createRecordDatapoint(record,{activeFields});}}
const allRecords=currentIds.map((id)=>this._cache[id]);const sortedRecords=allRecords.sort((r1,r2)=>{return compareRecords(r1,r2,orderBy,this.fields);});await this._load({orderBy,nextCurrentIds:sortedRecords.map((r)=>r.resId||r._virtualId),});this._needsReordering=false;}
async _sortBy(fieldName){let orderBy=[...this.orderBy];if(fieldName){if(orderBy.length&&orderBy[0].name===fieldName){if(!this._needsReordering){orderBy[0]={name:orderBy[0].name,asc:!orderBy[0].asc};}}else{orderBy=orderBy.filter((o)=>o.name!==fieldName);orderBy.unshift({name:fieldName,asc:true,});}}
return this._sort(this._currentIds,orderBy);}
_updateContext(context){Object.assign(this.context,context);for(const record of Object.values(this._cache)){record._setEvalContext();}}}
return __exports;});;

/* /web/static/src/model/relational_model/utils.js */
odoo.define('@web/model/relational_model/utils',['@odoo/owl','@web/core/context','@web/core/l10n/dates','@web/core/orm_service','@web/core/py_js/py','@web/core/utils/concurrency','@web/core/utils/objects','@web/core/utils/reactive','@web/core/utils/timing','@web/search/utils/order_by'],function(require){'use strict';let __exports={};const{markup,onWillDestroy,onWillStart,onWillUpdateProps,useComponent}=require("@odoo/owl");const{evalPartialContext,makeContext}=require("@web/core/context");const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{x2ManyCommands}=require("@web/core/orm_service");const{evaluateExpr}=require("@web/core/py_js/py");const{Deferred}=require("@web/core/utils/concurrency");const{omit}=require("@web/core/utils/objects");const{effect}=require("@web/core/utils/reactive");const{batched}=require("@web/core/utils/timing");const{orderByToString}=require("@web/search/utils/order_by");function convertBoolToPyExpr(value){if(value===true||value===false){return value?"True":"False";}
return value;}
__exports.makeActiveField=makeActiveField;function makeActiveField({context,invisible,readonly,required,onChange,forceSave,isHandle,}={}){return{context:context||"{}",invisible:convertBoolToPyExpr(invisible||false),readonly:convertBoolToPyExpr(readonly||false),required:convertBoolToPyExpr(required||false),onChange:onChange||false,forceSave:forceSave||false,isHandle:isHandle||false,};}
const AGGREGATABLE_FIELD_TYPES=["float","integer","monetary"];const FetchRecordError=__exports.FetchRecordError=class FetchRecordError extends Error{constructor(resIds){super(`Can't fetch record(s) ${resIds}. They might have been deleted.`);}}
__exports.addFieldDependencies=addFieldDependencies;function addFieldDependencies(activeFields,fields,fieldDependencies=[]){for(const field of fieldDependencies){if(!("readonly"in field)){field.readonly=true;}
if(field.name in activeFields){patchActiveFields(activeFields[field.name],makeActiveField(field));}else{activeFields[field.name]=makeActiveField(field);}
if(!fields[field.name]){const newField=omit(field,["context","invisible","required","readonly","onChange",]);fields[field.name]=newField;if(newField.type==="selection"&&!Array.isArray(newField.selection)){newField.selection=[];}}}}
function completeActiveField(activeField,extra){if(extra.related){for(const fieldName in extra.related.activeFields){if(fieldName in activeField.related.activeFields){completeActiveField(activeField.related.activeFields[fieldName],extra.related.activeFields[fieldName]);}else{activeField.related.activeFields[fieldName]={...extra.related.activeFields[fieldName],};}}
Object.assign(activeField.related.fields,extra.related.fields);}}
__exports.completeActiveFields=completeActiveFields;function completeActiveFields(activeFields,extraActiveFields){for(const fieldName in extraActiveFields){const extraActiveField={...extraActiveFields[fieldName],invisible:"True",};if(fieldName in activeFields){completeActiveField(activeFields[fieldName],extraActiveField);}else{activeFields[fieldName]=extraActiveField;}}}
__exports.createPropertyActiveField=createPropertyActiveField;function createPropertyActiveField(property){const{type}=property;const activeField=makeActiveField();if(type==="one2many"||type==="many2many"){activeField.related={fields:{id:{name:"id",type:"integer"},display_name:{name:"display_name",type:"char"},},activeFields:{id:makeActiveField({readonly:true}),display_name:makeActiveField(),},};}
return activeField;}
__exports.combineModifiers=combineModifiers;function combineModifiers(mod1,mod2,operator){if(operator==="AND"){if(!mod1||mod1==="False"||!mod2||mod2==="False"){return"False";}
if(mod1==="True"){return mod2;}
if(mod2==="True"){return mod1;}
return"("+mod1+") and ("+mod2+")";}else if(operator==="OR"){if(mod1==="True"||mod2==="True"){return"True";}
if(!mod1||mod1==="False"){return mod2;}
if(!mod2||mod2==="False"){return mod1;}
return"("+mod1+") or ("+mod2+")";}
throw new Error(`Operator provided to "combineModifiers" must be "AND" or "OR", received ${operator}`);}
__exports.patchActiveFields=patchActiveFields;function patchActiveFields(activeField,patch){activeField.invisible=combineModifiers(activeField.invisible,patch.invisible,"AND");activeField.readonly=combineModifiers(activeField.readonly,patch.readonly,"AND");activeField.required=combineModifiers(activeField.required,patch.required,"OR");activeField.onChange=activeField.onChange||patch.onChange;activeField.forceSave=activeField.forceSave||patch.forceSave;activeField.isHandle=activeField.isHandle||patch.isHandle;if(patch.related){const related=activeField.related;for(const fieldName in patch.related.activeFields){if(fieldName in related.activeFields){patchActiveFields(related.activeFields[fieldName],patch.related.activeFields[fieldName]);}else{related.activeFields[fieldName]={...patch.related.activeFields[fieldName]};}}
Object.assign(related.fields,patch.related.fields);}
if("limit"in patch){activeField.limit=patch.limit;}
if(patch.defaultOrderBy){activeField.defaultOrderBy=patch.defaultOrderBy;}}
__exports.extractFieldsFromArchInfo=extractFieldsFromArchInfo;function extractFieldsFromArchInfo({fieldNodes,widgetNodes},fields){const activeFields={};for(const fieldNode of Object.values(fieldNodes)){const fieldName=fieldNode.name;const activeField=makeActiveField({context:fieldNode.context,invisible:combineModifiers(fieldNode.invisible,fieldNode.column_invisible,"OR"),readonly:fieldNode.readonly,required:fieldNode.required,onChange:fieldNode.onChange,forceSave:fieldNode.forceSave,isHandle:fieldNode.isHandle,});if(["one2many","many2many"].includes(fields[fieldName].type)){activeField.related={activeFields:{},fields:{},};if(fieldNode.views){const viewDescr=fieldNode.views[fieldNode.viewMode];if(viewDescr){activeField.related=extractFieldsFromArchInfo(viewDescr,viewDescr.fields);activeField.limit=viewDescr.limit;activeField.defaultOrderBy=viewDescr.defaultOrder;if(fieldNode.views.form){const formArchInfo=extractFieldsFromArchInfo(fieldNode.views.form,fieldNode.views.form.fields);completeActiveFields(activeField.related.activeFields,formArchInfo.activeFields);Object.assign(activeField.related.fields,formArchInfo.fields);}
if(fieldNode.viewMode!=="default"&&fieldNode.views.default){const defaultArchInfo=extractFieldsFromArchInfo(fieldNode.views.default,fieldNode.views.default.fields);for(const fieldName in defaultArchInfo.activeFields){if(fieldName in activeField.related.activeFields){patchActiveFields(activeField.related.activeFields[fieldName],defaultArchInfo.activeFields[fieldName]);}else{activeField.related.activeFields[fieldName]={...defaultArchInfo.activeFields[fieldName],};}}
activeField.related.fields=Object.assign({},defaultArchInfo.fields,activeField.related.fields);}}}
if(fieldNode.field?.useSubView){activeField.required="False";}}
if(fieldName in activeFields){patchActiveFields(activeFields[fieldName],activeField);}else{activeFields[fieldName]=activeField;}
if(fieldNode.field){let fieldDependencies=fieldNode.field.fieldDependencies;if(typeof fieldDependencies==="function"){fieldDependencies=fieldDependencies(fieldNode);}
addFieldDependencies(activeFields,fields,fieldDependencies);}}
for(const widgetInfo of Object.values(widgetNodes||{})){let fieldDependencies=widgetInfo.widget.fieldDependencies;if(typeof fieldDependencies==="function"){fieldDependencies=fieldDependencies(widgetInfo);}
addFieldDependencies(activeFields,fields,fieldDependencies);}
return{activeFields,fields};}
__exports.getFieldContext=getFieldContext;function getFieldContext(record,fieldName,rawContext=record.activeFields[fieldName].context){const context={};for(const key in record.context){if(!key.startsWith("default_")&&!key.startsWith("search_default_")&&!key.endsWith("_view_ref")){context[key]=record.context[key];}}
return{...context,...record.fields[fieldName].context,...makeContext([rawContext],record.evalContext),};}
__exports.getBasicEvalContext=getBasicEvalContext;function getBasicEvalContext(config){const{uid,allowed_company_ids}=config.context;return{context:config.context,uid,allowed_company_ids,active_id:config.resId||false,active_ids:config.resId?[config.resId]:[],active_model:config.resModel,current_company_id:config.currentCompanyId,};}
__exports.getFieldsSpec=getFieldsSpec;function getFieldsSpec(activeFields,fields,evalContext,{parentActiveFields,withInvisible}={}){const fieldsSpec={};const properties=[];for(const fieldName in activeFields){if(fields[fieldName].relatedPropertyField){continue;}
const{related,limit,defaultOrderBy,invisible}=activeFields[fieldName];fieldsSpec[fieldName]={};if(related&&((invisible!=="True"&&invisible!=="1")||withInvisible)){fieldsSpec[fieldName].fields=getFieldsSpec(related.activeFields,related.fields,evalContext,{parentActiveFields:activeFields,withInvisible});fieldsSpec[fieldName].limit=limit;if(defaultOrderBy){fieldsSpec[fieldName].order=orderByToString(defaultOrderBy);}}
if(fields[fieldName].type==="properties"){properties.push(fieldName);}
if(fields[fieldName].type==="many2one"){fieldsSpec[fieldName].fields={};if(invisible!=="True"&&invisible!=="1"){fieldsSpec[fieldName].fields.display_name={};}}
if(["many2one","one2many","many2many"].includes(fields[fieldName].type)){let context=activeFields[fieldName].context;if(!context||context==="{}"){context=fields[fieldName].context||{};}else{context=evalPartialContext(context,evalContext);}
if(Object.keys(context).length>0){fieldsSpec[fieldName].context=context;}}
if(fields[fieldName].type==="reference"){fieldsSpec[fieldName].fields={display_name:{}};}}
for(const fieldName of properties){const fieldSpec=fieldsSpec[fields[fieldName].definition_record];if(fieldSpec){if(!fieldSpec.fields){fieldSpec.fields={};}
fieldSpec.fields.display_name={};}}
return fieldsSpec;}
let nextId=0;__exports.getId=getId;function getId(prefix=""){return`${prefix}_${++nextId}`;}
__exports.parseServerValue=parseServerValue;function parseServerValue(field,value){switch(field.type){case"char":case"text":{return value||"";}
case"html":{return markup(value||"");}
case"date":{return value?deserializeDate(value):false;}
case"datetime":{return value?deserializeDateTime(value):false;}
case"selection":{if(value===false){const hasKey0=field.selection.find((option)=>option[0]===0);return hasKey0?0:value;}
return value;}
case"reference":{if(value===false){return false;}
return{resId:value.id.id,resModel:value.id.model,displayName:value.display_name,};}
case"many2one":{if(Array.isArray(value)){return value;}
return value?[value.id,value.display_name]:false;}
case"properties":{return value?value.map((property)=>({...property,value:parseServerValue(property,property.value??false),})):[];}}
return value;}
__exports.extractInfoFromGroupData=extractInfoFromGroupData;function extractInfoFromGroupData(groupData,groupBy,fields){const info={};const groupByField=fields[groupBy[0].split(":")[0]];info.count=groupData.__count||groupData[`${groupByField.name}_count`];info.length=info.count;info.range=groupData.__range?groupData.__range[groupBy[0]]:null;info.domain=groupData.__domain;info.rawValue=groupData[groupBy[0]];info.value=getValueFromGroupData(groupByField,info.rawValue,info.range);info.displayName=getDisplayNameFromGroupData(groupByField,info.rawValue);info.serverValue=getGroupServerValue(groupByField,info.value);info.aggregates=getAggregatesFromGroupData(groupData,fields);return info;}
function getAggregatesFromGroupData(groupData,fields){const aggregates={};for(const[key,value]of Object.entries(groupData)){if(key in fields&&AGGREGATABLE_FIELD_TYPES.includes(fields[key].type)){aggregates[key]=value;}}
return aggregates;}
function getDisplayNameFromGroupData(field,rawValue){if(field.type==="selection"){return Object.fromEntries(field.selection)[rawValue];}
if(["many2one","many2many","tags"].includes(field.type)){return rawValue?rawValue[1]:false;}
return rawValue;}
__exports.getGroupServerValue=getGroupServerValue;function getGroupServerValue(field,value){switch(field.type){case"many2many":{return value?[value]:false;}
case"datetime":{return value?serializeDateTime(value):false;}
case"date":{return value?serializeDate(value):false;}
default:{return value||false;}}}
function getValueFromGroupData(field,rawValue,range){if(["date","datetime"].includes(field.type)){if(!range){return false;}
const dateValue=parseServerValue(field,range.to);return dateValue.minus({[field.type==="date"?"day":"second"]:1,});}
const value=parseServerValue(field,rawValue);if(["many2one","many2many"].includes(field.type)){return value?value[0]:false;}
return value;}
__exports.fromUnityToServerValues=fromUnityToServerValues;function fromUnityToServerValues(values,fields,activeFields,{withReadonly,context}={}){const{CREATE,UPDATE}=x2ManyCommands;const serverValues={};for(const fieldName in values){let value=values[fieldName];const field=fields[fieldName];const activeField=activeFields[fieldName];if(!withReadonly){if(field.readonly){continue;}
try{if(evaluateExpr(activeField.readonly,context)){continue;}}catch{}}
switch(fields[fieldName].type){case"one2many":case"many2many":value=value.map((c)=>{if(c[0]===CREATE||c[0]===UPDATE){const _fields=activeField.related.fields;const _activeFields=activeField.related.activeFields;return[c[0],c[1],fromUnityToServerValues(c[2],_fields,_activeFields,{withReadonly}),];}
return[c[0],c[1]];});break;case"many2one":value=value?value.id:false;break;}
serverValues[fieldName]=value;}
return serverValues;}
__exports.isRelational=isRelational;function isRelational(field){return field&&["one2many","many2many","many2one"].includes(field.type);}
__exports.useRecordObserver=useRecordObserver;function useRecordObserver(callback){const component=useComponent();let alive=true;let props=component.props;const fct=()=>{const def=new Deferred();let firstCall=true;effect((record)=>{if(firstCall){firstCall=false;return Promise.resolve(callback(record,props)).then(def.resolve).catch(def.reject);}else{return batched((record)=>{if(!alive){return;}
return Promise.resolve(callback(record,props)).then(def.resolve).catch(def.reject);},()=>new Promise((resolve)=>window.requestAnimationFrame(resolve)))(record);}},[props.record]);return def;};onWillDestroy(()=>{alive=false;});onWillStart(()=>fct());onWillUpdateProps((nextProps)=>{const currentRecordId=props.record.id;props=nextProps;if(props.record.id!==currentRecordId){return fct();}});}
return __exports;});;

/* /web/static/src/model/sample_server.js */
odoo.define('@web/model/sample_server',['@web/core/l10n/dates','@web/core/orm_service','@web/core/registry','@web/core/utils/arrays','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{deserializeDate,deserializeDateTime,parseDate,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{ORM}=require("@web/core/orm_service");const{registry}=require("@web/core/registry");const{cartesian,sortBy:arraySortBy}=require("@web/core/utils/arrays");const{parseServerValue}=require("@web/model/relational_model/utils");class UnimplementedRouteError extends Error{}
let searchReadNumber=0;function getSampleFromId(id,sampleTexts){return sampleTexts[(id-1)%sampleTexts.length];}
function serializeGroupDateValue(range,field){if(!range){return false;}
let dateValue=parseServerValue(field,range.to);dateValue=dateValue.minus({[field.type==="date"?"day":"second"]:1,});return field.type==="date"?serializeDate(dateValue):serializeDateTime(dateValue);}
function fieldNameRegex(...terms){return new RegExp(`\\b((\\w+)?_)?(${terms.join("|")})(_(\\w+)?)?\\b`);}
const MEASURE_SPEC_REGEX=/(?<measure>\w+):(?<aggregateFunction>\w+)(\((?<fieldName>\w+)\))?/;const DESCRIPTION_REGEX=fieldNameRegex("description","label","title","subject","message");const EMAIL_REGEX=fieldNameRegex("email");const PHONE_REGEX=fieldNameRegex("phone");const URL_REGEX=fieldNameRegex("url");const SampleServer=__exports.SampleServer=class SampleServer{constructor(modelName,fields){this.mainModel=modelName;this.data={};this.data[modelName]={fields,records:[],};for(const fieldName in fields){const field=fields[fieldName];if(["many2one","one2many","many2many"].includes(field.type)){this.data[field.relation]=this.data[field.relation]||{fields:{display_name:{type:"char"},id:{type:"integer"},color:{type:"integer"},},records:[],};}}
this.existingGroups=null;this.populated=false;this.existingGroupsPopulated=false;}
mockRpc(params){if(!(params.model in this.data)){throw new Error(`SampleServer: unknown model ${params.model}`);}
this._populateModels();switch(params.method||params.route){case"web_search_read":return this._mockWebSearchReadUnity(params);case"web_read_group":return this._mockWebReadGroup(params);case"read_group":return this._mockReadGroup(params);case"read_progress_bar":return this._mockReadProgressBar(params);case"read":return this._mockRead(params);}
const method=params.method||params.route;const mockFunction=registry.category("sample_server").get(`${params.model}/${method}`,null)||registry.category("sample_server").get(method,null);if(mockFunction){return mockFunction.call(this,params);}
console.log(`SampleServer: unimplemented route "${params.method || params.route}"`);throw new SampleServer.UnimplementedRouteError();}
setExistingGroups(groups){this.existingGroups=groups;}
_aggregateFields(measures,records){const values={};for(const{fieldName,type,aggregateFunction}of measures){if(["float","integer","monetary"].includes(type)){if(aggregateFunction==="array_agg"){values[fieldName]=(records||[]).map((r)=>r[fieldName]);}else if(records.length){let value=0;for(const record of records){value+=record[fieldName];}
values[fieldName]=this._sanitizeNumber(value);}else{values[fieldName]=null;}}
if(type==="many2one"){const ids=new Set(records.map((r)=>r[fieldName]));values.fieldName=ids.size||null;}}
return values;}
_formatValue(value,options){if(!value){return false;}
const{type,interval,relation}=options;if(["date","datetime"].includes(type)){const fmt=SampleServer.FORMATS[interval];return parseDate(value).toFormat(fmt);}else if(["many2one","many2many"].includes(type)){const rec=this.data[relation].records.find(({id})=>id===value);return[value,rec.display_name];}else{return value;}}
_generateFieldValue(modelName,fieldName,id){const field=this.data[modelName].fields[fieldName];switch(field.type){case"boolean":return fieldName==="active"?true:this._getRandomBool();case"char":case"text":if(["display_name","name"].includes(fieldName)){if(SampleServer.PEOPLE_MODELS.includes(modelName)){return getSampleFromId(id,SampleServer.SAMPLE_PEOPLE);}else if(modelName==="res.country"){return getSampleFromId(id,SampleServer.SAMPLE_COUNTRIES);}}
if(fieldName==="display_name"){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(["name","reference"].includes(fieldName)){return`REF${String(id).padStart(4, "0")}`;}else if(DESCRIPTION_REGEX.test(fieldName)){return getSampleFromId(id,SampleServer.SAMPLE_TEXTS);}else if(EMAIL_REGEX.test(fieldName)){const emailName=getSampleFromId(id,SampleServer.SAMPLE_PEOPLE).replace(/ /,".").toLowerCase();return`${emailName}@sample.demo`;}else if(PHONE_REGEX.test(fieldName)){return`+1 555 754 ${String(id).padStart(4, "0")}`;}else if(URL_REGEX.test(fieldName)){return`http://sample${id}.com`;}
return false;case"date":case"datetime":{const datetime=this._getRandomDate();return field.type==="date"?serializeDate(datetime):serializeDateTime(datetime);}
case"float":return this._getRandomFloat(SampleServer.MAX_FLOAT);case"integer":{let max=SampleServer.MAX_INTEGER;if(fieldName.includes("color")){max=this._getRandomBool()?SampleServer.MAX_COLOR_INT:0;}
return this._getRandomInt(max);}
case"monetary":return this._getRandomInt(SampleServer.MAX_MONETARY);case"many2one":if(field.relation==="res.currency"){return 1;}
if(field.relation==="ir.attachment"){return false;}
return this._getRandomSubRecordId();case"one2many":case"many2many":{const ids=[this._getRandomSubRecordId(),this._getRandomSubRecordId()];return[...new Set(ids)];}
case"selection":{if(fieldName==="activity_exception_decoration"){return false;}
if(field.selection.length>0){return this._getRandomArrayEl(field.selection)[0];}
return false;}
default:return false;}}
_getRandomArrayEl(array){return array[Math.floor(Math.random()*array.length)];}
_getRandomBool(){return Math.random()<0.5;}
_getRandomDate(){const delta=Math.floor((Math.random()-Math.random())*SampleServer.DATE_DELTA);return luxon.DateTime.local().plus({hours:delta});}
_getRandomFloat(max){return this._sanitizeNumber(Math.random()*max);}
_getRandomInt(max){return Math.floor(Math.random()*max);}
_getRandomSubRecordId(){return Math.floor(Math.random()*SampleServer.SUB_RECORDSET_SIZE)+1;}
_mockRead(params){const model=this.data[params.model];const ids=params.args[0];const fieldNames=params.args[1];const records=[];for(const r of model.records){if(!ids.includes(r.id)){continue;}
const record={id:r.id};for(const fieldName of fieldNames){const field=model.fields[fieldName];if(!field){record[fieldName]=false;}else if(field.type==="many2one"){const relModel=this.data[field.relation];const relRecord=relModel.records.find((relR)=>r[fieldName]===relR.id);record[fieldName]=relRecord?[relRecord.id,relRecord.display_name]:false;}else{record[fieldName]=r[fieldName];}}
records.push(record);}
return records;}
_mockReadGroup(params){const lazy="lazy"in params?params.lazy:true;const model=params.model;const fields=this.data[model].fields;const records=this.data[model].records;const normalizedGroupBys=[];let groupBy=[];if(params.groupBy.length){groupBy=lazy?[params.groupBy[0]]:params.groupBy;}
for(const groupBySpec of groupBy){let[fieldName,interval]=groupBySpec.split(":");interval=interval||"month";const{type,relation}=fields[fieldName];if(type){const gb={fieldName,type,interval,relation,alias:groupBySpec};normalizedGroupBys.push(gb);}}
const groupsFromRecord=(record)=>{const values=[];for(const gb of normalizedGroupBys){const{fieldName,type}=gb;let fieldVals;if(["date","datetime"].includes(type)){fieldVals=[this._formatValue(record[fieldName],gb)];}else if(type==="many2many"){fieldVals=record[fieldName].length?record[fieldName]:[false];}else{fieldVals=[record[fieldName]];}
values.push(fieldVals.map((val)=>({[fieldName]:val})));}
const cart=cartesian(...values);return cart.map((tuple)=>{if(!Array.isArray(tuple)){tuple=[tuple];}
return Object.assign({},...tuple);});};const groups={};for(const record of records){const recordGroups=groupsFromRecord(record);for(const group of recordGroups){const groupId=JSON.stringify(group);if(!(groupId in groups)){groups[groupId]=[];}
groups[groupId].push(record);}}
const measures=[];for(const measureSpec of params.fields||Object.keys(fields)){const matches=measureSpec.match(MEASURE_SPEC_REGEX);let{fieldName,aggregateFunction,measure}=(matches&&matches.groups)||{};if(!aggregateFunction&&fieldName in fields&&fields[fieldName].group_operator){aggregateFunction=fields[fieldName].group_operator;measure=fieldName;}
if(!fieldName&&!measure){continue;}
const fName=fieldName||measure;const{type}=fields[fName];if(!params.groupBy.includes(fName)&&type&&(type!=="many2one"||aggregateFunction!=="count_distinct")){measures.push({fieldName:fName,type,aggregateFunction});}}
let result=[];for(const id in groups){const records=groups[id];const group={__domain:[]};let countKey=`__count`;if(normalizedGroupBys.length&&lazy){countKey=`${normalizedGroupBys[0].fieldName}_count`;}
group[countKey]=records.length;const firstElem=records[0];const parsedId=JSON.parse(id);for(const gb of normalizedGroupBys){const{alias,fieldName,type}=gb;if(type==="many2many"){group[alias]=this._formatValue(parsedId[fieldName],gb);}else{group[alias]=this._formatValue(firstElem[fieldName],gb);if(["date","datetime"].includes(type)){group.__range={};const val=firstElem[fieldName];if(val){const deserialize=type==="date"?deserializeDate:deserializeDateTime;const serialize=type==="date"?serializeDate:serializeDateTime;const from=deserialize(val).startOf(gb.interval);const to=SampleServer.INTERVALS[gb.interval](from);group.__range[alias]={from:serialize(from),to:serialize(to)};}else{group.__range[alias]=false;}}}}
Object.assign(group,this._aggregateFields(measures,records));result.push(group);}
if(normalizedGroupBys.length>0){const{alias,interval,type}=normalizedGroupBys[0];result=arraySortBy(result,(group)=>{const val=group[alias];if(["date","datetime"].includes(type)){return parseDate(val,{format:SampleServer.FORMATS[interval]});}
return val;});}
return result;}
_mockReadProgressBar(params){const groupBy=params.group_by.split(":")[0];const progress_bar=params.progress_bar;const groupByField=this.data[params.model].fields[groupBy];const data={};for(const record of this.data[params.model].records){let groupByValue=record[groupBy];if(groupByField.type==="many2one"){const relatedRecords=this.data[groupByField.relation].records;const relatedRecord=relatedRecords.find((r)=>r.id===groupByValue);groupByValue=relatedRecord.display_name;}
if(!(groupByValue in data)){if(groupByValue===true){groupByValue="True";}else if(groupByValue===false){groupByValue="False";}}
if(!(groupByValue in data)){data[groupByValue]={};for(const key in progress_bar.colors){data[groupByValue][key]=0;}}
const fieldValue=record[progress_bar.field];if(fieldValue in data[groupByValue]){data[groupByValue][fieldValue]++;}}
return data;}
_mockWebSearchReadUnity(params){const fields=Object.keys(params.specification);let result;if(this.existingGroups){const groups=this.existingGroups;const group=groups[searchReadNumber++%groups.length];result={records:group.__data.records,length:group.__data.records.length,};}else{const model=this.data[params.model];const rawRecords=model.records.slice(0,SampleServer.SEARCH_READ_LIMIT);const records=this._mockRead({model:params.model,args:[rawRecords.map((r)=>r.id),fields],});result={records,length:records.length};}
for(const fieldName in params.specification){const field=this.data[params.model].fields[fieldName];if(field.type==="many2one"){for(const record of result.records){record[fieldName]=record[fieldName]?{id:record[fieldName][0],display_name:record[fieldName][1],}:false;}}
if(field.type==="one2many"||field.type==="many2many"){const relFields=Object.keys(params.specification[fieldName].fields||{});if(relFields.length){const relIds=result.records.map((r)=>r[fieldName]).flat();const relRecords={};const _relRecords=this._mockRead({model:field.relation,args:[relIds,relFields],});for(const relRecord of _relRecords){relRecords[relRecord.id]=relRecord;}
for(const record of result.records){record[fieldName]=record[fieldName].map((resId)=>relRecords[resId]);}}}}
return result;}
_mockWebReadGroup(params){let groups;if(this.existingGroups){this._tweakExistingGroups(params);groups=this.existingGroups;}else{groups=this._mockReadGroup(params);}
return{groups,length:groups.length,};}
_populateExistingGroups(params){const groups=this.existingGroups;const groupBy=params.groupBy[0].split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const groupedByM2O=groupByField.type==="many2one";if(groupedByM2O){this.data[groupByField.relation].records=groups.map((g)=>{return{id:g[groupBy][0],display_name:g[groupBy][1]};});}
for(const r of this.data[params.model].records){const group=getSampleFromId(r.id,groups);if(["date","datetime"].includes(groupByField.type)){r[groupBy]=serializeGroupDateValue(group.__range[params.groupBy[0]],groupByField);}else if(groupByField.type==="many2one"){r[groupBy]=group[params.groupBy[0]]?group[params.groupBy[0]][0]:false;}else{r[groupBy]=group[params.groupBy[0]];}}}
_populateModels(){if(!this.populated){for(const modelName in this.data){const model=this.data[modelName];const fieldNames=Object.keys(model.fields).filter((f)=>f!=="id");const size=modelName===this.mainModel?SampleServer.MAIN_RECORDSET_SIZE:SampleServer.SUB_RECORDSET_SIZE;for(let id=1;id<=size;id++){const record={id};for(const fieldName of fieldNames){record[fieldName]=this._generateFieldValue(modelName,fieldName,id);}
model.records.push(record);}}
this.populated=true;}}
_sanitizeNumber(value){return parseFloat(value.toFixed(SampleServer.FLOAT_PRECISION));}
_tweakExistingGroups(params){const groups=this.existingGroups;this._populateExistingGroups(params);const fullGroupBy=params.groupBy[0];const groupBy=fullGroupBy.split(":")[0];const groupByField=this.data[params.model].fields[groupBy];const records=this.data[params.model].records;for(const g of groups){const recordsInGroup=records.filter((r)=>{if(["date","datetime"].includes(groupByField.type)){return(r[groupBy]===serializeGroupDateValue(g.__range[fullGroupBy],groupByField));}else if(groupByField.type==="many2one"){return(!r[groupBy]&&!g[fullGroupBy])||r[groupBy]===g[fullGroupBy][0];}
return r[groupBy]===g[fullGroupBy];});for(const field of params.fields){const fieldType=this.data[params.model].fields[field].type;if(["integer, float","monetary"].includes(fieldType)){g[field]=recordsInGroup.reduce((acc,r)=>acc+r[field],0);}}
g[`${groupBy}_count`]=recordsInGroup.length;g.__data={records:this._mockRead({model:params.model,args:[recordsInGroup.map((r)=>r.id),params.fields],}),length:recordsInGroup.length,};}}}
SampleServer.FORMATS={day:"yyyy-MM-dd",week:"'W'WW kkkk",month:"MMMM yyyy",quarter:"'Q'q yyyy",year:"y",};SampleServer.INTERVALS={day:(dt)=>dt.plus({days:1}),week:(dt)=>dt.plus({weeks:1}),month:(dt)=>dt.plus({months:1}),quarter:(dt)=>dt.plus({months:3}),year:(dt)=>dt.plus({years:1}),};SampleServer.DISPLAY_FORMATS=Object.assign({},SampleServer.FORMATS,{day:"dd MMM yyyy"});SampleServer.MAIN_RECORDSET_SIZE=16;SampleServer.SUB_RECORDSET_SIZE=5;SampleServer.SEARCH_READ_LIMIT=10;SampleServer.MAX_FLOAT=100;SampleServer.MAX_INTEGER=50;SampleServer.MAX_COLOR_INT=7;SampleServer.MAX_MONETARY=100000;SampleServer.DATE_DELTA=24*60;SampleServer.FLOAT_PRECISION=2;SampleServer.SAMPLE_COUNTRIES=["Belgium","France","Portugal","Singapore","Australia"];SampleServer.SAMPLE_PEOPLE=["John Miller","Henry Campbell","Carrie Helle","Wendi Baltz","Thomas Passot",];SampleServer.SAMPLE_TEXTS=["Laoreet id","Volutpat blandit","Integer vitae","Viverra nam","In massa",];SampleServer.PEOPLE_MODELS=["res.users","res.partner","hr.employee","mail.followers","mailing.contact",];SampleServer.UnimplementedRouteError=UnimplementedRouteError;__exports.buildSampleORM=buildSampleORM;function buildSampleORM(resModel,fields,user){const sampleServer=new SampleServer(resModel,fields);const fakeRPC=async(_,params)=>{const{args,kwargs,method,model}=params;const{groupby:groupBy}=kwargs;return sampleServer.mockRpc({method,model,args,...kwargs,groupBy});};const sampleORM=new ORM(fakeRPC,user);sampleORM.isSample=true;sampleORM.setGroups=(groups)=>sampleServer.setExistingGroups(groups);return sampleORM;}
return __exports;});;

/* /web/static/src/search/action_menus/action_menus.js */
odoo.define('@web/search/action_menus/action_menus',['@web/core/browser/browser','@web/core/context','@web/session','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{session}=require("@web/session");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const STATIC_ACTIONS_GROUP_NUMBER=__exports.STATIC_ACTIONS_GROUP_NUMBER=1;const ACTIONS_GROUP_NUMBER=__exports.ACTIONS_GROUP_NUMBER=100;const ActionMenus=__exports.ActionMenus=class ActionMenus extends Component{setup(){this.orm=useService("orm");this.actionService=useService("action");onWillStart(async()=>{this.actionItems=await this.getActionItems(this.props);});onWillUpdateProps(async(nextProps)=>{this.actionItems=await this.getActionItems(nextProps);});}
get printItems(){const printActions=this.props.items.print||[];return printActions.map((action)=>({action,description:action.name,key:action.id,}));}
async getActionItems(props){return(props.items.action||[]).map((action)=>{if(action.callback){return Object.assign({key:`action-${action.description}`,groupNumber:ACTIONS_GROUP_NUMBER},action);}else{return{action,description:action.name,key:action.id,groupNumber:action.groupNumber||ACTIONS_GROUP_NUMBER,};}});}
async executeAction(action){let activeIds=this.props.getActiveIds();if(this.props.isDomainSelected){activeIds=await this.orm.search(this.props.resModel,this.props.domain,{limit:session.active_ids_limit,context:this.props.context,});}
const activeIdsContext={active_id:activeIds[0],active_ids:activeIds,active_model:this.props.resModel,};if(this.props.domain){activeIdsContext.active_domain=this.props.domain;}
const context=makeContext([this.props.context,activeIdsContext]);return this.actionService.doAction(action.id,{additionalContext:context,onClose:this.props.onActionExecuted,});}
async onItemSelected(item){if(!(await this.props.shouldExecuteAction(item))){return;}
if(item.callback){item.callback([item]);}else if(item.action){this.executeAction(item.action);}else if(item.url){browser.location=item.url;}}}
ActionMenus.components={Dropdown,DropdownItem,};ActionMenus.props={getActiveIds:Function,context:Object,resModel:String,domain:{type:Array,optional:true},isDomainSelected:{type:Boolean,optional:true},items:{type:Object,shape:{action:{type:Array,optional:true},print:{type:Array,optional:true},},},onActionExecuted:{type:Function,optional:true},shouldExecuteAction:{type:Function,optional:true},};ActionMenus.defaultProps={onActionExecuted:()=>{},shouldExecuteAction:()=>true,};ActionMenus.template="web.ActionMenus";return __exports;});;

/* /web/static/src/search/cog_menu/cog_menu.js */
odoo.define('@web/search/cog_menu/cog_menu',['@web/core/registry','@web/core/dropdown/dropdown','@web/search/action_menus/action_menus','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Dropdown}=require("@web/core/dropdown/dropdown");const{ActionMenus}=require("@web/search/action_menus/action_menus");const{onWillStart,onWillUpdateProps}=require("@odoo/owl");const cogMenuRegistry=registry.category("cogMenu");const CogMenu=__exports.CogMenu=class CogMenu extends ActionMenus{static template="web.CogMenu";static components={...ActionMenus.components,Dropdown,};static props={...ActionMenus.props,getActiveIds:{type:ActionMenus.props.getActiveIds,optional:true},context:{type:ActionMenus.props.context,optional:true},resModel:{type:ActionMenus.props.resModel,optional:true},items:{...ActionMenus.props.items,optional:true},};static defaultProps={...ActionMenus.defaultProps,items:{},};setup(){super.setup();onWillStart(async()=>{this.registryItems=await this._registryItems();});onWillUpdateProps(async()=>{this.registryItems=await this._registryItems();});}
get hasItems(){return this.cogItems.length||this.printItems.length;}
async _registryItems(){const items=[];for(const item of cogMenuRegistry.getAll()){if("isDisplayed"in item?await item.isDisplayed(this.env):true){items.push({Component:item.Component,groupNumber:item.groupNumber,key:item.Component.name,});}}
return items;}
get cogItems(){return[...this.actionItems,...this.registryItems].sort((item1,item2)=>{const grp=(item1.groupNumber||0)-(item2.groupNumber||0);if(grp!==0){return grp;}
return(item1.sequence||0)-(item2.sequence||0);});}}
return __exports;});;

/* /web/static/src/search/control_panel/control_panel.js */
odoo.define('@web/search/control_panel/control_panel',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/hotkeys/hotkey_service','@web/core/pager/pager','@web/core/utils/hooks','@web/search/search_bar/search_bar','@web/core/dropdown/dropdown','@web/core/commands/command_hook','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{useService}=require("@web/core/utils/hooks");const{SearchBar}=require("@web/search/search_bar/search_bar");const{Dropdown}=require("@web/core/dropdown/dropdown");const{useCommand}=require("@web/core/commands/command_hook");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,useState,onMounted,useExternalListener,useRef,useEffect}=require("@odoo/owl");const STICKY_CLASS="o_mobile_sticky";const ControlPanel=__exports.ControlPanel=class ControlPanel extends Component{setup(){this.actionService=useService("action");this.pagerProps=this.env.config.pagerProps?useState(this.env.config.pagerProps):undefined;this.breadcrumbs=useState(this.env.config.breadcrumbs);this.root=useRef("root");this.state=useState({showSearchBar:false,showMobileSearch:false,showViewSwitcher:false,});this.onScrollThrottledBound=this.onScrollThrottled.bind(this);const{viewSwitcherEntries,viewType}=this.env.config;for(const view of viewSwitcherEntries||[]){useCommand(_t("Show %s view",view.name),()=>this.onViewClicked(view.type),{category:"view_switcher",isAvailable:()=>view.type!==viewType,});}
useExternalListener(window,"click",this.onWindowClick);useEffect(()=>{if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
const scrollingEl=this.getScrollingElement();scrollingEl.addEventListener("scroll",this.onScrollThrottledBound);this.root.el.style.top="0px";return()=>{scrollingEl.removeEventListener("scroll",this.onScrollThrottledBound);};});onMounted(()=>{if(!this.env.isSmall||("adaptToScroll"in this.display&&!this.display.adaptToScroll)){return;}
this.oldScrollTop=0;this.lastScrollTop=0;this.initialScrollTop=this.getScrollingElement().scrollTop;});this.mainButtons=useRef("mainButtons");useEffect(()=>{const dropdownButtons=this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.dropdown-menu button");if(!dropdownButtons.length){this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.dropdown-menu, .o_control_panel_collapsed_create.dropdown-toggle").forEach((el)=>el.classList.add("d-none"));this.mainButtons.el.querySelectorAll(".o_control_panel_collapsed_create.btn-group").forEach((el)=>el.classList.remove("btn-group"));return;}
for(const button of dropdownButtons){for(const cl of Array.from(button.classList)){button.classList.toggle(cl,!cl.startsWith("btn-"));}
button.classList.add("dropdown-item","btn","btn-link");}});}
getScrollingElement(){return this.root.el.parentElement;}
resetSearchState(){Object.assign(this.state,{showSearchBar:false,showMobileSearch:false,showViewSwitcher:false,});}
get display(){return{layoutActions:true,...this.props.display,};}
onBreadcrumbClicked(jsId){this.actionService.restore(jsId);}
onScrollThrottled(){if(this.isScrolling){return;}
this.isScrolling=true;browser.requestAnimationFrame(()=>(this.isScrolling=false));const scrollTop=this.getScrollingElement().scrollTop;const delta=Math.round(scrollTop-this.oldScrollTop);if(scrollTop>this.initialScrollTop){this.root.el.classList.add(STICKY_CLASS);if(delta<0){this.lastScrollTop=Math.min(0,this.lastScrollTop-delta);}else{this.lastScrollTop=Math.max(-this.root.el.offsetHeight,-this.root.el.offsetTop-delta);}
this.root.el.style.top=`${this.lastScrollTop}px`;}else{this.root.el.classList.remove(STICKY_CLASS);this.lastScrollTop=0;}
this.oldScrollTop=scrollTop;}
onViewClicked(viewType){this.resetSearchState();this.actionService.switchView(viewType);}
onWindowClick(ev){if(this.state.showViewSwitcher&&!ev.target.closest(".o_cp_switch_buttons")){this.state.showViewSwitcher=false;}}
onMainButtonsKeydown(ev){const hotkey=getActiveHotkey(ev);if(hotkey==="arrowdown"){this.env.searchModel.trigger("focus-view");ev.preventDefault();ev.stopPropagation();}}}
ControlPanel.components={Pager,SearchBar,Dropdown,DropdownItem,};ControlPanel.template="web.ControlPanel";ControlPanel.props={display:{type:Object,optional:true},slots:{type:Object,optional:true},};return __exports;});;

/* /web/static/src/search/custom_favorite_item/custom_favorite_item.js */
odoo.define('@web/search/custom_favorite_item/custom_favorite_item',['@web/core/l10n/translation','@web/core/dropdown/accordion_item','@web/core/checkbox/checkbox','@web/core/registry','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AccordionItem}=require("@web/core/dropdown/accordion_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component,useRef,useState}=require("@odoo/owl");const favoriteMenuRegistry=registry.category("favoriteMenu");const CustomFavoriteItem=__exports.CustomFavoriteItem=class CustomFavoriteItem extends Component{setup(){this.notificationService=useService("notification");this.descriptionRef=useRef("description");this.state=useState({description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
saveFavorite(ev){if(!this.state.description){this.notificationService.add(_t("A name for your favorite filter is required."),{type:"danger",});ev.stopPropagation();return this.descriptionRef.el.focus();}
const favorites=this.env.searchModel.getSearchItems((s)=>s.type==="favorite"&&s.description===this.state.description);if(favorites.length){this.notificationService.add(_t("A filter with same name already exists."),{type:"danger",});ev.stopPropagation();return this.descriptionRef.el.focus();}
const{description,isDefault,isShared}=this.state;this.env.searchModel.createNewFavorite({description,isDefault,isShared});Object.assign(this.state,{description:this.env.config.getDisplayName(),isDefault:false,isShared:false,});}
onDefaultCheckboxChange(checked){this.state.isDefault=checked;if(checked){this.state.isShared=false;}}
onShareCheckboxChange(checked){this.state.isShared=checked;if(checked){this.state.isDefault=false;}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();this.saveFavorite(ev);break;case"Escape":ev.preventDefault();ev.target.blur();break;}}}
CustomFavoriteItem.template="web.CustomFavoriteItem";CustomFavoriteItem.components={CheckBox,AccordionItem};CustomFavoriteItem.props={};favoriteMenuRegistry.add("custom-favorite-item",{Component:CustomFavoriteItem,groupNumber:3},{sequence:0});return __exports;});;

/* /web/static/src/search/custom_group_by_item/custom_group_by_item.js */
odoo.define('@web/search/custom_group_by_item/custom_group_by_item',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const CustomGroupByItem=__exports.CustomGroupByItem=class CustomGroupByItem extends Component{get choices(){return this.props.fields.map((f)=>({label:f.string,value:f.name}));}
onSelected(ev){if(ev.target.value){this.props.onAddCustomGroup(ev.target.value);ev.target.value="";}}}
CustomGroupByItem.template="web.CustomGroupByItem";CustomGroupByItem.props={fields:Array,onAddCustomGroup:Function,};return __exports;});;

/* /web/static/src/search/layout.js */
odoo.define('@web/search/layout',['@odoo/owl','@web/search/control_panel/control_panel','@web/search/search_panel/search_panel'],function(require){'use strict';let __exports={};const{Component,useRef}=require("@odoo/owl");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{SearchPanel}=require("@web/search/search_panel/search_panel");__exports.extractLayoutComponents=extractLayoutComponents;function extractLayoutComponents(params){const layoutComponents={ControlPanel:params.ControlPanel||ControlPanel,SearchPanel:params.SearchPanel||SearchPanel,};if(params.Banner){layoutComponents.Banner=params.Banner;}
return layoutComponents;}
const Layout=__exports.Layout=class Layout extends Component{setup(){this.components=extractLayoutComponents(this.env.config);this.contentRef=useRef("content");}
get controlPanelSlots(){const slots={...this.props.slots};delete slots.default;return slots;}
get display(){const{controlPanel}=this.props.display;if(!controlPanel||!this.env.inDialog){return this.props.display;}
return{...this.props.display,controlPanel,};}}
Layout.template="web.Layout";Layout.props={className:{type:String,optional:true},display:{type:Object,optional:true},slots:{type:Object,optional:true},};Layout.defaultProps={display:{},};return __exports;});;

/* /web/static/src/search/pager_hook.js */
odoo.define('@web/search/pager_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{useEnv,useSubEnv,useState,onWillRender}=require("@odoo/owl");__exports.usePager=usePager;function usePager(getProps){const env=useEnv();const pagerState=useState({});useSubEnv({config:{...env.config,pagerProps:pagerState,},});onWillRender(()=>{Object.assign(pagerState,getProps()||{total:0});});}
return __exports;});;

/* /web/static/src/search/properties_group_by_item/properties_group_by_item.js */
odoo.define('@web/search/properties_group_by_item/properties_group_by_item',['@web/core/dropdown/accordion_item','@web/core/dropdown/checkbox_item','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{AccordionItem,ACCORDION}=require("@web/core/dropdown/accordion_item");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,useState,useChildSubEnv}=require("@odoo/owl");const PropertiesGroupByItem=__exports.PropertiesGroupByItem=class PropertiesGroupByItem extends Component{static template="web.PropertiesGroupByItem";static components={AccordionItem,CheckboxItem,DropdownItem};static props={item:Object,onGroup:Function,};setup(){this.state=useState({groupByItems:[]});useChildSubEnv({[ACCORDION]:{accordionStateChanged:this.beforeOpen.bind(this),},});}
get isActive(){return this.state.groupByItems.some((item)=>item.isActive);}
get isSingleParent(){const uniqueNames=new Set(this.state.groupByItems.map((item)=>item.definitionRecordId));return uniqueNames.size<2;}
async beforeOpen(){if(this.definitionLoaded){return;}
this.definitionLoaded=true;await this.env.searchModel.fillSearchViewItemsProperty();this._updateGroupByItems();}
onGroup(ids){this.props.onGroup(ids);this._updateGroupByItems();}
_updateGroupByItems(){this.state.groupByItems=this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type)&&searchItem.isProperty&&searchItem.propertyFieldName===this.props.item.fieldName);}}
return __exports;});;

/* /web/static/src/search/search_arch_parser.js */
odoo.define('@web/search/search_arch_parser',['@web/core/context','@web/core/l10n/translation','@web/core/py_js/py','@web/core/utils/xml','@web/search/utils/dates'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{_t}=require("@web/core/l10n/translation");const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{visitXML}=require("@web/core/utils/xml");const{DEFAULT_INTERVAL,DEFAULT_PERIOD}=require("@web/search/utils/dates");const ALL=_t("All");const DEFAULT_LIMIT=200;const DEFAULT_VIEWS_WITH_SEARCH_PANEL=["kanban","list"];function getContextGroubBy(context){try{return makeContext([context]).group_by.split(":");}catch{return[];}}
function reduceType(type){if(type==="dateFilter"){return"filter";}
if(type==="dateGroupBy"){return"groupBy";}
return type;}
const SearchArchParser=__exports.SearchArchParser=class SearchArchParser{constructor(searchViewDescription,fields,searchDefaults={},searchPanelDefaults={}){const{irFilters,arch}=searchViewDescription;this.fields=fields||{};this.irFilters=irFilters||[];this.arch=arch||"<search/>";this.labels=[];this.preSearchItems=[];this.searchPanelInfo={className:"",viewTypes:DEFAULT_VIEWS_WITH_SEARCH_PANEL,};this.sections=[];this.searchDefaults=searchDefaults;this.searchPanelDefaults=searchPanelDefaults;this.currentGroup=[];this.currentTag=null;this.groupNumber=0;this.pregroupOfGroupBys=[];}
parse(){visitXML(this.arch,(node,visitChildren)=>{switch(node.tagName){case"search":this.visitSearch(node,visitChildren);break;case"searchpanel":return this.visitSearchPanel(node);case"group":this.visitGroup(node,visitChildren);break;case"separator":this.visitSeparator();break;case"field":this.visitField(node);break;case"filter":this.visitFilter(node);break;}});return{labels:this.labels,preSearchItems:this.preSearchItems,searchPanelInfo:this.searchPanelInfo,sections:this.sections,};}
pushGroup(tag=null){if(this.currentGroup.length){if(this.currentTag==="groupBy"){this.pregroupOfGroupBys.push(...this.currentGroup);}else{this.preSearchItems.push(this.currentGroup);}}
this.currentTag=tag;this.currentGroup=[];this.groupNumber++;}
visitField(node){this.pushGroup("field");const preField={type:"field"};if(node.hasAttribute("invisible")){preField.invisible=node.getAttribute("invisible");}
if(node.hasAttribute("domain")){preField.domain=node.getAttribute("domain");}
if(node.hasAttribute("filter_domain")){preField.filterDomain=node.getAttribute("filter_domain");}else if(node.hasAttribute("operator")){preField.operator=node.getAttribute("operator");}
if(node.hasAttribute("context")){preField.context=node.getAttribute("context");}
if(node.hasAttribute("name")){const name=node.getAttribute("name");const fieldType=this.fields[name].type;preField.fieldName=name;preField.fieldType=fieldType;if(fieldType!=="properties"&&name in this.searchDefaults){preField.isDefault=true;let value=this.searchDefaults[name];value=Array.isArray(value)?value[0]:value;let operator=preField.operator;if(!operator){let type=fieldType;if(node.hasAttribute("widget")){type=node.getAttribute("widget");}
if(["char","html","many2many","one2many","text"].includes(type)){operator="ilike";}else{operator="=";}}
preField.defaultRank=-10;const{selection,context,relation}=this.fields[name];preField.defaultAutocompleteValue={label:`${value}`,operator,value};if(fieldType==="selection"){const option=selection.find((sel)=>sel[0]===value);if(!option){throw Error();}
preField.defaultAutocompleteValue.label=option[1];}else if(fieldType==="many2one"){this.labels.push((orm)=>{return orm.call(relation,"read",[value,["display_name"]],{context}).then((results)=>{preField.defaultAutocompleteValue.label=results[0]["display_name"];});});}}}else{throw Error();}
if(node.hasAttribute("string")){preField.description=node.getAttribute("string");}else if(preField.fieldName){preField.description=this.fields[preField.fieldName].string;}else{preField.description="Ω";}
this.currentGroup.push(preField);}
visitFilter(node){const preSearchItem={type:"filter"};if(node.hasAttribute("context")){const context=node.getAttribute("context");const[fieldName,defaultInterval]=getContextGroubBy(context);const groupByField=this.fields[fieldName];if(groupByField){preSearchItem.type="groupBy";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=groupByField.type;if(["date","datetime"].includes(groupByField.type)){preSearchItem.type="dateGroupBy";preSearchItem.defaultIntervalId=defaultInterval||DEFAULT_INTERVAL;}}else{preSearchItem.context=context;}}
if(reduceType(preSearchItem.type)!==this.currentTag){this.pushGroup(reduceType(preSearchItem.type));}
if(preSearchItem.type==="filter"){if(node.hasAttribute("date")){const fieldName=node.getAttribute("date");preSearchItem.type="dateFilter";preSearchItem.fieldName=fieldName;preSearchItem.fieldType=this.fields[fieldName].type;preSearchItem.defaultGeneratorIds=[DEFAULT_PERIOD];if(node.hasAttribute("default_period")){preSearchItem.defaultGeneratorIds=node.getAttribute("default_period").split(",");}}else{let stringRepr="[]";if(node.hasAttribute("domain")){stringRepr=node.getAttribute("domain");}
preSearchItem.domain=stringRepr;}}
if(node.hasAttribute("invisible")){preSearchItem.invisible=node.getAttribute("invisible");const fieldName=preSearchItem.fieldName;if(fieldName&&!this.fields[fieldName]){return;}}
preSearchItem.groupNumber=this.groupNumber;if(node.hasAttribute("name")){const name=node.getAttribute("name");preSearchItem.name=name;if(name in this.searchDefaults){preSearchItem.isDefault=true;if(["groupBy","dateGroupBy"].includes(preSearchItem.type)){const value=this.searchDefaults[name];preSearchItem.defaultRank=typeof value==="number"?value:100;}else{preSearchItem.defaultRank=-5;}}}
if(node.hasAttribute("string")){preSearchItem.description=node.getAttribute("string");}else if(preSearchItem.fieldName){preSearchItem.description=this.fields[preSearchItem.fieldName].string;}else if(node.hasAttribute("help")){preSearchItem.description=node.getAttribute("help");}else if(node.hasAttribute("name")){preSearchItem.description=node.getAttribute("name");}else{preSearchItem.description="Ω";}
this.currentGroup.push(preSearchItem);}
visitGroup(node,visitChildren){this.pushGroup();visitChildren();this.pushGroup();}
visitSearch(node,visitChildren){visitChildren();this.pushGroup();if(this.pregroupOfGroupBys.length){this.preSearchItems.push(this.pregroupOfGroupBys);}}
visitSearchPanel(searchPanelNode){let hasCategoryWithCounters=false;let hasFilterWithDomain=false;let nextSectionId=1;if(searchPanelNode.hasAttribute("class")){this.searchPanelInfo.className=searchPanelNode.getAttribute("class");}
if(searchPanelNode.hasAttribute("view_types")){this.searchPanelInfo.viewTypes=searchPanelNode.getAttribute("view_types").split(",");}
for(const node of searchPanelNode.children){if(node.nodeType!==1||node.tagName!=="field"){continue;}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){continue;}
const attrs={};for(const attrName of node.getAttributeNames()){attrs[attrName]=node.getAttribute(attrName);}
const type=attrs.select==="multi"?"filter":"category";const section={color:attrs.color||null,description:attrs.string||this.fields[attrs.name].string,enableCounters:evaluateBooleanExpr(attrs.enable_counters),expand:evaluateBooleanExpr(attrs.expand),fieldName:attrs.name,icon:attrs.icon||null,id:nextSectionId++,limit:evaluateExpr(attrs.limit||String(DEFAULT_LIMIT)),type,values:new Map(),};if(type==="category"){section.activeValueId=this.searchPanelDefaults[attrs.name];section.icon=section.icon||"fa-folder";section.hierarchize=evaluateBooleanExpr(attrs.hierarchize||"1");section.values.set(false,{childrenIds:[],display_name:ALL.toString(),id:false,bold:true,parentId:false,});hasCategoryWithCounters=hasCategoryWithCounters||section.enableCounters;}else{section.domain=attrs.domain||"[]";section.groupBy=attrs.groupby||null;section.icon=section.icon||"fa-filter";hasFilterWithDomain=hasFilterWithDomain||section.domain!=="[]";}
this.sections.push([section.id,section]);}
if(hasCategoryWithCounters&&hasFilterWithDomain){for(const section of this.sections){if(section.type==="category"){section.enableCounters=false;}}
console.warn("Warning: categories with counters are incompatible with filters having a domain attribute.","All category counters have been disabled to avoid inconsistencies.");}
return false;}
visitSeparator(){this.pushGroup();}}
return __exports;});;

/* /web/static/src/search/search_bar/search_bar.js */
odoo.define('@web/search/search_bar/search_bar',['@web/core/domain','@web/core/l10n/dates','@web/core/registry','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/utils/search','@web/core/l10n/translation','@web/search/search_bar_menu/search_bar_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useAutofocus,useBus,useService}=require("@web/core/utils/hooks");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{fuzzyTest}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{SearchBarMenu}=require("@web/search/search_bar_menu/search_bar_menu");const{Component,useExternalListener,useRef,useState}=require("@odoo/owl");const parsers=registry.category("parsers");const CHAR_FIELDS=["char","html","many2many","many2one","one2many","text","properties"];const FOLDABLE_TYPES=["properties","many2one","many2many"];let nextItemId=1;const SearchBar=__exports.SearchBar=class SearchBar extends Component{setup(){this.dialogService=useService("dialog");this.fields=this.env.searchModel.searchViewFields;this.searchItemsFields=this.env.searchModel.getSearchItems((f)=>f.type==="field");this.root=useRef("root");this.ui=useService("ui");this.state=useState({expanded:[],focusedIndex:0,query:"",});this.items=useState([]);this.subItems={};this.orm=useService("orm");this.keepLast=new KeepLast();this.inputRef=this.env.config.disableSearchBarAutofocus||!this.props.autofocus?useRef("autofocus"):useAutofocus();useBus(this.env.searchModel,"focus-search",()=>{this.inputRef.el.focus();});useBus(this.env.searchModel,"update",this.render);useExternalListener(window,"click",this.onWindowClick);useExternalListener(window,"keydown",this.onWindowKeydown);}
getSearchItem(id){return this.env.searchModel.searchItems[id];}
async computeState(options={}){const query="query"in options?options.query:this.state.query;const expanded="expanded"in options?options.expanded:this.state.expanded;const focusedIndex="focusedIndex"in options?options.focusedIndex:this.state.focusedIndex;const subItems="subItems"in options?options.subItems:this.subItems;const tasks=[];for(const id of expanded){const searchItem=this.getSearchItem(id);if(searchItem.type==="field"&&searchItem.fieldType==="properties"){tasks.push({id,prom:this.getSearchItemsProperties(searchItem)});}else if(!subItems[id]){tasks.push({id,prom:this.computeSubItems(searchItem,query)});}}
const prom=this.keepLast.add(Promise.all(tasks.map((task)=>task.prom)));if(tasks.length){const taskResults=await prom;tasks.forEach((task,index)=>{subItems[task.id]=taskResults[index];});}
this.state.expanded=expanded;this.state.query=query;this.state.focusedIndex=focusedIndex;this.subItems=subItems;this.inputRef.el.value=query;const trimmedQuery=this.state.query.trim();this.items.length=0;if(!trimmedQuery){return;}
for(const searchItem of this.searchItemsFields){this.items.push(...this.getItems(searchItem,trimmedQuery));}}
getItems(searchItem,trimmedQuery){const items=[];const isFieldProperty=searchItem.type==="field_property";const fieldType=this.getFieldType(searchItem);let preposition=this.getPreposition(searchItem);if((isFieldProperty&&FOLDABLE_TYPES.includes(fieldType))||fieldType==="properties"){preposition=null;}
if(["selection","boolean","tags"].includes(fieldType)){const booleanOptions=[[true,_t("Yes")],[false,_t("No")],];let options;if(isFieldProperty){const{selection,tags}=searchItem.propertyFieldDefinition||{};options=selection||tags||booleanOptions;}else{options=this.fields[searchItem.fieldName].selection||booleanOptions;}
for(const[value,label]of options){if(fuzzyTest(trimmedQuery.toLowerCase(),label.toLowerCase())){items.push({id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label,operator:searchItem.operator||"=",value,isFieldProperty,});}}
return items;}
const parser=parsers.contains(fieldType)?parsers.get(fieldType):(str)=>str;let value;try{switch(fieldType){case"date":{value=serializeDate(parser(trimmedQuery));break;}
case"datetime":{value=serializeDateTime(parser(trimmedQuery));break;}
case"many2one":{value=trimmedQuery;break;}
default:{value=parser(trimmedQuery);}}}catch{return[];}
const item={id:nextItemId++,searchItemDescription:searchItem.description,preposition,searchItemId:searchItem.id,label:this.state.query,operator:searchItem.operator||(CHAR_FIELDS.includes(fieldType)?"ilike":"="),value,isFieldProperty,};if(isFieldProperty){item.isParent=FOLDABLE_TYPES.includes(fieldType);item.unselectable=FOLDABLE_TYPES.includes(fieldType);item.propertyItemId=searchItem.propertyItemId;}else if(fieldType==="properties"){item.isParent=true;item.unselectable=true;}else if(fieldType==="many2one"){item.isParent=true;}
if(item.isParent){item.isExpanded=this.state.expanded.includes(item.searchItemId);}
items.push(item);if(item.isExpanded){if(searchItem.type==="field"&&searchItem.fieldType==="properties"){for(const subItem of this.subItems[searchItem.id]){items.push(...this.getItems(subItem,trimmedQuery));}}else{items.push(...this.subItems[searchItem.id]);}}
return items;}
getPreposition(searchItem){const fieldType=this.getFieldType(searchItem);return["date","datetime"].includes(fieldType)?_t("at"):_t("for");}
getFieldType(searchItem){const{type}=searchItem.type==="field_property"?searchItem.propertyFieldDefinition:this.fields[searchItem.fieldName];const fieldType=type==="reference"?"char":type;return fieldType}
getSearchItemsProperties(searchItem){return this.env.searchModel.getSearchItemsProperties(searchItem);}
async computeSubItems(searchItem,query){const field=this.fields[searchItem.fieldName];let domain=[];if(searchItem.domain){try{domain=new Domain(searchItem.domain).toList();}catch{}}
const relation=searchItem.type==="field_property"?searchItem.propertyFieldDefinition.comodel:field.relation;const options=await this.orm.call(relation,"name_search",[],{args:domain,context:{...this.env.searchModel.globalContext,...field.context},limit:8,name:query.trim(),});const subItems=[];if(options.length){const operator=searchItem.operator||"=";for(const[value,label]of options){subItems.push({id:nextItemId++,isChild:true,searchItemId:searchItem.id,value,label,operator,});}}else{subItems.push({id:nextItemId++,isChild:true,searchItemId:searchItem.id,label:_t("(no result)"),unselectable:true,});}
return subItems;}
focusFacet(index){const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facets.length){if(index===undefined){facets[facets.length-1].focus();}else{facets[index].focus();}}}
removeFacet(facet){this.env.searchModel.deactivateGroup(facet.groupId);this.inputRef.el.focus();}
resetState(options={focus:true}){this.computeState({expanded:[],focusedIndex:0,query:"",subItems:[]});if(options.focus){this.inputRef.el.focus();}}
selectItem(item){const searchItem=this.getSearchItem(item.searchItemId);if((searchItem.type==="field"&&searchItem.fieldType==="properties")||(searchItem.type==="field_property"&&item.unselectable)){this.toggleItem(item,!item.isExpanded);return;}
if(!item.unselectable){const{searchItemId,label,operator,value}=item;this.env.searchModel.addAutoCompletionValues(searchItemId,{label,operator,value});}
this.resetState();}
toggleItem(item,shouldExpand){const id=item.searchItemId;const expanded=[...this.state.expanded];const index=expanded.findIndex((id0)=>id0===id);if(shouldExpand===true){if(index<0){expanded.push(id);}}else{if(index>=0){expanded.splice(index,1);}}
this.computeState({expanded});}
onFacetLabelClick(target,facet){const{domain,groupId}=facet;if(!domain){return;}
const{resModel}=this.env.searchModel;this.dialogService.add(DomainSelectorDialog,{resModel,domain,context:this.env.searchModel.domainEvalContext,onConfirm:(domain)=>this.env.searchModel.splitAndAddDomain(domain,groupId),disableConfirmButton:(domain)=>domain===`[]`,title:_t("Modify Condition"),isDebugMode:this.env.searchModel.isDebugMode,});}
onFacetKeydown(facet,facetIndex,ev){switch(ev.key){case"ArrowLeft":{if(facetIndex===0){this.inputRef.el.focus();}else{this.focusFacet(facetIndex-1);}
break;}
case"ArrowRight":{const facets=this.root.el.getElementsByClassName("o_searchview_facet");if(facetIndex===facets.length-1){this.inputRef.el.focus();}else{this.focusFacet(facetIndex+1);}
break;}
case"Backspace":{this.removeFacet(facet);break;}}}
onFacetRemove(facet){this.removeFacet(facet);}
onItemMousemove(focusedIndex){this.state.focusedIndex=focusedIndex;this.inputRef.el.focus();}
onSearchKeydown(ev){if(ev.isComposing){return;}
const focusedItem=this.items[this.state.focusedIndex];let focusedIndex;switch(ev.key){case"ArrowDown":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex>=this.items.length-1){focusedIndex=0;}else{focusedIndex=this.state.focusedIndex+1;}}else{this.env.searchModel.trigger("focus-view");}
break;case"ArrowUp":ev.preventDefault();if(this.items.length){if(this.state.focusedIndex===0||this.state.focusedIndex>this.items.length-1){focusedIndex=this.items.length-1;}else{focusedIndex=this.state.focusedIndex-1;}}
break;case"ArrowLeft":if(focusedItem&&focusedItem.isParent&&focusedItem.isExpanded){ev.preventDefault();this.toggleItem(focusedItem,false);}else if(focusedItem&&focusedItem.isChild){ev.preventDefault();focusedIndex=this.items.findIndex((item)=>item.isParent&&item.searchItemId===focusedItem.searchItemId);}else if(focusedItem&&focusedItem.isFieldProperty){ev.preventDefault();focusedIndex=this.items.findIndex((item)=>item.isParent&&item.searchItemId===focusedItem.propertyItemId);}else if(ev.target.selectionStart===0){this.focusFacet();}else{}
break;case"ArrowRight":if(ev.target.selectionStart===this.state.query.length){if(focusedItem&&focusedItem.isParent){ev.preventDefault();if(focusedItem.isExpanded){focusedIndex=this.state.focusedIndex+1;}else{this.toggleItem(focusedItem,true);}}else if(ev.target.selectionStart===this.state.query.length){this.focusFacet(0);}}
break;case"Backspace":if(!this.state.query.length){const facets=this.env.searchModel.facets;if(facets.length){this.removeFacet(facets[facets.length-1]);}}
break;case"Enter":if(!this.state.query.length){this.env.searchModel.search();break;}else if(focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Tab":if(this.state.query.length&&focusedItem){ev.preventDefault();this.selectItem(focusedItem);}
break;case"Escape":this.resetState();break;}
if(focusedIndex!==undefined){this.state.focusedIndex=focusedIndex;}}
onSearchInput(ev){const query=ev.target.value;if(query.trim()){this.computeState({query,expanded:[],focusedIndex:0,subItems:[]});}else if(this.items.length){this.resetState();}}
onToggleSearchBar(){this.state.showSearchBar=!this.state.showSearchBar;}
onWindowClick(ev){if(this.items.length&&!this.root.el.contains(ev.target)){this.resetState({focus:false});}}
onWindowKeydown(ev){if(this.items.length&&ev.key==="Escape"){this.resetState();}}}
SearchBar.template="web.SearchBar";SearchBar.components={SearchBarMenu,};SearchBar.props={autofocus:{type:Boolean,optional:true},slots:{type:Object,optional:true,shape:{default:{optional:true},"search-bar-additional-menu":{optional:true},},},};SearchBar.defaultProps={autofocus:true,};return __exports;});;

/* /web/static/src/search/search_bar/search_bar_toggler.js */
odoo.define('@web/search/search_bar/search_bar_toggler',['@odoo/owl','@web/core/browser/browser','@web/core/utils/hooks','@web/core/utils/timing'],function(require){'use strict';let __exports={};const{Component,useEffect,useState}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const SearchBarToggler=__exports.SearchBarToggler=class SearchBarToggler extends Component{}
SearchBarToggler.template="web.SearchBar.Toggler";SearchBarToggler.props={isSmall:Boolean,showSearchBar:Boolean,toggleSearchBar:Function,};__exports.useSearchBarToggler=useSearchBarToggler;function useSearchBarToggler(){const ui=useService("ui");let isToggled=false;const state=useState({isSmall:ui.isSmall,showSearchBar:false,});const updateState=()=>{state.isSmall=ui.isSmall;state.showSearchBar=!ui.isSmall||isToggled;};updateState();function toggleSearchBar(){isToggled=!isToggled;updateState();}
const onResize=useDebounced(updateState,200);useEffect(()=>{browser.addEventListener("resize",onResize);return()=>browser.removeEventListener("resize",onResize);},()=>[]);return{state,component:SearchBarToggler,get props(){return{isSmall:state.isSmall,showSearchBar:state.showSearchBar,toggleSearchBar,};},};}
return __exports;});;

/* /web/static/src/search/search_bar_menu/search_bar_menu.js */
odoo.define('@web/search/search_bar_menu/search_bar_menu',['@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/dropdown/dropdown','@web/search/properties_group_by_item/properties_group_by_item','@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/dropdown/accordion_item','@web/search/custom_group_by_item/custom_group_by_item','@web/core/dropdown/checkbox_item','@web/search/utils/misc','@web/core/domain_selector/utils','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{PropertiesGroupByItem}=require("@web/search/properties_group_by_item/properties_group_by_item");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{sortBy}=require("@web/core/utils/arrays");const{useBus,useService}=require("@web/core/utils/hooks");const{AccordionItem}=require("@web/core/dropdown/accordion_item");const{CustomGroupByItem}=require("@web/search/custom_group_by_item/custom_group_by_item");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{FACET_ICONS,GROUPABLE_TYPES}=require("@web/search/utils/misc");const{useGetDefaultLeafDomain}=require("@web/core/domain_selector/utils");const{_t}=require("@web/core/l10n/translation");const favoriteMenuRegistry=registry.category("favoriteMenu");const SearchBarMenu=__exports.SearchBarMenu=class SearchBarMenu extends Component{static template="web.SearchBarMenu";static components={Dropdown,DropdownItem,CheckboxItem,CustomGroupByItem,AccordionItem,PropertiesGroupByItem,};static props={slots:{type:Object,optional:true,shape:{default:{optional:true},},},};setup(){this.facet_icons=FACET_ICONS;this.dialogService=useService("dialog");this.getDefaultLeafDomain=useGetDefaultLeafDomain();const fields=[];for(const[fieldName,field]of Object.entries(this.env.searchModel.searchViewFields)){if(this.validateField(fieldName,field)){fields.push(Object.assign({name:fieldName},field));}}
this.fields=sortBy(fields,"string");this.dialogService=useService("dialog");useBus(this.env.searchModel,"update",this.render);}
get filterItems(){return this.env.searchModel.getSearchItems((searchItem)=>["filter","dateFilter"].includes(searchItem.type));}
async onAddCustomFilterClick(){const{domainEvalContext:context,resModel}=this.env.searchModel;const domain=await this.getDefaultLeafDomain(resModel);this.dialogService.add(DomainSelectorDialog,{resModel,defaultConnector:"|",domain,context,onConfirm:(domain)=>this.env.searchModel.splitAndAddDomain(domain),disableConfirmButton:(domain)=>domain===`[]`,title:_t("Add Custom Filter"),confirmButtonText:_t("Add"),discardButtonText:_t("Cancel"),isDebugMode:this.env.searchModel.isDebugMode,});}
onFilterSelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateFilter(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}
get hideCustomGroupBy(){return this.env.searchModel.hideCustomGroupBy||false;}
get groupByItems(){return this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type)&&!searchItem.isProperty);}
validateField(fieldName,field){const{sortable,store,type}=field;return((type==="many2many"?store:sortable)&&fieldName!=="id"&&GROUPABLE_TYPES.includes(type));}
onGroupBySelected({itemId,optionId}){if(optionId){this.env.searchModel.toggleDateGroupBy(itemId,optionId);}else{this.env.searchModel.toggleSearchItem(itemId);}}
onAddCustomGroup(fieldName){this.env.searchModel.createNewGroupBy(fieldName);}
get showComparisonMenu(){return(this.env.searchModel.searchMenuTypes.has("comparison")&&this.env.searchModel.getSearchItems((i)=>i.type==="comparison").length>0);}
get comparisonItems(){return this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="comparison");}
onComparisonSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}
get favoriteItems(){const favorites=this.env.searchModel.getSearchItems((searchItem)=>searchItem.type==="favorite");const registryMenus=[];for(const item of favoriteMenuRegistry.getAll()){if("isDisplayed"in item?item.isDisplayed(this.env):true){registryMenus.push({Component:item.Component,groupNumber:item.groupNumber,key:item.Component.name,});}}
return[...favorites,...registryMenus];}
onFavoriteSelected(itemId){this.env.searchModel.toggleSearchItem(itemId);}
openConfirmationDialog(itemId){const{userId}=this.favoriteItems.find((item)=>item.id===itemId);const dialogProps={title:_t("Warning"),body:userId?_t("Are you sure that you want to remove this filter?"):_t("This filter is global and will be removed for everyone."),confirmLabel:_t("Delete Filter"),confirm:()=>this.env.searchModel.deleteFavorite(itemId),cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}}
return __exports;});;

/* /web/static/src/search/search_model.js */
odoo.define('@web/search/search_model',['@web/core/context','@web/core/domain','@web/core/py_js/py','@web/core/utils/arrays','@web/core/utils/objects','@web/search/search_arch_parser','@web/search/utils/dates','@web/search/utils/misc','@odoo/owl','@web/core/tree_editor/condition_tree','@web/core/l10n/translation','@web/core/domain_selector/utils'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{Domain}=require("@web/core/domain");const{evaluateExpr}=require("@web/core/py_js/py");const{sortBy,groupBy}=require("@web/core/utils/arrays");const{deepCopy}=require("@web/core/utils/objects");const{SearchArchParser}=require("@web/search/search_arch_parser");const{constructDateDomain,DEFAULT_INTERVAL,getComparisonOptions,getIntervalOptions,getPeriodOptions,rankInterval,yearSelected,}=require("@web/search/utils/dates");const{FACET_ICONS,FACET_COLORS}=require("@web/search/utils/misc");const{EventBus,toRaw}=require("@odoo/owl");const{domainFromTree,treeFromDomain}=require("@web/core/tree_editor/condition_tree");const{_t}=require("@web/core/l10n/translation");const{useGetDomainTreeDescription}=require("@web/core/domain_selector/utils");const{DateTime}=luxon;function hasValues(section){const{errorMsg,type,values}=section;if(errorMsg){return true;}
switch(type){case"category":{return values&&values.size>1;}
case"filter":{return values&&values.size>0;}}}
function mapToArray(map){const result=[];for(const[key,val]of map){const valCopy=Object.assign({},val);result.push([key,valCopy]);}
return result;}
function arraytoMap(array){return new Map(array);}
function execute(op,source,target){const{query,nextId,nextGroupId,nextGroupNumber,searchItems,searchPanelInfo,sections}=source;target.nextGroupId=nextGroupId;target.nextGroupNumber=nextGroupNumber;target.nextId=nextId;target.query=query;target.searchItems=searchItems;target.searchPanelInfo=searchPanelInfo;target.sections=op(sections);for(const[,section]of target.sections){section.values=op(section.values);if(section.groups){section.groups=op(section.groups);for(const[,group]of section.groups){group.values=op(group.values);}}}}
const FAVORITE_PRIVATE_GROUP=1;const FAVORITE_SHARED_GROUP=2;const SearchModel=__exports.SearchModel=class SearchModel extends EventBus{constructor(env,services,args){super();this.env=env;this.setup(services,args);}
setup(services){const{field:fieldService,name:nameService,orm,user,view}=services;this.orm=orm;this.fieldService=fieldService;this.userService=user;this.viewService=view;this.getDomainTreeDescription=useGetDomainTreeDescription(fieldService,nameService);this.referenceMoment=DateTime.local();this.comparisonOptions=getComparisonOptions();this.intervalOptions=getIntervalOptions();this.optionGenerators=getPeriodOptions(this.referenceMoment);}
async load(config){const{resModel}=config;if(!resModel){throw Error(`SearchPanel config should have a "resModel" key`);}
this.resModel=resModel;this._reset();const{comparison,context,domain,groupBy,hideCustomGroupBy,orderBy}=config;this.globalComparison=comparison;this.globalContext=toRaw(Object.assign({},context));this.globalDomain=domain||[];this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];this.hideCustomGroupBy=hideCustomGroupBy;this.searchMenuTypes=new Set(config.searchMenuTypes||["filter","groupBy","favorite"]);let{irFilters,loadIrFilters,searchViewArch,searchViewFields,searchViewId}=config;const loadSearchView=searchViewId!==undefined&&(!searchViewArch||!searchViewFields||(!irFilters&&loadIrFilters));const searchViewDescription={};if(loadSearchView){const result=await this.viewService.loadViews({context:this.globalContext,resModel,views:[[searchViewId,"search"]],},{actionId:this.env.config.actionId,loadIrFilters:loadIrFilters||false,});Object.assign(searchViewDescription,result.views.search);searchViewFields=searchViewFields||result.fields;}
if(searchViewArch){searchViewDescription.arch=searchViewArch;}
if(irFilters){searchViewDescription.irFilters=irFilters;}
if(searchViewId!==undefined){searchViewDescription.viewId=searchViewId;}
this.searchViewArch=searchViewDescription.arch||"<search/>";this.searchViewFields=searchViewFields||{};if(searchViewDescription.irFilters){this.irFilters=searchViewDescription.irFilters;}
if(searchViewDescription.viewId!==undefined){this.searchViewId=searchViewDescription.viewId;}
const{searchDefaults,searchPanelDefaults}=this._extractSearchDefaultsFromGlobalContext();if(config.state){this._importState(config.state);this.__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields);this.display=this._getDisplay(config.display);if(!this.searchPanelInfo.loaded){return this._reloadSections();}
return;}
this.blockNotification=true;this.searchItems={};this.query=[];this.nextId=1;this.nextGroupId=1;this.nextGroupNumber=1;const parser=new SearchArchParser(searchViewDescription,searchViewFields,searchDefaults,searchPanelDefaults);const{labels,preSearchItems,searchPanelInfo,sections}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};await Promise.all(labels.map((cb)=>cb(this.orm)));for(const preGroup of preSearchItems||[]){this._createGroupOfSearchItems(preGroup);}
this.nextGroupNumber=1+Math.max(...Object.values(this.searchItems).map((i)=>i.groupNumber||0),0);const dateFilters=Object.values(this.searchItems).filter((searchElement)=>searchElement.type==="dateFilter");if(dateFilters.length){this._createGroupOfComparisons(dateFilters);}
const{dynamicFilters}=config;if(dynamicFilters){this._createGroupOfDynamicFilters(dynamicFilters);}
const defaultFavoriteId=this._createGroupOfFavorites(this.irFilters||[]);const activateFavorite="activateFavorite"in config?config.activateFavorite:true;this._activateDefaultSearchItems(activateFavorite?defaultFavoriteId:null);this.sections=new Map(sections||[]);this.display=this._getDisplay(config.display);if(this.display.searchPanel){this.searchDomain=this._getDomain({withSearchPanel:false});this.sectionsPromise=this._fetchSections(this.categories,this.filters).then(()=>{for(const{fieldName,values}of this.filters){const filterDefaults=searchPanelDefaults[fieldName]||[];for(const valueId of filterDefaults){const value=values.get(valueId);if(value){value.checked=true;}}}});if(Object.keys(searchPanelDefaults).length||this._shouldWaitForData(false)){await this.sectionsPromise;}}
this.blockNotification=false;}
async reload(config={}){this._reset();const{comparison,context,domain,groupBy,orderBy}=config;this.globalContext=Object.assign({},context);this.globalDomain=domain||[];this.globalComparison=comparison;this.globalGroupBy=groupBy||[];this.globalOrderBy=orderBy||[];this._extractSearchDefaultsFromGlobalContext();await this._reloadSections();}
get categories(){return[...this.sections.values()].filter((s)=>s.type==="category");}
get context(){if(!this._context){this._context=makeContext([this.globalContext,this._getContext()]);}
return deepCopy(this._context);}
get domain(){if(!this._domain){this._domain=this._getDomain();}
return deepCopy(this._domain);}
get domainString(){return this._getDomain({raw:true}).toString();}
get domainEvalContext(){return Object.assign({},this.globalContext,this.userService.context);}
get comparison(){if(!this.searchMenuTypes.has("comparison")){return null;}
if(this._comparison===undefined){if(this.globalComparison){this._comparison=this.globalComparison;}else{const comparison=this.getFullComparison();if(comparison){const{fieldName,range,rangeDescription,comparisonRange,comparisonRangeDescription,}=comparison;const domains=[{arrayRepr:Domain.and([this.domain,range]).toList(),description:rangeDescription,},{arrayRepr:Domain.and([this.domain,comparisonRange]).toList(),description:comparisonRangeDescription,},];this._comparison={domains,fieldName};}else{this._comparison=null;}}}
return deepCopy(this._comparison);}
get facets(){const isValidType=(type)=>!["groupBy","comparison"].includes(type)||this.searchMenuTypes.has(type);const facets=[];for(const facet of this._getFacets()){if(!isValidType(facet.type)){continue;}
facets.push(facet);}
return facets;}
get filters(){return[...this.sections.values()].filter((s)=>s.type==="filter");}
get groupBy(){if(!this.searchMenuTypes.has("groupBy")){return[];}
if(!this._groupBy){this._groupBy=this._getGroupBy();}
return deepCopy(this._groupBy);}
get orderBy(){if(!this._orderBy){this._orderBy=this._getOrderBy();}
return deepCopy(this._orderBy);}
get isDebugMode(){return!!this.env.debug;}
addAutoCompletionValues(searchItemId,autocompleteValue){const searchItem=this.searchItems[searchItemId];if(!["field","field_property"].includes(searchItem.type)){return;}
const{label,value,operator}=autocompleteValue;const queryElem=this.query.find((queryElem)=>queryElem.searchItemId===searchItemId&&"autocompleteValue"in queryElem&&queryElem.autocompleteValue.value===value&&queryElem.autocompleteValue.operator===operator);if(!queryElem){this.query.push({searchItemId,autocompleteValue});}else{queryElem.autocompleteValue.label=label;}
this._notify();}
clearQuery(){this.query=[];this._notify();}
async createNewFavorite(params){const{preFavorite,irFilter}=this._getIrFilterDescription(params);const serverSideId=await this._createIrFilters(irFilter);this.blockNotification=true;this.clearQuery();const favorite={...preFavorite,type:"favorite",id:this.nextId,groupId:this.nextGroupId,groupNumber:preFavorite.userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP,removable:true,serverSideId,};this.searchItems[this.nextId]=favorite;this.query.push({searchItemId:this.nextId});this.nextGroupId++;this.nextId++;this.blockNotification=false;this._notify();}
async _createIrFilters(irFilter){const serverSideId=await this.orm.call("ir.filters","create_or_replace",[irFilter]);this.env.bus.trigger("CLEAR-CACHES");return serverSideId;}
createNewFilters(prefilters){if(!prefilters.length){return[];}
prefilters.forEach((preFilter)=>{const filter=Object.assign(preFilter,{groupId:this.nextGroupId,groupNumber:this.nextGroupNumber,id:this.nextId,type:"filter",});this.searchItems[this.nextId]=filter;this.query.push({searchItemId:this.nextId});this.nextId++;});this.nextGroupId++;this.nextGroupNumber++;this._notify();}
createNewGroupBy(fieldName,{interval,invisible}={}){const field=this.searchViewFields[fieldName];const{string,type:fieldType}=field;const firstGroupBy=Object.values(this.searchItems).find((f)=>f.type==="groupBy");const preSearchItem={description:string||fieldName,fieldName,fieldType,groupId:firstGroupBy?firstGroupBy.groupId:this.nextGroupId++,groupNumber:this.nextGroupNumber,id:this.nextId,custom:true,};if(invisible){preSearchItem.invisible="True";}
if(["date","datetime"].includes(fieldType)){this.searchItems[this.nextId]=Object.assign({type:"dateGroupBy",defaultIntervalId:interval||DEFAULT_INTERVAL},preSearchItem);this.toggleDateGroupBy(this.nextId);}else{this.searchItems[this.nextId]=Object.assign({type:"groupBy"},preSearchItem);this.toggleSearchItem(this.nextId);}
this.nextGroupNumber++;this.nextId++;this._notify();}
deactivateGroup(groupId){this.query=this.query.filter((queryElem)=>{const searchItem=this.searchItems[queryElem.searchItemId];return searchItem.groupId!==groupId;});this._checkComparisonStatus();this._notify();}
async deleteFavorite(favoriteId){const searchItem=this.searchItems[favoriteId];if(searchItem.type!=="favorite"){return;}
await this._deleteIrFilters(searchItem);const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===favoriteId);delete this.searchItems[favoriteId];if(index>=0){this.query.splice(index,1);}
this._notify();}
async _deleteIrFilters(searchItem){const{serverSideId}=searchItem;await this.orm.unlink("ir.filters",[serverSideId]);this.env.bus.trigger("CLEAR-CACHES");}
exportState(){const state={};execute(mapToArray,this,state);return state;}
getFullComparison(){let searchItem=null;for(const queryElem of this.query.slice().reverse()){const item=this.searchItems[queryElem.searchItemId];if(item.type==="comparison"){searchItem=item;break;}else if(item.type==="favorite"&&item.comparison){searchItem=item;break;}}
if(!searchItem){return null;}else if(searchItem.type==="favorite"){return searchItem.comparison;}
const{dateFilterId,comparisonOptionId}=searchItem;const{fieldName,fieldType,description:dateFilterDescription,}=this.searchItems[dateFilterId];const selectedGeneratorIds=this._getSelectedGeneratorIds(dateFilterId);const{domain:range,description:rangeDescription}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedGeneratorIds);const{domain:comparisonRange,description:comparisonRangeDescription}=constructDateDomain(this.referenceMoment,fieldName,fieldType,selectedGeneratorIds,comparisonOptionId);return{comparisonId:comparisonOptionId,fieldName,fieldDescription:dateFilterDescription,range:range.toList(),rangeDescription,comparisonRange:comparisonRange.toList(),comparisonRangeDescription,};}
getIrFilterValues(params){const{irFilter}=this._getIrFilterDescription(params);return irFilter;}
getPreFavoriteValues(params){const{preFavorite}=this._getIrFilterDescription(params);return preFavorite;}
getSearchItems(predicate){const searchItems=[];Object.values(this.searchItems).forEach((searchItem)=>{const isInvisible="invisible"in searchItem&&evaluateExpr(searchItem.invisible,this.globalContext);if(!isInvisible&&(!predicate||predicate(searchItem))){const enrichedSearchitem=this._enrichItem(searchItem);if(enrichedSearchitem){searchItems.push(enrichedSearchitem);}}});if(searchItems.some((f)=>f.type==="favorite")){searchItems.sort((f1,f2)=>f1.groupNumber-f2.groupNumber);}
return searchItems;}
getSections(predicate){let sections=[...this.sections.values()].map((section)=>Object.assign({},section,{empty:!hasValues(section)}));if(predicate){sections=sections.filter(predicate);}
return sections.sort((s1,s2)=>s1.index-s2.index);}
search(){this.trigger("update");}
async splitAndAddDomain(domain,groupId){const group=groupId?this._getGroups().find((g)=>g.id===groupId):null;let context;if(group){const contexts=[];for(const activeItem of group.activeItems){const context=this._getSearchItemContext(activeItem);if(context){contexts.push(context);}}
context=makeContext(contexts);}
const tree=treeFromDomain(domain,{distributeNot:!this.isDebugMode});const trees=!tree.negate&&tree.value==="&"?tree.children:[tree];const promises=trees.map(async(tree)=>{const description=await this.getDomainTreeDescription(this.resModel,tree);const preFilter={description,domain:domainFromTree(tree),invisible:"True",type:"filter",};if(context){preFilter.context=context;}
return preFilter;});const preFilters=await Promise.all(promises);this.blockNotification=true;if(group){const firstActiveItem=group.activeItems[0];const firstSearchItem=this.searchItems[firstActiveItem.searchItemId];const{type}=firstSearchItem;if(type==="favorite"){const activeItemGroupBys=this._getSearchItemGroupBys(firstActiveItem);for(const activeItemGroupBy of activeItemGroupBys){const[fieldName,interval]=activeItemGroupBy.split(":");this.createNewGroupBy(fieldName,{interval,invisible:true});}
const index=this.query.length-activeItemGroupBys.length;this.query=[...this.query.slice(index),...this.query.slice(0,index)];}
this.deactivateGroup(groupId);}
for(const preFilter of preFilters){this.createNewFilters([preFilter]);}
this.blockNotification=false;this._notify();}
toggleCategoryValue(sectionId,valueId){const category=this.sections.get(sectionId);category.activeValueId=valueId;this._notify();}
toggleFilterValues(sectionId,valueIds,forceTo=null){const filter=this.sections.get(sectionId);for(const valueId of valueIds){const value=filter.values.get(valueId);value.checked=forceTo===null?!value.checked:forceTo;}
this._notify();}
toggleSearchItem(searchItemId){const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateFilter":case"dateGroupBy":case"field_property":case"field":{return;}}
const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId);if(index>=0){this.query.splice(index,1);}else{if(searchItem.type==="favorite"){this.query=[];}else if(searchItem.type==="comparison"){this.query=this.query.filter((queryElem)=>{const{type}=this.searchItems[queryElem.searchItemId];return type!=="comparison";});}
this.query.push({searchItemId});}
this._notify();}
toggleDateFilter(searchItemId,generatorId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateFilter"){return;}
const generatorIds=generatorId?[generatorId]:searchItem.defaultGeneratorIds;for(const generatorId of generatorIds){const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"generatorId"in queryElem&&queryElem.generatorId===generatorId);if(index>=0){this.query.splice(index,1);if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==searchItemId);}}else{this.query.push({searchItemId,generatorId});if(!yearSelected(this._getSelectedGeneratorIds(searchItemId))){const{defaultYearId}=this.optionGenerators.find((o)=>o.id===generatorId);this.query.push({searchItemId,generatorId:defaultYearId});}}}
this._checkComparisonStatus();this._notify();}
toggleDateGroupBy(searchItemId,intervalId){const searchItem=this.searchItems[searchItemId];if(searchItem.type!=="dateGroupBy"){return;}
intervalId=intervalId||searchItem.defaultIntervalId;const index=this.query.findIndex((queryElem)=>queryElem.searchItemId===searchItemId&&"intervalId"in queryElem&&queryElem.intervalId===intervalId);if(index>=0){this.query.splice(index,1);}else{this.query.push({searchItemId,intervalId});}
this._notify();}
async getSearchItemsProperties(searchItem){if(searchItem.type!=="field"||searchItem.fieldType!=="properties"){return[];}
const field=this.searchViewFields[searchItem.fieldName];const definitionRecord=field.definition_record;const result=await this._fetchPropertiesDefinition(this.resModel,searchItem.fieldName);const searchItemIds=new Set();const existingFieldProperties={};for(const item of Object.values(this.searchItems)){if(item.type==="field_property"&&item.propertyItemId===searchItem.id){existingFieldProperties[item.propertyFieldDefinition.name]=item;}}
for(const{definitionRecordId,definitionRecordName,definitions}of result){for(const definition of definitions){if(definition.type==="separator"){continue;}
const existingSearchItem=existingFieldProperties[definition.name];if(existingSearchItem){existingSearchItem.description=`${definition.string} (${definitionRecordName})`;searchItemIds.add(existingSearchItem.id);continue;}
const id=this.nextId++;const newSearchItem={id,type:"field_property",fieldName:searchItem.fieldName,propertyDomain:[definitionRecord,"=",definitionRecordId],propertyFieldDefinition:definition,propertyItemId:searchItem.id,description:`${definition.string} (${definitionRecordName})`,groupId:this.nextGroupId++,};if(["many2many","tags"].includes(definition.type)){newSearchItem.operator="in";}
this.searchItems[id]=newSearchItem;searchItemIds.add(id);}}
return this.getSearchItems((searchItem)=>searchItemIds.has(searchItem.id));}
async fillSearchViewItemsProperty(){if(!this.searchViewFields){return;}
const fields=Object.values(this.searchViewFields);for(const field of fields){if(field.type!=="properties"){continue;}
const result=await this._fetchPropertiesDefinition(this.resModel,field.name);const searchItemsNames=Object.values(this.searchItems).filter((item)=>item.isProperty&&["groupBy","dateGroupBy"].includes(item.type)).map((item)=>item.fieldName);for(const{definitionRecordId,definitionRecordName,definitions}of result){const groupNames=definitions.map((definition)=>`group_by_${field.name}.${definition.name}`);Object.values(this.searchItems).forEach((searchItem)=>{if(searchItem.isProperty&&searchItem.definitionRecordId===definitionRecordId&&["groupBy","dateGroupBy"].includes(searchItem.type)&&!groupNames.includes(searchItem.name)){searchItem.type="group_by_property_deleted";}});for(const definition of definitions){const fullName=`${field.name}.${definition.name}`;this.searchViewFields[fullName]={name:fullName,readonly:false,relation:definition.comodel,required:false,searchable:false,selection:definition.selection,sortable:true,store:true,string:`${definition.string} (${definitionRecordName})`,type:definition.type,relatedPropertyField:field,};if(!searchItemsNames.includes(fullName)){const groupByItem={description:definition.string,definitionRecordId,definitionRecordName,fieldName:fullName,fieldType:definition.type,isProperty:true,name:`group_by_${field.name}.${definition.name}`,propertyFieldName:field.name,type:["datetime","date"].includes(definition.type)?"dateGroupBy":"groupBy",};this._createGroupOfSearchItems([groupByItem]);}}}}}
async _fetchPropertiesDefinition(resModel,fieldName){const domain=[];if(this.context.active_id){domain.push(["id","=",this.context.active_id]);}
const definitions=await this.fieldService.loadPropertyDefinitions(resModel,fieldName,domain);const result=groupBy(Object.values(definitions),(definition)=>definition.record_id);return Object.entries(result).map(([recordId,definitions])=>{return{definitionRecordId:parseInt(recordId),definitionRecordName:definitions[0]?.record_name,definitions,};});}
_activateDefaultSearchItems(defaultFavoriteId){if(defaultFavoriteId){this.toggleSearchItem(defaultFavoriteId);}else{Object.values(this.searchItems).filter((f)=>f.isDefault&&f.type!=="favorite").sort((f1,f2)=>(f1.defaultRank||100)-(f2.defaultRank||100)).forEach((f)=>{if(f.type==="dateFilter"){this.toggleDateFilter(f.id);}else if(f.type==="dateGroupBy"){this.toggleDateGroupBy(f.id);}else if(f.type==="field"){this.addAutoCompletionValues(f.id,f.defaultAutocompleteValue);}else{this.toggleSearchItem(f.id);}});}}
_checkComparisonStatus(){const activeComparison=this._getActiveComparison();if(!activeComparison){return;}
const{dateFilterId,id}=activeComparison;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId);if(!dateFilterIsActive){this.query=this.query.filter((queryElem)=>queryElem.searchItemId!==id);}}
_createCategoryTree(sectionId,result){const category=this.sections.get(sectionId);let{error_msg,parent_field:parentField,values}=result;if(error_msg){category.errorMsg=error_msg;values=[];}
if(category.hierarchize){category.parentField=parentField;}
for(const value of values){category.values.set(value.id,Object.assign({},value,{childrenIds:[],parentId:value[parentField]||false,}));}
for(const value of values){const{parentId}=category.values.get(value.id);if(parentId&&category.values.has(parentId)){category.values.get(parentId).childrenIds.push(value.id);}}
category.rootIds=[false];for(const value of values){const{parentId}=category.values.get(value.id);if(!parentId){category.rootIds.push(value.id);}}
const valueIds=[false,...values.map((val)=>val.id)];this._ensureCategoryValue(category,valueIds);}
_createFilterTree(sectionId,result){const filter=this.sections.get(sectionId);let{error_msg,values}=result;if(error_msg){filter.errorMsg=error_msg;values=[];}
values.forEach((value)=>{const oldValue=filter.values.get(value.id);value.checked=oldValue?oldValue.checked:false;});filter.values=new Map();const groupIds=[];if(filter.groupBy){const groups=new Map();for(const value of values){const groupId=value.group_id;if(!groups.has(groupId)){if(groupId){groupIds.push(groupId);}
groups.set(groupId,{id:groupId,name:value.group_name,values:new Map(),tooltip:value.group_tooltip,sequence:value.group_sequence,color_index:value.color_index,});const oldGroup=filter.groups&&filter.groups.get(groupId);groups.get(groupId).state=(oldGroup&&oldGroup.state)||false;}
groups.get(groupId).values.set(value.id,value);}
filter.groups=groups;filter.sortedGroupIds=sortBy(groupIds,(id)=>groups.get(id).sequence||groups.get(id).name);for(const group of filter.groups.values()){for(const[valueId,value]of group.values){filter.values.set(valueId,value);}}}else{for(const value of values){filter.values.set(value.id,value);}}}
_createGroupOfComparisons(dateFilters){const preSearchItem=[];for(const dateFilter of dateFilters){for(const comparisonOption of this.comparisonOptions){const{id:dateFilterId,description}=dateFilter;const preFilter={type:"comparison",comparisonOptionId:comparisonOption.id,description:`${description}: ${comparisonOption.description}`,dateFilterId,};preSearchItem.push(preFilter);}}
this._createGroupOfSearchItems(preSearchItem);}
_createGroupOfDynamicFilters(dynamicFilters){const pregroup=dynamicFilters.map((filter)=>{return{groupNumber:this.nextGroupNumber,description:filter.description,domain:filter.domain,isDefault:"is_default"in filter?filter.is_default:true,type:"filter",};});this.nextGroupNumber++;this._createGroupOfSearchItems(pregroup);}
_createGroupOfFavorites(irFilters){let defaultFavoriteId=null;irFilters.forEach((irFilter)=>{const favorite=this._irFilterToFavorite(irFilter);this._createGroupOfSearchItems([favorite]);if(favorite.isDefault){defaultFavoriteId=favorite.id;}});return defaultFavoriteId;}
_createGroupOfSearchItems(pregroup){pregroup.forEach((preSearchItem)=>{const searchItem=Object.assign(preSearchItem,{groupId:this.nextGroupId,id:this.nextId,});this.searchItems[this.nextId]=searchItem;this.nextId++;});this.nextGroupId++;}
_enrichItem(searchItem){if(searchItem.type==="field"&&searchItem.fieldType==="properties"){return{...searchItem};}
const queryElements=this.query.filter((queryElem)=>queryElem.searchItemId===searchItem.id);const isActive=Boolean(queryElements.length);const enrichSearchItem=Object.assign({isActive},searchItem);function _enrichOptions(options,selectedIds){return options.map((o)=>{const{description,id,groupNumber}=o;const isActive=selectedIds.some((optionId)=>optionId===id);return{description,id,groupNumber,isActive};});}
switch(searchItem.type){case"comparison":{const{dateFilterId}=searchItem;const dateFilterIsActive=this.query.some((queryElem)=>queryElem.searchItemId===dateFilterId);if(!dateFilterIsActive){return null;}
break;}
case"dateFilter":enrichSearchItem.options=_enrichOptions(this.optionGenerators,queryElements.map((queryElem)=>queryElem.generatorId));break;case"dateGroupBy":enrichSearchItem.options=_enrichOptions(this.intervalOptions,queryElements.map((queryElem)=>queryElem.intervalId));break;case"field":case"field_property":enrichSearchItem.autocompleteValues=queryElements.map((queryElem)=>queryElem.autocompleteValue);break;}
return enrichSearchItem;}
_ensureCategoryValue(category,valueIds){if(!valueIds.includes(category.activeValueId)){category.activeValueId=valueIds[0];}}
_extractSearchDefaultsFromGlobalContext(){const searchDefaults={};const searchPanelDefaults={};for(const key in this.globalContext){const defaultValue=this.globalContext[key];const searchDefaultMatch=/^search_default_(.*)$/.exec(key);if(searchDefaultMatch){if(defaultValue){searchDefaults[searchDefaultMatch[1]]=defaultValue;}
delete this.globalContext[key];continue;}
const searchPanelDefaultMatch=/^searchpanel_default_(.*)$/.exec(key);if(searchPanelDefaultMatch){searchPanelDefaults[searchPanelDefaultMatch[1]]=defaultValue;delete this.globalContext[key];}}
return{searchDefaults,searchPanelDefaults};}
async _fetchCategories(categories){const filterDomain=this._getFilterDomain();const searchDomain=this.searchDomain;await Promise.all(categories.map(async(category)=>{const result=await this.orm.call(this.resModel,"search_panel_select_range",[category.fieldName],{category_domain:this._getCategoryDomain(category.id),context:this.globalContext,enable_counters:category.enableCounters,expand:category.expand,filter_domain:filterDomain,hierarchize:category.hierarchize,limit:category.limit,search_domain:searchDomain,});this._createCategoryTree(category.id,result);}));}
async _fetchFilters(filters){const evalContext={};for(const category of this.categories){evalContext[category.fieldName]=category.activeValueId;}
const categoryDomain=this._getCategoryDomain();const searchDomain=this.searchDomain;await Promise.all(filters.map(async(filter)=>{const result=await this.orm.call(this.resModel,"search_panel_select_multi_range",[filter.fieldName],{category_domain:categoryDomain,comodel_domain:new Domain(filter.domain).toList(evalContext),context:this.globalContext,enable_counters:filter.enableCounters,filter_domain:this._getFilterDomain(filter.id),expand:filter.expand,group_by:filter.groupBy||false,group_domain:this._getGroupDomain(filter),limit:filter.limit,search_domain:searchDomain,});this._createFilterTree(filter.id,result);}));}
async _fetchSections(categoriesToLoad,filtersToLoad){await this._fetchCategories(categoriesToLoad);await this._fetchFilters(filtersToLoad);this.searchPanelInfo.loaded=true;}
_getActiveComparison(){for(const queryElem of this.query){const searchItem=this.searchItems[queryElem.searchItemId];if(searchItem.type==="comparison"){return searchItem;}}
return null;}
_getCategoryDomain(excludedCategoryId){const domain=[];for(const category of this.categories){if(category.id===excludedCategoryId||!category.activeValueId){continue;}
const field=this.searchViewFields[category.fieldName];const operator=field.type==="many2one"&&category.parentField?"child_of":"=";domain.push([category.fieldName,operator,category.activeValueId]);}
return domain;}
_getContext(){const groups=this._getGroups();const contexts=[this.userService.context];for(const group of groups){for(const activeItem of group.activeItems){const context=this._getSearchItemContext(activeItem);if(context){contexts.push(context);}}}
let context;try{context=makeContext(contexts);return context;}catch(error){throw new Error(_t("Failed to evaluate the context: %(context)s.\n%(error)s",{context,error:error.message,}));}}
_getDateFilterDomain(dateFilter,generatorIds,key="domain"){const{fieldName,fieldType}=dateFilter;const dateFilterRange=constructDateDomain(this.referenceMoment,fieldName,fieldType,generatorIds);return dateFilterRange[key];}
_getDisplay(display={}){const{viewTypes}=this.searchPanelInfo;const{bannerRoute,viewType}=this.env.config;return{controlPanel:"controlPanel"in display?display.controlPanel:{},searchPanel:this.sections.size&&(!viewType||viewTypes.includes(viewType))&&("searchPanel"in display?display.searchPanel:true),banner:Boolean(bannerRoute),};}
_getDomain(params={}){const withSearchPanel="withSearchPanel"in params?params.withSearchPanel:true;const withGlobal="withGlobal"in params?params.withGlobal:true;const groups=this._getGroups();const domains=[];if(withGlobal){domains.push(this.globalDomain);}
for(const group of groups){const groupActiveItemDomains=[];for(const activeItem of group.activeItems){const domain=this._getSearchItemDomain(activeItem);if(domain){groupActiveItemDomains.push(domain);}}
const groupDomain=Domain.or(groupActiveItemDomains);domains.push(groupDomain);}
if(this.display.searchPanel&&withSearchPanel){domains.push(this._getSearchPanelDomain());}
let domain;try{domain=Domain.and(domains);return params.raw?domain:domain.toList(this.domainEvalContext);}catch(error){throw new Error(_t("Failed to evaluate the domain: %(domain)s.\n%(error)s",{domain:domain.toString(),error:error.message,}));}}
_getFacets(){const facets=[];const groups=this._getGroups();for(const group of groups){const groupActiveItemDomains=[];const values=[];let title;let type;for(const activeItem of group.activeItems){const domain=this._getSearchItemDomain(activeItem,{withDateFilterDomain:true,});if(domain){groupActiveItemDomains.push(domain);}
const searchItem=this.searchItems[activeItem.searchItemId];switch(searchItem.type){case"field_property":case"field":{type="field";title=searchItem.description;for(const autocompleteValue of activeItem.autocompletValues){values.push(autocompleteValue.label);}
break;}
case"groupBy":{type="groupBy";values.push(searchItem.description);break;}
case"dateGroupBy":{type="groupBy";for(const intervalId of activeItem.intervalIds){const option=this.intervalOptions.find((o)=>o.id===intervalId);values.push(`${searchItem.description}: ${option.description}`);}
break;}
case"dateFilter":{type="filter";const periodDescription=this._getDateFilterDomain(searchItem,activeItem.generatorIds,"description");values.push(`${searchItem.description}: ${periodDescription}`);break;}
default:{type=searchItem.type;values.push(searchItem.description);}}}
const facet={groupId:group.id,type,values,separator:type==="groupBy"?">":_t("or"),};if(type==="field"){facet.title=title;}else{facet.icon=FACET_ICONS[type];facet.color=FACET_COLORS[type];}
if(groupActiveItemDomains.length){facet.domain=Domain.or(groupActiveItemDomains).toString();}
facets.push(facet);}
return facets;}
_getFieldDomain(field,autocompleteValues){const domains=autocompleteValues.map(({label,value,operator})=>{let domain;if(field.filterDomain){domain=new Domain(field.filterDomain).toList({self:label.trim(),raw_value:value,});}else if(field.type==="field"){domain=[[field.fieldName,operator,value]];}else if(field.type==="field_property"){domain=[field.propertyDomain,[`${field.fieldName}.${field.propertyFieldDefinition.name}`,operator,value],];}
return new Domain(domain);});return Domain.or(domains);}
_getFilterDomain(excludedFilterId){const domain=[];function addCondition(fieldName,valueMap){const ids=[];for(const[valueId,value]of valueMap){if(value.checked){ids.push(valueId);}}
if(ids.length){domain.push([fieldName,"in",ids]);}}
for(const filter of this.filters){if(filter.id===excludedFilterId){continue;}
const{fieldName,groups,values}=filter;if(groups){for(const group of groups.values()){addCondition(fieldName,group.values);}}else{addCondition(fieldName,values);}}
return domain;}
_getGroupBy(){const groups=this._getGroups();const groupBys=[];for(const group of groups){for(const activeItem of group.activeItems){const activeItemGroupBys=this._getSearchItemGroupBys(activeItem);if(activeItemGroupBys){groupBys.push(...activeItemGroupBys);}}}
const groupBy=groupBys.length?groupBys:this.globalGroupBy.slice();return typeof groupBy==="string"?[groupBy]:groupBy;}
_getGroupDomain(filter){const{fieldName,groups,enableCounters}=filter;const{type:fieldType}=this.searchViewFields[fieldName];if(!enableCounters||!groups){return{many2one:[],many2many:{},}[fieldType];}
let groupDomain=null;if(fieldType==="many2one"){for(const group of groups.values()){const valueIds=[];let active=false;for(const[valueId,value]of group.values){const{checked}=value;valueIds.push(valueId);if(checked){active=true;}}
if(active){if(groupDomain){groupDomain=[[0,"=",1]];break;}else{groupDomain=[[fieldName,"in",valueIds]];}}}}else if(fieldType==="many2many"){const checkedValueIds=new Map();groups.forEach(({values},groupId)=>{values.forEach(({checked},valueId)=>{if(checked){if(!checkedValueIds.has(groupId)){checkedValueIds.set(groupId,[]);}
checkedValueIds.get(groupId).push(valueId);}});});groupDomain={};for(const[gId,ids]of checkedValueIds.entries()){for(const groupId of groups.keys()){if(gId!==groupId){const key=JSON.stringify(groupId);if(!groupDomain[key]){groupDomain[key]=[];}
groupDomain[key].push([fieldName,"in",ids]);}}}}
return groupDomain;}
_getGroups(){const preGroups=[];for(const queryElem of this.query){const{searchItemId}=queryElem;const{groupId}=this.searchItems[searchItemId];let preGroup=preGroups.find((group)=>group.id===groupId);if(!preGroup){preGroup={id:groupId,queryElements:[]};preGroups.push(preGroup);}
preGroup.queryElements.push(queryElem);}
const groups=[];for(const preGroup of preGroups){const{queryElements,id}=preGroup;const activeItems=[];for(const queryElem of queryElements){const{searchItemId}=queryElem;let activeItem=activeItems.find(({searchItemId:id})=>id===searchItemId);if("generatorId"in queryElem){if(!activeItem){activeItem={searchItemId,generatorIds:[]};activeItems.push(activeItem);}
activeItem.generatorIds.push(queryElem.generatorId);}else if("intervalId"in queryElem){if(!activeItem){activeItem={searchItemId,intervalIds:[]};activeItems.push(activeItem);}
activeItem.intervalIds.push(queryElem.intervalId);}else if("autocompleteValue"in queryElem){if(!activeItem){activeItem={searchItemId,autocompletValues:[]};activeItems.push(activeItem);}
activeItem.autocompletValues.push(queryElem.autocompleteValue);}else{if(!activeItem){activeItem={searchItemId};activeItems.push(activeItem);}}}
for(const activeItem of activeItems){if("intervalIds"in activeItem){activeItem.intervalIds.sort((g1,g2)=>rankInterval(g1)-rankInterval(g2));}}
groups.push({id,activeItems});}
return groups;}
_getIrFilterDescription(params={}){const{description,isDefault,isShared}=params;const fns=this.env.__getContext__.callbacks;const localContext=Object.assign({},...fns.map((fn)=>fn()));const gs=this.env.__getOrderBy__.callbacks;let localOrderBy;if(gs.length){localOrderBy=gs.flatMap((g)=>g());}
const context=makeContext([this._getContext(),localContext]);const userContext=this.userService.context;for(const key in context){if(key in userContext||/^search(panel)?_default_/.test(key)){delete context[key];}}
const domain=this._getDomain({raw:true,withGlobal:false}).toString();const groupBys=this._getGroupBy();const comparison=this.getFullComparison();const orderBy=localOrderBy||this._getOrderBy();const userId=isShared?false:this.userService.userId;const preFavorite={description,isDefault,domain,context,groupBys,orderBy,userId,};const irFilter={name:description,action_id:this.env.config.actionId,model_id:this.resModel,domain,is_default:isDefault,sort:JSON.stringify(orderBy.map((o)=>`${o.name}${o.asc === false ? " desc" : ""}`)),user_id:userId,context:{group_by:groupBys,...context},};if(comparison){preFavorite.comparison=comparison;irFilter.context.comparison=comparison;}
return{preFavorite,irFilter};}
_getOrderBy(){const groups=this._getGroups();const orderBy=[];for(const group of groups){for(const activeItem of group.activeItems){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];if(searchItem.type==="favorite"){orderBy.push(...searchItem.orderBy);}}}
return orderBy.length?orderBy:this.globalOrderBy;}
_getSearchItemContext(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field":{let context={};if(searchItem.context){try{const self=activeItem.autocompletValues.map((autocompleValue)=>autocompleValue.value);context=evaluateExpr(searchItem.context,{self});if(typeof context!=="object"){throw Error();}}catch(error){throw new Error(_t("Failed to evaluate the context: %(context)s.\n%(error)s",{context:searchItem.context,error:error.message,}));}}
if(searchItem.isDefault&&searchItem.fieldType==="many2one"){context[`default_${searchItem.fieldName}`]=searchItem.defaultAutocompleteValue.value;}
return context;}
case"favorite":case"filter":{return makeContext([searchItem.context&&deepCopy(searchItem.context)]);}
default:{return null;}}}
_getSearchItemDomain(activeItem,options={}){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"field_property":case"field":{return this._getFieldDomain(searchItem,activeItem.autocompletValues);}
case"dateFilter":{const{dateFilterId}=this._getActiveComparison()||{};if(options.withDateFilterDomain||!(this.searchMenuTypes.has("comparison")&&dateFilterId===searchItemId)){return this._getDateFilterDomain(searchItem,activeItem.generatorIds);}
return new Domain([]);}
case"filter":case"favorite":{return searchItem.domain;}
default:{return null;}}}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const searchItem=this.searchItems[searchItemId];switch(searchItem.type){case"dateGroupBy":{const{fieldName}=searchItem;return activeItem.intervalIds.map((intervalId)=>`${fieldName}:${intervalId}`);}
case"groupBy":{return[searchItem.fieldName];}
case"favorite":{return searchItem.groupBys;}
default:{return null;}}}
_getSelectedGeneratorIds(dateFilterId){const selectedOptionIds=[];for(const queryElem of this.query){if(queryElem.searchItemId===dateFilterId&&"generatorId"in queryElem){selectedOptionIds.push(queryElem.generatorId);}}
return selectedOptionIds;}
_getSearchPanelDomain(){return Domain.and([this._getCategoryDomain(),this._getFilterDomain()]);}
_importState(state){execute(arraytoMap,state,this);}
_irFilterToFavorite(irFilter){let userId=false;if(Array.isArray(irFilter.user_id)){userId=irFilter.user_id[0];}
const groupNumber=userId?FAVORITE_PRIVATE_GROUP:FAVORITE_SHARED_GROUP;const context=evaluateExpr(irFilter.context,this.userService.context);let groupBys=[];if(context.group_by){groupBys=context.group_by;delete context.group_by;}
let comparison;if(context.comparison){comparison=context.comparison;if(typeof comparison.range==="string"){comparison.range=new Domain(comparison.range).toList();}
if(typeof comparison.comparisonRange==="string"){comparison.comparisonRange=new Domain(comparison.comparisonRange).toList();}
delete context.comparison;}
let sort;try{sort=JSON.parse(irFilter.sort);}catch(err){if(err instanceof SyntaxError){sort=[];}else{throw err;}}
const orderBy=sort.map((order)=>{let fieldName;let asc;const sqlNotation=order.split(" ");if(sqlNotation.length>1){fieldName=sqlNotation[0];asc=sqlNotation[1]==="asc";}else{fieldName=order[0]==="-"?order.slice(1):order;asc=order[0]==="-"?false:true;}
return{asc:asc,name:fieldName,};});const favorite={context,description:irFilter.name,domain:irFilter.domain,groupBys,groupNumber,orderBy,removable:true,serverSideId:irFilter.id,type:"favorite",userId,};if(irFilter.is_default){favorite.isDefault=irFilter.is_default;}
if(comparison){favorite.comparison=comparison;}
return favorite;}
async _notify(){if(this.blockNotification){return;}
this._reset();await this._reloadSections();this.trigger("update");}
async _reloadSections(){this.blockNotification=true;const searchDomain=this._getDomain({withSearchPanel:false});const searchDomainChanged=this.searchPanelInfo.shouldReload||JSON.stringify(this.searchDomain)!==JSON.stringify(searchDomain);this.searchDomain=searchDomain;const toFetch=(section)=>section.enableCounters||(searchDomainChanged&&!section.expand);const categoriesToFetch=this.categories.filter(toFetch);const filtersToFetch=this.filters.filter(toFetch);if(searchDomainChanged||Boolean(categoriesToFetch.length+filtersToFetch.length)){if(this.display.searchPanel){this.sectionsPromise=this._fetchSections(categoriesToFetch,filtersToFetch);if(this._shouldWaitForData(searchDomainChanged)){await this.sectionsPromise;}}
this.searchPanelInfo.shouldReload=!this.display.searchPanel;}
this.blockNotification=false;}
_reset(){delete this._comparison;this._context=null;this._domain=null;this._groupBy=null;this._orderBy=null;}
_shouldWaitForData(searchDomainChanged){if(this.categories.length&&this.filters.some((filter)=>filter.domain!=="[]")){return true;}
if(!this.searchDomain.length){return false;}
return[...this.sections.values()].some((section)=>!section.expand&&searchDomainChanged);}
__legacyParseSearchPanelArchAnyway(searchViewDescription,searchViewFields){if(this.searchPanelInfo){return;}
const parser=new SearchArchParser(searchViewDescription,searchViewFields);const{searchPanelInfo}=parser.parse();this.searchPanelInfo={...searchPanelInfo,loaded:false,shouldReload:false};}}
return __exports;});;

/* /web/static/src/search/search_panel/search_panel.js */
odoo.define('@web/search/search_panel/search_panel',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useBus}=require("@web/core/utils/hooks");const{Component,onMounted,onWillUpdateProps,onWillStart,useRef,useState}=require("@odoo/owl");const isFilter=(s)=>s.type==="filter";const isActiveCategory=(s)=>s.type==="category"&&s.activeValueId;const nameOfCheckedValues=(values)=>{const names=[];for(const[,value]of values){if(value.checked){names.push(value.display_name);}}
return names;};const SearchPanel=__exports.SearchPanel=class SearchPanel extends Component{setup(){this.state=useState({active:{},expanded:{},showMobileSearch:false,});this.root=useRef("root");this.scrollTop=0;this.hasImportedState=false;this.importState(this.props.importedState);useBus(this.env.searchModel,"update",async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();this.render();});onWillStart(async()=>{await this.env.searchModel.sectionsPromise;this.expandDefaultValue();this.updateActiveValues();});onWillUpdateProps(async()=>{await this.env.searchModel.sectionsPromise;this.updateActiveValues();});onMounted(()=>{this.updateGroupHeadersChecked();if(this.hasImportedState){this.root.el.scroll({top:this.scrollTop});}});}
get sections(){return this.env.searchModel.getSections((s)=>!s.empty);}
exportState(){const exported={expanded:this.state.expanded,scrollTop:this.root.el.scrollTop,};return JSON.stringify(exported);}
importState(stringifiedState){this.hasImportedState=Boolean(stringifiedState);if(this.hasImportedState){const state=JSON.parse(stringifiedState);this.state.expanded=state.expanded;this.scrollTop=state.scrollTop;}}
expandDefaultValue(){if(this.hasImportedState){return;}
const categories=this.env.searchModel.getSections((s)=>s.type==="category");for(const category of categories){this.state.expanded[category.id]={};if(category.activeValueId){const ancestorIds=this.getAncestorValueIds(category,category.activeValueId);for(const ancestorId of ancestorIds){this.state.expanded[category.id][ancestorId]=true;}}}}
getAncestorValueIds(category,categoryValueId){const{parentId}=category.values.get(categoryValueId);return parentId?[...this.getAncestorValueIds(category,parentId),parentId]:[];}
getCategorySelection(){const activeCategories=this.env.searchModel.getSections(isActiveCategory);const selection=[];for(const category of activeCategories){const parentIds=this.getAncestorValueIds(category,category.activeValueId);const orderedCategoryNames=[...parentIds,category.activeValueId].map((valueId)=>category.values.get(valueId).display_name);selection.push({values:orderedCategoryNames,icon:category.icon,color:category.color,});}
return selection;}
getFilterSelection(){const filters=this.env.searchModel.getSections(isFilter);const selection=[];for(const{groups,values,icon,color}of filters){let filterValues;if(groups){filterValues=Object.keys(groups).map((groupId)=>nameOfCheckedValues(groups[groupId].values)).flat();}else if(values){filterValues=nameOfCheckedValues(values);}
if(filterValues.length){selection.push({values:filterValues,icon,color});}}
return selection;}
async toggleCategory(category,value){if(value.childrenIds.length){const categoryState=this.state.expanded[category.id];if(categoryState[value.id]&&category.activeValueId===value.id){delete categoryState[value.id];}else{categoryState[value.id]=true;}}
if(category.activeValueId!==value.id){this.env.searchModel.toggleCategoryValue(category.id,value.id);}}
toggleFilterGroup(filterId,{values}){const valueIds=[];const checked=[...values.values()].every((value)=>this.state.active[filterId][value.id]);values.forEach(({id})=>{valueIds.push(id);this.state.active[filterId][id]=!checked;});this.env.searchModel.toggleFilterValues(filterId,valueIds,!checked);}
toggleFilterValue(filterId,valueId,{currentTarget}){this.state.active[filterId][valueId]=currentTarget.checked;this.updateGroupHeadersChecked();this.env.searchModel.toggleFilterValues(filterId,[valueId]);}
updateActiveValues(){for(const section of this.sections){if(section.type==="category"){this.state.active[section.id]=section.activeValueId;}else{this.state.active[section.id]={};if(section.groups){for(const group of section.groups.values()){for(const value of group.values.values()){this.state.active[section.id][value.id]=value.checked;}}}
if(section&&section.values){for(const value of section.values.values()){this.state.active[section.id][value.id]=value.checked;}}}}}
updateGroupHeadersChecked(){const groups=this.root.el.querySelectorAll(":scope .o_search_panel_filter_group");for(const group of groups){const header=group.querySelector(":scope .o_search_panel_group_header input");const vals=[...group.querySelectorAll(":scope .o_search_panel_filter_value input")];header.checked=false;header.indeterminate=false;if(vals.every((v)=>v.checked)){header.checked=true;}else if(vals.some((v)=>v.checked)){header.indeterminate=true;}}}}
SearchPanel.props={importedState:{type:String,optional:true},};SearchPanel.subTemplates={category:"web.SearchPanel.Category",filtersGroup:"web.SearchPanel.FiltersGroup",};SearchPanel.template="web.SearchPanel";return __exports;});;

/* /web/static/src/search/utils/dates.js */
odoo.define('@web/search/utils/dates',['@web/core/l10n/translation','@web/core/domain','@web/core/l10n/dates','@web/core/l10n/localization'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const DEFAULT_PERIOD=__exports.DEFAULT_PERIOD="this_month";const QUARTERS=__exports.QUARTERS={1:{description:_t("Q1"),coveredMonths:[1,2,3]},2:{description:_t("Q2"),coveredMonths:[4,5,6]},3:{description:_t("Q3"),coveredMonths:[7,8,9]},4:{description:_t("Q4"),coveredMonths:[10,11,12]},};const MONTH_OPTIONS=__exports.MONTH_OPTIONS={this_month:{id:"this_month",groupNumber:1,format:"MMMM",plusParam:{},granularity:"month",},last_month:{id:"last_month",groupNumber:1,format:"MMMM",plusParam:{months:-1},granularity:"month",},antepenultimate_month:{id:"antepenultimate_month",groupNumber:1,format:"MMMM",plusParam:{months:-2},granularity:"month",},};const QUARTER_OPTIONS=__exports.QUARTER_OPTIONS={fourth_quarter:{id:"fourth_quarter",groupNumber:1,description:QUARTERS[4].description,setParam:{quarter:4},granularity:"quarter",},third_quarter:{id:"third_quarter",groupNumber:1,description:QUARTERS[3].description,setParam:{quarter:3},granularity:"quarter",},second_quarter:{id:"second_quarter",groupNumber:1,description:QUARTERS[2].description,setParam:{quarter:2},granularity:"quarter",},first_quarter:{id:"first_quarter",groupNumber:1,description:QUARTERS[1].description,setParam:{quarter:1},granularity:"quarter",},};const YEAR_OPTIONS=__exports.YEAR_OPTIONS={this_year:{id:"this_year",groupNumber:2,format:"yyyy",plusParam:{},granularity:"year",},last_year:{id:"last_year",groupNumber:2,format:"yyyy",plusParam:{years:-1},granularity:"year",},antepenultimate_year:{id:"antepenultimate_year",groupNumber:2,format:"yyyy",plusParam:{years:-2},granularity:"year",},};const PERIOD_OPTIONS=__exports.PERIOD_OPTIONS=Object.assign({},MONTH_OPTIONS,QUARTER_OPTIONS,YEAR_OPTIONS);const DEFAULT_INTERVAL=__exports.DEFAULT_INTERVAL="month";const INTERVAL_OPTIONS=__exports.INTERVAL_OPTIONS={year:{description:_t("Year"),id:"year",groupNumber:1},quarter:{description:_t("Quarter"),id:"quarter",groupNumber:1},month:{description:_t("Month"),id:"month",groupNumber:1},week:{description:_t("Week"),id:"week",groupNumber:1},day:{description:_t("Day"),id:"day",groupNumber:1},};const COMPARISON_OPTIONS=__exports.COMPARISON_OPTIONS={previous_period:{description:_t("Previous Period"),id:"previous_period",},previous_year:{description:_t("Previous Year"),id:"previous_year",plusParam:{years:-1},},};const PER_YEAR=__exports.PER_YEAR={year:1,quarter:4,month:12,};__exports.constructDateDomain=constructDateDomain;function constructDateDomain(referenceMoment,fieldName,fieldType,selectedOptionIds,comparisonOptionId){let plusParam;let selectedOptions;if(comparisonOptionId){[plusParam,selectedOptions]=getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId);}else{selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);}
const yearOptions=selectedOptions.year;const otherOptions=[...(selectedOptions.quarter||[]),...(selectedOptions.month||[])];sortPeriodOptions(yearOptions);sortPeriodOptions(otherOptions);const ranges=[];for(const yearOption of yearOptions){const constructRangeParams={referenceMoment,fieldName,fieldType,plusParam,};if(otherOptions.length){for(const option of otherOptions){const setParam=Object.assign({},yearOption.setParam,option?option.setParam:{});const{granularity}=option;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}else{const{granularity,setParam}=yearOption;const range=constructDateRange(Object.assign({granularity,setParam},constructRangeParams));ranges.push(range);}}
const domain=Domain.combine(ranges.map((range)=>range.domain),"OR");const description=ranges.map((range)=>range.description).join("/");return{domain,description};}
__exports.constructDateRange=constructDateRange;function constructDateRange(params){const{referenceMoment,fieldName,fieldType,granularity,setParam,plusParam}=params;if("quarter"in setParam){setParam.month=QUARTERS[setParam.quarter].coveredMonths[0];delete setParam.quarter;}
const date=referenceMoment.set(setParam).plus(plusParam||{});const leftDate=date.startOf(granularity);const rightDate=date.endOf(granularity);let leftBound;let rightBound;if(fieldType==="date"){leftBound=serializeDate(leftDate);rightBound=serializeDate(rightDate);}else{leftBound=serializeDateTime(leftDate);rightBound=serializeDateTime(rightDate);}
const domain=new Domain(["&",[fieldName,">=",leftBound],[fieldName,"<=",rightBound]]);const descriptions=[date.toFormat("yyyy")];const method=localization.direction==="rtl"?"push":"unshift";if(granularity==="month"){descriptions[method](date.toFormat("MMMM"));}else if(granularity==="quarter"){const quarter=date.quarter;descriptions[method](QUARTERS[quarter].description.toString());}
const description=descriptions.join(" ");return{domain,description};}
__exports.getComparisonOptions=getComparisonOptions;function getComparisonOptions(){return getOptionsWithDescriptions(COMPARISON_OPTIONS);}
__exports.getComparisonParams=getComparisonParams;function getComparisonParams(referenceMoment,selectedOptionIds,comparisonOptionId){const comparisonOption=COMPARISON_OPTIONS[comparisonOptionId];const selectedOptions=getSelectedOptions(referenceMoment,selectedOptionIds);if(comparisonOption.plusParam){return[comparisonOption.plusParam,selectedOptions];}
const plusParam={};let globalGranularity="year";if(selectedOptions.month){globalGranularity="month";}else if(selectedOptions.quarter){globalGranularity="quarter";}
const granularityFactor=PER_YEAR[globalGranularity];const years=selectedOptions.year.map((o)=>o.setParam.year);const yearMin=Math.min(...years);const yearMax=Math.max(...years);let optionMin=0;let optionMax=0;if(selectedOptions.quarter){const quarters=selectedOptions.quarter.map((o)=>o.setParam.quarter);if(globalGranularity==="month"){delete selectedOptions.quarter;for(const quarter of quarters){for(const month of QUARTERS[quarter].coveredMonths){const monthOption=selectedOptions.month.find((o)=>o.setParam.month===month);if(!monthOption){selectedOptions.month.push({setParam:{month},granularity:"month",});}}}}else{optionMin=Math.min(...quarters);optionMax=Math.max(...quarters);}}
if(selectedOptions.month){const months=selectedOptions.month.map((o)=>o.setParam.month);optionMin=Math.min(...months);optionMax=Math.max(...months);}
const num=-1+granularityFactor*(yearMin-yearMax)+optionMin-optionMax;const key=globalGranularity==="year"?"years":globalGranularity==="month"?"months":"quarters";plusParam[key]=num;return[plusParam,selectedOptions];}
__exports.getIntervalOptions=getIntervalOptions;function getIntervalOptions(){return getOptionsWithDescriptions(INTERVAL_OPTIONS);}
__exports.getPeriodOptions=getPeriodOptions;function getPeriodOptions(referenceMoment){const options=[];const originalOptions=Object.values(PERIOD_OPTIONS);for(const option of originalOptions){const{id,groupNumber}=option;let description;let defaultYear;switch(option.granularity){case"quarter":description=option.description.toString();defaultYear=referenceMoment.set(option.setParam).year;break;case"month":case"year":{const date=referenceMoment.plus(option.plusParam);description=date.toFormat(option.format);defaultYear=date.year;break;}}
const setParam=getSetParam(option,referenceMoment);options.push({id,groupNumber,description,defaultYear,setParam});}
const periodOptions=[];for(const option of options){const{id,groupNumber,description,defaultYear}=option;const yearOption=options.find((o)=>o.setParam&&o.setParam.year===defaultYear);periodOptions.push({id,groupNumber,description,defaultYearId:yearOption.id,});}
return periodOptions;}
__exports.getOptionsWithDescriptions=getOptionsWithDescriptions;function getOptionsWithDescriptions(OPTIONS){const options=[];for(const option of Object.values(OPTIONS)){options.push(Object.assign({},option,{description:option.description.toString()}));}
return options;}
__exports.getSelectedOptions=getSelectedOptions;function getSelectedOptions(referenceMoment,selectedOptionIds){const selectedOptions={year:[]};for(const optionId of selectedOptionIds){const option=PERIOD_OPTIONS[optionId];const setParam=getSetParam(option,referenceMoment);const granularity=option.granularity;if(!selectedOptions[granularity]){selectedOptions[granularity]=[];}
selectedOptions[granularity].push({granularity,setParam});}
return selectedOptions;}
__exports.getSetParam=getSetParam;function getSetParam(periodOption,referenceMoment){if(periodOption.granularity==="quarter"){return periodOption.setParam;}
const date=referenceMoment.plus(periodOption.plusParam);const granularity=periodOption.granularity;const setParam={[granularity]:date[granularity]};return setParam;}
__exports.rankInterval=rankInterval;function rankInterval(intervalOptionId){return Object.keys(INTERVAL_OPTIONS).indexOf(intervalOptionId);}
__exports.sortPeriodOptions=sortPeriodOptions;function sortPeriodOptions(options){options.sort((o1,o2)=>{var _a,_b;const granularity1=o1.granularity;const granularity2=o2.granularity;if(granularity1===granularity2){return(((_a=o1.setParam[granularity1])!==null&&_a!==void 0?_a:0)-
((_b=o2.setParam[granularity1])!==null&&_b!==void 0?_b:0));}
return granularity1<granularity2?-1:1;});}
__exports.yearSelected=yearSelected;function yearSelected(selectedOptionIds){return selectedOptionIds.some((optionId)=>Object.keys(YEAR_OPTIONS).includes(optionId));}
return __exports;});;

/* /web/static/src/search/utils/group_by.js */
odoo.define('@web/search/utils/group_by',['@web/search/utils/dates'],function(require){'use strict';let __exports={};const{DEFAULT_INTERVAL,INTERVAL_OPTIONS}=require("@web/search/utils/dates");function errorMsg(descr){return`Invalid groupBy description: ${descr}`;}
__exports.getGroupBy=getGroupBy;function getGroupBy(descr,fields){let fieldName;let interval;let spec;[fieldName,interval]=descr.split(":");if(!fieldName){throw Error();}
if(fields){if(!fields[fieldName]){throw Error(errorMsg(descr));}
const fieldType=fields[fieldName].type;if(["date","datetime"].includes(fieldType)){if(!interval){interval=DEFAULT_INTERVAL;}else if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else if(interval){throw Error(errorMsg(descr));}else{spec=fieldName;interval=null;}}else{if(interval){if(!Object.keys(INTERVAL_OPTIONS).includes(interval)){throw Error(errorMsg(descr));}
spec=`${fieldName}:${interval}`;}else{spec=fieldName;interval=null;}}
return{fieldName,interval,spec,toJSON(){return spec;},};}
return __exports;});;

/* /web/static/src/search/utils/misc.js */
odoo.define('@web/search/utils/misc',[],function(require){'use strict';let __exports={};const FACET_ICONS=__exports.FACET_ICONS={filter:"fa fa-filter",groupBy:"oi oi-group",favorite:"fa fa-star",comparison:"fa fa-adjust",};const FACET_COLORS=__exports.FACET_COLORS={filter:"primary",groupBy:"action",favorite:"warning",comparison:"danger",};const GROUPABLE_TYPES=__exports.GROUPABLE_TYPES=["boolean","char","date","datetime","integer","many2one","many2many","selection","tags",];return __exports;});;

/* /web/static/src/search/utils/order_by.js */
odoo.define('@web/search/utils/order_by',[],function(require){'use strict';let __exports={};__exports.orderByToString=orderByToString;function orderByToString(orderBy){return orderBy.map((o)=>`${o.name} ${o.asc ? "ASC" : "DESC"}`).join(", ");}
__exports.stringToOrderBy=stringToOrderBy;function stringToOrderBy(string){if(!string){return[];}
return string.split(",").map((order)=>{const splitOrder=order.trim().split(" ");if(splitOrder.length===2){return{name:splitOrder[0],asc:splitOrder[1].toLowerCase()==="asc",};}else{return{name:splitOrder[0],asc:true,};}});}
return __exports;});;

/* /web/static/src/search/with_search/with_search.js */
odoo.define('@web/search/with_search/with_search',['@web/webclient/actions/action_hook','@odoo/owl','@web/search/search_model','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{CallbackRecorder,useSetupAction}=require("@web/webclient/actions/action_hook");const{Component,onWillStart,onWillUpdateProps,toRaw,useSubEnv}=require("@odoo/owl");const{SearchModel}=require("@web/search/search_model");const{useBus,useService}=require("@web/core/utils/hooks");const SEARCH_KEYS=__exports.SEARCH_KEYS=["comparison","context","domain","groupBy","orderBy"];const WithSearch=__exports.WithSearch=class WithSearch extends Component{setup(){if(!this.env.__getContext__){useSubEnv({__getContext__:new CallbackRecorder()});}
if(!this.env.__getOrderBy__){useSubEnv({__getOrderBy__:new CallbackRecorder()});}
const SearchModelClass=this.props.SearchModel||SearchModel;this.searchModel=new SearchModelClass(this.env,{user:useService("user"),orm:useService("orm"),view:useService("view"),field:useService("field"),name:useService("name"),},this.props.searchModelArgs);useSubEnv({searchModel:this.searchModel});useBus(this.searchModel,"update",this.render);useSetupAction({getGlobalState:()=>{return{searchModel:JSON.stringify(this.searchModel.exportState()),};},});onWillStart(async()=>{const config={...toRaw(this.props)};if(config.globalState&&config.globalState.searchModel){config.state=JSON.parse(config.globalState.searchModel);delete config.globalState;}
await this.searchModel.load(config);});onWillUpdateProps(async(nextProps)=>{const config={};for(const key of SEARCH_KEYS){if(nextProps[key]!==undefined){config[key]=nextProps[key];}}
await this.searchModel.reload(config);});}}
WithSearch.template="web.WithSearch";WithSearch.props={slots:Object,SearchModel:{type:Function,optional:true},resModel:String,globalState:{type:Object,optional:true},searchModelArgs:{type:Object,optional:true},display:{type:Object,optional:true},comparison:{type:[Object,{value:null}],optional:true},context:{type:Object,optional:true},domain:{type:Array,element:[String,Array],optional:true},groupBy:{type:Array,element:String,optional:true},orderBy:{type:Array,element:Object,optional:true},searchViewArch:{type:String,optional:true},searchViewFields:{type:Object,optional:true},searchViewId:{type:[Number,Boolean],optional:true},irFilters:{type:Array,element:Object,optional:true},loadIrFilters:{type:Boolean,optional:true},activateFavorite:{type:Boolean,optional:true},dynamicFilters:{type:Array,element:Object,optional:true},hideCustomGroupBy:{type:Boolean,optional:true},searchMenuTypes:{type:Array,element:String,optional:true},};return __exports;});;

/* /web/static/src/views/calendar/calendar_arch_parser.js */
odoo.define('@web/views/calendar/calendar_arch_parser',['@web/core/browser/browser','@web/core/py_js/py','@web/core/utils/xml','@web/views/fields/field','@web/views/utils'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{evaluateExpr}=require("@web/core/py_js/py");const{visitXML}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const{archParseBoolean}=require("@web/views/utils");const FIELD_ATTRIBUTE_NAMES=["date_start","date_delay","date_stop","all_day","recurrence_update","create_name_field","color",];const SCALES=["day","week","month","year"];const CalendarParseArchError=__exports.CalendarParseArchError=class CalendarParseArchError extends Error{}
const CalendarArchParser=__exports.CalendarArchParser=class CalendarArchParser{parse(arch,models,modelName){const fields=models[modelName];const fieldNames=new Set(fields.display_name?["display_name"]:[]);const fieldMapping={date_start:"date_start"};let jsClass=null;let eventLimit=5;let scales=[...SCALES];const sessionScale=browser.sessionStorage.getItem("calendar-scale");let scale=sessionScale||"week";let canCreate=true;let canDelete=true;let quickCreate=true;let quickCreateViewId=null;let hasEditDialog=false;let showUnusualDays=false;let isDateHidden=false;let isTimeHidden=false;let formViewId=false;const popoverFieldNodes={};const filtersInfo={};visitXML(arch,(node)=>{switch(node.tagName){case"calendar":{if(!node.hasAttribute("date_start")){throw new CalendarParseArchError(`Calendar view has not defined "date_start" attribute.`);}
jsClass=node.getAttribute("js_class");for(const fieldAttrName of FIELD_ATTRIBUTE_NAMES){if(node.hasAttribute(fieldAttrName)){const fieldName=node.getAttribute(fieldAttrName);fieldNames.add(fieldName);fieldMapping[fieldAttrName]=fieldName;}}
if(node.hasAttribute("event_limit")){eventLimit=evaluateExpr(node.getAttribute("event_limit"));if(!Number.isInteger(eventLimit)){throw new CalendarParseArchError(`Calendar view's event limit should be a number`);}}
if(node.hasAttribute("scales")){const scalesAttr=node.getAttribute("scales");scales=scalesAttr.split(",").filter((scale)=>SCALES.includes(scale));}
if(node.hasAttribute("mode")){scale=node.getAttribute("mode");if(!scales.includes(scale)){throw new CalendarParseArchError(`Calendar view cannot display mode: ${scale}`);}}
if(node.hasAttribute("create")){canCreate=archParseBoolean(node.getAttribute("create"),true);}
if(node.hasAttribute("delete")){canDelete=archParseBoolean(node.getAttribute("delete"),true);}
if(node.hasAttribute("quick_create")){quickCreate=archParseBoolean(node.getAttribute("quick_create"),true);if(quickCreate&&node.hasAttribute("quick_create_view_id")){quickCreateViewId=parseInt(node.getAttribute("quick_create_view_id"),10);}}
if(node.hasAttribute("event_open_popup")){hasEditDialog=archParseBoolean(node.getAttribute("event_open_popup"));}
if(node.hasAttribute("show_unusual_days")){showUnusualDays=archParseBoolean(node.getAttribute("show_unusual_days"));}
if(node.hasAttribute("hide_date")){isDateHidden=archParseBoolean(node.getAttribute("hide_date"));}
if(node.hasAttribute("hide_time")){isTimeHidden=archParseBoolean(node.getAttribute("hide_time"));}
if(node.hasAttribute("form_view_id")){formViewId=parseInt(node.getAttribute("form_view_id"),10);}
break;}
case"field":{const fieldName=node.getAttribute("name");fieldNames.add(fieldName);const fieldInfo=Field.parseFieldNode(node,models,modelName,"calendar",jsClass);popoverFieldNodes[fieldName]=fieldInfo;const field=fields[fieldName];if(!node.hasAttribute("invisible")||node.hasAttribute("filters")){let filterInfo=null;if(node.hasAttribute("avatar_field")||node.hasAttribute("write_model")||node.hasAttribute("write_field")||node.hasAttribute("color")||node.hasAttribute("filters")){filtersInfo[fieldName]=filtersInfo[fieldName]||{avatarFieldName:null,colorFieldName:null,fieldName,filterFieldName:null,label:field.string,resModel:field.relation,writeFieldName:null,writeResModel:null,};filterInfo=filtersInfo[fieldName];}
if(node.hasAttribute("filter_field")){filterInfo.filterFieldName=node.getAttribute("filter_field");}
if(node.hasAttribute("avatar_field")){filterInfo.avatarFieldName=node.getAttribute("avatar_field");}
if(node.hasAttribute("write_model")){filterInfo.writeResModel=node.getAttribute("write_model");}
if(node.hasAttribute("write_field")){filterInfo.writeFieldName=node.getAttribute("write_field");}
if(node.hasAttribute("filters")){if(node.hasAttribute("color")){filterInfo.colorFieldName=node.getAttribute("color");}
if(node.hasAttribute("avatar_field")&&field.relation){if(field.relation.includes(["res.users","res.partners","hr.employee",])){filterInfo.avatarFieldName="image_128";}}}}
break;}}});return{canCreate,canDelete,eventLimit,fieldMapping,fieldNames:[...fieldNames],filtersInfo,formViewId,hasEditDialog,quickCreate,quickCreateViewId,isDateHidden,isTimeHidden,popoverFieldNodes,scale,scales,showUnusualDays,};}}
return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_popover.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_popover',['@web/core/l10n/translation','@web/core/dialog/dialog','@web/core/py_js/py','@web/core/l10n/dates','@web/core/registry','@web/views/fields/field','@web/model/record','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{is24HourFormat}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{Field}=require("@web/views/fields/field");const{Record}=require("@web/model/record");const{getFormattedDateSpan}=require("@web/views/calendar/utils");const{Component,useExternalListener}=require("@odoo/owl");const CalendarCommonPopover=__exports.CalendarCommonPopover=class CalendarCommonPopover extends Component{setup(){this.time=null;this.timeDuration=null;this.date=null;this.dateDuration=null;useExternalListener(window,"pointerdown",(e)=>e.preventDefault(),{capture:true});this.computeDateTimeAndDuration();}
get activeFields(){return this.props.model.activeFields;}
get isEventEditable(){return true;}
get isEventDeletable(){return this.props.model.canDelete;}
get hasFooter(){return this.isEventEditable||this.isEventDeletable;}
isInvisible(fieldNode,record){return evaluateBooleanExpr(fieldNode.invisible,record.evalContextWithVirtualIds);}
getFormattedValue(fieldName,record){const fieldInfo=this.props.model.popoverFieldNodes[fieldName];const field=this.props.model.fields[fieldName];let format;const formattersRegistry=registry.category("formatters");if(fieldInfo.widget&&formattersRegistry.contains(fieldInfo.widget)){format=formattersRegistry.get(fieldInfo.widget);}else{format=formattersRegistry.get(field.type);}
return format(record.data[fieldName]);}
computeDateTimeAndDuration(){const record=this.props.record;const{start,end}=record;const isSameDay=start.hasSame(end,"day");if(!record.isTimeHidden&&!record.isAllDay&&isSameDay){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";this.time=`${start.toFormat(timeFormat)} - ${end.toFormat(timeFormat)}`;const duration=end.diff(start,["hours","minutes"]);const formatParts=[];if(duration.hours>0){const hourString=duration.hours===1?_t("hour"):_t("hours");formatParts.push(`h '${hourString}'`);}
if(duration.minutes>0){const minuteStr=duration.minutes===1?_t("minute"):_t("minutes");formatParts.push(`m '${minuteStr}'`);}
this.timeDuration=duration.toFormat(formatParts.join(", "));}
if(!this.props.model.isDateHidden){this.date=getFormattedDateSpan(start,end);if(record.isAllDay){if(isSameDay){this.dateDuration=_t("All day");}else{const duration=end.plus({day:1}).diff(start,"days");this.dateDuration=duration.toFormat(`d '${_t("days")}'`);}}}}
onEditEvent(){this.props.editRecord(this.props.record);this.props.close();}
onDeleteEvent(){this.props.deleteRecord(this.props.record);this.props.close();}}
CalendarCommonPopover.components={Dialog,Field,Record,};CalendarCommonPopover.template="web.CalendarCommonPopover";CalendarCommonPopover.subTemplates={popover:"web.CalendarCommonPopover.popover",body:"web.CalendarCommonPopover.body",footer:"web.CalendarCommonPopover.footer",};CalendarCommonPopover.props={close:Function,record:Object,model:Object,createRecord:Function,deleteRecord:Function,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/calendar_common/calendar_common_renderer.js */
odoo.define('@web/views/calendar/calendar_common/calendar_common_renderer',['@web/core/l10n/translation','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/utils/render','@web/core/utils/timing','@web/views/calendar/colors','@web/views/calendar/hooks','@web/views/calendar/calendar_common/calendar_common_popover','@web/core/browser/browser','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{is24HourFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{renderToString}=require("@web/core/utils/render");const{useDebounced}=require("@web/core/utils/timing");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useClickHandler,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarCommonPopover}=require("@web/views/calendar/calendar_common/calendar_common_popover");const{browser}=require("@web/core/browser/browser");const{getWeekNumber}=require("@web/views/calendar/utils");const{Component,onMounted,useEffect}=require("@odoo/owl");const SCALE_TO_FC_VIEW={day:"timeGridDay",week:"timeGridWeek",month:"dayGridMonth",};const SCALE_TO_HEADER_FORMAT={day:"DDD",week:"EEE d",month:"EEEE",};const SHORT_SCALE_TO_HEADER_FORMAT={...SCALE_TO_HEADER_FORMAT,day:"D",month:"EEE",};const HOUR_FORMATS={12:{hour:"numeric",minute:"2-digit",omitZeroMinute:true,meridiem:"short",},24:{hour:"numeric",minute:"2-digit",hour12:false,},};const{DateTime}=luxon;const CalendarCommonRenderer=__exports.CalendarCommonRenderer=class CalendarCommonRenderer extends Component{setup(){this.fc=useFullCalendar("fullCalendar",this.options);this.click=useClickHandler(this.onClick,this.onDblClick);this.popover=useCalendarPopover(this.constructor.components.Popover);this.onWindowResizeDebounced=useDebounced(this.onWindowResize,200);onMounted(()=>{if(this.props.model.scale==="day"||this.props.model.scale==="week"){browser.setTimeout(()=>{if(this.fc.api.view){this.fc.api.scrollToTime("06:00:00");}},0);}});useEffect(()=>{this.updateSize();});}
get options(){return{allDaySlot:true,allDayText:_t(""),columnHeaderFormat:this.env.isSmall?SHORT_SCALE_TO_HEADER_FORMAT[this.props.model.scale]:SCALE_TO_HEADER_FORMAT[this.props.model.scale],dateClick:this.onDateClick,dayRender:this.onDayRender,defaultDate:this.props.model.date.toISO(),defaultView:SCALE_TO_FC_VIEW[this.props.model.scale],dir:localization.direction,droppable:true,editable:this.props.model.canEdit,eventClick:this.onEventClick,eventDragStart:this.onEventDragStart,eventDrop:this.onEventDrop,eventLimit:this.props.model.eventLimit,eventLimitClick:this.onEventLimitClick,eventLimitText:this.env.isSmall?"":"more",eventMouseEnter:this.onEventMouseEnter,eventMouseLeave:this.onEventMouseLeave,eventRender:this.onEventRender,eventResizableFromStart:true,eventResize:this.onEventResize,eventResizeStart:this.onEventResizeStart,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek,header:false,height:"parent",locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,plugins:["dayGrid","interaction","timeGrid","luxon"],select:this.onSelect,selectAllow:this.isSelectionAllowed,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,slotLabelFormat:is24HourFormat()?HOUR_FORMATS[24]:HOUR_FORMATS[12],snapDuration:{minutes:15},timeZone:luxon.Settings.defaultZone.name,timeGridEventMinHeight:15,unselectAuto:false,weekLabel:this.props.model.scale==="month"&&this.env.isSmall?"":_t("Week"),weekends:this.props.isWeekendVisible,weekNumberCalculation:(date)=>getWeekNumber(date,this.props.model.firstDayOfWeek),weekNumbers:true,weekNumbersWithinDays:!this.env.isSmall,windowResize:this.onWindowResizeDebounced,columnHeaderHtml:this.getHeaderHtml,};}
getStartTime(record){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";return record.start.toFormat(timeFormat);}
getEndTime(record){const timeFormat=is24HourFormat()?"HH:mm":"hh:mm a";return record.end.toFormat(timeFormat);}
computeEventSelector(event){return`[data-event-id="${event.id}"]`;}
highlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.add(className);}}
unhighlightEvent(event,className){for(const el of this.fc.el.querySelectorAll(this.computeEventSelector(event))){el.classList.remove(className);}}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){const allDay=record.isAllDay||record.end.diff(record.start,"hours").hours>=24;return{id:record.id,title:record.title,start:record.start.toISO(),end:(["week","month"].includes(this.props.model.scale)&&allDay)||record.isAllDay||(allDay&&record.end.toMillis()!==record.end.startOf("day").toMillis())?record.end.plus({days:1}).toISO():record.end.toISO(),allDay:allDay,};}
getPopoverProps(record){return{record,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,record){const color=getColor(record.colorIndex);this.popover.open(target,this.getPopoverProps(record),`o_cw_popover o_calendar_color_${typeof color === "number" ? color : 0}`);}
updateSize(){let headerHeight=0;if(!this.env.isSmall){headerHeight=document.querySelector(".o_calendar_header")?.getBoundingClientRect()?.height??0;}
const height=window.innerHeight-this.fc.el.getBoundingClientRect().top-headerHeight;this.fc.el.style.height=`${height}px`;this.fc.api.updateSize();}
onClick(info){this.openPopover(info.el,this.props.model.records[info.event.id]);this.highlightEvent(info.event,"o_cw_custom_highlight");}
onDateClick(info){if(info?.jsEvent?.defaultPrevented){return;}
this.props.createRecord(this.fcEventToRecord(info));}
onDayRender(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){info.el.classList.add("o_calendar_disabled");}}
onDblClick(info){this.props.editRecord(this.props.model.records[info.event.id]);}
onEventClick(info){this.click(info);}
onEventRender(info){const{el,event}=info;el.dataset.eventId=event.id;el.classList.add("o_event");const record=this.props.model.records[event.id];if(record){const injectedContentStr=renderToString(this.constructor.eventTemplate,{...record,startTime:this.getStartTime(record),endTime:this.getEndTime(record),});const domParser=new DOMParser();const{children}=domParser.parseFromString(injectedContentStr,"text/html").body;el.querySelector(".fc-content").replaceWith(...children);const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}else if(typeof color==="number"){el.classList.add(`o_calendar_color_${color}`);}else{el.classList.add("o_calendar_color_0");}
if(record.isHatched){el.classList.add("o_event_hatched");}
if(record.isStriked){el.classList.add("o_event_striked");}
if(record.duration<=0.25){el.classList.add("o_event_oneliner");}
if(DateTime.now()>=record.end){el.classList.add("o_past_event");}
if(!record.isAllDay&&!record.isTimeHidden&&record.isMonth){el.classList.add("o_event_dot");}else if(record.isAllDay){el.classList.add("o_event_allday");}
if(!el.classList.contains("fc-bg")){const bg=document.createElement("div");bg.classList.add("fc-bg");el.appendChild(bg);}}}
async onSelect(info){info.jsEvent.preventDefault();this.popover.close();await this.props.createRecord(this.fcEventToRecord(info));this.fc.api.unselect();}
isSelectionAllowed(event){return event.end.getDate()===event.start.getDate()||event.allDay;}
onEventDrop(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event),{moved:true});}
onEventResize(info){this.fc.api.unselect();this.props.model.updateRecord(this.fcEventToRecord(info.event));}
fcEventToRecord(event){const{id,allDay,date,start,end}=event;const res={start:luxon.DateTime.fromJSDate(date||start),isAllDay:allDay,};if(end){res.end=luxon.DateTime.fromJSDate(end);if(["week","month"].includes(this.props.model.scale)&&allDay){res.end=res.end.minus({days:1});}}
if(id){const existingRecord=this.props.model.records[id];if(this.props.model.scale==="month"){res.start=res.start?.set({hour:existingRecord.start.hour,minute:existingRecord.start.minute,});if(existingRecord.end){res.end=res.end?.set({hour:existingRecord.end.hour,minute:existingRecord.end.minute,});}}
res.id=existingRecord.id;}
return res;}
onEventMouseEnter(info){this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventMouseLeave(info){if(!info.event.id){return;}
this.unhighlightEvent(info.event,"o_cw_custom_highlight");}
onEventDragStart(info){info.el.classList.add(info.view.type);this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventResizeStart(info){this.fc.api.unselect();this.highlightEvent(info.event,"o_cw_custom_highlight");}
onEventLimitClick(){this.fc.api.unselect();return"popover";}
onWindowResize(){this.updateSize();}
getHeaderHtml(date){const scale=this.props.model.scale;const{weekdayShort:weekdayShort,weekdayLong:weekdayLong,day,}=DateTime.fromJSDate(date);return renderToString(this.constructor.headerTemplate,{weekdayShort,weekdayLong,day,scale,});}}
CalendarCommonRenderer.components={Popover:CalendarCommonPopover,};CalendarCommonRenderer.template="web.CalendarCommonRenderer";CalendarCommonRenderer.eventTemplate="web.CalendarCommonRenderer.event";CalendarCommonRenderer.headerTemplate="web.CalendarCommonRendererHeader";return __exports;});;

/* /web/static/src/views/calendar/calendar_controller.js */
odoo.define('@web/views/calendar/calendar_controller',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/search/layout','@web/model/model','@web/views/view_dialogs/form_view_dialog','@web/views/view_hook','@web/core/datetime/datetime_picker','@web/views/calendar/filter_panel/calendar_filter_panel','@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel','@web/views/calendar/quick_create/calendar_quick_create','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/views/view_components/view_scale_selector','@web/search/cog_menu/cog_menu','@web/core/browser/browser','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{useSetupView}=require("@web/views/view_hook");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const{CalendarFilterPanel}=require("@web/views/calendar/filter_panel/calendar_filter_panel");const{CalendarMobileFilterPanel}=require("@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel");const{CalendarQuickCreate}=require("@web/views/calendar/quick_create/calendar_quick_create");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{ViewScaleSelector}=require("@web/views/view_components/view_scale_selector");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{browser}=require("@web/core/browser/browser");const{getWeekNumber}=require("@web/views/calendar/utils");const{Component,useState}=require("@odoo/owl");const{DateTime}=luxon;const SCALE_LABELS=__exports.SCALE_LABELS={day:_t("Day"),week:_t("Week"),month:_t("Month"),year:_t("Year"),};function useUniqueDialog(){const displayDialog=useOwnedDialogs();let close=null;return(...args)=>{if(close){close();}
close=displayDialog(...args);};}
const CalendarController=__exports.CalendarController=class CalendarController extends Component{setup(){this.action=useService("action");this.orm=useService("orm");this.displayDialog=useUniqueDialog();this.model=useModelWithSampleData(this.props.Model,{...this.props.archInfo,resModel:this.props.resModel,domain:this.props.domain,fields:this.props.fields,allFilter:this.props.state?.allFilter??{},date:this.props.state?.date,},{onWillStart:this.onWillStartModel.bind(this),});useSetupView({getLocalState:()=>this.model.exportedState,});const sessionShowSidebar=browser.sessionStorage.getItem("calendar.showSideBar");this.state=useState({isWeekendVisible:browser.localStorage.getItem("calendar.isWeekendVisible")!=null?JSON.parse(browser.localStorage.getItem("calendar.isWeekendVisible")):true,showSideBar:!this.env.isSmall&&Boolean(sessionShowSidebar!=null?JSON.parse(sessionShowSidebar):true),});this.searchBarToggler=useSearchBarToggler();}
get currentDate(){const meta=this.model.meta;const scale=meta.scale;if(this.env.isSmall&&["week","month"].includes(scale)){const date=meta.date||DateTime.now();let text="";if(scale==="week"){const startMonth=date.startOf("week");const endMonth=date.endOf("week");if(startMonth.toFormat("LLL")!==endMonth.toFormat("LLL")){text=`${startMonth.toFormat("LLL")}-${endMonth.toFormat("LLL")}`;}else{text=startMonth.toFormat("LLLL");}}else if(scale==="month"){text=date.toFormat("LLLL");}
return` - ${text} ${date.year}`;}else{return"";}}
get date(){return this.model.meta.date||DateTime.now();}
get today(){return DateTime.now().toFormat("d");}
get currentYear(){return this.date.toFormat("y");}
get dayHeader(){return`${this.date.toFormat("d")} ${this.date.toFormat("MMMM")} ${this.date.year}`;}
get weekHeader(){const{rangeStart,rangeEnd}=this.model;if(rangeStart.year!=rangeEnd.year){return`${rangeStart.toFormat("MMMM")} ${rangeStart.year} - ${rangeEnd.toFormat(
                "MMMM"
            )} ${rangeEnd.year}`;}else if(rangeStart.month!=rangeEnd.month){return`${rangeStart.toFormat("MMMM")} - ${rangeEnd.toFormat("MMMM")} ${
                rangeStart.year
            }`;}
return`${rangeStart.toFormat("MMMM")} ${rangeStart.year}`;}
get currentMonth(){return`${this.date.toFormat("MMMM")} ${this.date.year}`;}
get currentWeek(){return getWeekNumber(this.model.rangeStart);}
get rendererProps(){return{model:this.model,isWeekendVisible:this.model.scale==="day"||this.state.isWeekendVisible,createRecord:this.createRecord.bind(this),deleteRecord:this.deleteRecord.bind(this),editRecord:this.editRecord.bind(this),setDate:this.setDate.bind(this),};}
get containerProps(){return{model:this.model,};}
get datePickerProps(){return{type:"date",showWeekNumbers:false,maxPrecision:"days",daysOfWeekFormat:"narrow",onSelect:(date)=>{let scale="week";if(this.model.date.hasSame(date,"day")){const scales=["month","week","day"];scale=scales[(scales.indexOf(this.model.scale)+1)%scales.length];}else{const currentDate=this.model.date.weekday===7?this.model.date.plus({day:1}):this.model.date;const pickedDate=date.weekday===7?date.plus({day:1}):date;if(currentDate.hasSame(pickedDate,"week")){scale="day";}}
this.model.load({scale,date});},value:this.model.date,};}
get filterPanelProps(){return{model:this.model,};}
get mobileFilterPanelProps(){return{model:this.model,sideBarShown:this.state.showSideBar,toggleSideBar:()=>{this.state.showSideBar=!this.state.showSideBar;},};}
toggleSideBar(){this.state.showSideBar=!this.state.showSideBar;browser.sessionStorage.setItem("calendar.showSideBar",this.state.showSideBar);}
get showCalendar(){return!this.env.isSmall||!this.state.showSideBar;}
get showSideBar(){return this.state.showSideBar;}
get className(){return this.props.className;}
get editRecordDefaultDisplayText(){return _t("New Event");}
getQuickCreateProps(record){return{record,model:this.model,editRecord:this.editRecordInCreation.bind(this),title:this.props.context.default_name,};}
getQuickCreateFormViewProps(record){const rawRecord=this.model.buildRawRecord(record);const context=this.model.makeContextDefaults(rawRecord);return{resModel:this.model.resModel,viewId:this.model.quickCreateFormViewId,title:_t("New Event"),context,};}
createRecord(record){if(!this.model.canCreate){return;}
if(this.model.hasQuickCreate){if(this.model.quickCreateFormViewId){return new Promise((resolve)=>{this.displayDialog(this.constructor.components.QuickCreateFormView,this.getQuickCreateFormViewProps(record),{onClose:()=>resolve(),});});}
return new Promise((resolve)=>{this.displayDialog(this.constructor.components.QuickCreate,this.getQuickCreateProps(record),{onClose:()=>resolve(),});});}else{return this.editRecordInCreation(record);}}
async editRecord(record,context={},shouldFetchFormViewId=true){if(this.model.hasEditDialog){return new Promise((resolve)=>{this.displayDialog(FormViewDialog,{resModel:this.model.resModel,resId:record.id||false,context,title:record.id?_t("Open: %s",record.title):this.editRecordDefaultDisplayText,viewId:this.model.formViewId,onRecordSaved:()=>this.model.load(),},{onClose:()=>resolve()});});}else{let formViewId=this.model.formViewId;if(shouldFetchFormViewId){formViewId=await this.orm.call(this.model.resModel,"get_formview_id",[[record.id]],context);}
const action={type:"ir.actions.act_window",res_model:this.model.resModel,views:[[formViewId||false,"form"]],target:"current",context,};if(record.id){action.res_id=record.id;}
this.action.doAction(action);}}
editRecordInCreation(record){const rawRecord=this.model.buildRawRecord(record);const context=this.model.makeContextDefaults(rawRecord);return this.editRecord(record,context,false);}
deleteRecord(record){this.displayDialog(ConfirmationDialog,{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:()=>{this.model.unlinkRecord(record.id);},confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),});}
onWillStartModel(){}
async setDate(move){let date=null;switch(move){case"next":date=this.model.date.plus({[`${this.model.scale}s`]:1});break;case"previous":date=this.model.date.minus({[`${this.model.scale}s`]:1});break;case"today":date=luxon.DateTime.local().startOf("day");break;}
await this.model.load({date});}
get scales(){return Object.fromEntries(this.model.scales.map((s)=>[s,{description:SCALE_LABELS[s]}]));}
async setScale(scale){await this.model.load({scale});browser.sessionStorage.setItem("calendar-scale",this.model.scale);}
toggleWeekendVisibility(){this.state.isWeekendVisible=!this.state.isWeekendVisible;browser.localStorage.setItem("calendar.isWeekendVisible",this.state.isWeekendVisible);}}
CalendarController.components={DatePicker:DateTimePicker,FilterPanel:CalendarFilterPanel,MobileFilterPanel:CalendarMobileFilterPanel,QuickCreate:CalendarQuickCreate,QuickCreateFormView:FormViewDialog,Layout,SearchBar,ViewScaleSelector,CogMenu,};CalendarController.template="web.CalendarController";return __exports;});;

/* /web/static/src/views/calendar/calendar_model.js */
odoo.define('@web/views/calendar/calendar_model',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/core/utils/concurrency','@web/model/model','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{serializeDate,serializeDateTime,deserializeDate,deserializeDateTime,}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{Model}=require("@web/model/model");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const CalendarModel=__exports.CalendarModel=class CalendarModel extends Model{setup(params,services){this.user=services.user;this.keepLast=new KeepLast();const formViewFromConfig=(this.env.config.views||[]).find((view)=>view[1]==="form");const formViewIdFromConfig=formViewFromConfig?formViewFromConfig[0]:false;const fieldNodes=params.popoverFieldNodes;const{activeFields,fields}=extractFieldsFromArchInfo({fieldNodes},params.fields);this.meta={...params,activeFields,fields,firstDayOfWeek:(localization.weekStart||0)%7,formViewId:params.formViewId||formViewIdFromConfig,};this.data={filters:{},filterSections:{},hasCreateRight:null,range:null,records:{},unusualDays:[],};}
async load(params={}){Object.assign(this.meta,params);if(!this.meta.date){this.meta.date=params.context&&params.context.initial_date?deserializeDateTime(params.context.initial_date):luxon.DateTime.local();}
if(!this.meta.scales.includes(this.meta.scale)){this.meta.scale=this.meta.scales[0];}
const data={...this.data};await this.keepLast.add(this.updateData(data));this.data=data;this.notify();}
get date(){return this.meta.date;}
get canCreate(){return this.meta.canCreate&&this.data.hasCreateRight;}
get canDelete(){return this.meta.canDelete;}
get canEdit(){return!this.meta.fields[this.meta.fieldMapping.date_start].readonly;}
get eventLimit(){return this.meta.eventLimit;}
get exportedState(){return this.meta;}
get fieldMapping(){return this.meta.fieldMapping;}
get fields(){return this.meta.fields;}
get filterSections(){return Object.values(this.data.filterSections);}
get firstDayOfWeek(){return this.meta.firstDayOfWeek;}
get formViewId(){return this.meta.formViewId;}
get hasAllDaySlot(){return(this.meta.fieldMapping.all_day||this.meta.fields[this.meta.fieldMapping.date_start].type==="date");}
get hasEditDialog(){return this.meta.hasEditDialog;}
get hasQuickCreate(){return this.meta.quickCreate;}
get isDateHidden(){return this.meta.isDateHidden;}
get isTimeHidden(){return this.meta.isTimeHidden;}
get popoverFieldNodes(){return this.meta.popoverFieldNodes;}
get activeFields(){return this.meta.activeFields;}
get rangeEnd(){return this.data.range.end;}
get rangeStart(){return this.data.range.start;}
get records(){return this.data.records;}
get resModel(){return this.meta.resModel;}
get scale(){return this.meta.scale;}
get scales(){return this.meta.scales;}
get unusualDays(){return this.data.unusualDays;}
get quickCreateFormViewId(){return this.meta.quickCreateViewId;}
get defaultFilterLabel(){return _t("Undefined");}
async createFilter(fieldName,filterValue){const info=this.meta.filtersInfo[fieldName];if(info&&info.writeFieldName&&info.writeResModel){const data={user_id:this.user.userId,[info.writeFieldName]:filterValue,};if(info.filterFieldName){data[info.filterFieldName]=true;}
await this.orm.create(info.writeResModel,[data]);await this.load();}}
async createRecord(record){const rawRecord=this.buildRawRecord(record);const context=this.makeContextDefaults(rawRecord);await this.orm.create(this.meta.resModel,[rawRecord],{context});await this.load();}
async unlinkFilter(fieldName,recordId){const info=this.meta.filtersInfo[fieldName];if(info&&info.writeResModel){await this.orm.unlink(info.writeResModel,[recordId]);await this.load();}}
async unlinkRecord(recordId){await this.orm.unlink(this.meta.resModel,[recordId]);await this.load();}
async updateFilters(fieldName,filters){const section=this.data.filterSections[fieldName];if(section){for(const value in filters){const active=filters[value];const filter=section.filters.find((filter)=>`${filter.value}`===value);if(filter){filter.active=active;const info=this.meta.filtersInfo[fieldName];if(filter.recordId&&info&&info.writeFieldName&&info.writeResModel&&info.filterFieldName){const data={[info.filterFieldName]:active,};await this.orm.write(info.writeResModel,[filter.recordId],data);}else if(filter.type==="all"){this.meta.allFilter[section.label]=active;}}}}
await this.load();}
async updateRecord(record,options={}){const rawRecord=this.buildRawRecord(record,options);delete rawRecord.name;await this.orm.write(this.meta.resModel,[record.id],rawRecord,{context:{from_ui:true},});await this.load();}
buildRawRecord(partialRecord,options={}){const data={};data[this.meta.fieldMapping.create_name_field||"name"]=partialRecord.title;let start=partialRecord.start;let end=partialRecord.end;if(!end||!end.isValid){if(partialRecord.isAllDay){end=start;}else{end=start.plus({hours:1});}}
const isDateEvent=this.fields[this.meta.fieldMapping.date_start].type==="date";if(partialRecord.isAllDay){if(!this.hasAllDaySlot&&!isDateEvent&&!partialRecord.id){start=start.set({hours:7});end=end.set({hours:19});}}
if(this.meta.fieldMapping.all_day){data[this.meta.fieldMapping.all_day]=partialRecord.isAllDay;}
data[this.meta.fieldMapping.date_start]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(start):serializeDateTime(start);if(this.meta.fieldMapping.date_stop){data[this.meta.fieldMapping.date_stop]=(partialRecord.isAllDay&&this.hasAllDaySlot?"date":this.fields[this.meta.fieldMapping.date_start].type)==="date"?serializeDate(end):serializeDateTime(end);}
if(this.meta.fieldMapping.date_delay){if(this.meta.scale!=="month"||!options.moved){data[this.meta.fieldMapping.date_delay]=end.diff(start,"hours").hours;}}
return data;}
makeContextDefaults(rawRecord){const{fieldMapping,scale}=this.meta;const context={...this.meta.context};const fieldNames=[fieldMapping.create_name_field||"name",fieldMapping.date_start,fieldMapping.date_stop,fieldMapping.date_delay,fieldMapping.all_day||"allday",];for(const fieldName of fieldNames){if(rawRecord[fieldName]!==undefined){context[`default_${fieldName}`]=rawRecord[fieldName];}}
if(["month","year"].includes(scale)){context[`default_${fieldMapping.all_day || "allday"}`]=true;}
return context;}
async updateData(data){if(data.hasCreateRight===null){data.hasCreateRight=await this.orm.call(this.meta.resModel,"check_access_rights",["create",false,]);}
data.range=this.computeRange();if(this.meta.showUnusualDays){data.unusualDays=await this.loadUnusualDays(data);}
const{sections,dynamicFiltersInfo}=await this.loadFilters(data);data.filterSections=sections;data.records=await this.loadRecords(data);const dynamicSections=await this.loadDynamicFilters(data,dynamicFiltersInfo);Object.assign(data.filterSections,dynamicSections);for(const[recordId,record]of Object.entries(data.records)){for(const[fieldName,filterInfo]of Object.entries(dynamicSections)){for(const filter of filterInfo.filters){const rawValue=record.rawRecord[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(filter.value===value&&!filter.active){delete data.records[recordId];}}}}}
computeRange(){const{scale,date,firstDayOfWeek}=this.meta;let start=date;let end=date;if(scale!=="week"){start=start.startOf(scale);end=end.endOf(scale);}
if(["week","month"].includes(scale)){const currentWeekOffset=(start.weekday-firstDayOfWeek+7)%7;start=start.minus({days:currentWeekOffset});end=start.plus({weeks:scale==="week"?1:6,days:-1});}
start=start.startOf("day");end=end.endOf("day");return{start,end};}
computeDomain(data){return[...this.meta.domain,...this.computeRangeDomain(data),...this.computeFiltersDomain(data),];}
computeFiltersDomain(data){const authorizedValues={};const avoidValues={};for(const[fieldName,filterSection]of Object.entries(data.filterSections)){const filterAll=filterSection.filters.find((f)=>f.type==="all");if(!(filterAll&&filterAll.active)){const filterSectionInfo=this.meta.filtersInfo[fieldName];for(const filter of filterSection.filters){if(filterSectionInfo.writeResModel){if(!authorizedValues[fieldName]){authorizedValues[fieldName]=[];}
if(filter.active){authorizedValues[fieldName].push(filter.value);}}else{if(!filter.active){if(!avoidValues[fieldName]){avoidValues[fieldName]=[];}
avoidValues[fieldName].push(filter.value);}}}}}
const domain=[];for(const field in authorizedValues){domain.push([field,"in",authorizedValues[field]]);}
for(const field in avoidValues){if(avoidValues[field].length>0){domain.push([field,"not in",avoidValues[field]]);}}
return domain;}
computeRangeDomain(data){const{fieldMapping}=this.meta;const formattedEnd=serializeDateTime(data.range.end);const formattedStart=serializeDateTime(data.range.start);const domain=[[fieldMapping.date_start,"<=",formattedEnd]];if(fieldMapping.date_stop){domain.push([fieldMapping.date_stop,">=",formattedStart]);}else if(!fieldMapping.date_delay){domain.push([fieldMapping.date_start,">=",formattedStart]);}
return domain;}
fetchUnusualDays(data){return this.orm.call(this.meta.resModel,"get_unusual_days",[serializeDateTime(data.range.start),serializeDateTime(data.range.end),]);}
async loadUnusualDays(data){const unusualDays=await this.fetchUnusualDays(data);return Object.entries(unusualDays).filter((entry)=>entry[1]).map((entry)=>entry[0]);}
fetchRecords(data){const{fieldNames,resModel}=this.meta;return this.orm.searchRead(resModel,this.computeDomain(data),fieldNames);}
async loadRecords(data){const rawRecords=await this.fetchRecords(data);const records={};for(const rawRecord of rawRecords){records[rawRecord.id]=this.normalizeRecord(rawRecord);}
return records;}
normalizeRecord(rawRecord){const{fields,fieldMapping,isTimeHidden}=this.meta;const startType=fields[fieldMapping.date_start].type;const isAllDay=startType==="date"||(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])||false;let start=isAllDay?deserializeDate(rawRecord[fieldMapping.date_start]):deserializeDateTime(rawRecord[fieldMapping.date_start]);let end=start;let endType=startType;if(fieldMapping.date_stop){endType=fields[fieldMapping.date_stop].type;end=isAllDay?deserializeDate(rawRecord[fieldMapping.date_stop]):deserializeDateTime(rawRecord[fieldMapping.date_stop]);}
const duration=rawRecord[fieldMapping.date_delay]||1;if(isAllDay){start=start.startOf("day");end=end.startOf("day");}
if(!fieldMapping.date_stop&&duration){end=start.plus({hours:duration});}
const showTime=!(fieldMapping.all_day&&rawRecord[fieldMapping.all_day])&&startType!=="date"&&start.day===end.day;const colorValue=rawRecord[fieldMapping.color];const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;const title=rawRecord[fieldMapping.create_name_field||"display_name"];return{id:rawRecord.id,title,isAllDay,start,startType,end,endType,duration,colorIndex,isHatched:rawRecord["is_hatched"]||false,isStriked:rawRecord["is_striked"]||false,isTimeHidden:isTimeHidden||!showTime,isMonth:this.meta.scale==="month",isSmall:this.env.isSmall,rawRecord,};}
addFilterFields(record,filterInfo){return{colorIndex:record.colorIndex,};}
fetchFilters(resModel,fieldNames){return this.orm.searchRead(resModel,[["user_id","=",this.user.userId]],fieldNames);}
async loadFilters(data){const previousSections=data.filterSections;const sections={};const dynamicFiltersInfo={};for(const[fieldName,filterInfo]of Object.entries(this.meta.filtersInfo)){const previousSection=previousSections[fieldName];if(filterInfo.writeResModel){sections[fieldName]=await this.loadFilterSection(fieldName,filterInfo,previousSection);}else{dynamicFiltersInfo[fieldName]={filterInfo,previousSection};}}
return{sections,dynamicFiltersInfo};}
async loadFilterSection(fieldName,filterInfo,previousSection){const{filterFieldName,writeFieldName,writeResModel}=filterInfo;const fields=[writeFieldName,filterFieldName].filter(Boolean);const rawFilters=await this.fetchFilters(writeResModel,fields);const previousFilters=previousSection?previousSection.filters:[];const filters=rawFilters.map((rawFilter)=>{const previousRecordFilter=previousFilters.find((f)=>f.type==="record"&&f.recordId===rawFilter.id);return this.makeFilterRecord(filterInfo,previousRecordFilter,rawFilter);});const field=this.meta.fields[fieldName];const isUserOrPartner=["res.users","res.partner"].includes(field.relation);if(isUserOrPartner){const previousUserFilter=previousFilters.find((f)=>f.type==="user");filters.push(this.makeFilterUser(filterInfo,previousUserFilter,fieldName,rawFilters));}
const previousAllFilter=previousFilters.find((f)=>f.type==="all");filters.push(this.makeFilterAll(previousAllFilter,isUserOrPartner,filterInfo.label));return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:writeFieldName,model:writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
async loadDynamicFilters(data,filtersInfo){const sections={};for(const[fieldName,{filterInfo,previousSection}]of Object.entries(filtersInfo)){sections[fieldName]=await this.loadDynamicFilterSection(data,fieldName,filterInfo,previousSection);}
return sections;}
async loadDynamicFilterSection(data,fieldName,filterInfo,previousSection){const{fields,fieldMapping}=this.meta;const field=fields[fieldName];const previousFilters=previousSection?previousSection.filters:[];const rawFilters=Object.values(data.records).reduce((filters,record)=>{const rawValues=["many2many","one2many"].includes(field.type)?record.rawRecord[fieldName]:[record.rawRecord[fieldName]];for(const rawValue of rawValues){const value=Array.isArray(rawValue)?rawValue[0]:rawValue;if(!filters.find((f)=>f.id===value)){filters.push({id:value,[fieldName]:rawValue,...this.addFilterFields(record,filterInfo),});}}
return filters;},[]);const{colorFieldName}=filterInfo;const shouldFetchColor=colorFieldName&&`${fieldName}.${colorFieldName}`!==fields[fieldMapping.color].related;let rawColors=[];if(shouldFetchColor){const relatedIds=rawFilters.map(({id})=>id);if(relatedIds.length){rawColors=await this.orm.searchRead(field.relation,[["id","in",relatedIds]],[colorFieldName]);}}
const filters=rawFilters.map((rawFilter)=>{const previousDynamicFilter=previousFilters.find((f)=>f.type==="dynamic"&&f.value===rawFilter.id);return this.makeFilterDynamic(filterInfo,previousDynamicFilter,fieldName,rawFilter,rawColors);});return{label:filterInfo.label,fieldName,filters,avatar:{field:filterInfo.avatarFieldName,model:filterInfo.resModel,},hasAvatar:!!filterInfo.avatarFieldName,write:{field:filterInfo.writeFieldName,model:filterInfo.writeResModel,},canCollapse:filters.length>2,canAddFilter:!!filterInfo.writeResModel,};}
makeFilterDynamic(filterInfo,previousFilter,fieldName,rawFilter,rawColors){const{fieldMapping,fields}=this.meta;const rawValue=rawFilter[fieldName];const value=Array.isArray(rawValue)?rawValue[0]:rawValue;const field=fields[fieldName];const formatter=registry.category("formatters").get(field.type);const{colorFieldName}=filterInfo;const colorField=fields[fieldMapping.color];const hasFilterColorAttr=!!colorFieldName;const sameRelatedModel=colorField&&(colorField.relation===field.relation||(colorField.related&&colorField.related.startsWith(`${fieldName}.`)));let colorIndex=null;if(hasFilterColorAttr||sameRelatedModel){colorIndex=rawFilter.colorIndex;}
if(rawColors.length){const rawColor=rawColors.find(({id})=>id===value);colorIndex=rawColor?rawColor[colorFieldName]:0;}
return{type:"dynamic",recordId:null,value,label:formatter(rawValue,{field})||this.defaultFilterLabel,active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterRecord(filterInfo,previousFilter,rawRecord){const{colorFieldName,filterFieldName,writeFieldName}=filterInfo;const{fields,fieldMapping}=this.meta;const raw=rawRecord[writeFieldName];const value=Array.isArray(raw)?raw[0]:raw;const field=fields[writeFieldName];const isX2Many=["many2many","one2many"].includes(field.type);const formatter=registry.category("formatters").get(isX2Many?"many2one":field.type);const colorField=fields[fieldMapping.color];const colorValue=colorField&&(()=>{const sameRelatedModel=colorField.relation===field.relation;const sameRelatedField=colorField.related===`${writeFieldName}.${colorFieldName}`;const shouldHaveColor=sameRelatedModel||sameRelatedField;const colorToUse=raw?value:rawRecord[fieldMapping.color];return shouldHaveColor?colorToUse:null;})();const colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;let active=false;if(previousFilter){active=previousFilter.active;}else if(filterFieldName){active=rawRecord[filterFieldName];}
return{type:"record",recordId:rawRecord.id,value,label:formatter(raw),active,canRemove:true,colorIndex,hasAvatar:!!value,};}
makeFilterUser(filterInfo,previousFilter,fieldName,rawRecords){const field=this.meta.fields[fieldName];const userFieldName=field.relation==="res.partner"?"partnerId":"userId";const value=this.user[userFieldName];let colorIndex=value;const rawRecord=rawRecords.find((r)=>r[filterInfo.writeFieldName][0]===value);if(filterInfo.colorFieldName&&rawRecord){const colorValue=rawRecord[filterInfo.colorFieldName];colorIndex=Array.isArray(colorValue)?colorValue[0]:colorValue;}
return{type:"user",recordId:null,value,label:this.user.name,active:previousFilter?previousFilter.active:true,canRemove:false,colorIndex,hasAvatar:!!value,};}
makeFilterAll(previousAllFilter,isUserOrPartner,sectionLabel){return{type:"all",recordId:null,value:"all",label:isUserOrPartner?_t("Everybody's calendars"):_t("Everything"),active:previousAllFilter?previousAllFilter.active:this.meta.allFilter[sectionLabel]||false,canRemove:false,colorIndex:null,hasAvatar:false,};}}
CalendarModel.services=["user","rpc"];return __exports;});;

/* /web/static/src/views/calendar/calendar_renderer.js */
odoo.define('@web/views/calendar/calendar_renderer',['@web/core/action_swiper/action_swiper','@web/views/calendar/calendar_common/calendar_common_renderer','@web/views/calendar/calendar_year/calendar_year_renderer','@odoo/owl'],function(require){'use strict';let __exports={};const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{CalendarCommonRenderer}=require("@web/views/calendar/calendar_common/calendar_common_renderer");const{CalendarYearRenderer}=require("@web/views/calendar/calendar_year/calendar_year_renderer");const{Component}=require("@odoo/owl");const CalendarRenderer=__exports.CalendarRenderer=class CalendarRenderer extends Component{get calendarComponent(){return this.constructor.components[this.props.model.scale];}
get calendarKey(){return`${this.props.model.scale}_${this.props.model.date.valueOf()}`;}
get actionSwiperProps(){return{onLeftSwipe:this.env.isSmall?{action:()=>this.props.setDate("next")}:undefined,onRightSwipe:this.env.isSmall?{action:()=>this.props.setDate("previous")}:undefined,animationOnMove:false,animationType:"forwards",swipeDistanceRatio:6,swipeInvalid:()=>Boolean(document.querySelector(".o_event.fc-mirror")),};}}
CalendarRenderer.components={day:CalendarCommonRenderer,week:CalendarCommonRenderer,month:CalendarCommonRenderer,year:CalendarYearRenderer,ActionSwiper,};CalendarRenderer.template="web.CalendarRenderer";return __exports;});;

/* /web/static/src/views/calendar/calendar_view.js */
odoo.define('@web/views/calendar/calendar_view',['@web/core/registry','@web/views/calendar/calendar_renderer','@web/views/calendar/calendar_arch_parser','@web/views/calendar/calendar_model','@web/views/calendar/calendar_controller'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CalendarRenderer}=require("@web/views/calendar/calendar_renderer");const{CalendarArchParser}=require("@web/views/calendar/calendar_arch_parser");const{CalendarModel}=require("@web/views/calendar/calendar_model");const{CalendarController}=require("@web/views/calendar/calendar_controller");const calendarView=__exports.calendarView={type:"calendar",display_name:"Calendar",icon:"fa fa-calendar",multiRecord:true,searchMenuTypes:["filter","favorite"],ArchParser:CalendarArchParser,Controller:CalendarController,Model:CalendarModel,Renderer:CalendarRenderer,buttonTemplate:"web.CalendarController.controlButtons",props:(props,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=props;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...props,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("calendar",calendarView);return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_popover.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_popover',['@web/core/dialog/dialog','@web/core/l10n/dates','@web/views/calendar/colors','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{formatDate}=require("@web/core/l10n/dates");const{getColor}=require("@web/views/calendar/colors");const{getFormattedDateSpan}=require('@web/views/calendar/utils');const{Component}=require("@odoo/owl");const CalendarYearPopover=__exports.CalendarYearPopover=class CalendarYearPopover extends Component{get recordGroups(){return this.computeRecordGroups();}
get dialogTitle(){return formatDate(this.props.date,{format:"DDD"});}
computeRecordGroups(){const recordGroups=this.groupRecords();return this.getSortedRecordGroups(recordGroups);}
groupRecords(){const recordGroups={};for(const record of this.props.records){const start=record.start;const end=record.end;const duration=end.diff(start,"days").days;const modifiedRecord=Object.create(record);modifiedRecord.startHour=!record.isAllDay&&duration<1?start.toFormat("HH:mm"):"";const formattedDate=getFormattedDateSpan(start,end);if(!(formattedDate in recordGroups)){recordGroups[formattedDate]={title:formattedDate,start,end,records:[],};}
recordGroups[formattedDate].records.push(modifiedRecord);}
return Object.values(recordGroups);}
getRecordClass(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="number"){return`o_calendar_color_${color}`;}
return"";}
getRecordStyle(record){const{colorIndex}=record;const color=getColor(colorIndex);if(color&&typeof color==="string"){return`background-color: ${color};`;}
return"";}
getSortedRecordGroups(recordGroups){return recordGroups.sort((a,b)=>{if(a.start.hasSame(a.end,"days")){return Number.MIN_SAFE_INTEGER;}else if(b.start.hasSame(b.end,"days")){return Number.MAX_SAFE_INTEGER;}else if(a.start.toMillis()-b.start.toMillis()===0){return a.end.toMillis()-b.end.toMillis();}
return a.start.toMillis()-b.start.toMillis();});}
onCreateButtonClick(){this.props.createRecord({start:this.props.date,isAllDay:true,});this.props.close();}
onRecordClick(record){this.props.editRecord(record);this.props.close();}}
CalendarYearPopover.components={Dialog};CalendarYearPopover.template="web.CalendarYearPopover";CalendarYearPopover.subTemplates={popover:"web.CalendarYearPopover.popover",body:"web.CalendarYearPopover.body",footer:"web.CalendarYearPopover.footer",record:"web.CalendarYearPopover.record",};CalendarYearPopover.props={close:Function,date:true,model:Object,records:Array,createRecord:Function,deleteRecord:Function,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/calendar_year/calendar_year_renderer.js */
odoo.define('@web/views/calendar/calendar_year/calendar_year_renderer',['@web/core/l10n/localization','@web/core/utils/timing','@web/views/calendar/colors','@web/views/calendar/hooks','@web/views/calendar/calendar_year/calendar_year_popover','@web/views/calendar/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{useDebounced}=require("@web/core/utils/timing");const{getColor}=require("@web/views/calendar/colors");const{useCalendarPopover,useFullCalendar}=require("@web/views/calendar/hooks");const{CalendarYearPopover}=require("@web/views/calendar/calendar_year/calendar_year_popover");const{getWeekNumber}=require("@web/views/calendar/utils");const{Component,useEffect,useRef}=require("@odoo/owl");const CalendarYearRenderer=__exports.CalendarYearRenderer=class CalendarYearRenderer extends Component{setup(){this.months=luxon.Info.months();this.fcs={};for(const month of this.months){this.fcs[month]=useFullCalendar(`fullCalendar-${month}`,this.getOptionsForMonth(month));}
this.popover=useCalendarPopover(this.constructor.components.Popover);this.rootRef=useRef("root");this.onWindowResizeDebounced=useDebounced(this.onWindowResize,200);useEffect(()=>{this.updateSize();});}
get options(){return{columnHeaderFormat:"EEEEE",contentHeight:0,dateClick:this.onDateClick,dayRender:this.onDayRender,defaultDate:this.props.model.date.toISO(),defaultView:"dayGridMonth",dir:localization.direction,droppable:true,editable:this.props.model.canEdit,eventLimit:this.props.model.eventLimit,eventRender:this.onEventRender,eventResizableFromStart:true,events:(_,successCb)=>successCb(this.mapRecordsToEvents()),firstDay:this.props.model.firstDayOfWeek,header:{left:false,center:"title",right:false},height:0,locale:luxon.Settings.defaultLocale,longPressDelay:500,navLinks:false,nowIndicator:true,plugins:["dayGrid","interaction","luxon"],select:this.onSelect,selectMinDistance:5,selectMirror:true,selectable:this.props.model.canCreate,showNonCurrentDates:false,timeZone:luxon.Settings.defaultZone.name,titleFormat:{month:"long",year:"numeric"},unselectAuto:false,weekNumberCalculation:(date)=>getWeekNumber(date,this.props.model.firstDayOfWeek),weekNumbers:false,windowResize:this.onWindowResizeDebounced,};}
mapRecordsToEvents(){return Object.values(this.props.model.records).map((r)=>this.convertRecordToEvent(r));}
convertRecordToEvent(record){return{id:record.id,title:record.title,start:record.start.toISO(),end:record.end.plus({day:1}).toISO(),allDay:true,rendering:"background",};}
getDateWithMonth(month){return this.props.model.date.set({month:this.months.indexOf(month)+1}).toISO();}
getOptionsForMonth(month){return{...this.options,defaultDate:this.getDateWithMonth(month),};}
getPopoverProps(date,records){return{date,records,model:this.props.model,createRecord:this.props.createRecord,deleteRecord:this.props.deleteRecord,editRecord:this.props.editRecord,};}
openPopover(target,date,records){this.popover.open(target,this.getPopoverProps(date,records),"o_cw_popover");}
unselect(){for(const fc of Object.values(this.fcs)){fc.api.unselect();}}
updateSize(){const height=window.innerHeight-this.rootRef.el.getBoundingClientRect().top;this.rootRef.el.style.height=`${height}px`;}
onDateClick(info){if(this.env.isSmall){this.props.model.load({date:luxon.DateTime.fromISO(info.dateStr),scale:"day",});return;}
const date=luxon.DateTime.fromISO(info.dateStr);const records=Object.values(this.props.model.records).filter((r)=>luxon.Interval.fromDateTimes(r.start.startOf("day"),r.end.endOf("day")).contains(date));this.popover.close();if(records.length){const target=info.dayEl;this.openPopover(target,date,records);}else if(this.props.model.canCreate){this.props.createRecord({start:luxon.DateTime.fromISO(info.dateStr),isAllDay:true,});}}
onDayRender(info){const date=luxon.DateTime.fromJSDate(info.date).toISODate();if(this.props.model.unusualDays.includes(date)){info.el.classList.add("o_calendar_disabled");}}
onEventRender(info){const{el,event}=info;el.dataset.eventId=event.id;el.classList.add("o_event");const record=this.props.model.records[event.id];if(record){const color=getColor(record.colorIndex);if(typeof color==="string"){el.style.backgroundColor=color;}else if(typeof color==="number"){el.classList.add(`o_calendar_color_${color}`);}else{el.classList.add("o_calendar_color_0");}
if(record.isHatched){el.classList.add("o_event_hatched");}
if(record.isStriked){el.classList.add("o_event_striked");}}}
async onSelect(info){this.popover.close();await this.props.createRecord({start:luxon.DateTime.fromISO(info.startStr),end:luxon.DateTime.fromISO(info.endStr).minus({days:1}),isAllDay:true,});this.unselect();}
onWindowResize(){this.updateSize();}}
CalendarYearRenderer.components={Popover:CalendarYearPopover,};CalendarYearRenderer.template="web.CalendarYearRenderer";return __exports;});;

/* /web/static/src/views/calendar/colors.js */
odoo.define('@web/views/calendar/colors',[],function(require){'use strict';let __exports={};const CSS_COLOR_REGEX=/^((#[A-F0-9]{3})|(#[A-F0-9]{6})|((hsl|rgb)a?\(\s*(?:(\s*\d{1,3}%?\s*),?){3}(\s*,[0-9.]{1,4})?\))|)$/i;const colorMap=new Map();__exports.getColor=getColor;function getColor(key){if(!key){return false;}
if(colorMap.has(key)){return colorMap.get(key);}
if(typeof key==="string"&&key.match(CSS_COLOR_REGEX)){colorMap.set(key,key);}else if(typeof key==="number"){colorMap.set(key,((key-1)%55)+1);}else{colorMap.set(key,(((colorMap.size+1)*5)%24)+1);}
return colorMap.get(key);}
return __exports;});;

/* /web/static/src/views/calendar/filter_panel/calendar_filter_panel.js */
odoo.define('@web/views/calendar/filter_panel/calendar_filter_panel',['@web/core/l10n/translation','@web/core/autocomplete/autocomplete','@web/core/transition','@web/core/utils/hooks','@web/views/view_dialogs/select_create_dialog','@web/views/calendar/colors','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{Transition}=require("@web/core/transition");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{getColor}=require("@web/views/calendar/colors");const{Component,useState}=require("@odoo/owl");let nextId=1;const CalendarFilterPanel=__exports.CalendarFilterPanel=class CalendarFilterPanel extends Component{setup(){this.state=useState({collapsed:{},fieldRev:1,});this.addDialog=useOwnedDialogs();this.orm=useService("orm");}
getFilterColor(filter){return filter.colorIndex!==null?"o_cw_filter_color_"+getColor(filter.colorIndex):"";}
getAutoCompleteProps(section){return{autoSelect:true,resetOnSelect:true,placeholder:_t("+ Add %s",section.label),sources:[{placeholder:_t("Loading..."),options:(request)=>this.loadSource(section,request),},],onSelect:(option,params={})=>{if(option.action){option.action(params);return;}
this.props.model.createFilter(section.fieldName,option.value);},value:"",};}
async loadSource(section,request){const resModel=this.props.model.fields[section.fieldName].relation;const domain=[["id","not in",section.filters.filter((f)=>f.type!=="all").map((f)=>f.value)],];const records=await this.orm.call(resModel,"name_search",[],{name:request,operator:"ilike",args:domain,limit:8,context:{},});const options=records.map((result)=>({value:result[0],label:result[1],}));if(records.length>7){options.push({label:_t("Search More..."),action:()=>this.onSearchMore(section,resModel,domain,request),});}
if(records.length===0){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async onSearchMore(section,resModel,domain,request){const dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",context:{},});dynamicFilters.push({description:_t("Quick search: %s",request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],});}
const title=_t("Search: %s",section.label);this.addDialog(SelectCreateDialog,{title,noCreate:true,multiSelect:false,resModel,context:{},domain,onSelected:([resId])=>this.props.model.createFilter(section.fieldName,resId),dynamicFilters,});}
get nextFilterId(){nextId+=1;return nextId;}
isAllActive(section){let active=true;for(const filter of section.filters){if(filter.type!=="all"&&!filter.active){active=false;break;}}
return active;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return a.label.localeCompare(b.label,undefined,{numeric:true,sensitivity:"base",ignorePunctuation:true,});}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}
toggleSection(section){if(section.canCollapse){this.state.collapsed[section.fieldName]=!this.state.collapsed[section.fieldName];}}
isSectionCollapsed(section){return this.state.collapsed[section.fieldName]||false;}
onFilterInputChange(section,filter,ev){this.props.model.updateFilters(section.fieldName,{[filter.value]:ev.target.checked,});}
onAllFilterInputChange(section,ev){const filters={};for(const filter of section.filters){if(filter.type!=="all"){filters[filter.value]=ev.target.checked;}}
this.props.model.updateFilters(section.fieldName,filters);}
onFilterRemoveBtnClick(section,filter){this.props.model.unlinkFilter(section.fieldName,filter.recordId);}
onFieldChanged(fieldName,filterValue){this.state.fieldRev+=1;this.props.model.createFilter(fieldName,filterValue);}}
CalendarFilterPanel.components={AutoComplete,Transition,};CalendarFilterPanel.template="web.CalendarFilterPanel";CalendarFilterPanel.subTemplates={filter:"web.CalendarFilterPanel.filter",};return __exports;});;

/* /web/static/src/views/calendar/hooks.js */
odoo.define('@web/views/calendar/hooks',['@web/core/assets','@web/core/browser/browser','@web/core/popover/popover_hook','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{loadCSS,loadJS}=require("@web/core/assets");const{browser}=require("@web/core/browser/browser");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{onMounted,onPatched,onWillStart,onWillUnmount,onWillUpdateProps,useComponent,useExternalListener,useRef,}=require("@odoo/owl");__exports.useCalendarPopover=useCalendarPopover;function useCalendarPopover(component){const owner=useComponent();let popoverClass="";const popoverOptions={position:"right",onClose:cleanup};Object.defineProperty(popoverOptions,"popoverClass",{get:()=>popoverClass});const popover=usePopover(component,popoverOptions);const dialog=useService("dialog");let removeDialog=null;let fcPopover;useExternalListener(window,"mousedown",(ev)=>{if(fcPopover){ev.stopPropagation();}},{capture:true});function cleanup(){fcPopover=null;removeDialog=null;}
function close(){removeDialog?.();popover.close();cleanup();}
return{close,open(target,props,popoverClassToUse){fcPopover=target.closest(".fc-popover");if(owner.env.isSmall){close();removeDialog=dialog.add(component,props,{onClose:cleanup});}else{popoverClass=popoverClassToUse;popover.open(target,props);}},};}
__exports.useClickHandler=useClickHandler;function useClickHandler(singleClickCb,doubleClickCb){const component=useComponent();let clickTimeoutId=null;return function handle(...args){if(clickTimeoutId){doubleClickCb.call(component,...args);browser.clearTimeout(clickTimeoutId);clickTimeoutId=null;}else{clickTimeoutId=browser.setTimeout(()=>{singleClickCb.call(component,...args);clickTimeoutId=null;},250);}};}
__exports.useFullCalendar=useFullCalendar;function useFullCalendar(refName,params){const component=useComponent();const ref=useRef(refName);let instance=null;function boundParams(){const newParams={};for(const key in params){const value=params[key];newParams[key]=typeof value==="function"?value.bind(component):value;}
return newParams;}
async function loadJsFiles(){const files=["/web/static/lib/fullcalendar/core/main.js","/web/static/lib/fullcalendar/interaction/main.js","/web/static/lib/fullcalendar/daygrid/main.js","/web/static/lib/fullcalendar/luxon/main.js","/web/static/lib/fullcalendar/timegrid/main.js","/web/static/lib/fullcalendar/list/main.js",];for(const file of files){await loadJS(file);}}
async function loadCssFiles(){await Promise.all(["/web/static/lib/fullcalendar/core/main.css","/web/static/lib/fullcalendar/daygrid/main.css","/web/static/lib/fullcalendar/timegrid/main.css","/web/static/lib/fullcalendar/list/main.css",].map((file)=>loadCSS(file)));}
onWillStart(()=>Promise.all([loadJsFiles(),loadCssFiles()]));onMounted(()=>{try{instance=new FullCalendar.Calendar(ref.el,boundParams());instance.render();}catch(e){throw new Error(`Cannot instantiate FullCalendar\n${e.message}`);}});let isWeekendVisible=params.isWeekendVisible;onWillUpdateProps((np)=>{isWeekendVisible=np.isWeekendVisible;});onPatched(()=>{instance.refetchEvents();instance.setOption("weekends",isWeekendVisible);});onWillUnmount(()=>{instance.destroy();});return{get api(){return instance;},get el(){return ref.el;},};}
return __exports;});;

/* /web/static/src/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel.js */
odoo.define('@web/views/calendar/mobile_filter_panel/calendar_mobile_filter_panel',['@odoo/owl','@web/views/calendar/colors'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{getColor}=require("@web/views/calendar/colors");const CalendarMobileFilterPanel=__exports.CalendarMobileFilterPanel=class CalendarMobileFilterPanel extends Component{get caretDirection(){return this.props.sideBarShown?"down":"left";}
getFilterColor(filter){return`o_color_${getColor(filter.colorIndex)}`;}
getFilterTypePriority(type){return["user","record","dynamic","all"].indexOf(type);}
getSortedFilters(section){return section.filters.slice().sort((a,b)=>{if(a.type===b.type){const va=a.value?-1:0;const vb=b.value?-1:0;if(a.type==="dynamic"&&va!==vb){return va-vb;}
return a.label.localeCompare(b.label,undefined,{numeric:true,sensitivity:"base",ignorePunctuation:true,});}else{return this.getFilterTypePriority(a.type)-this.getFilterTypePriority(b.type);}});}}
CalendarMobileFilterPanel.components={};CalendarMobileFilterPanel.template="web.CalendarMobileFilterPanel";return __exports;});;

/* /web/static/src/views/calendar/quick_create/calendar_quick_create.js */
odoo.define('@web/views/calendar/quick_create/calendar_quick_create',['@web/core/utils/hooks','@web/core/dialog/dialog','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{useAutofocus,useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const CalendarQuickCreate=__exports.CalendarQuickCreate=class CalendarQuickCreate extends Component{setup(){this.titleRef=useAutofocus({refName:"title"});this.notification=useService("notification");this.creatingRecord=false;}
get dialogTitle(){return _t("New Event");}
get recordTitle(){return this.titleRef.el.value.trim();}
get record(){return{...this.props.record,title:this.recordTitle,};}
editRecord(){this.props.editRecord(this.record);this.props.close();}
async createRecord(){if(this.creatingRecord){return;}
if(this.recordTitle){try{this.creatingRecord=true;await this.props.model.createRecord(this.record);this.props.close();}catch{this.editRecord();}}else{this.titleRef.el.classList.add("o_field_invalid");this.notification.add(_t("Meeting Subject"),{title:_t("Invalid fields"),type:"danger",});}}
onInputKeyup(ev){switch(ev.key){case"Enter":this.createRecord();break;case"Escape":this.props.close();break;}}
onCreateBtnClick(){this.createRecord();}
onEditBtnClick(){this.editRecord();}
onCancelBtnClick(){this.props.close();}}
CalendarQuickCreate.template="web.CalendarQuickCreate";CalendarQuickCreate.components={Dialog,};CalendarQuickCreate.props={title:{type:String,optional:true},close:Function,record:Object,model:Object,editRecord:Function,};return __exports;});;

/* /web/static/src/views/calendar/utils.js */
odoo.define('@web/views/calendar/utils',[],function(require){'use strict';let __exports={};__exports.getFormattedDateSpan=getFormattedDateSpan;function getFormattedDateSpan(start,end){const isSameDay=start.hasSame(end,"days");if(!isSameDay&&start.hasSame(end,"month")){return start.toFormat("LLLL d")+"-"+end.toFormat("d, y");}else{return isSameDay?start.toFormat("DDD"):start.toFormat("DDD")+" - "+end.toFormat("DDD");}}
__exports.getWeekNumber=getWeekNumber;function getWeekNumber(date,firstDay){if(!date.isLuxonDateTime){date=luxon.DateTime.fromJSDate(date);}
if(Number.isInteger(firstDay)){date=date.minus({days:(date.weekday+7-firstDay)%7});}else{firstDay=date.weekday;}
date=firstDay>1&&firstDay<5?date.minus({days:(date.weekday+6)%7}):date.plus({days:(8-date.weekday)%7});date=date.plus({days:6});const jan4=luxon.DateTime.local(date.year,1,4);const diffDays=date<jan4?date.diff(jan4.minus({years:1}),'day').days:date.diff(jan4,'day').days;return Math.trunc(diffDays/7)+1;}
return __exports;});;

/* /web/static/src/views/debug_items.js */
odoo.define('@web/views/debug_items',['@web/core/l10n/translation','@web/core/dialog/dialog','@web/core/py_js/py','@web/core/debug/debug_utils','@web/core/l10n/dates','@web/core/registry','@web/core/utils/hooks','@web/views/fields/formatters','@web/views/view_dialogs/form_view_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dialog}=require("@web/core/dialog/dialog");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{editModelDebug}=require("@web/core/debug/debug_utils");const{formatDateTime,deserializeDateTime}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{formatMany2one}=require("@web/views/fields/formatters");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,onWillStart,useState,xml}=require("@odoo/owl");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const debugRegistry=registry.category("debug");function viewSeparator(){return{type:"separator",sequence:300};}
debugRegistry.category("view").add("viewSeparator",viewSeparator);class GetViewDialog extends Component{setup(){this.title=_t("Get View");}}
GetViewDialog.template="web.DebugMenu.GetViewDialog";GetViewDialog.components={Dialog};GetViewDialog.props={arch:{type:Element},close:{type:Function},};__exports.getView=getView;function getView({component,env}){return{type:"item",description:_t("Get View"),callback:()=>{env.services.dialog.add(GetViewDialog,{arch:component.props.arch});},sequence:340,};}
debugRegistry.category("view").add("getView",getView);__exports.editView=editView;function editView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
let{viewId,viewType:type}=component.env.config||{};if("viewInfo"in component.props){viewId=component.props.viewInfo.view_id;type=component.props.viewInfo.type;type=type==="tree"?"list":type;}
if(!type){return;}
const displayName=type[0].toUpperCase()+type.slice(1);const description=_t("Edit View: ")+displayName;return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",viewId);},sequence:350,};}
debugRegistry.category("view").add("editView",editView);__exports.editSearchView=editSearchView;function editSearchView({accessRights,component,env}){if(!accessRights.canEditView){return null;}
let{searchViewId}=component.props.info||{};if("viewParams"in component.props){if(!component.props.viewParams.action.controlPanelFieldsView){return null;}
searchViewId=component.props.viewParams.action.controlPanelFieldsView.view_id;}
if(searchViewId===undefined){return null;}
const description=_t("Edit SearchView");return{type:"item",description,callback:()=>{editModelDebug(env,description,"ir.ui.view",searchViewId);},sequence:360,};}
debugRegistry.category("view").add("editSearchView",editSearchView);class GetMetadataDialog extends Component{setup(){this.orm=useService("orm");this.dialogService=useService("dialog");this.title=_t("View Metadata");this.state=useState({});onWillStart(()=>this.loadMetadata());}
onClickCreateXmlid(){const context=Object.assign({},this.context,{default_module:"__custom__",default_res_id:this.state.id,default_model:this.props.resModel,});this.dialogService.add(FormViewDialog,{context,onRecordSaved:()=>this.loadMetadata(),resModel:"ir.model.data",});}
async toggleNoupdate(){await this.env.services.orm.call("ir.model.data","toggle_noupdate",[this.props.resModel,this.state.id,]);await this.loadMetadata();}
async loadMetadata(){const args=[[this.props.resId]];const result=await this.orm.call(this.props.resModel,"get_metadata",args);const metadata=result[0];this.state.id=metadata.id;this.state.xmlid=metadata.xmlid;this.state.xmlids=metadata.xmlids;this.state.noupdate=metadata.noupdate;this.state.creator=formatMany2one(metadata.create_uid);this.state.lastModifiedBy=formatMany2one(metadata.write_uid);this.state.createDate=formatDateTime(deserializeDateTime(metadata.create_date));this.state.writeDate=formatDateTime(deserializeDateTime(metadata.write_date));}}
GetMetadataDialog.template="web.DebugMenu.GetMetadataDialog";GetMetadataDialog.components={Dialog};__exports.viewMetadata=viewMetadata;function viewMetadata({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
return{type:"item",description:_t("View Metadata"),callback:()=>{env.services.dialog.add(GetMetadataDialog,{resModel:component.props.resModel,resId,});},sequence:320,};}
debugRegistry.category("form").add("viewMetadata",viewMetadata);class RawRecordDialog extends Component{get content(){const record=this.props.record;return JSON.stringify(record,Object.keys(record).sort(),2);}}
RawRecordDialog.template=xml`
<Dialog title="props.title">
    <pre t-esc="content"/>
</Dialog>`;RawRecordDialog.components={Dialog};RawRecordDialog.props={record:{type:Object},title:{type:String},close:{type:Function},};__exports.viewRawRecord=viewRawRecord;function viewRawRecord({component,env}){const{resId,resModel}=component.model.config;if(!resId){return null;}
const description=_t("View Raw Record Data");return{type:"item",description,callback:async()=>{const records=await component.model.orm.read(resModel,[resId]);env.services.dialog.add(RawRecordDialog,{title:_t("Raw Record Data: %s(%s)",resModel,resId),record:records[0],});},sequence:325,};}
debugRegistry.category("form").add("viewRawRecord",viewRawRecord);class SetDefaultDialog extends Component{setup(){this.orm=useService("orm");this.title=_t("Set Defaults");this.state={fieldToSet:"",condition:"",scope:"self",};this.fields=this.props.record.fields;this.activeFields=this.props.record.activeFields;this.fieldNamesInView=this.props.record.fieldNames;this.fieldNamesBlackList=["message_attachment_count"];this.fieldsValues=this.props.record.data;this.modifierDatas={};this.defaultFields=this.getDefaultFields();this.conditions=this.getConditions();}
getDefaultFields(){return this.fieldNamesInView.filter((fieldName)=>!this.fieldNamesBlackList.includes(fieldName)).map((fieldName)=>{const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];const evalContext=this.props.record.evalContextWithVirtualIds;if(!value||evaluateBooleanExpr(this.activeFields[fieldName].invisible,evalContext)||evaluateBooleanExpr(this.activeFields[fieldName].readonly,evalContext)||fieldInfo.type==="one2many"||fieldInfo.type==="many2many"||fieldInfo.type==="binary"||Object.entries(this.props.fieldNodes).filter(([key,value])=>value.name===fieldName).some(([key,value])=>value.options.isPassword)){return false;}
return{name:fieldName,string:fieldInfo.string,value,displayed,};}).filter((val)=>val).sort((field)=>field.string);}
getConditions(){return this.fieldNamesInView.filter((fieldName)=>{const fieldInfo=this.fields[fieldName];return fieldInfo.change_default;}).map((fieldName)=>{const fieldInfo=this.fields[fieldName];const valueDisplayed=this.display(fieldInfo,this.fieldsValues[fieldName]);const value=valueDisplayed[0];const displayed=valueDisplayed[1];return{name:fieldName,string:fieldInfo.string,value:value,displayed:displayed,};});}
display(fieldInfo,value){let displayed=value;if(value&&fieldInfo.type==="many2one"){displayed=value[1];value=value[0];}else if(value&&fieldInfo.type==="selection"){displayed=fieldInfo.selection.find((option)=>{return option[0]===value;})[1];}
return[value,displayed];}
async saveDefault(){if(!this.state.fieldToSet){return;}
let fieldToSet=this.defaultFields.find((field)=>{return field.name===this.state.fieldToSet;}).value;if(fieldToSet.constructor.name.toLowerCase()==="date"){fieldToSet=serializeDate(fieldToSet);}else if(fieldToSet.constructor.name.toLowerCase()==="datetime"){fieldToSet=serializeDateTime(fieldToSet);}
await this.orm.call("ir.default","set",[this.props.record.resModel,this.state.fieldToSet,fieldToSet,this.state.scope==="self",true,this.state.condition||false,]);this.props.close();}}
SetDefaultDialog.template="web.DebugMenu.SetDefaultDialog";SetDefaultDialog.components={Dialog};SetDefaultDialog.props={record:{type:Object},fieldNodes:{type:Object},close:{type:Function},};__exports.setDefaults=setDefaults;function setDefaults({component,env}){return{type:"item",description:_t("Set Defaults"),callback:()=>{env.services.dialog.add(SetDefaultDialog,{record:component.model.root,fieldNodes:component.props.archInfo.fieldNodes,});},sequence:310,};}
debugRegistry.category("form").add("setDefaults",setDefaults);__exports.manageAttachments=manageAttachments;function manageAttachments({component,env}){const resId=component.model.root.resId;if(!resId){return null;}
const description=_t("Manage Attachments");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.attachment",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",domain:[["res_model","=",component.props.resModel],["res_id","=",resId],],context:{default_res_model:component.props.resModel,default_res_id:resId,skip_res_field_check:true,},});},sequence:330,};}
debugRegistry.category("form").add("manageAttachments",manageAttachments);return __exports;});;

/* /web/static/src/views/fields/ace/ace_field.js */
odoo.define('@web/views/fields/ace/ace_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@web/core/code_editor/code_editor','@odoo/owl','@web/model/relational_model/utils','@web/views/fields/formatters','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{CodeEditor}=require("@web/core/code_editor/code_editor");const{Component,useState}=require("@odoo/owl");const{useRecordObserver}=require("@web/model/relational_model/utils");const{formatText}=require("@web/views/fields/formatters");const{cookie}=require("@web/core/browser/cookie");const AceField=__exports.AceField=class AceField extends Component{static template="web.AceField";static props={...standardFieldProps,mode:{type:String,optional:true},};static defaultProps={mode:"qweb",};static components={CodeEditor};setup(){this.state=useState({});useRecordObserver((record)=>{this.state.initialValue=formatText(record.data[this.props.name]);});this.isDirty=false;const{model}=this.props.record;useBus(model.bus,"WILL_SAVE_URGENTLY",()=>this.commitChanges());useBus(model.bus,"NEED_LOCAL_CHANGES",({detail})=>detail.proms.push(this.commitChanges()));}
get mode(){return this.props.mode==="xml"?"qweb":this.props.mode;}
get theme(){return cookie.get("color_scheme")==="dark"?"monokai":"";}
handleChange(editedValue){if(this.state.initialValue!==editedValue){this.isDirty=true;}else{this.isDirty=false;}
this.props.record.model.bus.trigger("FIELD_IS_DIRTY",this.isDirty);this.editedValue=editedValue;}
async commitChanges(){if(!this.props.readonly&&this.isDirty){if(this.state.initialValue!==this.editedValue){await this.props.record.update({[this.props.name]:this.editedValue});}
this.isDirty=false;}}}
const aceField=__exports.aceField={component:AceField,displayName:_t("Ace Editor"),supportedOptions:[{label:_t("Mode"),name:"mode",type:"string",},],supportedTypes:["text","html"],extractProps:({options})=>({mode:options.mode,}),};registry.category("fields").add("ace",aceField);registry.category("fields").add("code",aceField);return __exports;});;

/* /web/static/src/views/fields/attachment_image/attachment_image_field.js */
odoo.define('@web/views/fields/attachment_image/attachment_image_field',['@web/core/l10n/translation','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const AttachmentImageField=__exports.AttachmentImageField=class AttachmentImageField extends Component{static template="web.AttachmentImageField";}
const attachmentImageField=__exports.attachmentImageField={component:AttachmentImageField,displayName:_t("Attachment Image"),supportedTypes:["many2one"],};registry.category("fields").add("attachment_image",attachmentImageField);return __exports;});;

/* /web/static/src/views/fields/badge/badge_field.js */
odoo.define('@web/views/fields/badge/badge_field',['@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const BadgeField=__exports.BadgeField=class BadgeField extends Component{static template="web.BadgeField";static props={...standardFieldProps,decorations:{type:Object,optional:true},};static defaultProps={decorations:{},};get formattedValue(){const formatter=formatters.get(this.props.record.fields[this.props.name].type);return formatter(this.props.record.data[this.props.name],{selection:this.props.record.fields[this.props.name].selection,});}
get classFromDecoration(){const evalContext=this.props.record.evalContextWithVirtualIds;for(const decorationName in this.props.decorations){if(evaluateBooleanExpr(this.props.decorations[decorationName],evalContext)){return`text-bg-${decorationName}`;}}
return"";}}
const badgeField=__exports.badgeField={component:BadgeField,displayName:_t("Badge"),supportedTypes:["selection","many2one","char"],extractProps:({decorations})=>{return{decorations};},};registry.category("fields").add("badge",badgeField);return __exports;});;

/* /web/static/src/views/fields/badge_selection/badge_selection_field.js */
odoo.define('@web/views/fields/badge_selection/badge_selection_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BadgeSelectionField=__exports.BadgeSelectionField=class BadgeSelectionField extends Component{static template="web.BadgeSelectionField";static props={...standardFieldProps,domain:{type:Array,optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg"].includes(s),default:"md",},};setup(){this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const{relation}=props.record.fields[props.name];return orm.call(relation,"name_search",["",props.domain]);});}}
get options(){switch(this.type){case"many2one":return this.specialData.data;case"selection":return this.props.record.fields[this.props.name].selection;default:return[];}}
get string(){switch(this.type){case"many2one":return this.props.record.data[this.props.name]?this.props.record.data[this.props.name][1]:"";case"selection":return this.props.record.data[this.props.name]!==false?this.options.find((o)=>o[0]===this.props.record.data[this.props.name])[1]:"";default:return"";}}
get value(){const rawValue=this.props.record.data[this.props.name];return this.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
stringify(value){return JSON.stringify(value);}
onChange(value){switch(this.type){case"many2one":if(value===false){this.props.record.update({[this.props.name]:false});}else{this.props.record.update({[this.props.name]:this.options.find((option)=>option[0]===value),});}
break;case"selection":if(value===this.value){const{required}=this.props.record.fields[this.props.name];if(!required){this.props.record.update({[this.props.name]:false});}}else{this.props.record.update({[this.props.name]:value});}
break;}}}
const badgeSelectionField=__exports.badgeSelectionField={component:BadgeSelectionField,displayName:_t("Badges"),supportedTypes:["many2one","selection"],supportedOptions:[{label:"Size",name:"size",type:"selection",choices:[{label:"Small",value:"sm"},{label:"Medium",value:"md"},{label:"Large",value:"lg"},],default:"md",},],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:(fieldInfo,dynamicInfo)=>({domain:dynamicInfo.domain(),size:fieldInfo.options.size,}),};registry.category("fields").add("selection_badge",badgeSelectionField);return __exports;});;

/* /web/static/src/views/fields/binary/binary_field.js */
odoo.define('@web/views/fields/binary/binary_field',['@web/core/registry','@web/core/utils/hooks','@web/core/utils/binary','@web/core/network/download','@web/views/fields/standard_field_props','@web/views/fields/file_handler','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{isBinarySize,toBase64Length}=require("@web/core/utils/binary");const{download}=require("@web/core/network/download");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const MAX_FILENAME_SIZE_BYTES=__exports.MAX_FILENAME_SIZE_BYTES=0xFF;const BinaryField=__exports.BinaryField=class BinaryField extends Component{static template="web.BinaryField";static components={FileUploader,};static props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},fileNameField:{type:String,optional:true},};static defaultProps={acceptedFileExtensions:"*",};setup(){this.notification=useService("notification");}
get fileName(){return(this.props.record.data[this.props.fileNameField]||this.props.record.data[this.props.name]||"").slice(0,toBase64Length(MAX_FILENAME_SIZE_BYTES));}
update({data,name}){const{fileNameField,record}=this.props;const changes={[this.props.name]:data||false};if(fileNameField in record.fields&&record.data[fileNameField]!==name){changes[fileNameField]=name||'';}
return this.props.record.update(changes);}
getDownloadData(){return{model:this.props.record.resModel,id:this.props.record.resId,field:this.props.name,filename_field:this.fileName,filename:this.fileName||"",download:true,data:isBinarySize(this.props.record.data[this.props.name])?null:this.props.record.data[this.props.name],};}
async onFileDownload(){await download({data:this.getDownloadData(),url:"/web/content",});}}
const ListBinaryField=__exports.ListBinaryField=class ListBinaryField extends BinaryField{static template="web.ListBinaryField";}
const binaryField=__exports.binaryField={component:BinaryField,displayName:_t("File"),supportedOptions:[{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},],supportedTypes:["binary"],extractProps:({attrs,options})=>({acceptedFileExtensions:options.accepted_file_extensions,fileNameField:attrs.filename,}),};const listBinaryField=__exports.listBinaryField={...binaryField,component:ListBinaryField,};registry.category("fields").add("binary",binaryField);registry.category("fields").add("list.binary",listBinaryField);return __exports;});;

/* /web/static/src/views/fields/boolean/boolean_field.js */
odoo.define('@web/views/fields/boolean/boolean_field',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useRecordObserver}=require("@web/model/relational_model/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BooleanField=__exports.BooleanField=class BooleanField extends Component{static template="web.BooleanField";static components={CheckBox};static props={...standardFieldProps,};setup(){this.state=useState({});useRecordObserver((record)=>{this.state.value=record.data[this.props.name];});}
onChange(newValue){this.state.value=newValue;this.props.record.update({[this.props.name]:newValue});}}
const booleanField=__exports.booleanField={component:BooleanField,displayName:_t("Checkbox"),supportedTypes:["boolean"],isEmpty:()=>false,};registry.category("fields").add("boolean",booleanField);return __exports;});;

/* /web/static/src/views/fields/boolean_favorite/boolean_favorite_field.js */
odoo.define('@web/views/fields/boolean_favorite/boolean_favorite_field',['@web/core/l10n/translation','@web/core/registry','@web/views/utils','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const BooleanFavoriteField=__exports.BooleanFavoriteField=class BooleanFavoriteField extends Component{static template="web.BooleanFavoriteField";static props={...standardFieldProps,noLabel:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={noLabel:false,};async update(){const changes={[this.props.name]:!this.props.record.data[this.props.name]};await this.props.record.update(changes,{save:this.props.autosave});}}
const booleanFavoriteField=__exports.booleanFavoriteField={component:BooleanFavoriteField,displayName:_t("Favorite"),supportedTypes:["boolean"],isEmpty:()=>false,supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],extractProps:({attrs,options})=>({noLabel:archParseBoolean(attrs.nolabel),autosave:"autosave"in options?Boolean(options.autosave):true,}),};registry.category("fields").add("boolean_favorite",booleanFavoriteField);return __exports;});;

/* /web/static/src/views/fields/boolean_icon/boolean_icon_field.js */
odoo.define('@web/views/fields/boolean_icon/boolean_icon_field',['@odoo/owl','@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const BooleanIconField=__exports.BooleanIconField=class BooleanIconField extends Component{static template="web.BooleanIconField";static props={...standardFieldProps,icon:{type:String,optional:true},label:{type:String,optional:true},};static defaultProps={icon:"fa-check-square-o",};update(){this.props.record.update({[this.props.name]:!this.props.record.data[this.props.name]});}}
const booleanIconField=__exports.booleanIconField={component:BooleanIconField,displayName:_t("Boolean Icon"),supportedOptions:[{label:_t("Icon"),name:"icon",type:"string",},],supportedTypes:["boolean"],extractProps:({options,string})=>({icon:options.icon,label:string,}),};registry.category("fields").add("boolean_icon",booleanIconField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/boolean_toggle_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/boolean/boolean_field'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{booleanField,BooleanField}=require("@web/views/fields/boolean/boolean_field");const BooleanToggleField=__exports.BooleanToggleField=class BooleanToggleField extends BooleanField{static template="web.BooleanToggleField";static props={...BooleanField.props,autosave:{type:Boolean,optional:true},};async onChange(newValue){this.state.value=newValue;const changes={[this.props.name]:newValue};await this.props.record.update(changes,{save:this.props.autosave});}}
const booleanToggleField=__exports.booleanToggleField={...booleanField,component:BooleanToggleField,displayName:_t("Toggle"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],extractProps({options},dynamicInfo){return{autosave:"autosave"in options?Boolean(options.autosave):true,readonly:dynamicInfo.readonly,};},};registry.category("fields").add("boolean_toggle",booleanToggleField);return __exports;});;

/* /web/static/src/views/fields/boolean_toggle/list_boolean_toggle_field.js */
odoo.define('@web/views/fields/boolean_toggle/list_boolean_toggle_field',['@web/core/registry','@web/views/fields/boolean_toggle/boolean_toggle_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{booleanToggleField,BooleanToggleField}=require("@web/views/fields/boolean_toggle/boolean_toggle_field");const ListBooleanToggleField=__exports.ListBooleanToggleField=class ListBooleanToggleField extends BooleanToggleField{static template="web.ListBooleanToggleField";async onClick(){if(!this.props.readonly&&this.props.record.isInEdition){const changes={[this.props.name]:!this.props.record.data[this.props.name]};await this.props.record.update(changes,{save:this.props.autosave});}}}
const listBooleanToggleField=__exports.listBooleanToggleField={...booleanToggleField,component:ListBooleanToggleField,};registry.category("fields").add("list.boolean_toggle",listBooleanToggleField);return __exports;});;

/* /web/static/src/views/fields/char/char_field.js */
odoo.define('@web/views/fields/char/char_field',['@web/core/l10n/translation','@web/core/registry','@web/views/utils','@web/views/fields/formatters','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/translation_button','@web/views/fields/dynamic_placeholder_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{formatChar}=require("@web/views/fields/formatters");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{useDynamicPlaceholder}=require("@web/views/fields/dynamic_placeholder_hook");const{Component,useExternalListener,useRef,useEffect}=require("@odoo/owl");const CharField=__exports.CharField=class CharField extends Component{static template="web.CharField";static components={TranslationButton,};static props={...standardFieldProps,autocomplete:{type:String,optional:true},isPassword:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},dynamicPlaceholderModelReferenceField:{type:String,optional:true},};static defaultProps={dynamicPlaceholder:false};setup(){this.input=useRef("input");if(this.props.dynamicPlaceholder){const dynamicPlaceholder=useDynamicPlaceholder(this.input);useExternalListener(document,"keydown",dynamicPlaceholder.onKeydown);useEffect(()=>dynamicPlaceholder.updateModel(this.props.dynamicPlaceholderModelReferenceField));}
useInputField({getValue:()=>this.props.record.data[this.props.name]||"",parse:(v)=>this.parse(v),});}
get shouldTrim(){return this.props.record.fields[this.props.name].trim&&!this.props.isPassword;}
get maxLength(){return this.props.record.fields[this.props.name].size;}
get isTranslatable(){return this.props.record.fields[this.props.name].translate;}
get formattedValue(){return formatChar(this.props.record.data[this.props.name],{isPassword:this.props.isPassword,});}
parse(value){if(this.shouldTrim){return value.trim();}
return value;}}
const charField=__exports.charField={component:CharField,displayName:_t("Text"),supportedTypes:["char"],supportedOptions:[{label:_t("Dynamic placeholder"),name:"dynamic_placeholder",type:"boolean",help:_t("Enable this option to allow the input to display a dynamic placeholder."),},{label:_t("Model reference field"),name:"dynamic_placeholder_model_reference_field",type:"field",availableTypes:["char"],},],extractProps:({attrs,options})=>({isPassword:archParseBoolean(attrs.password),dynamicPlaceholder:options.dynamic_placeholder||false,dynamicPlaceholderModelReferenceField:options.dynamic_placeholder_model_reference_field||"",autocomplete:attrs.autocomplete,placeholder:attrs.placeholder,}),};registry.category("fields").add("char",charField);return __exports;});;

/* /web/static/src/views/fields/color/color_field.js */
odoo.define('@web/views/fields/color/color_field',['@odoo/owl','@web/core/registry','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const ColorField=__exports.ColorField=class ColorField extends Component{static template="web.ColorField";static props={...standardFieldProps,};get color(){return this.props.record.data[this.props.name]||"";}}
const colorField=__exports.colorField={component:ColorField,supportedTypes:["char"],extractProps(fieldInfo,dynamicInfo){return{readonly:dynamicInfo.readonly,};},};registry.category("fields").add("color",colorField);return __exports;});;

/* /web/static/src/views/fields/color_picker/color_picker_field.js */
odoo.define('@web/views/fields/color_picker/color_picker_field',['@web/core/colorlist/colorlist','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{ColorList}=require("@web/core/colorlist/colorlist");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ColorPickerField=__exports.ColorPickerField=class ColorPickerField extends Component{static template="web.ColorPickerField";static components={ColorList,};static props={...standardFieldProps,canToggle:{type:Boolean},};static RECORD_COLORS=[0,1,2,3,4,5,6,7,8,9,10,11];get isExpanded(){return!this.props.canToggle&&!this.props.readonly;}
switchColor(colorIndex){this.props.record.update({[this.props.name]:colorIndex});}}
const colorPickerField=__exports.colorPickerField={component:ColorPickerField,supportedTypes:["integer"],extractProps:({viewType})=>({canToggle:viewType!=="list",}),};registry.category("fields").add("color_picker",colorPickerField);return __exports;});;

/* /web/static/src/views/fields/copy_clipboard/copy_button.js */
odoo.define('@web/views/fields/copy_clipboard/copy_button',['@web/core/browser/browser','@web/core/tooltip/tooltip','@web/core/popover/popover_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Tooltip}=require("@web/core/tooltip/tooltip");const{usePopover}=require("@web/core/popover/popover_hook");const{Component,useRef}=require("@odoo/owl");const CopyButton=__exports.CopyButton=class CopyButton extends Component{static template="web.CopyButton";static props={className:{type:String,optional:true},copyText:{type:String,optional:true},disabled:{type:Boolean,optional:true},successText:{type:String,optional:true},content:{type:[String,Object],optional:true},};setup(){this.button=useRef("button");this.popover=usePopover(Tooltip);}
showTooltip(){this.popover.open(this.button.el,{tooltip:this.props.successText});browser.setTimeout(this.popover.close,800);}
async onClick(){let write;if(typeof this.props.content==="string"||this.props.content instanceof String){write=(value)=>browser.navigator.clipboard.writeText(value);}else{write=(value)=>browser.navigator.clipboard.write(value);}
try{await write(this.props.content);}catch(error){return browser.console.warn(error);}
this.showTooltip();}}
return __exports;});;

/* /web/static/src/views/fields/copy_clipboard/copy_clipboard_field.js */
odoo.define('@web/views/fields/copy_clipboard/copy_clipboard_field',['@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/core/utils/objects','@web/views/fields/copy_clipboard/copy_button','@web/views/fields/url/url_field','@web/views/fields/char/char_field','@web/views/fields/text/text_field','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{omit}=require("@web/core/utils/objects");const{CopyButton}=require("@web/views/fields/copy_clipboard/copy_button");const{UrlField}=require("@web/views/fields/url/url_field");const{CharField}=require("@web/views/fields/char/char_field");const{TextField}=require("@web/views/fields/text/text_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");class CopyClipboardField extends Component{static template="web.CopyClipboardField";static props={...standardFieldProps,string:{type:String,optional:true},disabledExpr:{type:String,optional:true},};setup(){this.copyText=this.props.string||_t("Copy");this.successText=_t("Copied");}
get copyButtonClassName(){return`o_btn_${this.type}_copy btn-sm`;}
get fieldProps(){return omit(this.props,"string","disabledExpr");}
get type(){return this.props.record.fields[this.props.name].type;}
get disabled(){return this.props.disabledExpr?evaluateBooleanExpr(this.props.disabledExpr,this.props.record.evalContextWithVirtualIds):false;}}
const CopyClipboardButtonField=__exports.CopyClipboardButtonField=class CopyClipboardButtonField extends CopyClipboardField{static template="web.CopyClipboardButtonField";static components={CopyButton};get copyButtonClassName(){return`o_btn_${this.type}_copy rounded-2`;}}
const CopyClipboardCharField=__exports.CopyClipboardCharField=class CopyClipboardCharField extends CopyClipboardField{static components={Field:CharField,CopyButton};}
const CopyClipboardTextField=__exports.CopyClipboardTextField=class CopyClipboardTextField extends CopyClipboardField{static components={Field:TextField,CopyButton};}
const CopyClipboardURLField=__exports.CopyClipboardURLField=class CopyClipboardURLField extends CopyClipboardField{static components={Field:UrlField,CopyButton};}
function extractProps({attrs}){return{string:attrs.string,disabledExpr:attrs.disabled,};}
const copyClipboardButtonField=__exports.copyClipboardButtonField={component:CopyClipboardButtonField,displayName:_t("Copy to Clipboard"),extractProps,};registry.category("fields").add("CopyClipboardButton",copyClipboardButtonField);const copyClipboardCharField=__exports.copyClipboardCharField={component:CopyClipboardCharField,displayName:_t("Copy Text to Clipboard"),supportedTypes:["char"],extractProps,};registry.category("fields").add("CopyClipboardChar",copyClipboardCharField);const copyClipboardTextField=__exports.copyClipboardTextField={component:CopyClipboardTextField,displayName:_t("Copy Multiline Text to Clipboard"),supportedTypes:["text"],extractProps,};registry.category("fields").add("CopyClipboardText",copyClipboardTextField);const copyClipboardURLField=__exports.copyClipboardURLField={component:CopyClipboardURLField,displayName:_t("Copy URL to Clipboard"),supportedTypes:["char"],extractProps,};registry.category("fields").add("CopyClipboardURL",copyClipboardURLField);return __exports;});;

/* /web/static/src/views/fields/datetime/datetime_field.js */
odoo.define('@web/views/fields/datetime/datetime_field',['@odoo/owl','@web/core/datetime/datetime_hook','@web/core/l10n/dates','@web/core/py_js/py','@web/core/l10n/translation','@web/core/registry','@web/core/utils/arrays','@web/views/utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillRender,useState}=require("@odoo/owl");const{useDateTimePicker}=require("@web/core/datetime/datetime_hook");const{areDatesEqual,deserializeDate,deserializeDateTime,formatDate,formatDateTime,today,}=require("@web/core/l10n/dates");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{ensureArray}=require("@web/core/utils/arrays");const{archParseBoolean}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const DateTimeField=__exports.DateTimeField=class DateTimeField extends Component{static props={...standardFieldProps,endDateField:{type:String,optional:true},maxDate:{type:String,optional:true},minDate:{type:String,optional:true},alwaysRange:{type:Boolean,optional:true},placeholder:{type:String,optional:true},required:{type:Boolean,optional:true},rounding:{type:Number,optional:true},startDateField:{type:String,optional:true},warnFuture:{type:Boolean,optional:true},showTime:{type:Boolean,optional:true},};static defaultProps={showTime:true};static template="web.DateTimeField";get endDateField(){return this.relatedField?this.props.endDateField||this.props.name:null;}
get field(){return this.props.record.fields[this.props.name];}
get relatedField(){return this.props.startDateField||this.props.endDateField;}
get startDateField(){return this.props.startDateField||this.props.name;}
get values(){return ensureArray(this.state.value);}
setup(){const getPickerProps=()=>{const value=this.getRecordValue();const pickerProps={value,type:this.field.type,range:this.isRange(value),};if(this.props.maxDate){pickerProps.maxDate=this.parseLimitDate(this.props.maxDate);}
if(this.props.minDate){pickerProps.minDate=this.parseLimitDate(this.props.minDate);}
if(!isNaN(this.props.rounding)){pickerProps.rounding=this.props.rounding;}
return pickerProps;};const dateTimePicker=useDateTimePicker({target:"root",get pickerProps(){return getPickerProps();},onChange:()=>{this.state.range=this.isRange(this.state.value);},onApply:()=>{const toUpdate={};if(Array.isArray(this.state.value)){[toUpdate[this.startDateField],toUpdate[this.endDateField]]=this.state.value;}else{toUpdate[this.props.name]=this.state.value;}
if(!this.startDateField||!this.endDateField){for(const fieldName in toUpdate){if(areDatesEqual(toUpdate[fieldName],this.props.record.data[fieldName])){delete toUpdate[fieldName];}}}else{if(areDatesEqual(toUpdate[this.startDateField],this.props.record.data[this.startDateField])&&areDatesEqual(toUpdate[this.endDateField],this.props.record.data[this.endDateField])){delete toUpdate[this.startDateField];delete toUpdate[this.endDateField];}}
if(Object.keys(toUpdate).length){this.props.record.update(toUpdate);}},});this.state=useState(dateTimePicker.state);this.openPicker=dateTimePicker.open;onWillRender(()=>this.triggerIsDirty());}
async addDate(valueIndex){const values=this.values;values[valueIndex]=values[valueIndex?0:1];this.state.focusedDateIndex=valueIndex;this.state.value=values;this.state.range=true;this.openPicker(valueIndex);}
getFormattedValue(valueIndex){const value=this.values[valueIndex];return value?this.field.type==="date"||!this.props.showTime?formatDate(value):formatDateTime(value):"";}
getRecordValue(){if(this.relatedField){return[this.props.record.data[this.startDateField],this.props.record.data[this.endDateField],];}else{return this.props.record.data[this.props.name];}}
isDateInTheFuture(index){return this.values[index]>today();}
isEmpty(fieldName){return fieldName===this.startDateField?!this.values[0]:!this.values[1];}
isRange(value){if(!this.relatedField){return false;}
return(this.props.alwaysRange||this.props.required||ensureArray(value).filter(Boolean).length===2);}
parseLimitDate(value){if(value==="today"){return value;}
return this.field.type==="date"?deserializeDate(value):deserializeDateTime(value);}
shouldShowSeparator(){return((this.props.alwaysRange&&(this.props.readonly?!this.isEmpty(this.startDateField)||!this.isEmpty(this.endDateField):true))||(this.state.range&&(this.props.required||(!this.isEmpty(this.startDateField)&&!this.isEmpty(this.endDateField)))));}
triggerIsDirty(isDirty){this.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty??!areDatesEqual(this.getRecordValue(),this.state.value));}
onInput(){this.triggerIsDirty(true);}}
const START_DATE_FIELD_OPTION="start_date_field";const END_DATE_FIELD_OPTION="end_date_field";const dateField=__exports.dateField={component:DateTimeField,displayName:_t("Date"),supportedOptions:[{label:_t("Earliest accepted date"),name:"min_date",type:"string",help:_t(`ISO-formatted date (e.g. "2018-12-31") or "%s".`,"today"),},{label:_t("Latest accepted date"),name:"max_date",type:"string",help:_t(`ISO-formatted date (e.g. "2018-12-31") or "%s".`,"today"),},{label:_t("Warning for future dates"),name:"warn_future",type:"boolean",help:_t(`Displays a warning icon if the input dates are in the future.`),},],supportedTypes:["date"],extractProps:({attrs,options},dynamicInfo)=>({endDateField:options[END_DATE_FIELD_OPTION],maxDate:options.max_date,minDate:options.min_date,alwaysRange:archParseBoolean(options.always_range),placeholder:attrs.placeholder,required:dynamicInfo.required,rounding:options.rounding&&parseInt(options.rounding,10),startDateField:options[START_DATE_FIELD_OPTION],warnFuture:archParseBoolean(options.warn_future),}),fieldDependencies:({type,attrs,options})=>{const deps=[];if(options[START_DATE_FIELD_OPTION]){deps.push({name:options[START_DATE_FIELD_OPTION],type,readonly:false,...attrs,});if(options[END_DATE_FIELD_OPTION]){console.warn(`A field cannot have both ${START_DATE_FIELD_OPTION} and ${END_DATE_FIELD_OPTION} options at the same time`);}}else if(options[END_DATE_FIELD_OPTION]){deps.push({name:options[END_DATE_FIELD_OPTION],type,readonly:false,...attrs,});}
return deps;},};const dateTimeField=__exports.dateTimeField={...dateField,displayName:_t("Date & Time"),supportedOptions:[...dateField.supportedOptions,{label:_t("Time interval"),name:"rounding",type:"number",default:5,help:_t(`Control the number of minutes in the time selection. E.g. set it to 15 to work in quarters.`),},{label:_t("Show time"),name:"show_time",type:"boolean",default:true,help:_t(`Displays or hides the time in the datetime value.`),},],extractProps:({attrs,options},dynamicInfo)=>({...dateField.extractProps({attrs,options},dynamicInfo),showTime:archParseBoolean(options.show_time??true),}),supportedTypes:["datetime"],};const dateRangeField=__exports.dateRangeField={...dateTimeField,displayName:_t("Date Range"),supportedOptions:[...dateTimeField.supportedOptions,{label:_t("Start date field"),name:START_DATE_FIELD_OPTION,type:"field",availableTypes:["date","datetime"],},{label:_t("End date field"),name:END_DATE_FIELD_OPTION,type:"field",availableTypes:["date","datetime"],},{label:_t("Always range"),name:"always_range",type:"boolean",default:false,help:_t(`Set to true the full range input has to be display by default, even if empty.`),},],supportedTypes:["date","datetime"],isValid:(record,fieldname,fieldInfo)=>{if(fieldInfo.widget==="daterange"){if(!record.data[fieldInfo.options[END_DATE_FIELD_OPTION]]!==!record.data[fieldname]&&evaluateBooleanExpr(record.activeFields[fieldInfo.options[END_DATE_FIELD_OPTION]]?.required,record.evalContextWithVirtualIds)){return false;}
if(!record.data[fieldInfo.options[START_DATE_FIELD_OPTION]]!==!record.data[fieldname]&&evaluateBooleanExpr(record.activeFields[fieldInfo.options[START_DATE_FIELD_OPTION]]?.required,record.evalContextWithVirtualIds)){return false;}}
return!record.isFieldInvalid(fieldname);}};registry.category("fields").add("date",dateField).add("daterange",dateRangeField).add("datetime",dateTimeField);return __exports;});;

/* /web/static/src/views/fields/datetime/list_datetime_field.js */
odoo.define('@web/views/fields/datetime/list_datetime_field',['@web/core/registry','@web/views/fields/datetime/datetime_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DateTimeField,dateField,dateRangeField,dateTimeField}=require("@web/views/fields/datetime/datetime_field");const ListDateTimeField=__exports.ListDateTimeField=class ListDateTimeField extends DateTimeField{shouldShowSeparator(){return this.props.readonly?this.relatedField&&this.values.some(Boolean):super.shouldShowSeparator();}}
const listDateField=__exports.listDateField={...dateField,component:ListDateTimeField};const listDateRangeField=__exports.listDateRangeField={...dateRangeField,component:ListDateTimeField};const listDateTimeField=__exports.listDateTimeField={...dateTimeField,component:ListDateTimeField};registry.category("fields").add("list.date",listDateField).add("list.daterange",listDateRangeField).add("list.datetime",listDateTimeField);return __exports;});;

/* /web/static/src/views/fields/domain/domain_field.js */
odoo.define('@web/views/fields/domain/domain_field',['@web/core/l10n/translation','@odoo/owl','@web/core/domain','@web/core/domain_selector/domain_selector','@web/core/domain_selector_dialog/domain_selector_dialog','@web/core/py_js/py_builtin','@web/core/registry','@web/views/view_dialogs/select_create_dialog','@web/views/fields/standard_field_props','@web/core/utils/hooks','@web/core/domain_selector/utils','@web/core/tree_editor/condition_tree'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart,onWillUpdateProps,useState}=require("@odoo/owl");const{Domain,InvalidDomainError}=require("@web/core/domain");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{DomainSelectorDialog}=require("@web/core/domain_selector_dialog/domain_selector_dialog");const{EvaluationError}=require("@web/core/py_js/py_builtin");const{registry}=require("@web/core/registry");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useBus,useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{useGetDomainTreeDescription,useGetDefaultLeafDomain,}=require("@web/core/domain_selector/utils");const{treeFromDomain}=require("@web/core/tree_editor/condition_tree");const DomainField=__exports.DomainField=class DomainField extends Component{static template="web.DomainField";static components={DomainSelector,};static props={...standardFieldProps,context:{type:Object,optional:true},editInDialog:{type:Boolean,optional:true},resModel:{type:String,optional:true},isFoldable:{type:Boolean,optional:true},};static defaultProps={editInDialog:false,isFoldable:false,};setup(){this.rpc=useService("rpc");this.orm=useService("orm");this.getDomainTreeDescription=useGetDomainTreeDescription();this.getDefaultLeafDomain=useGetDefaultLeafDomain();this.addDialog=useOwnedDialogs();this.state=useState({isValid:null,recordCount:null,folded:this.props.isFoldable,facets:[],});this.isDebugEdited=false;onWillStart(()=>{this.checkProps();if(this.props.isFoldable){this.loadFacets();}});onWillUpdateProps((nextProps)=>{if(this.isDebugEdited){this.quickValidityCheck(nextProps).then((isValid)=>{this.state.isValid=isValid;this.isDebugEdited=false;if(!isValid){this.state.recordCount=0;nextProps.record.setInvalidField(nextProps.name);}});}else{this.checkProps(nextProps);}
if(nextProps.isFoldable){this.loadFacets(nextProps);}});useBus(this.props.record.model.bus,"NEED_LOCAL_CHANGES",async(ev)=>{if(this.isDebugEdited){const props=this.props;ev.detail.proms.push(this.quickValidityCheck(props).then((isValid)=>{if(isValid){this.isDebugEdited=false;}else{this.state.isValid=false;this.state.recordCount=0;props.record.setInvalidField(props.name);}}));}});}
getContext(props=this.props){return props.context;}
getDomain(props=this.props){return props.record.data[props.name]||"[]";}
getEvaluatedDomain(props=this.props){const domainStringRepr=this.getDomain(props);const evalContext=this.getContext(props);try{const domain=new Domain(domainStringRepr).toList(evalContext);return domain;}catch(error){if(error instanceof InvalidDomainError||error instanceof EvaluationError){return{isInvalid:true};}
throw error;}}
getResModel(props=this.props){let resModel=props.resModel;if(props.record.fieldNames.includes(resModel)){resModel=props.record.data[resModel];}
return resModel;}
async addCondition(){const defaultDomain=await this.getDefaultLeafDomain(this.getResModel());this.update(defaultDomain);this.state.folded=false;}
async loadFacets(props=this.props){const resModel=this.getResModel(props);if(!resModel){this.state.facets=[];this.state.folded=false;return;}
if(typeof resModel!=="string"){throw new Error(`Invalid model: ${resModel}`);}
let promises=[];const domain=this.getDomain(props);try{const tree=treeFromDomain(domain,{distributeNot:!this.env.debug});const trees=!tree.negate&&tree.value==="&"?tree.children:[tree];promises=trees.map(async(tree)=>{const description=await this.getDomainTreeDescription(resModel,tree);return description;});}catch(error){if(error.data?.name==="builtins.KeyError"&&error.data.message===resModel){throw new Error(`Invalid model: ${resModel}`);}
this.state.facets=[];this.state.folded=false;}
this.state.facets=await Promise.all(promises);}
async checkProps(props=this.props){const resModel=this.getResModel(props);if(!resModel){this.updateState({});return;}
if(typeof resModel!=="string"){throw new Error(`Invalid model: ${resModel}`);}
const domain=this.getEvaluatedDomain(props);if(domain.isInvalid){this.updateState({isValid:false,recordCount:0});return;}
let recordCount;const context=this.getContext(props);try{recordCount=await this.orm.silent.searchCount(resModel,domain,{context});}catch(error){if(error.data?.name==="builtins.KeyError"&&error.data.message===resModel){throw new Error(`Invalid model: ${resModel}`);}
this.updateState({isValid:false,recordCount:0});return;}
this.updateState({isValid:true,recordCount});}
onButtonClick(){this.addDialog(SelectCreateDialog,{title:_t("Selected records"),noCreate:true,multiSelect:false,resModel:this.getResModel(),domain:this.getEvaluatedDomain(),context:this.getContext(),},{onClose:()=>this.checkProps(),});}
onEditDialogBtnClick(){this.addDialog(DomainSelectorDialog,{resModel:this.getResModel(),domain:this.getDomain(),isDebugMode:!!this.env.debug,onConfirm:this.update.bind(this),});}
async quickValidityCheck(props){const resModel=this.getResModel(props);if(!resModel){return false;}
const domain=this.getEvaluatedDomain(props);if(domain.isInvalid){return false;}
return this.rpc("/web/domain/validate",{model:resModel,domain});}
update(domain,isDebugEdited=false){this.isDebugEdited=isDebugEdited;return this.props.record.update({[this.props.name]:domain});}
fold(){this.state.folded=true;}
updateState(params={}){Object.assign(this.state,{isValid:"isValid"in params?params.isValid:null,recordCount:"recordCount"in params?params.recordCount:null,});}}
const domainField=__exports.domainField={component:DomainField,displayName:_t("Domain"),supportedOptions:[{label:_t("Edit in dialog"),name:"in_dialog",type:"boolean",},{label:_t("Foldable"),name:"foldable",type:"boolean",help:_t("Display the domain using facets"),},{label:_t("Model"),name:"model",type:"string",},],supportedTypes:["char"],isEmpty:()=>false,extractProps({options},dynamicInfo){return{editInDialog:options.in_dialog,isFoldable:options.foldable,resModel:options.model,context:dynamicInfo.context,};},};registry.category("fields").add("domain",domainField);return __exports;});;

/* /web/static/src/views/fields/dynamic_placeholder_hook.js */
odoo.define('@web/views/fields/dynamic_placeholder_hook',['@web/core/popover/popover_hook','@web/core/utils/hooks','@odoo/owl','@web/core/l10n/translation','@web/views/fields/dynamic_placeholder_popover'],function(require){'use strict';let __exports={};const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{useComponent}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{DynamicPlaceholderPopover}=require("@web/views/fields/dynamic_placeholder_popover");__exports.useDynamicPlaceholder=useDynamicPlaceholder;function useDynamicPlaceholder(elementRef){const TRIGGER_KEY="#";const ownerField=useComponent();const triggerKeyReplaceRegex=new RegExp(`${TRIGGER_KEY}$`);let closeCallback;let positionCallback;const popover=usePopover(DynamicPlaceholderPopover,{onClose:()=>closeCallback?.(),onPositioned:(popper,position)=>positionCallback?.(popper,position),});const notification=useService("notification");let model=null;const onDynamicPlaceholderValidate=function(path,defaultValue){const element=elementRef?.el;if(!element){return;}
let rangeIndex=parseInt(element.getAttribute("data-oe-dynamic-placeholder-range-index"));if(path){let dynamicPlaceholder="{{object."+path;dynamicPlaceholder+=defaultValue&&defaultValue!==""?` or '''${defaultValue}'''}}`:"}}";const baseValue=element.value;const splitedValue=[baseValue.slice(0,rangeIndex),baseValue.slice(rangeIndex)];const newValue=splitedValue[0].replace(triggerKeyReplaceRegex,"")+
dynamicPlaceholder+
splitedValue[1];const changes={[ownerField.props.name]:newValue};ownerField.props.record.update(changes);element.value=newValue;rangeIndex+=dynamicPlaceholder.length-1;element.setSelectionRange(rangeIndex,rangeIndex);element.removeAttribute("data-oe-dynamic-placeholder-range-index");}};const onDynamicPlaceholderClose=function(){elementRef?.el.focus();};async function open(opts){if(!model){return notification.add(_t("You need to select a model before opening the dynamic placeholder selector."),{type:"danger"});}
closeCallback=opts.closeCallback;positionCallback=opts.positionCallback;popover.open(elementRef?.el,{resModel:model,validate:opts.validateCallback,});}
async function onKeydown(ev){const element=elementRef?.el;if(ev.target===element&&ev.key===TRIGGER_KEY){const currentRangeIndex=element.selectionStart;element.setAttribute("data-oe-dynamic-placeholder-range-index",currentRangeIndex+1);await open({validateCallback:onDynamicPlaceholderValidate,closeCallback:onDynamicPlaceholderClose,});}}
function updateModel(model_name_location){const recordData=ownerField.props.record.data;model=recordData[model_name_location]||recordData.model;}
return{updateModel:updateModel,onKeydown:onKeydown,setElementRef:(er)=>(elementRef=er),open:open,};}
return __exports;});;

/* /web/static/src/views/fields/dynamic_placeholder_popover.js */
odoo.define('@web/views/fields/dynamic_placeholder_popover',['@web/core/utils/hooks','@web/core/model_field_selector/model_field_selector_popover','@odoo/owl'],function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{Component,useState}=require("@odoo/owl");const DynamicPlaceholderPopover=__exports.DynamicPlaceholderPopover=class DynamicPlaceholderPopover extends Component{static template="web.DynamicPlaceholderPopover";static components={ModelFieldSelectorPopover,};static props=["resModel","validate","close"];setup(){useAutofocus();this.state=useState({path:"",isPathSelected:false,defaultValue:"",});}
filter(fieldDef){return!["one2many","boolean","many2many"].includes(fieldDef.type)&&fieldDef.searchable;}
closeFieldSelector(){if(this.state.path){this.state.isPathSelected=true;return;}
this.props.close();}
setPath(path){this.state.path=path;}
setDefaultValue(value){this.state.defaultValue=value;}
validate(){this.props.close();this.props.validate(this.state.path,this.state.defaultValue);}
async onInputKeydown(ev){switch(ev.key){case"Enter":{this.validate();break;}
case"Escape":{this.props.close();break;}}}}
return __exports;});;

/* /web/static/src/views/fields/dynamic_widget/dynamic_model_field_selector.js */
odoo.define('@web/views/fields/dynamic_widget/dynamic_model_field_selector',['@web/core/model_field_selector/model_field_selector'],function(require){'use strict';let __exports={};const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const DynamicModelFieldSelector=__exports.DynamicModelFieldSelector=class DynamicModelFieldSelector extends ModelFieldSelector{static props={...ModelFieldSelector.props,record:{type:Object,optional:true},recordProps:{type:Object,optional:true},};}
return __exports;});;

/* /web/static/src/views/fields/dynamic_widget/dynamic_model_field_selector_char.js */
odoo.define('@web/views/fields/dynamic_widget/dynamic_model_field_selector_char',['@web/views/fields/char/char_field','@web/core/registry','@web/views/utils','@web/views/fields/dynamic_widget/dynamic_model_field_selector','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{CharField,charField}=require("@web/views/fields/char/char_field");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{DynamicModelFieldSelector}=require("@web/views/fields/dynamic_widget/dynamic_model_field_selector");const{_t}=require("@web/core/l10n/translation");const DynamicModelFieldSelectorChar=__exports.DynamicModelFieldSelectorChar=class DynamicModelFieldSelectorChar extends CharField{static components={...CharField.components,DynamicModelFieldSelector,};static props={...CharField.props,resModel:{type:String,optional:true},onlySearchable:{type:Boolean,optional:true},followRelations:{type:Boolean,optional:true},};async _onRecordUpdate(value){await this.props.record.update({[this.props.name]:value});}
get getSelectorProps(){return{path:this.props.record.data[this.props.name],resModel:this.getResModel(),readonly:this.props.readonly,record:this.props.record,recordProps:this.props,update:this._onRecordUpdate.bind(this),isDebugMode:!!this.env.debug,filter:this.filter.bind(this),followRelations:this.props.followRelations,};}
filter(fieldDef){return!this.props.onlySearchable||fieldDef.searchable;}
getResModel(props=this.props){const resModel=props.record.data[props.resModel];if(!resModel){return props.record.resModel;}
return resModel;}}
DynamicModelFieldSelectorChar.template="web.DynamicModelFieldSelectorChar";const dynamicModelFieldSelectorChar=__exports.dynamicModelFieldSelectorChar={...charField,component:DynamicModelFieldSelectorChar,supportedOptions:[{label:_t("Follow relations"),name:"follow_relations",type:"boolean",default:true,},{label:_t("Model"),name:"model",type:"string",},{label:_t("Only searchable"),name:"only_searchable",type:"string",},],extractProps({options},dynamicInfo){return{followRelations:options.follow_relations??true,onlySearchable:archParseBoolean(options.only_searchable),resModel:options.model,};},};registry.category("fields").add("DynamicModelFieldSelectorChar",dynamicModelFieldSelectorChar);return __exports;});;

/* /web/static/src/views/fields/email/email_field.js */
odoo.define('@web/views/fields/email/email_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const EmailField=__exports.EmailField=class EmailField extends Component{static template="web.EmailField";static props={...standardFieldProps,placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>this.props.record.data[this.props.name]||""});}}
const emailField=__exports.emailField={component:EmailField,displayName:_t("Email"),supportedTypes:["char"],extractProps:({attrs})=>({placeholder:attrs.placeholder,}),};registry.category("fields").add("email",emailField);class FormEmailField extends EmailField{static template="web.FormEmailField";}
const formEmailField=__exports.formEmailField={...emailField,component:FormEmailField,};registry.category("fields").add("form.email",formEmailField);return __exports;});;

/* /web/static/src/views/fields/field.js */
odoo.define('@web/views/fields/field',['@web/core/domain','@web/core/py_js/py','@web/core/registry','@web/core/ui/ui_service','@web/model/relational_model/utils','@web/views/utils','@web/views/fields/field_tooltip','@odoo/owl'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{utils}=require("@web/core/ui/ui_service");const{getFieldContext}=require("@web/model/relational_model/utils");const{archParseBoolean,getClassNameFromDecoration,X2M_TYPES}=require("@web/views/utils");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{Component,xml}=require("@odoo/owl");const isSmall=utils.isSmall;const viewRegistry=registry.category("views");const fieldRegistry=registry.category("fields");class DefaultField extends Component{}
DefaultField.template=xml``;__exports.getFieldFromRegistry=getFieldFromRegistry;function getFieldFromRegistry(fieldType,widget,viewType,jsClass){const prefixes=jsClass?[jsClass,viewType,""]:[viewType,""];const findInRegistry=(key)=>{for(const prefix of prefixes){const _key=prefix?`${prefix}.${key}`:key;if(fieldRegistry.contains(_key)){return fieldRegistry.get(_key);}}};if(widget){const field=findInRegistry(widget);if(field){return field;}
console.warn(`Missing widget: ${widget} for field of type ${fieldType}`);}
return findInRegistry(fieldType)||{component:DefaultField};}
__exports.fieldVisualFeedback=fieldVisualFeedback;function fieldVisualFeedback(field,record,fieldName,fieldInfo){const readonly=evaluateBooleanExpr(fieldInfo.readonly,record.evalContextWithVirtualIds);const required=evaluateBooleanExpr(fieldInfo.required,record.evalContextWithVirtualIds);const inEdit=record.isInEdition;let empty=!record.isNew;if("isEmpty"in field){empty=empty&&field.isEmpty(record,fieldName);}else{empty=empty&&!record.data[fieldName];}
empty=inEdit?empty&&readonly:empty;return{readonly,required,invalid:field.isValid?!field.isValid(record,fieldName,fieldInfo):record.isFieldInvalid(fieldName),empty,};}
__exports.getPropertyFieldInfo=getPropertyFieldInfo;function getPropertyFieldInfo(propertyField){const{name,relatedPropertyField,string,type}=propertyField;const fieldInfo={name,string,type,widget:type,options:{},column_invisible:"False",invisible:"False",readonly:"False",required:"False",attrs:{},relatedPropertyField,context:"{}",help:undefined,onChange:false,forceSave:false,decorations:{},};if(type==="many2one"||type==="many2many"){const{domain,relation}=propertyField;fieldInfo.relation=relation;fieldInfo.domain=domain;if(relation==="res.users"||relation==="res.partner"){fieldInfo.widget=propertyField.type==="many2one"?"many2one_avatar":"many2many_tags_avatar";}else{fieldInfo.widget=propertyField.type==="many2one"?type:"many2many_tags";}}else if(type==="tags"){fieldInfo.tags=propertyField.tags;fieldInfo.widget=`property_tags`;}else if(type==="selection"){fieldInfo.selection=propertyField.selection;}
fieldInfo.field=getFieldFromRegistry(propertyField.type,fieldInfo.widget);let{relatedFields}=fieldInfo.field;if(relatedFields){if(relatedFields instanceof Function){relatedFields=relatedFields({options:{},attrs:{}});}
fieldInfo.relatedFields=Object.fromEntries(relatedFields.map((f)=>[f.name,f]));}
return fieldInfo;}
__exports.getFieldDomain=getFieldDomain;function getFieldDomain(record,fieldName){const{domain}=record.fields[fieldName];return typeof domain==="string"?new Domain(evaluateExpr(domain,record.evalContext)).toList():domain||[];}
const Field=__exports.Field=class Field extends Component{setup(){if(this.props.fieldInfo){this.field=this.props.fieldInfo.field;}else{const fieldType=this.props.record.fields[this.props.name].type;this.field=getFieldFromRegistry(fieldType,this.props.type);}}
get classNames(){const{class:_class,fieldInfo,name,record}=this.props;const{readonly,required,invalid,empty}=fieldVisualFeedback(this.field,record,name,fieldInfo||{});const classNames={o_field_widget:true,o_readonly_modifier:readonly,o_required_modifier:required,o_field_invalid:invalid,o_field_empty:empty,[`o_field_${this.type}`]:true,[_class]:Boolean(_class),};if(this.field.additionalClasses){for(const cls of this.field.additionalClasses){classNames[cls]=true;}}
if(fieldInfo&&fieldInfo.decorations){const{decorations}=fieldInfo;for(const decoName in decorations){const value=evaluateBooleanExpr(decorations[decoName],record.evalContextWithVirtualIds);classNames[getClassNameFromDecoration(decoName)]=value;}}
return classNames;}
get type(){return this.props.type||this.props.record.fields[this.props.name].type;}
get fieldComponentProps(){const record=this.props.record;let readonly=this.props.readonly||false;let propsFromNode={};if(this.props.fieldInfo){let fieldInfo=this.props.fieldInfo;readonly=readonly||evaluateBooleanExpr(fieldInfo.readonly,record.evalContextWithVirtualIds);if(this.field.extractProps){if(this.props.attrs){fieldInfo={...fieldInfo,attrs:{...fieldInfo.attrs,...this.props.attrs},};}
const dynamicInfo={get context(){return getFieldContext(record,fieldInfo.name,fieldInfo.context);},domain(){if(fieldInfo.domain){return new Domain(evaluateExpr(fieldInfo.domain,record.evalContext)).toList();}
return getFieldDomain(record,fieldInfo.name);},required:evaluateBooleanExpr(fieldInfo.required,record.evalContextWithVirtualIds),readonly:readonly,};propsFromNode=this.field.extractProps(fieldInfo,dynamicInfo);}}
const props={...this.props};delete props.style;delete props.class;delete props.showTooltip;delete props.fieldInfo;delete props.attrs;delete props.type;delete props.readonly;return{readonly:readonly||!record.isInEdition||false,...propsFromNode,...props,};}
get tooltip(){if(this.props.showTooltip){const tooltip=getTooltipInfo({field:this.props.record.fields[this.props.name],fieldInfo:this.props.fieldInfo||{},});if(Boolean(odoo.debug)||(tooltip&&JSON.parse(tooltip).field.help)){return tooltip;}}
return false;}}
Field.template="web.Field";Field.parseFieldNode=function(node,models,modelName,viewType,jsClass){const name=node.getAttribute("name");const widget=node.getAttribute("widget");const fields=models[modelName];if(!fields[name]){throw new Error(`"${modelName}"."${name}" field is undefined.`);}
const field=getFieldFromRegistry(fields[name].type,widget,viewType,jsClass);const fieldInfo={name,type:fields[name].type,viewType,widget,field,context:"{}",string:fields[name].string,help:undefined,onChange:false,forceSave:false,options:{},decorations:{},attrs:{},domain:undefined,};for(const attr of["invisible","column_invisible","readonly","required"]){fieldInfo[attr]=node.getAttribute(attr);if(fieldInfo[attr]==="True"){if(attr==="column_invisible"){fieldInfo.invisible="True";}}else if(fieldInfo[attr]===null&&fields[name][attr]){fieldInfo[attr]="True";}}
for(const{name,value}of node.attributes){if(["name","widget"].includes(name)){continue;}
if(["context","string","help","domain"].includes(name)){fieldInfo[name]=value;}else if(name==="on_change"){fieldInfo.onChange=archParseBoolean(value);}else if(name==="options"){fieldInfo.options=evaluateExpr(value);}else if(name==="force_save"){fieldInfo.forceSave=archParseBoolean(value);}else if(name.startsWith("decoration-")){fieldInfo.decorations[name.replace("decoration-","")]=value;}else if(!name.startsWith("t-att")){fieldInfo.attrs[name]=value;}}
if(name==="id"){fieldInfo.readonly="True";}
if(widget==="handle"){fieldInfo.isHandle=true;}
if(X2M_TYPES.includes(fields[name].type)){const views={};let relatedFields=fieldInfo.field.relatedFields;if(relatedFields){if(relatedFields instanceof Function){relatedFields=relatedFields(fieldInfo);}
for(const relatedField of relatedFields){if(!("readonly"in relatedField)){relatedField.readonly=true;}}
relatedFields=Object.fromEntries(relatedFields.map((f)=>[f.name,f]));views.default={fieldNodes:relatedFields,fields:relatedFields};if(!fieldInfo.field.useSubView){fieldInfo.viewMode="default";}}
for(const child of node.children){const viewType=child.tagName==="tree"?"list":child.tagName;const{ArchParser}=viewRegistry.get(viewType);const childCopy=child.cloneNode(true);const archInfo=new ArchParser().parse(childCopy,models,fields[name].relation);views[viewType]={...archInfo,limit:archInfo.limit||40,fields:models[fields[name].relation],};}
let viewMode=node.getAttribute("mode");if(viewMode){if(viewMode.split(",").length!==1){viewMode=isSmall()?"kanban":"list";}else{viewMode=viewMode==="tree"?"list":viewMode;}}else{if(views.list&&!views.kanban){viewMode="list";}else if(!views.list&&views.kanban){viewMode="kanban";}else if(views.list&&views.kanban){viewMode=isSmall()?"kanban":"list";}}
if(viewMode){fieldInfo.viewMode=viewMode;}
if(Object.keys(views).length){fieldInfo.relatedFields=models[fields[name].relation];fieldInfo.views=views;}}
return fieldInfo;};Field.props=["fieldInfo?","*"];return __exports;});;

/* /web/static/src/views/fields/field_tooltip.js */
odoo.define('@web/views/fields/field_tooltip',[],function(require){'use strict';let __exports={};__exports.getTooltipInfo=getTooltipInfo;function getTooltipInfo(params){let widgetDescription=undefined;if(params.fieldInfo.widget){widgetDescription=params.fieldInfo.field.displayName;}
const info={viewMode:params.viewMode,resModel:params.resModel,debug:Boolean(odoo.debug),field:{name:params.field.name,label:params.field.string,help:params.fieldInfo.help??params.field.help,type:params.field.type,widget:params.fieldInfo.widget,widgetDescription,context:params.fieldInfo.context,domain:params.fieldInfo.domain||params.field.domain,invisible:params.fieldInfo.invisible,column_invisible:params.fieldInfo.column_invisible,readonly:params.fieldInfo.readonly,required:params.fieldInfo.required,changeDefault:params.field.change_default,relation:params.field.relation,selection:params.field.selection,default:params.field.default,},};return JSON.stringify(info);}
return __exports;});;

/* /web/static/src/views/fields/file_handler.js */
odoo.define('@web/views/fields/file_handler',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/files','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{getDataURLFromFile}=require("@web/core/utils/urls");const{checkFileSize}=require("@web/core/utils/files");const{Component,useRef,useState}=require("@odoo/owl");const FileUploader=__exports.FileUploader=class FileUploader extends Component{setup(){this.notification=useService("notification");this.fileInputRef=useRef("fileInput");this.state=useState({isUploading:false,});}
async onFileChange(ev){if(!ev.target.files.length){return;}
const{target}=ev;for(const file of ev.target.files){if(!checkFileSize(file.size,this.notification)){return null;}
this.state.isUploading=true;const data=await getDataURLFromFile(file);if(!file.size){console.warn(`Error while uploading file : ${file.name}`);this.notification.add(_t("There was a problem while uploading your file."),{type:"danger",});}
try{await this.props.onUploaded({name:file.name,size:file.size,type:file.type,data:data.split(",")[1],objectUrl:file.type==="application/pdf"?URL.createObjectURL(file):null,});}finally{this.state.isUploading=false;}}
target.value=null;if(this.props.multiUpload&&this.props.onUploadComplete){this.props.onUploadComplete({});}}
async onSelectFileButtonClick(ev){if(this.props.onClick){const ok=await this.props.onClick(ev);if(ok!==undefined&&!ok){return;}}
this.fileInputRef.el.click();}}
FileUploader.template="web.FileUploader";FileUploader.props={onClick:{type:Function,optional:true},onUploaded:Function,onUploadComplete:{type:Function,optional:true},multiUpload:{type:Boolean,optional:true},inputName:{type:String,optional:true},fileUploadClass:{type:String,optional:true},acceptedFileExtensions:{type:String,optional:true},slots:{type:Object,optional:true},showUploadingText:{type:Boolean,optional:true},};FileUploader.defaultProps={showUploadingText:true,};return __exports;});;

/* /web/static/src/views/fields/float/float_field.js */
odoo.define('@web/views/fields/float/float_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{formatFloat}=require("@web/views/fields/formatters");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const FloatField=__exports.FloatField=class FloatField extends Component{static template="web.FloatField";static props={...standardFieldProps,formatNumber:{type:Boolean,optional:true},inputType:{type:String,optional:true},step:{type:Number,optional:true},digits:{type:Array,optional:true},placeholder:{type:String,optional:true},humanReadable:{type:Boolean,optional:true},decimals:{type:Number,optional:true},};static defaultProps={formatNumber:true,inputType:"text",humanReadable:false,decimals:0,};setup(){this.state=useState({hasFocus:false,});this.inputRef=useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>this.parse(v),});useNumpadDecimal();}
onFocusIn(){this.state.hasFocus=true;}
onFocusOut(){this.state.hasFocus=false;}
parse(value){return this.props.inputType==="number"?Number(value):parseFloat(value);}
get digits(){const fieldDigits=this.props.record.fields[this.props.name].digits;return!this.props.digits&&Array.isArray(fieldDigits)?fieldDigits:this.props.digits;}
get formattedValue(){if(!this.props.formatNumber||(this.props.inputType==="number"&&!this.props.readonly&&this.value)){return this.value;}
if(this.props.humanReadable&&!this.state.hasFocus){return formatFloat(this.value,{digits:this.digits,humanReadable:true,decimals:this.props.decimals,});}else{return formatFloat(this.value,{digits:this.digits,humanReadable:false});}}
get value(){return this.props.record.data[this.props.name];}}
const floatField=__exports.floatField={component:FloatField,displayName:_t("Float"),supportedOptions:[{label:_t("Format number"),name:"enable_formatting",type:"boolean",help:_t("Format the value according to your language setup - e.g. thousand separators, rounding, etc."),default:true,},{label:_t("Digits"),name:"digits",type:"digits",},{label:_t("Type"),name:"type",type:"string",},{label:_t("Step"),name:"step",type:"number",},{label:_t("User-friendly format"),name:"human_readable",type:"boolean",help:_t("Use a human readable format (e.g.: 500G instead of 500,000,000,000)."),},{label:_t("Decimals"),name:"decimals",type:"number",default:0,help:_t("Use it with the 'User-friendly format' option to customize the formatting."),},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{formatNumber:options?.enable_formatting!==undefined?Boolean(options.enable_formatting):true,inputType:options.type,humanReadable:!!options.human_readable,step:options.step,digits,placeholder:attrs.placeholder,decimals:options.decimals||0,};},};registry.category("fields").add("float",floatField);return __exports;});;

/* /web/static/src/views/fields/float_factor/float_factor_field.js */
odoo.define('@web/views/fields/float_factor/float_factor_field',['@web/core/registry','@web/views/fields/float/float_field','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{floatField,FloatField}=require("@web/views/fields/float/float_field");const{_t}=require("@web/core/l10n/translation");const FloatFactorField=__exports.FloatFactorField=class FloatFactorField extends FloatField{static props={...FloatField.props,factor:{type:Number,optional:true},};static defaultProps={...FloatField.defaultProps,factor:1,};parse(value){return super.parse(value)/this.props.factor;}
get value(){return this.props.record.data[this.props.name]*this.props.factor;}}
const floatFactorField=__exports.floatFactorField={...floatField,component:FloatFactorField,supportedOptions:[...floatField.supportedOptions,{label:_t("Factor"),name:"factor",type:"number",},],extractProps({options}){const props=floatField.extractProps(...arguments);props.factor=options.factor;return props;},};registry.category("fields").add("float_factor",floatFactorField);return __exports;});;

/* /web/static/src/views/fields/float_time/float_time_field.js */
odoo.define('@web/views/fields/float_time/float_time_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/numpad_decimal_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatFloatTime}=require("@web/views/fields/formatters");const{parseFloatTime}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component}=require("@odoo/owl");const FloatTimeField=__exports.FloatTimeField=class FloatTimeField extends Component{static template="web.FloatTimeField";static props={...standardFieldProps,inputType:{type:String,optional:true},placeholder:{type:String,optional:true},displaySeconds:{type:Boolean,optional:true},};static defaultProps={inputType:"text",};setup(){useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseFloatTime(v),});useNumpadDecimal();}
get formattedValue(){return formatFloatTime(this.props.record.data[this.props.name],{displaySeconds:this.props.displaySeconds,});}}
const floatTimeField=__exports.floatTimeField={component:FloatTimeField,displayName:_t("Time"),supportedOptions:[{label:_t("Display seconds"),name:"display_seconds",type:"boolean",},{label:_t("Type"),name:"type",type:"string",default:"text",},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>({displaySeconds:options.displaySeconds,inputType:options.type,placeholder:attrs.placeholder,}),};registry.category("fields").add("float_time",floatTimeField);return __exports;});;

/* /web/static/src/views/fields/float_toggle/float_toggle_field.js */
odoo.define('@web/views/fields/float_toggle/float_toggle_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatFloatFactor}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const FloatToggleField=__exports.FloatToggleField=class FloatToggleField extends Component{static template="web.FloatToggleField";static props={...standardFieldProps,digits:{type:Array,optional:true},range:{type:Array,optional:true},factor:{type:Number,optional:true},disableReadOnly:{type:Boolean,optional:true},};static defaultProps={range:[0.0,0.5,1.0],factor:1,disableReadOnly:false,};onChange(){let currentIndex=this.props.range.indexOf(this.props.record.data[this.props.name]*this.factor);currentIndex++;if(currentIndex>this.props.range.length-1){currentIndex=0;}
this.props.record.update({[this.props.name]:this.props.range[currentIndex]/this.factor,});}
get factor(){return this.props.factor;}
get digits(){const fieldDigits=this.props.record.fields[this.props.name].digits;return!this.props.digits&&Array.isArray(fieldDigits)?fieldDigits:this.props.digits;}
get formattedValue(){return formatFloatFactor(this.props.record.data[this.props.name],{digits:this.digits,factor:this.factor,});}}
const floatToggleField=__exports.floatToggleField={component:FloatToggleField,supportedOptions:[{label:_t("Digits"),name:"digits",type:"digits",},{label:_t("Type"),name:"type",type:"string",},{label:_t("Range"),name:"range",type:"string",},{label:_t("Factor"),name:"factor",type:"number",},{label:_t("Disable readonly"),name:"force_button",type:"boolean",},],supportedTypes:["float"],isEmpty:()=>false,extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,range:options.range,factor:options.factor,disableReadOnly:options.force_button||false,};},};registry.category("fields").add("float_toggle",floatToggleField);return __exports;});;

/* /web/static/src/views/fields/font_selection/font_selection_field.js */
odoo.define('@web/views/fields/font_selection/font_selection_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@web/views/fields/formatters','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const FontSelectionField=__exports.FontSelectionField=class FontSelectionField extends Component{static template="web.FontSelectionField";static props={...standardFieldProps,placeholder:{type:String,optional:true},required:{type:Boolean,optional:true},};get options(){return this.props.record.fields[this.props.name].selection.filter((option)=>option[0]!==false&&option[1]!=="");}
get string(){return formatSelection(this.props.record.data[this.props.name],{selection:this.options,});}
stringify(value){return JSON.stringify(value);}
onChange(ev){const value=JSON.parse(ev.target.value);this.props.record.update({[this.props.name]:value});}}
const fontSelectionField=__exports.fontSelectionField={component:FontSelectionField,displayName:_t("Font Selection"),supportedTypes:["selection"],extractProps({attrs},dynamicInfo){return{placeholder:attrs.placeholder,required:dynamicInfo.required,};},};registry.category("fields").add("font",fontSelectionField);return __exports;});;

/* /web/static/src/views/fields/formatters.js */
odoo.define('@web/views/fields/formatters',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/core/utils/strings','@web/core/utils/binary','@web/core/utils/numbers','@odoo/owl','@web/core/currency'],function(require){'use strict';let __exports={};const{formatDate,formatDateTime}=require("@web/core/l10n/dates");const{localization:l10n}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{escape}=require("@web/core/utils/strings");const{isBinarySize}=require("@web/core/utils/binary");const{formatFloat:formatFloatNumber,humanNumber,insertThousandsSep,}=require("@web/core/utils/numbers");const{markup}=require("@odoo/owl");const{formatCurrency}=require("@web/core/currency");function humanSize(value){if(!value){return"";}
const suffix=value<1024?" "+_t("Bytes"):"b";return(humanNumber(value,{decimals:2,})+suffix);}
__exports.formatBinary=formatBinary;function formatBinary(value){if(!isBinarySize(value)){return humanSize(value.length/1.37);}
return value;}
__exports.formatBoolean=formatBoolean;function formatBoolean(value){return markup(`
        <div class="o-checkbox d-inline-block me-2">
            <input id="boolean_checkbox" type="checkbox" class="form-check-input" disabled ${
                value ? "checked" : ""
            }/>
            <label for="boolean_checkbox" class="form-check-label"/>
        </div>`);}
__exports.formatChar=formatChar;function formatChar(value,options){if(options&&options.isPassword){return"*".repeat(value?value.length:0);}
if(options&&options.escape){value=escape(value);}
return value;}
__exports.formatFloat=formatFloat;function formatFloat(value,options={}){if(value===false){return"";}
return formatFloatNumber(value,options);}
__exports.formatFloatFactor=formatFloatFactor;function formatFloatFactor(value,options={}){if(value===false){return"";}
const factor=options.factor||1;return formatFloatNumber(value*factor,options);}
__exports.formatFloatTime=formatFloatTime;function formatFloatTime(value,options={}){if(value===false){return"";}
const isNegative=value<0;value=Math.abs(value);let hour=Math.floor(value);const milliSecLeft=Math.round(value*3600000)-hour*3600000;let min=milliSecLeft/60000;if(options.displaySeconds){min=Math.floor(min);}else{min=Math.round(min);}
if(min===60){min=0;hour=hour+1;}
min=String(min).padStart(2,"0");if(!options.noLeadingZeroHour){hour=String(hour).padStart(2,"0");}
let sec="";if(options.displaySeconds){sec=":"+String(Math.floor((milliSecLeft%60000)/1000)).padStart(2,"0");}
return`${isNegative ? "-" : ""}${hour}:${min}${sec}`;}
__exports.formatInteger=formatInteger;function formatInteger(value,options={}){if(value===false||value===null){return"";}
if(options.isPassword){return"*".repeat(value.length);}
if(options.humanReadable){return humanNumber(value,options);}
const grouping=options.grouping||l10n.grouping;const thousandsSep="thousandsSep"in options?options.thousandsSep:l10n.thousandsSep;return insertThousandsSep(value.toFixed(0),thousandsSep,grouping);}
__exports.formatMany2one=formatMany2one;function formatMany2one(value,options){if(!value){value="";}else if(value[1]){value=value[1];}else{value=_t("Unnamed");}
if(options&&options.escape){value=encodeURIComponent(value);}
return value;}
__exports.formatX2many=formatX2many;function formatX2many(value){const count=value.currentIds.length;if(count===0){return _t("No records");}else if(count===1){return _t("1 record");}else{return _t("%s records",count);}}
__exports.formatMonetary=formatMonetary;function formatMonetary(value,options={}){if(value===false){return"";}
let currencyId=options.currencyId;if(!currencyId&&options.data){const currencyField=options.currencyField||(options.field&&options.field.currency_field)||"currency_id";const dataValue=options.data[currencyField];currencyId=Array.isArray(dataValue)?dataValue[0]:dataValue;}
return formatCurrency(value,currencyId,options)}
__exports.formatPercentage=formatPercentage;function formatPercentage(value,options={}){value=value||0;options=Object.assign({trailingZeros:false,thousandsSep:""},options);const formatted=formatFloatNumber(value*100,options);return`${formatted}${options.noSymbol ? "" : "%"}`;}
function formatProperties(value,field){if(!value||!value.length){return"";}
return value.map((property)=>property["string"]).join(", ");}
__exports.formatReference=formatReference;function formatReference(value,options){return formatMany2one(value?[value.resId,value.displayName]:false,options);}
__exports.formatSelection=formatSelection;function formatSelection(value,options={}){const selection=options.selection||(options.field&&options.field.selection)||[];const option=selection.find((option)=>option[0]===value);return option?option[1]:"";}
__exports.formatText=formatText;function formatText(value){return value?value.toString():"";}
__exports.formatHtml=formatHtml;function formatHtml(value){return value;}
__exports.formatJson=formatJson;function formatJson(value){return(value&&JSON.stringify(value))||"";}
registry.category("formatters").add("binary",formatBinary).add("boolean",formatBoolean).add("char",formatChar).add("date",formatDate).add("datetime",formatDateTime).add("float",formatFloat).add("float_factor",formatFloatFactor).add("float_time",formatFloatTime).add("html",formatHtml).add("integer",formatInteger).add("json",formatJson).add("many2one",formatMany2one).add("many2one_reference",formatInteger).add("one2many",formatX2many).add("many2many",formatX2many).add("monetary",formatMonetary).add("percentage",formatPercentage).add("properties",formatProperties).add("properties_definition",formatProperties).add("reference",formatReference).add("selection",formatSelection).add("text",formatText);return __exports;});;

/* /web/static/src/views/fields/gauge/gauge_field.js */
odoo.define('@web/views/fields/gauge/gauge_field',['@web/core/l10n/translation','@web/core/assets','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const GaugeField=__exports.GaugeField=class GaugeField extends Component{setup(){this.chart=null;this.canvasRef=useRef("canvas");onWillStart(async()=>await loadBundle("web.chartjs_lib"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
get title(){return this.props.title||this.props.record.fields[this.props.name].string||"";}
get formattedValue(){return formatFloat(this.props.record.data[this.props.name],{humanReadable:true,decimals:1,});}
renderChart(){const gaugeValue=this.props.record.data[this.props.name];let maxValue=Math.max(gaugeValue,this.props.record.data[this.props.maxValueField]);let maxLabel=maxValue;if(gaugeValue===0&&maxValue===0){maxValue=1;maxLabel=0;}
const config={type:"doughnut",data:{datasets:[{data:[gaugeValue,maxValue-gaugeValue],backgroundColor:["#1f77b4","#dddddd"],label:this.title,},],},options:{circumference:180,rotation:270,responsive:true,maintainAspectRatio:false,cutout:"70%",layout:{padding:5,},plugins:{title:{display:true,text:this.title,padding:4,},tooltip:{displayColors:false,callbacks:{label:function(tooltipItem){if(tooltipItem.dataIndex===0){return _t("Value: ")+gaugeValue;}
return _t("Max: ")+maxLabel;},},},},aspectRatio:2,},};this.chart=new Chart(this.canvasRef.el,config);}}
GaugeField.template="web.GaugeField";GaugeField.props={...standardFieldProps,maxValueField:{type:String},title:{type:String,optional:true},};const gaugeField=__exports.gaugeField={component:GaugeField,supportedOptions:[{label:_t("Title"),name:"title",type:"string",},{label:_t("Max value field"),name:"max_value",type:"field",availableTypes:["integer","float"],},],extractProps:({options})=>({maxValueField:options.max_field,title:options.title,}),};registry.category("fields").add("gauge",gaugeField);return __exports;});;

/* /web/static/src/views/fields/handle/handle_field.js */
odoo.define('@web/views/fields/handle/handle_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const HandleField=__exports.HandleField=class HandleField extends Component{static template="web.HandleField";static props={...standardFieldProps,};}
const handleField=__exports.handleField={component:HandleField,displayName:_t("Handle"),supportedTypes:["integer"],isEmpty:()=>false,};registry.category("fields").add("handle",handleField);return __exports;});;

/* /web/static/src/views/fields/html/html_field.js */
odoo.define('@web/views/fields/html/html_field',['@web/core/registry','@web/views/fields/text/text_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{TextField,textField}=require("@web/views/fields/text/text_field");const HtmlField=__exports.HtmlField=class HtmlField extends TextField{static template="web.HtmlField";}
const htmlField=__exports.htmlField={...textField,component:HtmlField,};registry.category("fields").add("html",htmlField);return __exports;});;

/* /web/static/src/views/fields/iframe_wrapper/iframe_wrapper_field.js */
odoo.define('@web/views/fields/iframe_wrapper/iframe_wrapper_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useEffect,useRef}=require("@odoo/owl");const IframeWrapperField=__exports.IframeWrapperField=class IframeWrapperField extends Component{static template="web.IframeWrapperField";static props={...standardFieldProps,};setup(){this.iframeRef=useRef("iframe");useEffect((value)=>{const iframeDoc=this.iframeRef.el.contentDocument;iframeDoc.open();iframeDoc.write(value);iframeDoc.close();},()=>[this.props.record.data[this.props.name]]);}}
const iframeWrapperField=__exports.iframeWrapperField={component:IframeWrapperField,displayName:_t("Wrap raw html within an iframe"),supportedTypes:["text","html"],};registry.category("fields").add("iframe_wrapper",iframeWrapperField);return __exports;});;

/* /web/static/src/views/fields/image/image_field.js */
odoo.define('@web/views/fields/image/image_field',['@web/core/browser/feature_detection','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/binary','@web/views/fields/file_handler','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{FileUploader}=require("@web/views/fields/file_handler");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const{DateTime}=luxon;const fileTypeMagicWordMap=__exports.fileTypeMagicWordMap={"/":"jpg",R:"gif",i:"png",P:"svg+xml",U:"webp",};const placeholder="/web/static/img/placeholder.png";__exports.imageCacheKey=imageCacheKey;function imageCacheKey(value){if(value instanceof DateTime){return value.ts;}
return"";}
const ImageField=__exports.ImageField=class ImageField extends Component{static template="web.ImageField";static components={FileUploader,};static props={...standardFieldProps,enableZoom:{type:Boolean,optional:true},zoomDelay:{type:Number,optional:true},previewImage:{type:String,optional:true},acceptedFileExtensions:{type:String,optional:true},width:{type:Number,optional:true},height:{type:Number,optional:true},reload:{type:Boolean,optional:true},};static defaultProps={acceptedFileExtensions:"image/*",reload:true,};setup(){this.notification=useService("notification");this.orm=useService("orm");this.isMobile=isMobileOS();this.state=useState({isValid:true,});this.lastURL=undefined;}
get rawCacheKey(){return this.props.record.data.write_date;}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;if(!this.props.height){style+=`height: auto; max-height: 100%;`;}}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;if(!this.props.width){style+=`width: auto; max-width: 100%;`;}}
return style;}
get hasTooltip(){return(this.props.enableZoom&&this.props.record.data[this.props.name]);}
get tooltipAttributes(){return{template:"web.ImageZoomTooltip",info:JSON.stringify({url:this.getUrl(this.props.name)}),};}
getUrl(previewFieldName){if(!this.props.reload&&this.lastURL){return this.lastURL;}
if(this.state.isValid&&this.props.record.data[this.props.name]){if(isBinarySize(this.props.record.data[this.props.name])){this.lastURL=url("/web/image",{model:this.props.record.resModel,id:this.props.record.resId,field:previewFieldName,unique:imageCacheKey(this.rawCacheKey),});}else{const magic=fileTypeMagicWordMap[this.props.record.data[this.props.name][0]]||"png";this.lastURL=`data:image/${magic};base64,${
                    this.props.record.data[this.props.name]
                }`;}
return this.lastURL;}
return placeholder;}
onFileRemove(){this.state.isValid=true;this.props.record.update({[this.props.name]:false});}
async onFileUploaded(info){this.state.isValid=true;if(info.type==="image/webp"){const image=document.createElement("img");image.src=`data:image/webp;base64,${info.data}`;await new Promise((resolve)=>image.addEventListener("load",resolve));const originalSize=Math.max(image.width,image.height);const smallerSizes=[1024,512,256,128].filter((size)=>size<originalSize);let referenceId=undefined;for(const size of[originalSize,...smallerSizes]){const ratio=size/originalSize;const canvas=document.createElement("canvas");canvas.width=image.width*ratio;canvas.height=image.height*ratio;const ctx=canvas.getContext("2d");ctx.fillStyle="rgb(255, 255, 255)";ctx.fillRect(0,0,canvas.width,canvas.height);ctx.drawImage(image,0,0,image.width,image.height,0,0,canvas.width,canvas.height);const[resizedId]=await this.orm.call("ir.attachment","create_unique",[[{name:info.name,description:size===originalSize?"":`resize: ${size}`,datas:size===originalSize?info.data:canvas.toDataURL("image/webp",0.75).split(",")[1],res_id:referenceId,res_model:"ir.attachment",mimetype:"image/webp",},],]);referenceId=referenceId||resizedId;await this.orm.call("ir.attachment","create_unique",[[{name:info.name.replace(/\.webp$/,".jpg"),description:"format: jpeg",datas:canvas.toDataURL("image/jpeg",0.75).split(",")[1],res_id:resizedId,res_model:"ir.attachment",mimetype:"image/jpeg",},],]);}}
this.props.record.update({[this.props.name]:info.data});}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected image"),{type:"danger",});}}
const imageField=__exports.imageField={component:ImageField,displayName:_t("Image"),supportedOptions:[{label:_t("Reload"),name:"reload",type:"boolean",default:true,},{label:_t("Enable zoom"),name:"zoom",type:"boolean",},{label:_t("Zoom delay"),name:"zoom_delay",type:"number",help:_t("Delay the apparition of the zoomed image with a value in milliseconds"),},{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},{label:_t("Preview image"),name:"preview_image",type:"field",availableTypes:["binary"],},],supportedTypes:["binary"],fieldDependencies:[{name:"write_date",type:"datetime"}],isEmpty:()=>false,extractProps:({attrs,options})=>({enableZoom:options.zoom,zoomDelay:options.zoom_delay,previewImage:options.preview_image,acceptedFileExtensions:options.accepted_file_extensions,width:options.size&&Boolean(options.size[0])?options.size[0]:attrs.width,height:options.size&&Boolean(options.size[1])?options.size[1]:attrs.height,reload:"reload"in options?Boolean(options.reload):true,}),};registry.category("fields").add("image",imageField);return __exports;});;

/* /web/static/src/views/fields/image_url/image_url_field.js */
odoo.define('@web/views/fields/image_url/image_url_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@odoo/owl','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const{useRecordObserver}=require("@web/model/relational_model/utils");const ImageUrlField=__exports.ImageUrlField=class ImageUrlField extends Component{static template="web.ImageUrlField";static props={...standardFieldProps,width:{type:Number,optional:true},height:{type:Number,optional:true},};static fallbackSrc="/web/static/img/placeholder.png";setup(){this.notification=useService("notification");this.state=useState({src:this.props.record.data[this.props.name],});useRecordObserver((record)=>{this.state.src=record.data[this.props.name];});}
get sizeStyle(){let style="";if(this.props.width){style+=`max-width: ${this.props.width}px;`;}
if(this.props.height){style+=`max-height: ${this.props.height}px;`;}
return style;}
onLoadFailed(){this.state.src=this.constructor.fallbackSrc;this.notification.add(_t("Could not display the specified image url."),{type:"info",});}}
const imageUrlField=__exports.imageUrlField={component:ImageUrlField,displayName:_t("Image"),supportedOptions:[{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},],supportedTypes:["char"],extractProps:({attrs,options})=>({width:options.size?options.size[0]:attrs.width,height:options.size?options.size[1]:attrs.height,}),};registry.category("fields").add("image_url",imageUrlField);return __exports;});;

/* /web/static/src/views/fields/input_field_hook.js */
odoo.define('@web/views/fields/input_field_hook',['@web/core/hotkeys/hotkey_service','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{useBus}=require("@web/core/utils/hooks");const{useComponent,useEffect,useRef}=require("@odoo/owl");__exports.useInputField=useInputField;function useInputField(params){const inputRef=params.ref||useRef(params.refName||"input");const component=useComponent();let isDirty=false;let lastSetValue=null;let pendingUpdate=false;function onInput(ev){isDirty=ev.target.value!==lastSetValue;if(params.preventLineBreaks&&ev.inputType==="insertFromPaste"){ev.target.value=ev.target.value.replace(/[\r\n]+/g," ");}
component.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty);if(!component.props.record.isValid){component.props.record.resetFieldValidity(component.props.name);}}
async function onChange(ev){if(isDirty){isDirty=false;let isInvalid=false;let val=ev.target.value;if(params.parse){try{val=params.parse(val);}catch{component.props.record.setInvalidField(component.props.name);isInvalid=true;}}
if(!isInvalid){if(val!==component.props.record.data[component.props.name]){lastSetValue=inputRef.el.value;pendingUpdate=true;await component.props.record.update({[component.props.name]:val});pendingUpdate=false;component.props.record.model.bus.trigger("FIELD_IS_DIRTY",isDirty);}else{inputRef.el.value=params.getValue();}}}}
function onKeydown(ev){const hotkey=getActiveHotkey(ev);if(["enter","tab","shift+tab"].includes(hotkey)){commitChanges(false);}
if(params.preventLineBreaks&&["enter","shift+enter"].includes(hotkey)){ev.preventDefault();}}
useEffect((inputEl)=>{if(inputEl){inputEl.addEventListener("input",onInput);inputEl.addEventListener("change",onChange);inputEl.addEventListener("keydown",onKeydown);return()=>{inputEl.removeEventListener("input",onInput);inputEl.removeEventListener("change",onChange);inputEl.removeEventListener("keydown",onKeydown);};}},()=>[inputRef.el]);useEffect(()=>{const value=params.getValue();if(inputRef.el&&!isDirty&&!component.props.record.isFieldInvalid(component.props.name)){inputRef.el.value=value;lastSetValue=inputRef.el.value;}});const{model}=component.props.record;useBus(model.bus,"WILL_SAVE_URGENTLY",()=>commitChanges(true));useBus(model.bus,"NEED_LOCAL_CHANGES",(ev)=>ev.detail.proms.push(commitChanges()));async function commitChanges(urgent){if(!inputRef.el){return;}
isDirty=inputRef.el.value!==lastSetValue;if(isDirty||(urgent&&pendingUpdate)){let isInvalid=false;isDirty=false;let val=inputRef.el.value;if(params.parse){try{val=params.parse(val);}catch{isInvalid=true;if(urgent){return;}else{component.props.record.setInvalidField(component.props.name);}}}
if(isInvalid){return;}
if((val||false)!==(component.props.record.data[component.props.name]||false)){lastSetValue=inputRef.el.value;await component.props.record.update({[component.props.name]:val});component.props.record.model.bus.trigger("FIELD_IS_DIRTY",false);}else{inputRef.el.value=params.getValue();}}}
return inputRef;}
return __exports;});;

/* /web/static/src/views/fields/integer/integer_field.js */
odoo.define('@web/views/fields/integer/integer_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@web/views/fields/numpad_decimal_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatInteger}=require("@web/views/fields/formatters");const{parseInteger}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{Component,useState}=require("@odoo/owl");const IntegerField=__exports.IntegerField=class IntegerField extends Component{static template="web.IntegerField";static props={...standardFieldProps,formatNumber:{type:Boolean,optional:true},humanReadable:{type:Boolean,optional:true},decimals:{type:Number,optional:true},inputType:{type:String,optional:true},step:{type:Number,optional:true},placeholder:{type:String,optional:true},};static defaultProps={formatNumber:true,humanReadable:false,inputType:"text",decimals:0,};setup(){this.state=useState({hasFocus:false,});useInputField({getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:(v)=>parseInteger(v),});useNumpadDecimal();}
onFocusIn(){this.state.hasFocus=true;}
onFocusOut(){this.state.hasFocus=false;}
get formattedValue(){if(!this.props.formatNumber||(!this.props.readonly&&this.props.inputType==="number")){return this.value;}
if(this.props.humanReadable&&!this.state.hasFocus){return formatInteger(this.value,{humanReadable:true,decimals:this.props.decimals,});}else{return formatInteger(this.value,{humanReadable:false});}}
get value(){return this.props.record.data[this.props.name];}}
const integerField=__exports.integerField={component:IntegerField,displayName:_t("Integer"),supportedOptions:[{label:_t("Format number"),name:"enable_formatting",type:"boolean",help:_t("Format the value according to your language setup - e.g. thousand separators, rounding, etc."),default:true,},{label:_t("Type"),name:"type",type:"string",},{label:_t("Step"),name:"step",type:"number",},{label:_t("User-friendly format"),name:"human_readable",type:"boolean",help:_t("Use a human readable format (e.g.: 500G instead of 500,000,000,000)."),},{label:_t("Decimals"),name:"decimals",type:"number",default:0,help:_t("Use it with the 'User-friendly format' option to customize the formatting."),},],supportedTypes:["integer"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:({attrs,options})=>({formatNumber:options?.enable_formatting!==undefined?Boolean(options.enable_formatting):true,humanReadable:!!options.human_readable,inputType:options.type,step:options.step,placeholder:attrs.placeholder,decimals:options.decimals||0,}),};registry.category("fields").add("integer",integerField);return __exports;});;

/* /web/static/src/views/fields/journal_dashboard_graph/journal_dashboard_graph_field.js */
odoo.define('@web/views/fields/journal_dashboard_graph/journal_dashboard_graph_field',['@web/core/assets','@web/core/registry','@web/core/colors/colors','@web/views/fields/standard_field_props','@odoo/owl','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");const{getColor,hexToRGBA}=require("@web/core/colors/colors");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillStart,useEffect,useRef}=require("@odoo/owl");const{cookie}=require("@web/core/browser/cookie");const JournalDashboardGraphField=__exports.JournalDashboardGraphField=class JournalDashboardGraphField extends Component{static template="web.JournalDashboardGraphField";static props={...standardFieldProps,graphType:String,};setup(){this.chart=null;this.canvasRef=useRef("canvas");this.data=JSON.parse(this.props.record.data[this.props.name]);onWillStart(async()=>await loadBundle("web.chartjs_lib"));useEffect(()=>{this.renderChart();return()=>{if(this.chart){this.chart.destroy();}};});}
renderChart(){if(this.chart){this.chart.destroy();}
let config;if(this.props.graphType==="line"){config=this.getLineChartConfig();}else if(this.props.graphType==="bar"){config=this.getBarChartConfig();}
this.chart=new Chart(this.canvasRef.el,config);}
getLineChartConfig(){const labels=this.data[0].values.map(function(pt){return pt.x;});const color10=getColor(10,cookie.get("color_scheme"));const borderColor=this.data[0].is_sample_data?hexToRGBA(color10,0.1):color10;const backgroundColor=this.data[0].is_sample_data?hexToRGBA(color10,0.05):hexToRGBA(color10,0.2);return{type:"line",data:{labels,datasets:[{backgroundColor,borderColor,data:this.data[0].values,fill:"start",label:this.data[0].key,borderWidth:2,},],},options:{plugins:{legend:{display:false},tooltip:{intersect:false,position:"nearest",caretSize:0,},},scales:{y:{display:false,},x:{display:false,},},maintainAspectRatio:false,elements:{line:{tension:0.000001,},},},};}
getBarChartConfig(){const data=[];const labels=[];const backgroundColor=[];const color13=getColor(13,cookie.get("color_scheme"));const color19=getColor(19,cookie.get("color_scheme"));this.data[0].values.forEach((pt)=>{data.push(pt.value);labels.push(pt.label);if(pt.type==="past"){backgroundColor.push(color13);}else if(pt.type==="future"){backgroundColor.push(color19);}else{backgroundColor.push("#ebebeb");}});return{type:"bar",data:{labels,datasets:[{backgroundColor,data,fill:"start",label:this.data[0].key,},],},options:{plugins:{legend:{display:false},tooltip:{intersect:false,position:"nearest",caretSize:0,},},scales:{y:{display:false,},},maintainAspectRatio:false,elements:{line:{tension:0.000001,},},},};}}
const journalDashboardGraphField=__exports.journalDashboardGraphField={component:JournalDashboardGraphField,supportedTypes:["text"],extractProps:({attrs})=>({graphType:attrs.graph_type,}),};registry.category("fields").add("dashboard_graph",journalDashboardGraphField);return __exports;});;

/* /web/static/src/views/fields/jsonb/jsonb.js */
odoo.define('@web/views/fields/jsonb/jsonb',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const JsonField=__exports.JsonField=class JsonField extends Component{static template="web.JsonbField";static props={...standardFieldProps,};get formattedValue(){const value=this.props.record.data[this.props.name];return value?JSON.stringify(value):"";}}
const jsonField=__exports.jsonField={component:JsonField,displayName:_t("Json"),supportedTypes:["jsonb"],};registry.category("fields").add("jsonb",jsonField);return __exports;});;

/* /web/static/src/views/fields/label_selection/label_selection_field.js */
odoo.define('@web/views/fields/label_selection/label_selection_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@web/views/fields/formatters','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{formatSelection}=require("@web/views/fields/formatters");const{Component}=require("@odoo/owl");const LabelSelectionField=__exports.LabelSelectionField=class LabelSelectionField extends Component{static template="web.LabelSelectionField";static props={...standardFieldProps,classesObj:{type:Object,optional:true},};static defaultProps={classesObj:{},};get className(){return this.props.classesObj[this.props.record.data[this.props.name]]||"primary";}
get string(){return formatSelection(this.props.record.data[this.props.name],{selection:Array.from(this.props.record.fields[this.props.name].selection),});}}
const labelSelectionField=__exports.labelSelectionField={component:LabelSelectionField,displayName:_t("Label Selection"),supportedOptions:[{label:_t("Classes"),name:"classes",type:"string",},],supportedTypes:["selection"],extractProps:({options})=>({classesObj:options.classes,}),};registry.category("fields").add("label_selection",labelSelectionField);return __exports;});;

/* /web/static/src/views/fields/many2many_binary/many2many_binary_field.js */
odoo.define('@web/views/fields/many2many_binary/many2many_binary_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/views/fields/standard_field_props','@web/core/file_input/file_input','@web/views/fields/relational_utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileInput}=require("@web/core/file_input/file_input");const{useX2ManyCrud}=require("@web/views/fields/relational_utils");const{Component}=require("@odoo/owl");const Many2ManyBinaryField=__exports.Many2ManyBinaryField=class Many2ManyBinaryField extends Component{static template="web.Many2ManyBinaryField";static components={FileInput,};static props={...standardFieldProps,acceptedFileExtensions:{type:String,optional:true},className:{type:String,optional:true},numberOfFiles:{type:Number,optional:true},};setup(){this.orm=useService("orm");this.notification=useService("notification");this.operations=useX2ManyCrud(()=>this.props.record.data[this.props.name],true);}
get uploadText(){return this.props.record.fields[this.props.name].string;}
get files(){return this.props.record.data[this.props.name].records.map((record)=>{return{...record.data,id:record.resId,};});}
getUrl(id){return"/web/content/"+id+"?download=true";}
getExtension(file){return file.name.replace(/^.*\./,"");}
async onFileUploaded(files){for(const file of files){if(file.error){return this.notification.add(file.error,{title:_t("Uploading error"),type:"danger",});}
await this.operations.saveRecord([file.id]);}}
async onFileRemove(deleteId){const record=this.props.record.data[this.props.name].records.find((record)=>record.resId===deleteId);this.operations.removeRecord(record);}}
const many2ManyBinaryField=__exports.many2ManyBinaryField={component:Many2ManyBinaryField,supportedOptions:[{label:_t("Accepted file extensions"),name:"accepted_file_extensions",type:"string",},{label:_t("Number of files"),name:"number_of_files",type:"integer",},],supportedTypes:["many2many"],isEmpty:()=>false,relatedFields:[{name:"name",type:"char"},{name:"mimetype",type:"char"},],extractProps:({attrs,options})=>({acceptedFileExtensions:options.accepted_file_extensions,className:attrs.class,numberOfFiles:options.number_of_files,}),};registry.category("fields").add("many2many_binary",many2ManyBinaryField);return __exports;});;

/* /web/static/src/views/fields/many2many_checkboxes/many2many_checkboxes_field.js */
odoo.define('@web/views/fields/many2many_checkboxes/many2many_checkboxes_field',['@odoo/owl','@web/core/checkbox/checkbox','@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/timing','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillUnmount}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useBus}=require("@web/core/utils/hooks");const{debounce}=require("@web/core/utils/timing");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const Many2ManyCheckboxesField=__exports.Many2ManyCheckboxesField=class Many2ManyCheckboxesField extends Component{static template="web.Many2ManyCheckboxesField";static components={CheckBox};static props={...standardFieldProps,domain:{type:Array,optional:true},};setup(){this.specialData=useSpecialData((orm,props)=>{const{relation}=props.record.fields[props.name];return orm.call(relation,"name_search",["",props.domain]);});this.idsToAdd=new Set();this.idsToRemove=new Set();this.debouncedCommitChanges=debounce(this.commitChanges.bind(this),500);useBus(this.props.record.model.bus,"NEED_LOCAL_CHANGES",this.commitChanges.bind(this));onWillUnmount(this.commitChanges.bind(this));}
get items(){return this.specialData.data;}
isSelected(item){return this.props.record.data[this.props.name].currentIds.includes(item[0]);}
commitChanges(){if(this.idsToAdd.size===0&&this.idsToRemove.size===0){return;}
const result=this.props.record.data[this.props.name].addAndRemove({add:[...this.idsToAdd],remove:[...this.idsToRemove],});this.idsToAdd.clear();this.idsToRemove.clear();return result;}
onChange(resId,checked){if(checked){if(this.idsToRemove.has(resId)){this.idsToRemove.delete(resId);}else{this.idsToAdd.add(resId);}}else{if(this.idsToAdd.has(resId)){this.idsToAdd.delete(resId);}else{this.idsToRemove.add(resId);}}
this.debouncedCommitChanges();}}
const many2ManyCheckboxesField=__exports.many2ManyCheckboxesField={component:Many2ManyCheckboxesField,displayName:_t("Checkboxes"),supportedTypes:["many2many"],isEmpty:()=>false,extractProps(fieldInfo,dynamicInfo){return{domain:dynamicInfo.domain(),};},};registry.category("fields").add("many2many_checkboxes",many2ManyCheckboxesField);__exports.preloadMany2ManyCheckboxes=preloadMany2ManyCheckboxes;function preloadMany2ManyCheckboxes(orm,record,fieldName,{domain}){const field=record.fields[fieldName];return orm.call(field.relation,"name_search",["",domain]);}
return __exports;});;

/* /web/static/src/views/fields/many2many_tags/kanban_many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/kanban_many2many_tags_field',['@web/core/registry','@web/views/fields/many2many_tags/many2many_tags_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Many2ManyTagsField,many2ManyTagsField}=require("@web/views/fields/many2many_tags/many2many_tags_field");const KanbanMany2ManyTagsField=__exports.KanbanMany2ManyTagsField=class KanbanMany2ManyTagsField extends Many2ManyTagsField{static template="web.KanbanMany2ManyTagsField";get tags(){return super.tags.reduce((kanbanTags,tag)=>{if(tag.colorIndex!==0){delete tag.onClick;kanbanTags.push(tag);}
return kanbanTags;},[]);}}
const kanbanMany2ManyTagsField=__exports.kanbanMany2ManyTagsField={...many2ManyTagsField,component:KanbanMany2ManyTagsField,};registry.category("fields").add("kanban.many2many_tags",kanbanMany2ManyTagsField);return __exports;});;

/* /web/static/src/views/fields/many2many_tags/many2many_tags_field.js */
odoo.define('@web/views/fields/many2many_tags/many2many_tags_field',['@web/core/l10n/translation','@web/core/checkbox/checkbox','@web/core/colorlist/colorlist','@web/core/domain','@web/core/py_js/py','@web/views/fields/relational_utils','@web/core/registry','@web/views/fields/standard_field_props','@web/core/tags_list/tags_list','@web/core/popover/popover_hook','@web/core/utils/hooks','@web/core/record_selectors/tag_navigation_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{CheckBox}=require("@web/core/checkbox/checkbox");const{ColorList}=require("@web/core/colorlist/colorlist");const{Domain}=require("@web/core/domain");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Many2XAutocomplete,useActiveActions,useX2ManyCrud,}=require("@web/views/fields/relational_utils");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TagsList}=require("@web/core/tags_list/tags_list");const{usePopover}=require("@web/core/popover/popover_hook");const{useService}=require("@web/core/utils/hooks");const{useTagNavigation}=require("@web/core/record_selectors/tag_navigation_hook");const{Component,useRef}=require("@odoo/owl");class Many2ManyTagsFieldColorListPopover extends Component{static template="web.Many2ManyTagsFieldColorListPopover";static components={CheckBox,ColorList,};}
const Many2ManyTagsField=__exports.Many2ManyTagsField=class Many2ManyTagsField extends Component{static template="web.Many2ManyTagsField";static components={TagsList,Many2XAutocomplete,};static props={...standardFieldProps,canCreate:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},colorField:{type:String,optional:true},createDomain:{type:[Array,Boolean],optional:true},domain:{type:[Array,Function],optional:true},context:{type:Object,optional:true},placeholder:{type:String,optional:true},nameCreateField:{type:String,optional:true},string:{type:String,optional:true},noSearchMore:{type:Boolean,optional:true},};static defaultProps={canCreate:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",context:{},};static RECORD_COLORS=[1,2,3,4,5,6,7,8,9,10,11];static SEARCH_MORE_LIMIT=320;setup(){this.orm=useService("orm");this.previousColorsMap={};this.popover=usePopover(this.constructor.components.Popover);this.dialog=useService("dialog");this.dialogClose=[];this.onTagKeydown=useTagNavigation("many2ManyTagsField",this.deleteTagByIndex.bind(this));this.autoCompleteRef=useRef("autoComplete");const{saveRecord,removeRecord}=useX2ManyCrud(()=>this.props.record.data[this.props.name],true);this.activeActions=useActiveActions({fieldType:"many2many",crudOptions:{create:this.props.canCreate&&this.props.createDomain,createEdit:this.props.canCreateEdit,onDelete:removeRecord,edit:this.props.record.isInEdition,},getEvalParams:(props)=>{return{evalContext:this.evalContext,readonly:props.readonly,};},});this.update=(recordlist)=>{if(!recordlist){return;}
if(Array.isArray(recordlist)){const resIds=recordlist.map((rec)=>rec.id);return saveRecord(resIds);}
return saveRecord(recordlist);};if(this.props.canQuickCreate){this.quickCreate=async(name)=>{const created=await this.orm.call(this.relation,"name_create",[name],{context:this.props.context,});return saveRecord([created[0]]);};}}
get relation(){return this.props.record.fields[this.props.name].relation;}
get evalContext(){return this.props.record.evalContext;}
get string(){return this.props.string||this.props.record.fields[this.props.name].string||"";}
getTagProps(record){return{id:record.id,resId:record.resId,text:record.data.display_name,colorIndex:record.data[this.props.colorField],onDelete:!this.props.readonly?()=>this.deleteTag(record.id):undefined,onKeydown:(ev)=>{if(this.props.readonly){return;}
this.onTagKeydown(ev);},};}
get tags(){return this.props.record.data[this.props.name].records.map((record)=>this.getTagProps(record));}
get showM2OSelectionField(){return!this.props.readonly;}
async deleteTagByIndex(index){const{id}=this.tags[index]||{};this.deleteTag(id);}
async deleteTag(id){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===id);await this.props.record.data[this.props.name].forget(tagRecord);}
getDomain(){const domain=typeof this.props.domain==="function"?this.props.domain():this.props.domain;const currentIds=this.props.record.data[this.props.name].currentIds.filter((id)=>typeof id==="number");return Domain.and([domain,Domain.not([["id","in",currentIds]])]).toList(this.props.context);}}
const many2ManyTagsField=__exports.many2ManyTagsField={component:Many2ManyTagsField,displayName:_t("Tags"),supportedOptions:[{label:_t("Disable creation"),name:"no_create",type:"boolean",help:_t("If checked, users won't be able to create records through the autocomplete dropdown at all."),},{label:_t("Disable 'Create' option"),name:"no_quick_create",type:"boolean",help:_t("If checked, users will not be able to create records based on the text input; they will still be able to create records via a popup form."),},{label:_t("Disable 'Create and Edit' option"),name:"no_create_edit",type:"boolean",help:_t("If checked, users will not be able to create records based through a popup form; they will still be able to create records based on the text input."),},{label:_t("Can create"),name:"create",type:"string",help:_t("Write a domain to allow the creation of records conditionnally."),},{label:_t("Color field"),name:"color_field",type:"field",availableTypes:["integer"],help:_t("Set an integer field to use colors with the tags."),},],supportedTypes:["many2many"],relatedFields:({options})=>{const relatedFields=[{name:"display_name",type:"char"}];if(options.color_field){relatedFields.push({name:options.color_field,type:"integer",readonly:false});}
return relatedFields;},extractProps({attrs,options,string},dynamicInfo){const hasCreatePermission=attrs.can_create?evaluateBooleanExpr(attrs.can_create):true;const noCreate=Boolean(options.no_create);const canCreate=noCreate?false:hasCreatePermission;const noQuickCreate=Boolean(options.no_quick_create);const noCreateEdit=Boolean(options.no_create_edit);return{colorField:options.color_field,nameCreateField:options.create_name_field,canCreate,canQuickCreate:canCreate&&!noQuickCreate,canCreateEdit:canCreate&&!noCreateEdit,createDomain:options.create,context:dynamicInfo.context,domain:dynamicInfo.domain,placeholder:attrs.placeholder,string,};},};registry.category("fields").add("many2many_tags",many2ManyTagsField);registry.category("fields").add("calendar.one2many",many2ManyTagsField);registry.category("fields").add("calendar.many2many",many2ManyTagsField);const Many2ManyTagsFieldColorEditable=__exports.Many2ManyTagsFieldColorEditable=class Many2ManyTagsFieldColorEditable extends Many2ManyTagsField{static components={...super.components,Popover:Many2ManyTagsFieldColorListPopover,};static props={...super.props,canEditColor:{type:Boolean,optional:true},};static defaultProps={...super.defaultProps,canEditColor:true,};getTagProps(record){const props=super.getTagProps(record);props.onClick=(ev)=>this.onBadgeClick(ev,record);return props;}
onBadgeClick(ev,record){if(!this.props.canEditColor){return;}
if(this.popover.isOpen){this.popover.close();}else{this.popover.open(ev.currentTarget,{colors:this.constructor.RECORD_COLORS,tag:{id:record.id,colorIndex:record.data[this.props.colorField],},switchTagColor:this.switchTagColor.bind(this),onTagVisibilityChange:this.onTagVisibilityChange.bind(this),});}}
onTagVisibilityChange(isHidden,tag){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===tag.id);if(tagRecord.data[this.props.colorField]!=0){this.previousColorsMap[tagRecord.resId]=tagRecord.data[this.props.colorField];}
const changes={[this.props.colorField]:isHidden?0:this.previousColorsMap[tagRecord.resId]||1,};tagRecord.update(changes,{save:true});this.popover.close();}
switchTagColor(colorIndex,tag){const tagRecord=this.props.record.data[this.props.name].records.find((record)=>record.id===tag.id);tagRecord.update({[this.props.colorField]:colorIndex},{save:true});this.popover.close();}}
const many2ManyTagsFieldColorEditable=__exports.many2ManyTagsFieldColorEditable={...many2ManyTagsField,component:Many2ManyTagsFieldColorEditable,supportedOptions:[...many2ManyTagsField.supportedOptions,{label:_t("Prevent color edition"),name:"no_edit_color",type:"boolean",},],extractProps({options}){const props=many2ManyTagsField.extractProps(...arguments);props.canEditColor=!options.no_edit_color&&!!options.color_field;return props;},};registry.category("fields").add("form.many2many_tags",many2ManyTagsFieldColorEditable);return __exports;});;

/* /web/static/src/views/fields/many2many_tags_avatar/many2many_tags_avatar_field.js */
odoo.define('@web/views/fields/many2many_tags_avatar/many2many_tags_avatar_field',['@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/registry','@web/views/fields/many2many_tags/many2many_tags_field','@web/core/tags_list/tags_list','@web/views/fields/relational_utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{many2ManyTagsField,Many2ManyTagsField,}=require("@web/views/fields/many2many_tags/many2many_tags_field");const{TagsList}=require("@web/core/tags_list/tags_list");const{AvatarMany2XAutocomplete}=require("@web/views/fields/relational_utils");const Many2ManyTagsAvatarField=__exports.Many2ManyTagsAvatarField=class Many2ManyTagsAvatarField extends Many2ManyTagsField{static template="web.Many2ManyTagsAvatarField";static components={Many2XAutocomplete:AvatarMany2XAutocomplete,TagsList,};static props={...Many2ManyTagsField.props,withCommand:{type:Boolean,optional:true},};getTagProps(record){return{...super.getTagProps(record),img:`/web/image/${this.relation}/${record.resId}/avatar_128`,};}}
const many2ManyTagsAvatarField=__exports.many2ManyTagsAvatarField={...many2ManyTagsField,component:Many2ManyTagsAvatarField,extractProps({viewType},dynamicInfo){const props=many2ManyTagsField.extractProps(...arguments);props.withCommand=viewType==="form"||viewType==="list";props.domain=dynamicInfo.domain;return props;},};registry.category("fields").add("many2many_tags_avatar",many2ManyTagsAvatarField);const ListMany2ManyTagsAvatarField=__exports.ListMany2ManyTagsAvatarField=class ListMany2ManyTagsAvatarField extends Many2ManyTagsAvatarField{itemsVisible=5;}
const listMany2ManyTagsAvatarField=__exports.listMany2ManyTagsAvatarField={...many2ManyTagsAvatarField,component:ListMany2ManyTagsAvatarField,};registry.category("fields").add("list.many2many_tags_avatar",listMany2ManyTagsAvatarField);const Many2ManyTagsAvatarFieldPopover=__exports.Many2ManyTagsAvatarFieldPopover=class Many2ManyTagsAvatarFieldPopover extends Many2ManyTagsAvatarField{static template="web.Many2ManyTagsAvatarFieldPopover";static props={...Many2ManyTagsAvatarField.props,close:{type:Function},};setup(){super.setup();const originalUpdate=this.update;this.update=async(recordList)=>{await originalUpdate(recordList);await this._saveUpdate();};}
async deleteTag(id){await super.deleteTag(id);await this._saveUpdate();}
async _saveUpdate(){await this.props.record.save({reload:false});this.render();this.autoCompleteRef.el?.querySelector("input")?.click();}
get tags(){return super.tags.reverse();}}
const many2ManyTagsAvatarFieldPopover=__exports.many2ManyTagsAvatarFieldPopover={...many2ManyTagsAvatarField,component:Many2ManyTagsAvatarFieldPopover,};registry.category("fields").add("many2many_tags_avatar_popover",many2ManyTagsAvatarFieldPopover);const KanbanMany2ManyTagsAvatarFieldTagsList=__exports.KanbanMany2ManyTagsAvatarFieldTagsList=class KanbanMany2ManyTagsAvatarFieldTagsList extends TagsList{static template="web.KanbanMany2ManyTagsAvatarFieldTagsList";static props={...TagsList.props,popoverProps:{type:Object},readonly:{type:Boolean,optional:true},};setup(){super.setup();this.popover=usePopover(Many2ManyTagsAvatarFieldPopover,{popoverClass:"o_m2m_tags_avatar_field_popover",closeOnClickAway:(target)=>!target.closest(".modal"),});}
get visibleTagsCount(){return this.props.itemsVisible;}
openPopover(ev){if(this.props.readonly){return;}
this.popover.open(ev.currentTarget.parentElement,{...this.props.popoverProps,readonly:false,canCreate:false,canCreateEdit:false,canQuickCreate:false,placeholder:_t("Search users..."),});}
get canDisplayQuickAssignAvatar(){return!this.props.readonly&&!(this.props.tags&&this.otherTags.length);}}
const KanbanMany2ManyTagsAvatarField=__exports.KanbanMany2ManyTagsAvatarField=class KanbanMany2ManyTagsAvatarField extends Many2ManyTagsAvatarField{static template="web.KanbanMany2ManyTagsAvatarField";static components={...Many2ManyTagsAvatarField.components,TagsList:KanbanMany2ManyTagsAvatarFieldTagsList,};static props={...Many2ManyTagsAvatarField.props,isEditable:{type:Boolean,optional:true},};itemsVisible=2;get popoverProps(){const props={...this.props,readonly:false,};delete props.isEditable;return props;}
get tags(){return super.tags.reverse();}}
const kanbanMany2ManyTagsAvatarField=__exports.kanbanMany2ManyTagsAvatarField={...many2ManyTagsAvatarField,component:KanbanMany2ManyTagsAvatarField,extractProps(fieldInfo,dynamicInfo){const props=many2ManyTagsAvatarField.extractProps(...arguments);props.isEditable=!dynamicInfo.readonly;return props;},};registry.category("fields").add("kanban.many2many_tags_avatar",kanbanMany2ManyTagsAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one/many2one_field.js */
odoo.define('@web/views/fields/many2one/many2one_field',['@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/context','@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/py_js/py','@web/core/registry','@web/core/utils/hooks','@web/core/utils/strings','@web/views/fields/relational_utils','@web/webclient/barcode/barcode_scanner','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isMobileOS}=require("@web/core/browser/feature_detection");const{makeContext}=require("@web/core/context");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{useChildRef,useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{escape}=require("@web/core/utils/strings");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const BarcodeScanner=require("@web/webclient/barcode/barcode_scanner");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,onWillUpdateProps,useState,markup}=require("@odoo/owl");class CreateConfirmationDialog extends Component{static template="web.Many2OneField.CreateConfirmationDialog";static components={Dialog};get title(){return _t("New: %s",this.props.name);}
get dialogContent(){return markup(_t("Create <strong>%s</strong> as a new %s?",escape(this.props.value),escape(this.props.name)));}
async onCreate(){await this.props.create();this.props.close();}}
__exports.m2oTupleFromData=m2oTupleFromData;function m2oTupleFromData(data){const id=data.id;let name;if("display_name"in data){name=data.display_name;}else{const _name=data.name;name=Array.isArray(_name)?_name[1]:_name;}
return[id,name];}
const Many2OneField=__exports.Many2OneField=class Many2OneField extends Component{static template="web.Many2OneField";static components={Many2XAutocomplete,};static props={...standardFieldProps,placeholder:{type:String,optional:true},canOpen:{type:Boolean,optional:true},canCreate:{type:Boolean,optional:true},canWrite:{type:Boolean,optional:true},canQuickCreate:{type:Boolean,optional:true},canCreateEdit:{type:Boolean,optional:true},context:{type:String,optional:true},domain:{type:[Array,Function],optional:true},nameCreateField:{type:String,optional:true},searchLimit:{type:Number,optional:true},relation:{type:String,optional:true},string:{type:String,optional:true},canScanBarcode:{type:Boolean,optional:true},update:{type:Function,optional:true},value:{optional:true},decorations:{type:Object,optional:true},};static defaultProps={canOpen:true,canCreate:true,canWrite:true,canQuickCreate:true,canCreateEdit:true,nameCreateField:"name",searchLimit:7,string:"",canScanBarcode:false,context:{},decorations:{},};static SEARCH_MORE_LIMIT=320;setup(){this.orm=useService("orm");this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");this.autocompleteContainerRef=useChildRef();this.addDialog=useOwnedDialogs();this.focusInput=()=>{this.autocompleteContainerRef.el.querySelector("input").focus();};this.state=useState({isFloating:false,});this.computeActiveActions(this.props);this.openMany2X=useOpenMany2XRecord({resModel:this.relation,activeActions:this.state.activeActions,isToMany:false,onRecordSaved:async(record)=>{const resId=this.value[0];const fields=["display_name"];const records=await this.orm.read(this.relation,[resId],fields,{context:this.context,});await this.updateRecord(m2oTupleFromData(records[0]));},onClose:()=>this.focusInput(),fieldString:this.string,});this.update=(value,params={})=>{if(value){value=m2oTupleFromData(value[0]);}
this.state.isFloating=false;return this.updateRecord(value);};if(this.props.canQuickCreate){this.quickCreate=(name)=>{this.state.isFloating=false;return this.updateRecord([false,name]);};}
this.setFloating=(bool)=>{this.state.isFloating=bool;};onWillUpdateProps(async(nextProps)=>{this.computeActiveActions(nextProps);});}
updateRecord(value){const changes={[this.props.name]:value};if(this.props.update){return this.props.update(changes);}
return this.props.record.update(changes);}
get relation(){return this.props.relation||this.props.record.fields[this.props.name].relation;}
get string(){return this.props.string||this.props.record.fields[this.props.name].string||"";}
get hasExternalButton(){return this.props.canOpen&&!!this.value&&!this.state.isFloating;}
get context(){const{context,record}=this.props;const evalContext=record.getEvalContext?record.getEvalContext(false):record.evalContext;return makeContext([context],evalContext);}
get classFromDecoration(){const evalContext=this.props.record.evalContextWithVirtualIds;for(const decorationName in this.props.decorations){if(evaluateBooleanExpr(this.props.decorations[decorationName],evalContext)){return`text-${decorationName}`;}}
return"";}
get displayName(){if(this.value&&this.value[1]){return this.value[1].split("\n")[0];}else if(this.value){return _t("Unnamed");}else{return"";}}
get extraLines(){return this.value&&this.value[1]?this.value[1].split("\n").map((line)=>line.trim()).slice(1):[];}
get resId(){return this.value&&this.value[0];}
get value(){return"value"in this.props?this.props.value:this.props.record.data[this.props.name];}
get Many2XAutocompleteProps(){return{value:this.displayName,id:this.props.id,placeholder:this.props.placeholder,resModel:this.relation,autoSelect:true,fieldString:this.string,activeActions:this.state.activeActions,update:this.update,quickCreate:this.quickCreate,context:this.context,getDomain:this.getDomain.bind(this),nameCreateField:this.props.nameCreateField,setInputFloats:this.setFloating,autocomplete_container:this.autocompleteContainerRef,};}
computeActiveActions(props){this.state.activeActions={create:props.canCreate,createEdit:props.canCreateEdit,write:props.canWrite,};}
getDomain(){let domain=this.props.domain;if(typeof domain==="function"){domain=domain();}
return domain;}
async openAction(){const action=await this.orm.call(this.relation,"get_formview_action",[[this.resId]],{context:this.context,});await this.action.doAction(action);}
async openDialog(resId){return this.openMany2X({resId,context:this.context});}
async openConfirmationDialog(request){return new Promise((resolve,reject)=>{this.addDialog(CreateConfirmationDialog,{value:request,name:this.string,create:async()=>{try{await this.quickCreate(request);resolve();}catch(e){reject(e);}},});});}
onClick(ev){if(this.props.canOpen&&this.props.readonly){ev.stopPropagation();this.openAction();}}
onExternalBtnClick(){if(this.env.inDialog){this.openDialog(this.resId);}else{this.openAction();}}
async onBarcodeBtnClick(){const barcode=await BarcodeScanner.scanBarcode(this.env);if(barcode){await this.onBarcodeScanned(barcode);if("vibrate"in browser.navigator){browser.navigator.vibrate(100);}}else{this.notification.add(_t("Please, scan again!"),{type:"warning",});}}
async search(barcode){const results=await this.orm.call(this.relation,"name_search",[],{name:barcode,args:this.getDomain(),operator:"ilike",limit:2,context:this.context,});return results.map((result)=>{const[id,displayName]=result;return{id,name:displayName,};});}
async onBarcodeScanned(barcode){const results=await this.search(barcode);const records=results.filter((r)=>!!r.id);if(records.length===1){this.update([{id:records[0].id,name:records[0].name}]);}else{const searchInput=this.autocompleteContainerRef.el.querySelector("input");searchInput.value=barcode;searchInput.dispatchEvent(new Event("input"));if(this.env.isSmall){searchInput.dispatchEvent(new Event("barcode-search"));}}}
get hasBarcodeButton(){const canScanBarcode=this.props.canScanBarcode;const supported=BarcodeScanner.isBarcodeScannerSupported();return canScanBarcode&&isMobileOS()&&supported&&!this.hasExternalButton;}}
const many2OneField=__exports.many2OneField={component:Many2OneField,displayName:_t("Many2one"),supportedOptions:[{label:_t("Disable opening"),name:"no_open",type:"boolean",},{label:_t("Disable creation"),name:"no_create",type:"boolean",help:_t("If checked, users won't be able to create records through the autocomplete dropdown at all."),},{label:_t("Disable 'Create' option"),name:"no_quick_create",type:"boolean",help:_t("If checked, users will not be able to create records based on the text input; they will still be able to create records via a popup form."),},{label:_t("Disable 'Create and Edit' option"),name:"no_create_edit",type:"boolean",help:_t("If checked, users will not be able to create records based through a popup form; they will still be able to create records based on the text input."),},],supportedTypes:["many2one"],extractProps({attrs,context,decorations,options,string},dynamicInfo){const hasCreatePermission=attrs.can_create?evaluateBooleanExpr(attrs.can_create):true;const hasWritePermission=attrs.can_write?evaluateBooleanExpr(attrs.can_write):true;const canCreate=options.no_create?false:hasCreatePermission;return{placeholder:attrs.placeholder,canOpen:!options.no_open,canCreate,canWrite:hasWritePermission,canQuickCreate:canCreate&&!options.no_quick_create,canCreateEdit:canCreate&&!options.no_create_edit,context:context,decorations,domain:dynamicInfo.domain,nameCreateField:options.create_name_field,canScanBarcode:!!options.can_scan_barcode,string,};},};registry.category("fields").add("many2one",many2OneField);registry.category("fields").add("list.many2one",many2OneField);registry.category("fields").add("kanban.many2one",many2OneField);return __exports;});;

/* /web/static/src/views/fields/many2one_avatar/many2one_avatar_field.js */
odoo.define('@web/views/fields/many2one_avatar/many2one_avatar_field',['@web/core/l10n/translation','@web/core/registry','@web/core/popover/popover_hook','@web/views/fields/many2one/many2one_field','@odoo/owl','@web/views/fields/relational_utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{usePopover}=require("@web/core/popover/popover_hook");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component}=require("@odoo/owl");const{AvatarMany2XAutocomplete}=require("@web/views/fields/relational_utils");const Many2OneAvatarField=__exports.Many2OneAvatarField=class Many2OneAvatarField extends Component{static template="web.Many2OneAvatarField";static components={Many2OneField,};static props={...Many2OneField.props,};get relation(){return this.props.relation||this.props.record.fields[this.props.name].relation;}
get many2OneProps(){return Object.fromEntries(Object.entries(this.props).filter(([key,_val])=>key in this.constructor.components.Many2OneField.props));}}
const many2OneAvatarField=__exports.many2OneAvatarField={...many2OneField,component:Many2OneAvatarField,extractProps(fieldInfo){const props=many2OneField.extractProps(...arguments);props.canOpen=fieldInfo.viewType==="form";return props;},};const Many2OneFieldPopover=__exports.Many2OneFieldPopover=class Many2OneFieldPopover extends Many2OneField{static props={...Many2OneField.props,close:{type:Function},};static components={Many2XAutocomplete:AvatarMany2XAutocomplete,};get Many2XAutocompleteProps(){return{...super.Many2XAutocompleteProps,dropdown:false,autofocus:true,};}
async updateRecord(value){const updatedValue=await super.updateRecord(...arguments);await this.props.record.save();return updatedValue;}}
const KanbanMany2OneAvatarField=__exports.KanbanMany2OneAvatarField=class KanbanMany2OneAvatarField extends Many2OneAvatarField{static template="web.KanbanMany2OneAvatarField";static props={...Many2OneAvatarField.props,isEditable:{type:Boolean,optional:true},};setup(){super.setup();this.popover=usePopover(Many2OneFieldPopover,{popoverClass:"o_m2o_tags_avatar_field_popover",closeOnClickAway:(target)=>!target.closest(".modal"),});}
get popoverProps(){const props={...this.props,readonly:false,};delete props.isEditable;return props;}
openPopover(ev){if(!this.props.isEditable){return;}
this.popover.open(ev.currentTarget,{...this.popoverProps,canCreate:false,canCreateEdit:false,canQuickCreate:false,placeholder:_t("Search user..."),});}}
const kanbanMany2OneAvatarField=__exports.kanbanMany2OneAvatarField={...many2OneField,component:KanbanMany2OneAvatarField,additionalClasses:["o_field_many2one_avatar_kanban"],extractProps(fieldInfo,dynamicInfo){const props=many2OneAvatarField.extractProps(...arguments);props.isEditable=!dynamicInfo.readonly;return props;},};registry.category("fields").add("many2one_avatar",many2OneAvatarField);registry.category("fields").add("kanban.many2one_avatar",kanbanMany2OneAvatarField);return __exports;});;

/* /web/static/src/views/fields/many2one_barcode/many2one_barcode_field.js */
odoo.define('@web/views/fields/many2one_barcode/many2one_barcode_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/many2one/many2one_field'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const Many2OneBarcodeField=__exports.Many2OneBarcodeField=class Many2OneBarcodeField extends Many2OneField{static defaultProps={...super.defaultProps,canScanBarcode:true,};}
const many2OneBarcodeField=__exports.many2OneBarcodeField={...many2OneField,component:Many2OneBarcodeField,displayName:_t("Many2OneBarcode"),extractProps(){const props=many2OneField.extractProps(...arguments);props.canScanBarcode=true;return props;},};registry.category("fields").add("many2one_barcode",many2OneBarcodeField);return __exports;});;

/* /web/static/src/views/fields/many2one_reference/many2one_reference_field.js */
odoo.define('@web/views/fields/many2one_reference/many2one_reference_field',['@web/core/registry','@web/views/fields/integer/integer_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{integerField}=require("@web/views/fields/integer/integer_field");registry.category("fields").add("many2one_reference",integerField);return __exports;});;

/* /web/static/src/views/fields/monetary/monetary_field.js */
odoo.define('@web/views/fields/monetary/monetary_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/standard_field_props','@odoo/owl','@web/core/currency'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatMonetary}=require("@web/views/fields/formatters");const{parseMonetary}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const{getCurrency}=require("@web/core/currency");const MonetaryField=__exports.MonetaryField=class MonetaryField extends Component{static template="web.MonetaryField";static props={...standardFieldProps,currencyField:{type:String,optional:true},inputType:{type:String,optional:true},useFieldDigits:{type:Boolean,optional:true},hideSymbol:{type:Boolean,optional:true},placeholder:{type:String,optional:true},};static defaultProps={hideSymbol:false,inputType:"text",};setup(){useInputField(this.inputOptions);useNumpadDecimal();}
get inputOptions(){return{getValue:()=>this.formattedValue,refName:"numpadDecimal",parse:parseMonetary,};}
get currencyId(){const currencyField=this.props.currencyField||this.props.record.fields[this.props.name].currency_field||"currency_id";const currency=this.props.record.data[currencyField];return currency&&currency[0];}
get currency(){if(!isNaN(this.currencyId)){return getCurrency(this.currencyId)||null;}
return null;}
get currencySymbol(){return this.currency?this.currency.symbol:"";}
get currencyDigits(){if(this.props.useFieldDigits){return this.props.record.fields[this.props.name].digits;}
if(!this.currency){return null;}
return getCurrency(this.currencyId).digits;}
get value(){return this.props.record.data[this.props.name];}
get formattedValue(){if(this.props.inputType==="number"&&!this.props.readonly&&this.value){return this.value;}
return formatMonetary(this.value,{digits:this.currencyDigits,currencyId:this.currencyId,noSymbol:!this.props.readonly||this.props.hideSymbol,});}}
const monetaryField=__exports.monetaryField={component:MonetaryField,supportedOptions:[{label:_t("Hide symbol"),name:"no_symbol",type:"boolean",},{label:_t("Currency"),name:"currency_field",type:"field",availableTypes:["many2one"],},],supportedTypes:["monetary","float"],displayName:_t("Monetary"),extractProps:({attrs,options})=>({currencyField:options.currency_field,inputType:attrs.type,useFieldDigits:options.field_digits,hideSymbol:options.no_symbol,placeholder:attrs.placeholder,}),};registry.category("fields").add("monetary",monetaryField);return __exports;});;

/* /web/static/src/views/fields/numpad_decimal_hook.js */
odoo.define('@web/views/fields/numpad_decimal_hook',['@web/core/l10n/localization','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{isIOS}=require("@web/core/browser/feature_detection");const{useRef,useEffect}=require("@odoo/owl");function onKeydown(ev){const decimalPoint=localization.decimalPoint;if(!([".",","].includes(ev.key)&&ev.code==="NumpadDecimal")||ev.key===decimalPoint||ev.target.type==="number"){return;}
ev.preventDefault();ev.target.setRangeText(decimalPoint,ev.target.selectionStart,ev.target.selectionEnd,"end");}
function onFocus(ev){ev.target.select();}
__exports.useNumpadDecimal=useNumpadDecimal;function useNumpadDecimal(){const ref=useRef("numpadDecimal");const isIOSDevice=isIOS();useEffect(()=>{let inputs=[];const el=ref.el;if(el){inputs=el.nodeName==="INPUT"?[el]:el.querySelectorAll("input");inputs.forEach((input)=>input.addEventListener("keydown",onKeydown));inputs.forEach((input)=>input.addEventListener("focus",onFocus));if(isIOSDevice){inputs.forEach((input)=>input.removeAttribute("inputmode"));}}
return()=>{inputs.forEach((input)=>input.removeEventListener("keydown",onKeydown));inputs.forEach((input)=>input.removeEventListener("focus",onFocus));};});}
return __exports;});;

/* /web/static/src/views/fields/parsers.js */
odoo.define('@web/views/fields/parsers',['@web/core/l10n/dates','@web/core/l10n/localization','@web/core/py_js/py','@web/core/registry','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{parseDate,parseDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{escapeRegExp}=require("@web/core/utils/strings");function evaluateMathematicalExpression(expr,context={}){var val=expr.replace(new RegExp(/( )/g),"");var safeEvalString="";for(let v of val.split(new RegExp(/([-+*/()^])/g))){if(!["+","-","*","/","(",")","^"].includes(v)&&v.length){v=parseFloat(v);}
if(v==="^"){v="**";}
safeEvalString+=v;}
return evaluateExpr(safeEvalString,context);}
function parseNumber(value,options={}){if(value.startsWith("=")){value=evaluateMathematicalExpression(value.substring(1));if(options.truncate){value=Math.trunc(value);}}else{const thousandsSepRegex=options.thousandsSep.match(/\s+/)?/\s+/g:new RegExp(escapeRegExp(options.thousandsSep),"g")||",";value=value.replaceAll(thousandsSepRegex,"");value=value.replace(new RegExp(escapeRegExp(options.decimalPoint),"g")||".",".");}
return Number(value);}
const InvalidNumberError=__exports.InvalidNumberError=class InvalidNumberError extends Error{}
__exports.parseFloat=parseFloat;function parseFloat(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,});if(isNaN(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",});if(isNaN(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
return parsed;}
__exports.parseFloatTime=parseFloatTime;function parseFloatTime(value){let sign=1;if(value[0]==="-"){value=value.slice(1);sign=-1;}
const values=value.split(":");if(values.length>2){throw new InvalidNumberError(`"${value}" is not a correct number`);}
if(values.length===1){return sign*parseFloat(value);}
const hours=parseInteger(values[0]);const minutes=parseInteger(values[1]);return sign*(hours+minutes/60);}
__exports.parseInteger=parseInteger;function parseInteger(value){const thousandsSepRegex=localization.thousandsSep||"";const decimalPointRegex=localization.decimalPoint;let parsed=parseNumber(value,{thousandsSep:thousandsSepRegex,decimalPoint:decimalPointRegex,truncate:true,});if(!Number.isInteger(parsed)){parsed=parseNumber(value,{thousandsSep:",",decimalPoint:".",truncate:true,});if(!Number.isInteger(parsed)){throw new InvalidNumberError(`"${value}" is not a correct number`);}}
if(parsed<-2147483648||parsed>2147483647){throw new InvalidNumberError(`"${value}" is out of bounds (integers should be between -2,147,483,648 and 2,147,483,647)`);}
return parsed;}
__exports.parsePercentage=parsePercentage;function parsePercentage(value){if(value[value.length-1]==="%"){value=value.slice(0,value.length-1);}
return parseFloat(value)/100;}
__exports.parseMonetary=parseMonetary;function parseMonetary(value){value=value.trim();const startMatch=value.match(new RegExp(`[\\d\\-+=]|${escapeRegExp(localization.decimalPoint)}`));if(startMatch){value=value.substring(startMatch.index);}
value=value.replace(/\D*$/,"");return parseFloat(value);}
registry.category("parsers").add("date",parseDate).add("datetime",parseDateTime).add("float",parseFloat).add("float_time",parseFloatTime).add("integer",parseInteger).add("many2one_reference",parseInteger).add("monetary",parseMonetary).add("percentage",parsePercentage);return __exports;});;

/* /web/static/src/views/fields/pdf_viewer/pdf_viewer_field.js */
odoo.define('@web/views/fields/pdf_viewer/pdf_viewer_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/hooks','@web/core/utils/urls','@web/views/fields/standard_field_props','@web/views/fields/file_handler','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{FileUploader}=require("@web/views/fields/file_handler");const{Component,onWillUpdateProps,useState}=require("@odoo/owl");const PdfViewerField=__exports.PdfViewerField=class PdfViewerField extends Component{static template="web.PdfViewerField";static components={FileUploader,};static props={...standardFieldProps,};setup(){this.notification=useService("notification");this.state=useState({isValid:true,objectUrl:"",});onWillUpdateProps((nextProps)=>{if(nextProps.readonly){this.state.objectUrl="";}});}
get url(){if(!this.state.isValid||!this.props.record.data[this.props.name]){return null;}
const page=this.props.record.data[`${this.props.name}_page`]||1;const file=encodeURIComponent(this.state.objectUrl||url("/web/content",{model:this.props.record.resModel,field:this.props.name,id:this.props.record.resId,}));return`/web/static/lib/pdfjs/web/viewer.html?file=${file}#page=${page}`;}
update({data}){const changes={[this.props.name]:data||false};return this.props.record.update(changes);}
onFileRemove(){this.state.isValid=true;this.update({});}
onFileUploaded({data,objectUrl}){this.state.isValid=true;this.state.objectUrl=objectUrl;this.update({data});}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected pdf"),{type:"danger",});}}
const pdfViewerField=__exports.pdfViewerField={component:PdfViewerField,displayName:_t("PDF Viewer"),supportedOptions:[{label:_t("Preview image"),name:"preview_image",type:"field",availableTypes:["binary"],},],supportedTypes:["binary"],};registry.category("fields").add("pdf_viewer",pdfViewerField);return __exports;});;

/* /web/static/src/views/fields/percent_pie/percent_pie_field.js */
odoo.define('@web/views/fields/percent_pie/percent_pie_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatFloat}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentPieField=__exports.PercentPieField=class PercentPieField extends Component{static template="web.PercentPieField";static props={...standardFieldProps,string:{type:String,optional:true},};get formattedValue(){return formatFloat(this.props.record.data[this.props.name],{trailingZeros:false,});}}
const percentPieField=__exports.percentPieField={component:PercentPieField,displayName:_t("PercentPie"),supportedTypes:["float","integer"],additionalClasses:["o_field_percent_pie"],extractProps:({string})=>({string}),};registry.category("fields").add("percentpie",percentPieField);return __exports;});;

/* /web/static/src/views/fields/percentage/percentage_field.js */
odoo.define('@web/views/fields/percentage/percentage_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/formatters','@web/views/fields/parsers','@web/views/fields/input_field_hook','@web/views/fields/numpad_decimal_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{formatPercentage}=require("@web/views/fields/formatters");const{parsePercentage}=require("@web/views/fields/parsers");const{useInputField}=require("@web/views/fields/input_field_hook");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PercentageField=__exports.PercentageField=class PercentageField extends Component{static template="web.PercentageField";static props={...standardFieldProps,digits:{type:Array,optional:true},placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>formatPercentage(this.props.record.data[this.props.name],{digits:this.digits,noSymbol:true,}),refName:"numpadDecimal",parse:(v)=>parsePercentage(v),});useNumpadDecimal();}
get digits(){const fieldDigits=this.props.record.fields[this.props.name].digits;return!this.props.digits&&Array.isArray(fieldDigits)?fieldDigits:this.props.digits;}
get formattedValue(){return formatPercentage(this.props.record.data[this.props.name],{digits:this.digits,});}}
const percentageField=__exports.percentageField={component:PercentageField,displayName:_t("Percentage"),supportedTypes:["integer","float"],extractProps:({attrs,options})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,placeholder:attrs.placeholder,};},};registry.category("fields").add("percentage",percentageField);return __exports;});;

/* /web/static/src/views/fields/phone/phone_field.js */
odoo.define('@web/views/fields/phone/phone_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const PhoneField=__exports.PhoneField=class PhoneField extends Component{static template="web.PhoneField";static props={...standardFieldProps,placeholder:{type:String,optional:true},};setup(){useInputField({getValue:()=>this.props.record.data[this.props.name]||""});}
get phoneHref(){return"tel:"+this.props.record.data[this.props.name].replace(/\s+/g,"");}}
const phoneField=__exports.phoneField={component:PhoneField,displayName:_t("Phone"),supportedTypes:["char"],extractProps:({attrs})=>({placeholder:attrs.placeholder,}),};registry.category("fields").add("phone",phoneField);class FormPhoneField extends PhoneField{static template="web.FormPhoneField";}
const formPhoneField=__exports.formPhoneField={...phoneField,component:FormPhoneField,};registry.category("fields").add("form.phone",formPhoneField);return __exports;});;

/* /web/static/src/views/fields/priority/priority_field.js */
odoo.define('@web/views/fields/priority/priority_field',['@web/core/commands/command_hook','@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{useCommand}=require("@web/core/commands/command_hook");const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const PriorityField=__exports.PriorityField=class PriorityField extends Component{static template="web.PriorityField";static props={...standardFieldProps,withCommand:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};setup(){this.state=useState({index:-1,});if(this.props.withCommand){for(const command of this.commands){useCommand(...command);}}}
get commands(){const commandName=_t("Set priority...");return[[commandName,()=>{return{placeholder:commandName,providers:[{provide:()=>this.options.map((value)=>({name:value[1],action:()=>{this.updateRecord(value[0]);},})),},],};},{category:"smart_action",hotkey:"alt+r"},],];}
get tooltipLabel(){return this.props.record.fields[this.props.name].string;}
get options(){return Array.from(this.props.record.fields[this.props.name].selection);}
get index(){return this.state.index>-1?this.state.index:this.options.findIndex((o)=>o[0]===this.props.record.data[this.props.name]);}
getTooltip(value){return this.tooltipLabel&&this.tooltipLabel!==value?`${this.tooltipLabel}: ${value}`:value;}
onStarClicked(value){if(this.props.record.data[this.props.name]===value){this.state.index=-1;this.updateRecord(this.options[0][0]);}else{this.updateRecord(value);}}
async updateRecord(value){await this.props.record.update({[this.props.name]:value},{save:this.props.autosave});}}
const priorityField=__exports.priorityField={component:PriorityField,displayName:_t("Priority"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},],supportedTypes:["selection"],extractProps({options,viewType},dynamicInfo){return{withCommand:viewType==="form",readonly:dynamicInfo.readonly,autosave:"autosave"in options?!!options.autosave:true,};},};registry.category("fields").add("priority",priorityField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/kanban_progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/kanban_progress_bar_field',['@web/core/registry','@web/views/fields/progress_bar/progress_bar_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{progressBarField,ProgressBarField}=require("@web/views/fields/progress_bar/progress_bar_field");const KanbanProgressBarField=__exports.KanbanProgressBarField=class KanbanProgressBarField extends ProgressBarField{get isEditable(){return this.props.isEditable;}}
const kanbanProgressBarField=__exports.kanbanProgressBarField={...progressBarField,component:KanbanProgressBarField,};registry.category("fields").add("kanban.progressbar",kanbanProgressBarField);return __exports;});;

/* /web/static/src/views/fields/progress_bar/progress_bar_field.js */
odoo.define('@web/views/fields/progress_bar/progress_bar_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/numpad_decimal_hook','@web/views/fields/parsers','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useNumpadDecimal}=require("@web/views/fields/numpad_decimal_hook");const{parseFloat}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useRef,useState}=require("@odoo/owl");const formatters=registry.category("formatters");const ProgressBarField=__exports.ProgressBarField=class ProgressBarField extends Component{static template="web.ProgressBarField";static props={...standardFieldProps,maxValueField:{type:[String,Number],optional:true},currentValueField:{type:String,optional:true},isEditable:{type:Boolean,optional:true},isCurrentValueEditable:{type:Boolean,optional:true},isMaxValueEditable:{type:Boolean,optional:true},title:{type:String,optional:true},overflowClass:{type:String,optional:true},};setup(){useNumpadDecimal();this.root=useRef("numpadDecimal");this.maxValueRef=useRef("maxValue");this.currentValueRef=useRef("currentValue");const{currentValueField,maxValueField,name}=this.props;this.currentValueField=currentValueField?currentValueField:name;if(maxValueField){this.maxValueField=maxValueField;}
this.state=useState({isEditing:false,});}
get isEditable(){return this.props.isEditable&&!this.props.readonly;}
get isPercentage(){return!this.props.maxValueField||!isNaN(this.props.maxValueField);}
get currentValue(){return this.props.record.data[this.currentValueField]||0;}
get maxValue(){return this.props.record.data[this.maxValueField]||100;}
get progressBarColorClass(){return this.currentValue>this.maxValue?this.props.overflowClass:"bg-primary";}
formatCurrentValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(Number.isInteger(this.currentValue)?"integer":"float");return formatter(this.currentValue,{humanReadable});}
formatMaxValue(humanReadable=!this.state.isEditing){const formatter=formatters.get(Number.isInteger(this.maxValue)?"integer":"float");return formatter(this.maxValue,{humanReadable});}
onValueChange(value,fieldName){let parsedValue;try{parsedValue=parseFloat(value);}catch{this.props.record.setInvalidField(this.props.name);return;}
if(this.props.record.fields[fieldName].type==="integer"){parsedValue=Math.floor(parsedValue);}
this.props.record.update({[fieldName]:parsedValue},{save:this.props.readonly});}
onCurrentValueChange(ev){this.onValueChange(ev.target.value,this.currentValueField);}
onMaxValueChange(ev){this.onValueChange(ev.target.value,this.maxValueField);}
onInputBlur(){if(document.activeElement!==this.maxValueRef.el&&document.activeElement!==this.currentValueRef.el){this.state.isEditing=false;}}
onInputFocus(){this.state.isEditing=true;}}
const progressBarField=__exports.progressBarField={component:ProgressBarField,displayName:_t("Progress Bar"),supportedOptions:[{label:_t("Can edit value"),name:"editable",type:"boolean",},{label:_t("Can edit max value"),name:"edit_max_value",type:"boolean",},{label:_t("Current value field"),name:"current_value",type:"field",availableTypes:["integer","float"],help:_t("Use to override the display value (e.g. if your progress bar is a computed percentage but you want to display the actual field value instead)."),},{label:_t("Max value field"),name:"max_value",type:"field",availableTypes:["integer","float"],help:_t("Field that holds the maximum value of the progress bar. If set, will be displayed next to the progress bar (e.g. 10 / 200)."),},{label:_t("Overflow style"),name:"overflow_class",type:"string",availableTypes:["integer","float"],help:_t("Bootstrap classname to customize the style of the progress bar when the maximum value is exceeded"),default:"bg-secondary",},],supportedTypes:["integer","float"],extractProps:({attrs,options})=>({maxValueField:options.max_value,currentValueField:options.current_value,isEditable:!options.readonly&&options.editable,isCurrentValueEditable:options.editable&&!options.edit_max_value,isMaxValueEditable:options.editable&&options.edit_max_value,title:attrs.title,overflowClass:options.overflow_class||"bg-secondary",}),};registry.category("fields").add("progressbar",progressBarField);return __exports;});;

/* /web/static/src/views/fields/properties/card_properties_field.js */
odoo.define('@web/views/fields/properties/card_properties_field',['@web/core/registry','@web/views/fields/properties/properties_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{propertiesField,PropertiesField}=require("@web/views/fields/properties/properties_field");const CardPropertiesField=__exports.CardPropertiesField=class CardPropertiesField extends PropertiesField{static template="web.CardPropertiesField";async _checkDefinitionAccess(){this.state.canChangeDefinition=false;}}
const cardPropertiesField=__exports.cardPropertiesField={...propertiesField,component:CardPropertiesField,};registry.category("fields").add("calendar.properties",cardPropertiesField);registry.category("fields").add("kanban.properties",cardPropertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/properties_field.js */
odoo.define('@web/views/fields/properties/properties_field',['@web/core/l10n/translation','@web/core/registry','@web/views/fields/standard_field_props','@web/views/utils','@web/views/fields/properties/property_definition','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/views/fields/properties/property_value','@web/core/utils/hooks','@web/core/popover/popover_hook','@web/core/confirmation_dialog/confirmation_dialog','@web/core/position_hook','@web/core/utils/objects','@web/core/utils/sortable_owl','@web/model/relational_model/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{uuid}=require("@web/views/utils");const{PropertyDefinition}=require("@web/views/fields/properties/property_definition");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{useBus,useService}=require("@web/core/utils/hooks");const{usePopover}=require("@web/core/popover/popover_hook");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{reposition}=require("@web/core/position_hook");const{archParseBoolean}=require("@web/views/utils");const{pick}=require("@web/core/utils/objects");const{useSortable}=require("@web/core/utils/sortable_owl");const{useRecordObserver}=require("@web/model/relational_model/utils");const{Component,useRef,useState,useEffect,onWillStart}=require("@odoo/owl");const PropertiesField=__exports.PropertiesField=class PropertiesField extends Component{static template="web.PropertiesField";static components={Dropdown,DropdownItem,PropertyDefinition,PropertyValue,};static props={...standardFieldProps,context:{type:Object,optional:true},columns:{type:Number,optional:true},showAddButton:{type:Boolean,optional:true},};setup(){this.notification=useService("notification");this.orm=useService("orm");this.user=useService("user");this.dialogService=useService("dialog");this.popover=usePopover(PropertyDefinition,{closeOnClickAway:this.checkPopoverClose,popoverClass:"o_property_field_popover",position:"top",onClose:()=>this.onCloseCurrentPopover?.(),fixedPosition:true,arrow:false,});this.propertiesRef=useRef("properties");let currentResId;useRecordObserver((record)=>{if(currentResId!==record.resId){currentResId=record.resId;this._saveInitialPropertiesValues();}});const field=this.props.record.fields[this.props.name];this.definitionRecordField=field.definition_record;this.state=useState({canChangeDefinition:true,movedPropertyName:null,showAddButton:this.props.showAddButton,unfoldedSeparators:this._getUnfoldedSeparators(),});if(this.env.config?.viewType==="form"){useBus(this.env.model.bus,"PROPERTY_FIELD:ADD_PROPERTY_VALUE",()=>{this.onPropertyCreate();});}
onWillStart(async()=>{await this._checkDefinitionAccess();});useEffect(()=>{if(this.openPropertyDefinition){const propertyName=this.openPropertyDefinition;const labels=this.propertiesRef.el.querySelectorAll(`.o_property_field[property-name="${propertyName}"] .o_field_property_open_popover`);this.openPropertyDefinition=null;const lastLabel=labels[labels.length-1];this._openPropertyDefinition(lastLabel,propertyName,true);}},()=>[this.openPropertyDefinition]);useEffect(()=>this._movePopoverIfNeeded());useSortable({enable:()=>!this.props.readonly&&this.state.canChangeDefinition,ref:this.propertiesRef,handle:".o_field_property_label .oi-draggable",elements:this.renderedColumnsCount===1?"*:is(.o_property_field, .o_field_property_group_label)":".o_property_field",groups:".o_property_group",connectGroups:true,cursor:"grabbing",onDragStart:({element,group})=>{this.propertiesRef.el.classList.add("o_property_dragging");element.classList.add("o_property_drag_item");group.classList.add("o_property_drag_group");document.activeElement.blur();},onDrop:async({parent,element,next,previous})=>{const from=element.getAttribute("property-name");let to=previous&&previous.getAttribute("property-name");let moveBefore=false;if(!to&&next){if(next.classList.contains("o_field_property_group_label")){next=next.closest(".o_property_group");}
to=next.getAttribute("property-name");moveBefore=!!to;}
if(!to){const groupName=parent.getAttribute("property-name");const group=this.groupedPropertiesList.find((group)=>group.name===groupName);to=group.elements.length?group.elements.at(-1).name:groupName;}
await this.onPropertyMoveTo(from,to,moveBefore);},onDragEnd:({element})=>{this.propertiesRef.el.classList.remove("o_property_dragging");element.classList.remove("o_property_drag_item");const targetGroup=this.propertiesRef.el.querySelector(".o_property_drag_group");if(targetGroup){targetGroup.classList.remove("o_property_drag_group");}},onGroupEnter:({group})=>{group.classList.add("o_property_drag_group");this._unfoldSeparators([group.getAttribute("property-name")],true);},onGroupLeave:({group})=>{group.classList.remove("o_property_drag_group");},});useSortable({enable:()=>!this.props.readonly&&this.state.canChangeDefinition,ref:this.propertiesRef,handle:".o_field_property_group_label .oi-draggable",elements:".o_property_group:not([property-name=''])",cursor:"grabbing",onDragStart:({element})=>{this.propertiesRef.el.classList.add("o_property_dragging");element.classList.add("o_property_drag_item");document.activeElement.blur();},onDrop:async({element,previous})=>{const from=element.getAttribute("property-name");const to=previous&&previous.getAttribute("property-name");await this.onGroupMoveTo(from,to);},onDragEnd:({element})=>{this.propertiesRef.el.classList.remove("o_property_dragging");element.classList.remove("o_property_drag_item");},});}
get renderedColumnsCount(){return this.env.isSmall?1:this.props.columns;}
get propertiesList(){const propertiesValues=this.props.record.data[this.props.name]||[];return propertiesValues.filter((definition)=>!definition.definition_deleted);}
get groupedPropertiesList(){const propertiesList=this.propertiesList;const groupedProperties=propertiesList[0]?.type!=="separator"?[{title:null,name:null,elements:[],invisibleLabel:true}]:[];propertiesList.forEach((property)=>{if(property.type==="separator"){groupedProperties.push({title:property.string,name:property.name,elements:[],});}else{groupedProperties.at(-1).elements.push(property);}});if(groupedProperties.length===1){const invisibleLabel=propertiesList[0]?.type!=="separator";groupedProperties[0].elements=[];groupedProperties[0].invisibleLabel=invisibleLabel;for(let col=1;col<this.renderedColumnsCount;++col){groupedProperties.push({title:null,name:groupedProperties[0].name,columnSeparator:true,elements:[],invisibleLabel,});}
const properties=propertiesList.filter((property)=>property.type!=="separator");properties.forEach((property,index)=>{const columnIndex=Math.floor((index*this.renderedColumnsCount)/properties.length);groupedProperties[columnIndex].elements.push(property);});}
return groupedProperties;}
get definitionRecordId(){return this.props.record.data[this.definitionRecordField][0];}
get definitionRecordModel(){return this.props.record.fields[this.definitionRecordField].relation;}
checkPopoverClose(target){if(target.closest(".o_datetime_picker")){return false;}
if(target.closest(".modal")){return false;}
if(target.closest(".o_tag_popover")){return false;}
if(target.closest(".o_model_field_selector_popover")){return false;}
return true;}
generateUniqueDomID(){return`property_${uuid()}`;}
generatePropertyName(){return uuid();}
async onPropertyMove(propertyName,direction){const propertiesValues=this.propertiesList||[];const propertyIndex=propertiesValues.findIndex((property)=>property.name===propertyName);const targetIndex=propertyIndex+(direction==="down"?1:-1);if(targetIndex<0||targetIndex>=propertiesValues.length){this.notification.add(direction==="down"?_t("This field is already last"):_t("This field is already first"),{type:"warning"});return;}
this.state.movedPropertyName=propertyName;const prop=propertiesValues[targetIndex];propertiesValues[targetIndex]=propertiesValues[propertyIndex];propertiesValues[propertyIndex]=prop;propertiesValues[propertyIndex].definition_changed=true;this._unfoldPropertyGroup(targetIndex,propertiesValues);await this.props.record.update({[this.props.name]:propertiesValues});this.movePopoverToProperty=propertyName;}
onPropertyMoveTo(propertyName,toPropertyName,moveBefore){const propertiesValues=this.propertiesList||[];let fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);let toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);const columnSize=Math.ceil(propertiesValues.length/this.renderedColumnsCount);if(this.renderedColumnsCount>1&&!propertiesValues.some((p,index)=>index!==0&&p.type==="separator")&&Math.floor(fromIndex/columnSize)!==Math.floor(toIndex/columnSize)){const newSeparators=[];for(let col=0;col<this.renderedColumnsCount;++col){const separatorIndex=columnSize*col+newSeparators.length;if(propertiesValues[separatorIndex].type==="separator"){continue;}
const newSeparator={type:"separator",string:_t("Group %s",col+1),name:this.generatePropertyName(),};newSeparators.push(newSeparator.name);propertiesValues.splice(separatorIndex,0,newSeparator);}
this._unfoldSeparators(newSeparators,true);toPropertyName=toPropertyName||propertiesValues[0].name;fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);}
if(moveBefore){toIndex--;}
if(toIndex<fromIndex){toIndex++;}
propertiesValues.splice(toIndex,0,propertiesValues.splice(fromIndex,1)[0]);propertiesValues[0].definition_changed=true;this.props.record.update({[this.props.name]:propertiesValues});}
onGroupMoveTo(propertyName,toPropertyName){const propertiesValues=this.propertiesList||[];const fromIndex=propertiesValues.findIndex((property)=>property.name===propertyName);const toIndex=propertiesValues.findIndex((property)=>property.name===toPropertyName);if(propertiesValues[fromIndex].type!=="separator"||(toIndex>=0&&propertiesValues[toIndex].type!=="separator")){throw new Error("Something went wrong");}
const getNextSeparatorIndex=(startIndex)=>{const nextSeparatorIndex=propertiesValues.findIndex((property,index)=>property.type==="separator"&&index>startIndex);return nextSeparatorIndex<0?propertiesValues.length:nextSeparatorIndex;};const groupSize=getNextSeparatorIndex(fromIndex)-fromIndex;let targetIndex=getNextSeparatorIndex(toIndex);if(targetIndex>fromIndex){targetIndex-=groupSize;}
propertiesValues.splice(targetIndex,0,...propertiesValues.splice(fromIndex,groupSize));propertiesValues[0].definition_changed=true;this.props.record.update({[this.props.name]:propertiesValues});}
onPropertyValueChange(propertyName,propertyValue){const propertiesValues=this.propertiesList;propertiesValues.find((property)=>property.name===propertyName).value=propertyValue;this.props.record.update({[this.props.name]:propertiesValues});}
async onPropertyEdit(event,propertyName){event.stopPropagation();event.preventDefault();if(!(await this.checkDefinitionWriteAccess())){this.notification.add(_t("You need edit access on the parent document to update these property fields"),{type:"warning"});return;}
if(event.target.classList.contains("disabled")){return;}
event.target.classList.add("disabled");this._openPropertyDefinition(event.target,propertyName,false);}
async onPropertyDefinitionChange(propertyDefinition){propertyDefinition["definition_changed"]=true;if(propertyDefinition.type==="separator"){propertyDefinition=pick(propertyDefinition,"name","string","definition_changed","type");}
const propertiesValues=this.propertiesList;const propertyIndex=this._getPropertyIndex(propertyDefinition.name);const oldType=propertiesValues[propertyIndex].type;const newType=propertyDefinition.type;this._regeneratePropertyName(propertyDefinition);propertiesValues[propertyIndex]=propertyDefinition;await this.props.record.update({[this.props.name]:propertiesValues});if(newType==="separator"&&oldType!=="separator"){this._unfoldSeparators([propertyDefinition.name],true);this.movePopoverToProperty=propertyDefinition.name;}else if(oldType==="separator"&&newType!=="separator"){const previousSeperator=propertiesValues.findLast((property,index)=>index<propertyIndex&&property.type==="separator");if(previousSeperator){this._unfoldSeparators([previousSeperator.name],true);}
this.movePopoverToProperty=propertyDefinition.name;}}
onPropertyDelete(propertyName){this.popover.close();const dialogProps={title:_t("Delete Property Field"),body:_t('Are you sure you want to delete this property field? It will be removed for everyone using the "%s" %s.',this.parentName,this.parentString),confirmLabel:_t("Delete"),confirm:()=>{const propertiesDefinitions=this.propertiesList;propertiesDefinitions.find((property)=>property.name===propertyName).definition_deleted=true;this.props.record.update({[this.props.name]:propertiesDefinitions});},cancel:()=>{},};this.dialogService.add(ConfirmationDialog,dialogProps);}
async onPropertyCreate(){if(!this.state.canChangeDefinition||!(await this.checkDefinitionWriteAccess())){this.notification.add(_t("You need edit access on the parent document to update these property fields"),{type:"warning"});return;}
const propertiesDefinitions=this.propertiesList||[];if(propertiesDefinitions.length&&propertiesDefinitions.some((prop)=>prop.type!=="separator"&&(!prop.string||!prop.string.length))){this.propertiesRef.el.closest(".o_field_properties").classList.add("o_field_invalid");this.notification.add(_t("Please complete your properties before adding a new one"),{type:"warning",});return;}
this._unfoldPropertyGroup(propertiesDefinitions.length-1,propertiesDefinitions);this.propertiesRef.el.closest(".o_field_properties").classList.remove("o_field_invalid");const newName=this.generatePropertyName();propertiesDefinitions.push({name:newName,string:_t("Property %s",propertiesDefinitions.length+1),type:"char",definition_changed:true,});this.openPropertyDefinition=newName;this.state.showAddButton=true;this.props.record.update({[this.props.name]:propertiesDefinitions});}
onSeparatorClick(propertyName){if(propertyName){this._unfoldSeparators([propertyName]);}}
async checkDefinitionWriteAccess(){if(!this.definitionRecordId||!this.definitionRecordModel){return false;}
try{await this.orm.call(this.definitionRecordModel,"check_access_rule",[this.definitionRecordId],{operation:"write"});}catch{return false;}
return true;}
onTagsChange(propertyName,newTags,newValue=null){const propertyDefinition=this.propertiesList.find((property)=>property.name===propertyName);propertyDefinition.tags=newTags;if(newValue!==null){propertyDefinition.value=newValue;}
propertyDefinition.definition_changed=true;this.onPropertyDefinitionChange(propertyDefinition);}
_getSeparatorFoldKey(){const definitionRecordId=this.props.record.data[this.definitionRecordField][0];const definitionRecordModel=this.props.record.fields[this.definitionRecordField].relation;return`properties.fold,${definitionRecordModel},${definitionRecordId}`;}
_getUnfoldedSeparators(){const key=this._getSeparatorFoldKey();const unfoldedSeparators=JSON.parse(window.localStorage.getItem(key))||[];const allPropertiesNames=this.propertiesList.map((property)=>property.name);return unfoldedSeparators.filter((name)=>allPropertiesNames.includes(name));}
_unfoldSeparators(separatorNames,forceUnfold){let unfoldedSeparators=this._getUnfoldedSeparators();for(const separatorName of separatorNames){if(unfoldedSeparators.includes(separatorName)){if(!forceUnfold){unfoldedSeparators=unfoldedSeparators.filter((name)=>name!==separatorName);}}else{unfoldedSeparators.push(separatorName);}}
const key=this._getSeparatorFoldKey();window.localStorage.setItem(key,JSON.stringify(unfoldedSeparators));this.state.unfoldedSeparators=unfoldedSeparators;}
_movePopoverIfNeeded(){if(!this.movePopoverToProperty){return;}
const propertyName=this.movePopoverToProperty;this.movePopoverToProperty=null;const popover=document.querySelector(".o_field_property_definition").closest(".o_popover");const target=document.querySelector(`*[property-name="${propertyName}"] .o_field_property_open_popover`);reposition(popover,target,{position:"top",margin:10});}
async _checkDefinitionAccess(){this.parentName=this.props.record.data[this.definitionRecordField][1];this.parentString=this.props.record.fields[this.definitionRecordField].string;if(!this.definitionRecordModel){this.state.canChangeDefinition=false;return;}
this.state.canChangeDefinition=await this.user.checkAccessRight(this.definitionRecordModel,"write");}
_regeneratePropertyName(propertyDefinition){const initialValues=this.initialValues[propertyDefinition.name];if(initialValues&&propertyDefinition.type===initialValues.type&&propertyDefinition.comodel===initialValues.comodel){propertyDefinition.name=initialValues.name;}else if(initialValues&&initialValues.name===propertyDefinition.name){const newName=this.generatePropertyName();this.initialValues[newName]=initialValues;propertyDefinition.name=newName;}}
_getPropertyIndex(propertyName){const initialName=this.initialValues[propertyName]?.name||propertyName;return this.propertiesList.findIndex((property)=>[propertyName,initialName].includes(property.name));}
_saveInitialPropertiesValues(){this.initialValues={};for(const propertiesValues of this.props.record.data[this.props.name]||[]){this.initialValues[propertiesValues.name]={name:propertiesValues.name,type:propertiesValues.type,comodel:propertiesValues.comodel,};}}
_openPropertyDefinition(target,propertyName,isNewlyCreated=false){const propertiesList=this.propertiesList;const propertyIndex=propertiesList.findIndex((property)=>property.name===propertyName);const currentName=(propertyName)=>{const propertiesList=this.propertiesList;for(const[newName,initialValue]of Object.entries(this.initialValues)){if(initialValue.name===propertyName){const prop=propertiesList.find((prop)=>prop.name===newName);if(prop){return newName;}}}
return propertyName;};this.onCloseCurrentPopover=()=>{this.onCloseCurrentPopover=null;this.state.movedPropertyName=null;target.classList.remove("disabled");if(isNewlyCreated){this._setDefaultPropertyValue(currentName(propertyName));}};this.popover.open(target,{readonly:this.props.readonly||!this.state.canChangeDefinition,canChangeDefinition:this.state.canChangeDefinition,checkDefinitionWriteAccess:()=>this.checkDefinitionWriteAccess(),propertyDefinition:this.propertiesList.find((property)=>property.name===currentName(propertyName)),context:this.props.context,onChange:this.onPropertyDefinitionChange.bind(this),onDelete:()=>this.onPropertyDelete(currentName(propertyName)),onPropertyMove:(direction)=>this.onPropertyMove(currentName(propertyName),direction),isNewlyCreated:isNewlyCreated,propertyIndex:propertyIndex,propertiesSize:propertiesList.length,});}
_setDefaultPropertyValue(propertyName){const propertiesValues=this.propertiesList;const newProperty=propertiesValues.find((property)=>property.name===propertyName);newProperty.value=newProperty.default;this.props.value=propertiesValues;this.props.record.update({[this.props.name]:propertiesValues});}
_unfoldPropertyGroup(targetIndex,propertiesValues){const separator=propertiesValues.findLast((property,index)=>property.type==="separator"&&index<=targetIndex);if(separator){this._unfoldSeparators([separator.name],true);}}}
const propertiesField=__exports.propertiesField={component:PropertiesField,displayName:_t("Properties"),supportedTypes:["properties"],extractProps({attrs},dynamicInfo){return{context:dynamicInfo.context,columns:parseInt(attrs.columns||"1"),showAddButton:archParseBoolean(attrs.showAddButton),};},};registry.category("fields").add("properties",propertiesField);return __exports;});;

/* /web/static/src/views/fields/properties/property_definition.js */
odoo.define('@web/views/fields/properties/property_definition',['@web/core/l10n/translation','@web/views/fields/properties/property_value','@web/core/checkbox/checkbox','@web/core/domain_selector/domain_selector','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/model_selector/model_selector','@web/views/fields/relational_utils','@web/core/utils/hooks','@web/views/fields/properties/property_definition_selection','@web/views/fields/properties/property_tags','@web/views/view_dialogs/select_create_dialog','@web/views/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{PropertyValue}=require("@web/views/fields/properties/property_value");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{ModelSelector}=require("@web/core/model_selector/model_selector");const{Many2XAutocomplete}=require("@web/views/fields/relational_utils");const{useService,useOwnedDialogs}=require("@web/core/utils/hooks");const{PropertyDefinitionSelection}=require("@web/views/fields/properties/property_definition_selection");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{uuid}=require("@web/views/utils");const{Component,useState,onWillUpdateProps,useEffect,useRef}=require("@odoo/owl");const PropertyDefinition=__exports.PropertyDefinition=class PropertyDefinition extends Component{setup(){this.orm=useService("orm");this.propertyDefinitionRef=useRef("propertyDefinition");this.addDialog=useOwnedDialogs();const defaultDefinition={name:false,string:"",type:"char",default:"",};const propertyDefinition={...defaultDefinition,...this.props.propertyDefinition,};this.state=useState({propertyDefinition:propertyDefinition,typeLabel:this._typeLabel(propertyDefinition.type),resModel:"",resModelDescription:"",matchingRecordsCount:undefined,propertyIndex:this.props.propertyIndex,});this._syncStateWithProps(propertyDefinition);this._domInputIdPrefix=uuid();onWillUpdateProps((newProps)=>this._syncStateWithProps(newProps.value));useEffect((event)=>{if(this.labelFocused){return;}
this.labelFocused=true;const labelInput=this.propertyDefinitionRef.el.querySelectorAll("input")[0];if(labelInput){if(this.props.isNewlyCreated){labelInput.select();}else{labelInput.focus();}}});}
get availablePropertyTypes(){return[["char",_t("Text")],["boolean",_t("Checkbox")],["integer",_t("Integer")],["float",_t("Decimal")],["date",_t("Date")],["datetime",_t("Date & Time")],["selection",_t("Selection")],["tags",_t("Tags")],["many2one",_t("Many2one")],["many2many",_t("Many2many")],["separator",_t("Separator")],];}
get isFirst(){return this.state.propertyIndex===0;}
get isLast(){return this.state.propertyIndex===this.props.propertiesSize-1;}
get propertyTagValues(){return(this.state.propertyDefinition.tags||[]).map((tag)=>tag[0]);}
getUniqueDomID(suffix){return`property_definition_${this._domInputIdPrefix}_${suffix}`;}
onPropertyLabelChange(event){const newString=event.target.value;const propertyDefinition={...this.state.propertyDefinition,string:newString,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyLabelKeypress(event){if(event.key!=="Enter"){return;}
this.props.close();}
onDefaultChange(newDefault){const propertyDefinition={...this.state.propertyDefinition,default:newDefault,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onPropertyTypeChange(newType){const propertyDefinition={...this.state.propertyDefinition,type:newType,};if(["integer","float"].includes(newType)){propertyDefinition.value=0;propertyDefinition.default=0;}else{propertyDefinition.value=false;propertyDefinition.default=false;}
delete propertyDefinition.comodel;this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;this.state.resModel="";this.state.resModelDescription="";this.state.typeLabel=this._typeLabel(newType);}
async onModelChange(newModel){const{label,technical}=newModel;const modelChanged=technical!==this.state.resModel;this.state.resModel=technical;this.state.resModelDescription=label;const propertyDefinition={...this.state.propertyDefinition,comodel:technical,default:modelChanged?false:this.state.propertyDefinition.default,value:modelChanged?false:this.state.propertyDefinition.value,domain:modelChanged?false:this.state.propertyDefinition.domain,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
async onDomainChange(newDomain){const propertyDefinition={...this.state.propertyDefinition,domain:newDomain,default:false,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;await this._updateMatchingRecordsCount();}
onButtonDomainClick(){this.addDialog(SelectCreateDialog,{title:_t("Selected records"),noCreate:true,multiSelect:false,resModel:this.state.propertyDefinition.comodel,domain:new Domain(this.state.propertyDefinition.domain||"[]").toList(),context:this.props.context||{},});}
onPropertyMove(direction){if(direction==="up"){this.state.propertyIndex--;}else{this.state.propertyIndex++;}
this.props.onPropertyMove(direction);}
onSelectionOptionChange(newOptions){const propertyDefinition={...this.state.propertyDefinition,selection:newOptions,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onTagsChange(newTags){const propertyDefinition={...this.state.propertyDefinition,tags:newTags,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
onViewInKanbanChange(newValue){const propertyDefinition={...this.state.propertyDefinition,view_in_cards:newValue,};this.props.onChange(propertyDefinition);this.state.propertyDefinition=propertyDefinition;}
async _syncStateWithProps(propertyDefinition){const newModel=propertyDefinition.comodel;const currentModel=this.state.resModel;this.state.propertyDefinition=propertyDefinition;this.state.resModel=propertyDefinition.comodel;this.state.typeLabel=this._typeLabel(propertyDefinition.type);this.state.resModel=newModel;if(newModel&&newModel!==currentModel){try{const result=await this.orm.call("ir.model","display_name_for",[[newModel]]);if(!result||!result.length){return;}
this.state.resModelDescription=result[0].display_name;}catch{this.state.resModelDescription=_t('You do not have access to the model "%s".',newModel);}
await this._updateMatchingRecordsCount();}else if(!newModel){this.state.resModelDescription="";}}
async _updateMatchingRecordsCount(){if(this.state.resModel&&this.state.resModel.length){const domainList=new Domain(this.state.propertyDefinition.domain||"[]").toList();const result=await this.orm.call(this.state.propertyDefinition.comodel,"search_count",[domainList]);this.state.matchingRecordsCount=result;}else{this.state.matchingRecordsCount=undefined;}}
_typeLabel(propertyType){const allTypes=this.availablePropertyTypes;return allTypes.find((type)=>type[0]===propertyType)[1];}}
PropertyDefinition.template="web.PropertyDefinition";PropertyDefinition.components={CheckBox,DomainSelector,Dropdown,DropdownItem,PropertyValue,Many2XAutocomplete,ModelSelector,PropertyDefinitionSelection,PropertyTags,};PropertyDefinition.props={readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},propertyDefinition:{optional:true},context:{type:Object},isNewlyCreated:{type:Boolean,optional:true},propertyIndex:{type:Number},propertiesSize:{type:Number},onChange:{type:Function,optional:true},onDelete:{type:Function,optional:true},onPropertyMove:{type:Function,optional:true},close:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/properties/property_definition_selection.js */
odoo.define('@web/views/fields/properties/property_definition_selection',['@web/core/utils/hooks','@web/views/utils','@odoo/owl','@web/core/utils/sortable_owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{uuid}=require("@web/views/utils");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const{useSortable}=require("@web/core/utils/sortable_owl");const PropertyDefinitionSelection=__exports.PropertyDefinitionSelection=class PropertyDefinitionSelection extends Component{setup(){this.notification=useService("notification");this.state=useState({newOption:null,});this.propertyDefinitionSelectionRef=useRef("propertyDefinitionSelection");this.addButtonRef=useRef("addButton");useEffect(()=>{if(!this.state.newOption){return;}
const inputs=this.propertyDefinitionSelectionRef.el.querySelectorAll(".o_field_property_selection_option input");if(inputs&&inputs.length&&!inputs[this.state.newOption.index].value){inputs[this.state.newOption.index].focus();}});useSortable({enable:()=>this.props.canChangeDefinition&&!this.props.readonly,ref:this.propertyDefinitionSelectionRef,handle:".o_field_property_selection_drag",elements:".o_field_property_selection_option",cursor:"grabbing",onDrop:async({element,previous})=>{const movedOption=element.getAttribute("option-name");const destinationOption=previous&&previous.getAttribute("option-name");await this.onOptionMoveTo(movedOption,destinationOption);},});}
get options(){return JSON.parse(JSON.stringify(this.props.options||[]));}
get optionsVisible(){const options=this.options||[];const newOption=this.state.newOption;if(newOption){options.splice(newOption.index,0,[newOption.name,""]);}
return options;}
onOptionCreate(index){this.state.newOption={index:index,name:uuid(),};}
onOptionChange(event,optionIndex){const target=event.target;const newLabel=target.value;if(this.options[optionIndex]&&this.options[optionIndex][1]===newLabel){return;}
const options=this.optionsVisible;if(!newLabel||!newLabel.length){options.splice(optionIndex,1);}else{options[optionIndex][1]=newLabel;}
const nonEmptyOptions=options.filter((option)=>option[1]&&option[1].length);this.props.onOptionsChange(nonEmptyOptions);if(this.state.newOption){this.state.newOption=null;}}
onOptionBlur(event,optionIndex){if(event.target.value&&event.target.value.length){return;}else if(this._ignoreBlur){this._ignoreBlur=false;return;}
if(event.relatedTarget===this.addButtonRef.el){event.stopPropagation();event.preventDefault();}else if(optionIndex===this.state.newOption?.index){this.state.newOption=null;}}
onOptionKeyDown(event,optionIndex){if(event.key==="Enter"){const newLabel=event.target.value;if(!newLabel||!newLabel.length){event.stopPropagation();event.preventDefault();return;}
this.onOptionChange(event,optionIndex);this.onOptionCreate(optionIndex+1);}else if(["ArrowUp","ArrowDown"].includes(event.key)){event.stopPropagation();event.preventDefault();if(event.key==="ArrowUp"&&optionIndex>0){const previousInput=event.target.closest(".o_field_property_selection_option").previousElementSibling.querySelector("input");previousInput.focus();}else if(event.key==="ArrowDown"&&optionIndex<this.optionsVisible.length-1){const nextInput=event.target.closest(".o_field_property_selection_option").nextElementSibling.querySelector("input");nextInput.focus();}}}
onOptionSetDefault(optionIndex){if(!this.props.canChangeDefinition){return;}
const newValue=this.optionsVisible[optionIndex][0];this.props.onDefaultOptionChange(newValue!==this.props.default?newValue:false);}
onOptionDelete(optionIndex){const options=this.optionsVisible;options.splice(optionIndex,1);this.props.onOptionsChange(options);}
onOptionMoveTo(movedOption,destinationOption){this._ignoreBlur=true;let options=this.optionsVisible;let destinationOptionIndex=options.findIndex((option)=>option[0]==destinationOption);const movedOptionIndex=options.findIndex((option)=>option[0]==movedOption);if(destinationOptionIndex<movedOptionIndex){destinationOptionIndex++;}
const activeEl=document.activeElement;if(activeEl&&this.propertyDefinitionSelectionRef.el.contains(activeEl)&&activeEl.tagName==="INPUT"){const optionName=activeEl.closest(".o_field_property_selection_option").getAttribute("option-name");const editedOptionIndex=options.findIndex((option)=>option[0]===optionName);options[editedOptionIndex][1]=activeEl.value;}
options.splice(destinationOptionIndex,0,options.splice(movedOptionIndex,1)[0]);if(this.state.newOption){const newOptionIndex=options.findIndex((option)=>option[0]===this.state.newOption.name);if(!options[newOptionIndex][1]?.length){this.state.newOption={...this.state.newOption,index:newOptionIndex,};options=options.filter((option)=>option[0]!==this.state.newOption.name);}else{this.state.newOption=null;}}
this.props.onOptionsChange(options);}}
PropertyDefinitionSelection.template="web.PropertyDefinitionSelection";PropertyDefinitionSelection.props={default:{type:String,optional:true},options:{},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},onOptionsChange:{type:Function,optional:true},onDefaultOptionChange:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/properties/property_tags.js */
odoo.define('@web/views/fields/properties/property_tags',['@web/core/autocomplete/autocomplete','@web/core/colorlist/colorlist','@web/core/l10n/translation','@web/core/popover/popover_hook','@web/core/registry','@web/core/utils/hooks','@web/core/tags_list/tags_list','@odoo/owl'],function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{ColorList}=require("@web/core/colorlist/colorlist");const{_t}=require("@web/core/l10n/translation");const{usePopover}=require("@web/core/popover/popover_hook");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{TagsList}=require("@web/core/tags_list/tags_list");const{Component}=require("@odoo/owl");class PropertyTagsColorListPopover extends Component{}
PropertyTagsColorListPopover.template="web.PropertyTagsColorListPopover";PropertyTagsColorListPopover.components={ColorList,};const PropertyTagAutoComplete=__exports.PropertyTagAutoComplete=class PropertyTagAutoComplete extends AutoComplete{}
Object.assign(PropertyTagAutoComplete,{timeout:0});const PropertyTags=__exports.PropertyTags=class PropertyTags extends Component{setup(){this.notification=useService("notification");this.popover=usePopover(this.constructor.components.Popover);}
get displayBadge(){return!this.env.config||this.env.config.viewType!=="kanban";}
get tagListItems(){if(!this.props.selectedTags||!this.props.selectedTags.length){return[];}
let value=this.props.tags.filter((tag)=>this.props.selectedTags.indexOf(tag[0])>=0);if(!this.displayBadge){value=value.filter((tag)=>tag[2]);}
const canDeleteTag=!this.props.readonly&&(this.props.canChangeTags||this.props.deleteAction==="value");return value.map((tag)=>{const[tagId,tagLabel,tagColorIndex]=tag;return{id:tagId,text:tagLabel,className:this.props.canChangeTags?"":"pe-none",colorIndex:tagColorIndex||0,onClick:(event)=>this.onTagClick(event,tagId,tagColorIndex),onDelete:canDeleteTag&&(()=>this.onTagDelete(tagId)),};});}
get selectedTags(){return JSON.parse(JSON.stringify(this.props.selectedTags||[]));}
get availableTags(){return JSON.parse(JSON.stringify(this.props.tags||[]));}
get autocompleteSources(){return[{options:(request)=>{const tagsFiltered=this.props.tags.filter((tag)=>(!this.props.selectedTags||this.props.selectedTags.indexOf(tag[0])<0)&&(!request||!request.length||tag[1].toLocaleLowerCase().indexOf(request.toLocaleLowerCase())>=0));if(!tagsFiltered||!tagsFiltered.length){if(!request||!request.length){return[{value:null,label:_t("Start typing..."),classList:"fst-italic",},];}else if(!this.props.canChangeTags){return[{value:null,label:_t("No result"),classList:"fst-italic",},];}
return[{value:{toCreate:true,value:request},label:_t('Create "%s"',request),classList:"o_field_property_dropdown_add",},];}
return tagsFiltered.map((tag)=>{return{value:tag[0],label:tag[1],};});},},];}
onOptionSelected(tagValue){if(!tagValue){return;}
if(tagValue.toCreate){this.onTagCreate(tagValue.value);}else{const selectedTags=this.selectedTags;const newValue=[...selectedTags,tagValue];this.props.onValueChange(newValue);}}
async onTagCreate(newLabel){if(!newLabel||!newLabel.length){return;}
if(!(await this.props.checkDefinitionWriteAccess())){this.notification.add(_t("You need to be able to edit parent first to add property tags"),{type:"warning"});return;}
const newValue=newLabel?newLabel.toLowerCase().replace(" ","_"):"";const existingTag=this.props.tags.find((tag)=>tag[0]===newValue);if(existingTag){this.notification.add(_t("This tag is already available"),{type:"warning",});return;}
let tagColor=this.props.tags&&this.props.tags.length?(this.props.tags[this.props.tags.length-1][2]+1)%ColorList.COLORS.length:parseInt(Math.random()*ColorList.COLORS.length);tagColor=tagColor||1;const newTag=[newValue,newLabel,tagColor];const updatedTags=[...this.availableTags,newTag];const newValues=[...this.props.selectedTags,newTag[0]];this.props.onTagsChange(updatedTags,newValues);}
onTagDelete(deleteTag){if(this.props.deleteAction==="value"){const selectedTags=this.selectedTags;const newValue=selectedTags.filter((tag)=>tag!==deleteTag);this.props.onValueChange(newValue);}else{const availableTags=this.availableTags;this.props.onTagsChange(availableTags.filter((tag)=>tag[0]!==deleteTag));}}
onTagClick(event,tagId,tagColor){if(!this.props.canChangeTags){event.currentTarget.blur();return;}
this.popover.open(event.currentTarget,{colors:[...Array(ColorList.COLORS.length).keys()],tag:{id:tagId,colorIndex:tagColor},switchTagColor:this.onTagColorSwitch.bind(this),});}
onTagColorSwitch(colorIndex,currentTag){const availableTags=this.availableTags;availableTags.find((tag)=>tag[0]===currentTag.id)[2]=colorIndex;this.props.onTagsChange(availableTags);this.popover.close();}}
PropertyTags.template="web.PropertyTags";PropertyTags.components={AutoComplete:PropertyTagAutoComplete,TagsList,ColorList,Popover:PropertyTagsColorListPopover,};PropertyTags.props={id:{type:String,optional:true},selectedTags:{},tags:{},deleteAction:{type:String},readonly:{type:Boolean,optional:true},canChangeTags:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},onValueChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};const PropertyTagsField=__exports.PropertyTagsField=class PropertyTagsField extends Component{static template="web.PropertyTagsField";static components={PropertyTags};get propertyTagsProps(){return{selectedTags:this.props.record.data[this.props.name]||[],tags:this.props.record.fields[this.props.name].tags||[],deleteAction:"value",readonly:this.props.readonly,canChangeTags:false,onValueChange:(value)=>{this.props.record.update({[this.props.name]:value});},};}}
const propertyTagsField=__exports.propertyTagsField={component:PropertyTagsField,};registry.category("fields").add("property_tags",propertyTagsField);return __exports;});;

/* /web/static/src/views/fields/properties/property_value.js */
odoo.define('@web/views/fields/properties/property_value',['@odoo/owl','@web/core/autocomplete/autocomplete','@web/core/checkbox/checkbox','@web/core/datetime/datetime_input','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/tags_list/tags_list','@web/core/utils/hooks','@web/views/fields/formatters','@web/core/utils/numbers','@web/views/fields/many2one/many2one_field','@web/views/fields/parsers','@web/views/fields/relational_utils','@web/views/fields/properties/property_tags'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{CheckBox}=require("@web/core/checkbox/checkbox");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{deserializeDate,deserializeDateTime,formatDate,formatDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{TagsList}=require("@web/core/tags_list/tags_list");const{useService}=require("@web/core/utils/hooks");const{formatInteger,formatMany2one}=require("@web/views/fields/formatters");const{formatFloat}=require("@web/core/utils/numbers");const{m2oTupleFromData}=require("@web/views/fields/many2one/many2one_field");const{parseFloat,parseInteger}=require("@web/views/fields/parsers");const{Many2XAutocomplete,useOpenMany2XRecord}=require("@web/views/fields/relational_utils");const{PropertyTags}=require("@web/views/fields/properties/property_tags");const PropertyValue=__exports.PropertyValue=class PropertyValue extends Component{setup(){this.orm=useService("orm");this.action=useService("action");this.openMany2X=useOpenMany2XRecord({resModel:this.props.model,activeActions:{create:false,createEdit:false,write:true,},isToMany:false,onRecordSaved:async(record)=>{if(!record){return;}
await record.load();const recordData=m2oTupleFromData(record.data);await this.onValueChange([{id:recordData[0],name:recordData[1]}]);},fieldString:this.props.string,});}
get propertyValue(){const value=this.props.value;if(this.props.type==="float"){return value;}else if(this.props.type==="datetime"){const datetimeValue=typeof value==="string"?deserializeDateTime(value):value;return datetimeValue&&!datetimeValue.invalid?datetimeValue:false;}else if(this.props.type==="date"){const dateValue=typeof value==="string"?deserializeDate(value):value;return dateValue&&!dateValue.invalid?dateValue:false;}else if(this.props.type==="boolean"){return!!value;}else if(this.props.type==="selection"){const options=this.props.selection||[];const option=options.find((option)=>option[0]===value);return option&&option.length===2&&option[0]?option[0]:"";}else if(this.props.type==="many2one"){return!value||value.length!==2||!value[0]?false:value;}else if(this.props.type==="many2many"){if(!value||!value.length){return[];}
return value.map((many2manyValue)=>{const hasAccess=many2manyValue[1]!==null;return{id:many2manyValue[0],comodel:this.props.comodel,text:hasAccess?many2manyValue[1]:_t("No Access"),onClick:hasAccess&&this.clickableRelational&&(async()=>await this._openRecord(this.props.comodel,many2manyValue[0])),onDelete:!this.props.readonly&&hasAccess&&(()=>this.onMany2manyDelete(many2manyValue[0])),colorIndex:0,img:this.showAvatar&&hasAccess?`/web/image/${this.props.comodel}/${many2manyValue[0]}/avatar_128`:null,};});}else if(this.props.type==="tags"){return value||[];}
return value;}
get propertyDomain(){if(!this.props.domain||!this.props.domain.length){return[];}
let domain=new Domain(this.props.domain);if(this.props.type==="many2many"&&this.props.value){domain=Domain.and([domain,[["id","not in",this.props.value.map((rec)=>rec[0])]],]);}
return domain.toList();}
get displayValue(){const value=this.propertyValue;if(this.props.type==="many2one"&&value&&value.length===2){return formatMany2one(value);}else if(this.props.type==="integer"){return formatInteger(value||0);}else if(this.props.type==="float"){return formatFloat(value||0);}else if(!value){return false;}else if(this.props.type==="datetime"&&value){return formatDateTime(value);}else if(this.props.type==="date"&&value){return formatDate(value);}else if(this.props.type==="selection"){return this.props.selection.find((option)=>option[0]===value)[1];}
return value.toString();}
get clickableRelational(){return!this.env.config||this.env.config.viewType!=="kanban";}
get showAvatar(){return(["many2one","many2many"].includes(this.props.type)&&["res.users","res.partner"].includes(this.props.comodel));}
async onValueChange(newValue){if(this.props.type==="datetime"){newValue=newValue&&serializeDateTime(newValue);}else if(this.props.type==="date"){newValue=newValue&&serializeDate(newValue);}else if(this.props.type==="integer"){try{newValue=parseInteger(newValue)||0;}catch{newValue=0;}}else if(this.props.type==="float"){try{newValue=parseFloat(newValue)||0;}catch{newValue=0;}}else if(["many2one","many2many"].includes(this.props.type)){newValue=newValue&&newValue.length&&newValue[0].id?[newValue[0].id,newValue[0].name]:false;if(newValue&&newValue[0]&&newValue[1]===undefined){newValue=await this._nameGet(newValue[0]);}
if(this.props.type==="many2many"&&newValue){const currentValue=this.props.value||[];const recordId=newValue[0];const exists=currentValue.find((rec)=>rec[0]===recordId);if(exists){return;}
newValue=[...currentValue,newValue];}}
this.props.onChange(newValue);}
async onMany2oneClick(event){if(this.props.readonly){event.stopPropagation();await this._openRecord(this.props.comodel,this.propertyValue[0]);}}
onExternalLinkClick(){return this.openMany2X({resId:this.propertyValue[0],forceModel:this.props.comodel,context:this.context,});}
onMany2manyDelete(many2manyId){const currentValue=JSON.parse(JSON.stringify(this.props.value||[]));const newValue=currentValue.filter((value)=>value[0]!==many2manyId);this.props.onChange(newValue);}
async onQuickCreate(name,params={}){const result=await this.orm.call(this.props.comodel,"name_create",[name],{context:this.props.context,});this.onValueChange([{id:result[0],name:result[1]}]);}
async _openRecord(recordModel,recordId){const action=await this.orm.call(recordModel,"get_formview_action",[[recordId]],{context:this.props.context,});this.action.doAction(action);}
async _nameGet(recordId){const result=await this.orm.read(this.props.comodel,[recordId],["display_name"],{context:this.props.context,});return[result[0].id,result[0].display_name];}}
PropertyValue.template="web.PropertyValue";PropertyValue.components={Dropdown,DropdownItem,CheckBox,DateTimeInput,Many2XAutocomplete,TagsList,AutoComplete,PropertyTags,};PropertyValue.props={id:{type:String,optional:true},type:{type:String,optional:true},comodel:{type:String,optional:true},domain:{type:String,optional:true},string:{type:String,optional:true},value:{optional:true},context:{type:Object},readonly:{type:Boolean,optional:true},canChangeDefinition:{type:Boolean,optional:true},checkDefinitionWriteAccess:{type:Function,optional:true},selection:{type:Array,optional:true},tags:{type:Array,optional:true},onChange:{type:Function,optional:true},onTagsChange:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/views/fields/radio/radio_field.js */
odoo.define('@web/views/fields/radio/radio_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");let nextId=0;const RadioField=__exports.RadioField=class RadioField extends Component{static template="web.RadioField";static props={...standardFieldProps,orientation:{type:String,optional:true},label:{type:String,optional:true},domain:{type:Array,optional:true},};static defaultProps={orientation:"vertical",};setup(){this.id=`radio_field_${nextId++}`;this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData(async(orm,props)=>{const{relation}=props.record.fields[props.name];const kwargs={specification:{display_name:1},domain:props.domain,};const{records}=await orm.call(relation,"web_search_read",[],kwargs);return records.map((record)=>[record.id,record.display_name]);});}}
get items(){switch(this.type){case"selection":return this.props.record.fields[this.props.name].selection;case"many2one":{return this.specialData.data;}
default:return[];}}
get value(){switch(this.type){case"selection":return this.props.record.data[this.props.name];case"many2one":return Array.isArray(this.props.record.data[this.props.name])?this.props.record.data[this.props.name][0]:this.props.record.data[this.props.name];default:return null;}}
onChange(value){switch(this.type){case"selection":this.props.record.update({[this.props.name]:value[0]});break;case"many2one":this.props.record.update({[this.props.name]:value});break;}}}
const radioField=__exports.radioField={component:RadioField,displayName:_t("Radio"),supportedOptions:[{label:_t("Display horizontally"),name:"horizontal",type:"boolean",},],supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps:({options,string},dynamicInfo)=>({orientation:options.horizontal?"horizontal":"vertical",label:string,domain:dynamicInfo.domain(),}),};registry.category("fields").add("radio",radioField);return __exports;});;

/* /web/static/src/views/fields/reference/reference_field.js */
odoo.define('@web/views/fields/reference/reference_field',['@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils','@web/views/fields/many2one/many2one_field','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useRecordObserver}=require("@web/model/relational_model/utils");const{many2OneField,Many2OneField}=require("@web/views/fields/many2one/many2one_field");const{Component,useState}=require("@odoo/owl");const ReferenceField=__exports.ReferenceField=class ReferenceField extends Component{static template="web.ReferenceField";static components={Many2OneField,};static props={...Many2OneField.props,hideModel:{type:Boolean,optional:true},modelField:{type:String,optional:true},};static defaultProps={...Many2OneField.defaultProps,};setup(){this.state=useState({formattedCharValue:undefined,modelName:undefined,currentRelation:undefined,});if(this._isCharField(this.props)){let currentValue=undefined;useRecordObserver(async(record)=>{if(currentValue!==record.data[this.props.name]){this.state.formattedCharValue=await this._fetchReferenceCharData(this.props);currentValue=record.data[this.props.name];}});}else if(this.props.modelField){useRecordObserver(async(record)=>{if(this.currentModelId!==record.data[this.props.modelField]?.[0]){this.state.modelName=await this._fetchModelTechnicalName(this.props);if(this.currentModelId!==undefined){record.update({[this.props.name]:false});}
this.currentModelId=record.data[this.props.modelField]?.[0];}});}}
get m2oProps(){const value=this.getValue();const p={...this.props,relation:this.getRelation(),value:value&&[value.resId,value.displayName],update:this.updateM2O.bind(this),};delete p.hideModel;delete p.modelField;return p;}
get selection(){if(!this._isCharField(this.props)&&!this.hideModelSelector){return this.props.record.fields[this.props.name].selection;}
return[];}
get relation(){return this.getRelation();}
get hideModelSelector(){return this.props.hideModel||this.props.modelField;}
getRelation(){const modelName=this.getModelName();if(modelName){return modelName;}
const value=this.getValue();if(value&&value.resModel){return value.resModel;}else{return this.state.currentRelation;}}
getValue(){if(this._isCharField(this.props)){return this.state.formattedCharValue;}else{return this.props.record.data[this.props.name];}}
getModelName(){return this.hideModelSelector&&this.state.modelName;}
updateModel(value){this.state.currentRelation=value;this.props.record.update({[this.props.name]:false});}
updateM2O(data){const value=data[this.props.name];const resModel=this.state.currentRelation||this.getRelation();this.props.record.update({[this.props.name]:value&&{resModel,resId:value[0],displayName:value[1],},});}
_isCharField(props){return props.record.fields[props.name].type==="char";}
async _fetchReferenceCharData(props){const recordData=props.record.data[props.name];if(!recordData){return false;}
const[resModel,_resId]=recordData.split(",");const resId=parseInt(_resId,10);if(resModel&&resId){const{specialDataCaches,orm}=props.record.model;const key=`__reference__name_get-${recordData}`;if(!specialDataCaches[key]){specialDataCaches[key]=orm.read(resModel,[resId],["display_name"]);}
const result=await specialDataCaches[key];return{resId,resModel,displayName:result[0].display_name,};}
return false;}
_assertMany2OneToIrModel(props){const field=props.modelField&&props.record.fields[props.modelField];if(field&&(field.type!=="many2one"||field.relation!=="ir.model")){throw new Error(`The model_field (${props.modelField}) of the reference field ${props.name} must be a many2one('ir.model').`);}}
async _fetchModelTechnicalName(props){this._assertMany2OneToIrModel(props);const record=props.record;const modelId=record.data[props.modelField]?.[0];if(!modelId){return false;}
const{specialDataCaches,orm}=props.record.model;const key=`__reference__ir_model-${modelId}`;if(!specialDataCaches[key]){specialDataCaches[key]=orm.read("ir.model",[modelId],["model"]);}
const result=await specialDataCaches[key];return result[0].model;}}
const referenceField=__exports.referenceField={component:ReferenceField,displayName:_t("Reference"),supportedOptions:[{label:_t("Hide model"),name:"hide_model",type:"boolean",},{label:_t("Model field"),name:"model_field",type:"field",availableTypes:["many2one"],},],supportedTypes:["reference","char"],extractProps({options}){const props=many2OneField.extractProps(...arguments);props.hideModel=!!options.hide_model;props.modelField=options.model_field;return props;},};registry.category("fields").add("reference",referenceField);return __exports;});;

/* /web/static/src/views/fields/relational_utils.js */
odoo.define('@web/views/fields/relational_utils',['@web/core/l10n/translation','@web/core/autocomplete/autocomplete','@web/core/context','@web/core/dialog/dialog','@web/core/domain','@web/core/network/rpc_service','@web/core/utils/cache','@web/core/utils/hooks','@web/core/utils/xml','@web/views/form/form_arch_parser','@web/views/form/form_controller','@web/views/form/form_renderer','@web/model/relational_model/utils','@web/views/utils','@web/views/view_button/view_button','@web/views/view_button/view_button_hook','@web/views/view_dialogs/form_view_dialog','@web/views/view_dialogs/select_create_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{makeContext}=require("@web/core/context");const{Dialog}=require("@web/core/dialog/dialog");const{Domain}=require("@web/core/domain");const{RPCError}=require("@web/core/network/rpc_service");const{Cache}=require("@web/core/utils/cache");const{useBus,useChildRef,useForwardRefToParent,useOwnedDialogs,useService,}=require("@web/core/utils/hooks");const{createElement,parseXML}=require("@web/core/utils/xml");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{loadSubViews}=require("@web/views/form/form_controller");const{FormRenderer}=require("@web/views/form/form_renderer");const{extractFieldsFromArchInfo,useRecordObserver}=require("@web/model/relational_model/utils");const{computeViewClassName,isNull}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");const{Component,onWillUpdateProps,useComponent,useEffect,useEnv,useState,useSubEnv,}=require("@odoo/owl");__exports.useSelectCreate=useSelectCreate;function useSelectCreate({resModel,activeActions,onSelected,onCreateEdit,onUnselect}){const addDialog=useOwnedDialogs();function selectCreate({domain,context,filters,title}){addDialog(SelectCreateDialog,{title:title||_t("Select records"),noCreate:!activeActions.create,multiSelect:"link"in activeActions?activeActions.link:false,resModel,context,domain,onSelected,onCreateEdit:()=>onCreateEdit({context}),dynamicFilters:filters,onUnselect,});}
return selectCreate;}
const STANDARD_ACTIVE_ACTIONS=["create","createEdit","delete","link","unlink","write"];__exports.useActiveActions=useActiveActions;function useActiveActions({fieldType,subViewActiveActions={},crudOptions={},getEvalParams=()=>({}),}){const compute=({evalContext={},readonly=true})=>{const result={type:fieldType,onDelete:null};const evalAction=(actionName)=>evals[actionName](evalContext);result.create=!readonly&&evalAction("create");result.createEdit=!readonly&&result.create&&crudOptions.createEdit;result.edit=crudOptions.edit;result.delete=!readonly&&evalAction("delete");if(isMany2Many){result.link=!readonly&&evalAction("link");result.unlink=!readonly&&evalAction("unlink");result.write=evalAction("write");}
if(result.unlink||(!isMany2Many&&result.delete)){result.onDelete=crudOptions.onDelete;}
return result;};const props=useComponent().props;const isMany2Many=fieldType==="many2many";const evals={};for(const actionName of STANDARD_ACTIVE_ACTIONS){let evalFn=()=>actionName!=="write";if(!isNull(crudOptions[actionName])){const action=crudOptions[actionName];evalFn=(evalContext)=>Boolean(action&&new Domain(action).contains(evalContext));}
if(actionName in subViewActiveActions){const viewActiveAction=subViewActiveActions[actionName];evals[actionName]=(evalContext)=>viewActiveAction&&evalFn(evalContext);}else{evals[actionName]=evalFn;}}
const activeActions=compute(getEvalParams(props));onWillUpdateProps((nextProps)=>{Object.assign(activeActions,compute(getEvalParams(nextProps)));});return activeActions;}
__exports.useSpecialData=useSpecialData;function useSpecialData(loadFn){const component=useComponent();const record=component.props.record;const key=`${record.resModel}-${component.props.name}`;const{specialDataCaches}=record.model;const orm=component.env.services.orm;const ormWithCache=Object.create(orm);if(!specialDataCaches[key]){specialDataCaches[key]=new Cache((...args)=>orm.call(...args),(...path)=>JSON.stringify(path));}
ormWithCache.call=(...args)=>specialDataCaches[key].read(...args);const result=useState({data:{}});useRecordObserver(async(record,props)=>{result.data=await loadFn(ormWithCache,{...props,record});});onWillUpdateProps(async(props)=>{if(props.record.id===component.props.record.id){result.data=await loadFn(ormWithCache,props);}});return result;}
const Many2XAutocomplete=__exports.Many2XAutocomplete=class Many2XAutocomplete extends Component{setup(){this.orm=useService("orm");this.autoCompleteContainer=useForwardRefToParent("autocomplete_container");const{activeActions,resModel,update,isToMany,fieldString}=this.props;this.openMany2X=useOpenMany2XRecord({resModel,activeActions,isToMany,onRecordSaved:(record)=>{return update([{...record.data,id:record.resId}]);},onRecordDiscarded:()=>{if(!isToMany){this.props.update(false);}},fieldString,onClose:()=>{const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");if(this.props.value!==autoCompleteInput.value){autoCompleteInput.value="";}
autoCompleteInput.focus();},});this.selectCreate=useSelectCreate({resModel,activeActions,onSelected:(resId)=>{const resIds=Array.isArray(resId)?resId:[resId];const values=resIds.map((id)=>({id}));return update(values);},onCreateEdit:({context})=>this.openMany2X({context}),onUnselect:isToMany?undefined:()=>update(),});}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
get activeActions(){return this.props.activeActions||{};}
getCreationContext(value){return makeContext([this.props.context,{[`default_${this.props.nameCreateField}`]:value},]);}
onInput({inputValue}){if(!this.props.value||this.props.value!==inputValue){this.props.setInputFloats(true);}}
onCancel(){this.props.setInputFloats(false);}
onSelect(option,params={}){if(option.action){return option.action(params);}
const record={id:option.value,display_name:option.displayName,};this.props.update([record],params);}
search(name){return this.orm.call(this.props.resModel,"name_search",[],{name:name,operator:"ilike",args:this.props.getDomain(),limit:this.props.searchLimit+1,context:this.props.context,});}
mapRecordToOption(result){return{value:result[0],label:result[1]?result[1].split("\n")[0]:_t("Unnamed"),displayName:result[1],};}
async loadOptionsSource(request){if(this.lastProm){this.lastProm.abort(false);}
this.lastProm=this.search(request);const records=await this.lastProm;const options=records.map((result)=>this.mapRecordToOption(result));if(this.props.quickCreate&&request.length){options.push({label:_t('Create "%s"',request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create",action:async(params)=>{try{await this.props.quickCreate(request,params);}catch(e){if(e instanceof RPCError&&e.exceptionName==="odoo.exceptions.ValidationError"){const context=this.getCreationContext(request);return this.openMany2X({context});}
throw e;}},});}
if(!this.props.noSearchMore&&records.length>0){options.push({label:_t("Search More..."),action:this.onSearchMore.bind(this,request),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_search_more",});}
const canCreateEdit="createEdit"in this.activeActions?this.activeActions.createEdit:this.activeActions.create;if(!request.length&&!this.props.value&&(this.props.quickCreate||canCreateEdit)){options.push({label:_t("Start typing..."),classList:"o_m2o_start_typing",unselectable:true,});}
if(request.length&&canCreateEdit){const context=this.getCreationContext(request);options.push({label:_t("Create and edit..."),classList:"o_m2o_dropdown_option o_m2o_dropdown_option_create_edit",action:()=>this.openMany2X({context}),});}
if(!records.length&&!this.activeActions.createEdit&&!this.props.quickCreate){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async onBarcodeSearch(){const autoCompleteInput=this.autoCompleteContainer.el.querySelector("input");return this.onSearchMore(autoCompleteInput.value);}
async onSearchMore(request){const{resModel,getDomain,context,fieldString}=this.props;const domain=getDomain();let dynamicFilters=[];if(request.length){const nameGets=await this.orm.call(resModel,"name_search",[],{name:request,args:domain,operator:"ilike",limit:this.props.searchMoreLimit,context,});dynamicFilters=[{description:_t("Quick search: %s",request),domain:[["id","in",nameGets.map((nameGet)=>nameGet[0])]],},];}
const title=_t("Search: %s",fieldString);this.selectCreate({domain,context,filters:dynamicFilters,title,});}
onChange({inputValue}){if(!inputValue.length){this.props.update(false);}}}
Many2XAutocomplete.template="web.Many2XAutocomplete";Many2XAutocomplete.components={AutoComplete};Many2XAutocomplete.props={value:{type:String,optional:true},activeActions:Object,context:{type:Object,optional:true},nameCreateField:{type:String,optional:true},setInputFloats:{type:Function,optional:true},update:Function,resModel:String,getDomain:Function,searchLimit:{type:Number,optional:true},quickCreate:{type:[Function,{value:null}],optional:true},noSearchMore:{type:Boolean,optional:true},searchMoreLimit:{type:Number,optional:true},fieldString:String,id:{type:String,optional:true},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},isToMany:{type:Boolean,optional:true},autocomplete_container:{type:Function,optional:true},dropdown:{type:Boolean,optional:true},autofocus:{type:Boolean,optional:true},};Many2XAutocomplete.defaultProps={searchLimit:7,searchMoreLimit:320,nameCreateField:"name",value:"",setInputFloats:()=>{},quickCreate:null,context:{},dropdown:true,};const AvatarMany2XAutocomplete=__exports.AvatarMany2XAutocomplete=class AvatarMany2XAutocomplete extends Many2XAutocomplete{mapRecordToOption(result){return{...super.mapRecordToOption(result),resModel:this.props.resModel,};}
get optionsSource(){return{...super.optionsSource,optionTemplate:"web.AvatarMany2XAutocomplete",};}}
__exports.useOpenMany2XRecord=useOpenMany2XRecord;function useOpenMany2XRecord({resModel,onRecordSaved,onRecordDiscarded,fieldString,activeActions,isToMany,onClose=(isNew)=>{},}){const addDialog=useOwnedDialogs();const orm=useService("orm");return async function openDialog({resId=false,forceModel=null,title,context},immediate=false){const model=forceModel||resModel;let viewId;if(resId!==false){viewId=await orm.call(model,"get_formview_id",[[resId]],{context,});}
let resolve=()=>{};if(!title){title=resId?_t("Open: %s",fieldString):_t("Create %s",fieldString);}
const{create:canCreate,write:canWrite}=activeActions;const mode=(resId?canWrite:canCreate)?"edit":"readonly";addDialog(FormViewDialog,{preventCreate:!canCreate,preventEdit:!canWrite,title,context,mode,resId,resModel:model,viewId,onRecordSaved,onRecordDiscarded,isToMany,},{onClose:()=>{resolve();const isNew=!resId;onClose(isNew);},});if(!immediate){return new Promise((_resolve)=>{resolve=_resolve;});}};}
const X2ManyFieldDialog=__exports.X2ManyFieldDialog=class X2ManyFieldDialog extends Component{setup(){this.archInfo=this.props.archInfo;this.record=this.props.record;this.title=this.props.title;this.contentClass=computeViewClassName("form",this.archInfo.xmlDoc);useSubEnv({config:this.props.config});this.env.dialogData.dismiss=()=>this.discard();useBus(this.record.model.bus,"update",()=>this.render(true));this.modalRef=useChildRef();const reload=()=>this.record.load();useViewButtons(this.props.record.model,this.modalRef,{reload,beforeExecuteAction:this.beforeExecuteActionButton.bind(this),});this.canCreate=!this.record.resId;if(this.archInfo.xmlDoc.querySelector("footer:not(field footer)")){this.archInfo={...this.archInfo,xmlDoc:this.archInfo.xmlDoc.cloneNode(true)};this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...this.archInfo.xmlDoc.querySelectorAll("footer:not(field footer)"));this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const{autofocusFieldId,disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{let elementToFocus;if(isInEdition){elementToFocus=(autofocusFieldId&&this.modalRef.el.querySelector(`#${autofocusFieldId}`))||this.modalRef.el.querySelector(".o_field_widget input");}else{elementToFocus=this.modalRef.el.querySelector("button.btn-primary");}
if(elementToFocus){elementToFocus.focus();}else{this.modalRef.el.focus();}},()=>[this.record.isInEdition]);}}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"){return this.record.save();}}
async discard(){if(this.record.isInEdition){await this.record.discard();}
this.props.close();}
save({saveAndNew}){return executeButtonCallback(this.modalRef.el,async()=>{if(await this.record.checkValidity({displayNotification:true})){await this.props.save(this.record);if(saveAndNew){await this.record.switchMode("readonly");this.record=await this.props.addNew();}}else{return false;}
if(!saveAndNew){this.props.close();}
return true;});}
async remove(){await this.props.delete();this.props.close();}
async saveAndNew(){const saved=await this.save({saveAndNew:true});if(saved){if(this.title){this.title=this.title.replace(_t("Open:"),_t("New:"));}
this.render(true);}}}
X2ManyFieldDialog.components={Dialog,FormRenderer,ViewButton};X2ManyFieldDialog.props={archInfo:Object,close:Function,record:Object,addNew:Function,save:Function,title:String,delete:{optional:true},deleteButtonLabel:{optional:true},config:Object,};X2ManyFieldDialog.template="web.X2ManyFieldDialog";async function getFormViewInfo({list,context,activeField,viewService,userService,env}){let formArchInfo=activeField.views.form;let fields=activeField.fields;const comodel=list.resModel;if(!formArchInfo){const{fields:formFields,relatedModels,views,}=await viewService.loadViews({context:makeContext([list.context,context]),resModel:comodel,views:[[false,"form"]],});const xmlDoc=parseXML(views.form.arch);formArchInfo=new FormArchParser().parse(xmlDoc,relatedModels,comodel);fields={...list.fields,...formFields};}
await loadSubViews(formArchInfo.fieldNodes,fields,{},comodel,viewService,userService,env.isSmall);return{archInfo:formArchInfo,fields};}
__exports.useAddInlineRecord=useAddInlineRecord;function useAddInlineRecord({addNew}){let creatingRecord=false;async function addInlineRecord({context,editable}){if(!creatingRecord){creatingRecord=true;try{await addNew({context,mode:"edit",position:editable});}finally{creatingRecord=false;}}}
return addInlineRecord;}
__exports.useOpenX2ManyRecord=useOpenX2ManyRecord;function useOpenX2ManyRecord({resModel,activeField,activeActions,getList,updateRecord,saveRecord,isMany2Many,}){const viewService=useService("view");const userService=useService("user");const env=useEnv();const component=useComponent();const addDialog=useOwnedDialogs();const viewMode=activeField.viewMode;async function openRecord({record,mode,context,title,onClose}){if(!title){title=record?_t("Open: %s",activeField.string):_t("Create %s",activeField.string);}
const list=getList();const{archInfo,fields:_fields}=await getFormViewInfo({list,context,activeField,viewService,userService,env,});if(!component.props.record.isInEdition){archInfo.activeActions.edit=false;}
const{activeFields,fields}=extractFieldsFromArchInfo(archInfo,_fields);let deleteRecord;let deleteButtonLabel=undefined;const isDuplicate=!!record;const params={activeFields,fields,mode};if(record){const{delete:canDelete,onDelete}=activeActions;deleteRecord=viewMode==="kanban"&&canDelete?()=>onDelete(record):null;deleteButtonLabel=activeActions.type==="one2many"?_t("Delete"):_t("Remove");}else{params.context=makeContext([list.context,context]);params.withoutParent=isMany2Many;}
record=await list.extendRecord(params,record);const _onClose=()=>{list.editedRecord?.switchMode("readonly");onClose?.();};addDialog(X2ManyFieldDialog,{config:env.config,archInfo,record,addNew:()=>{return getList().extendRecord(params);},save:(rec)=>{if(isDuplicate&&rec.id===record.id){return updateRecord(rec);}else{return saveRecord(rec);}},title,delete:deleteRecord,deleteButtonLabel:deleteButtonLabel,},{onClose:_onClose});}
let recordIsOpen=false;return(params)=>{if(recordIsOpen){return;}
recordIsOpen=true;const onClose=params.onClose;params={...params,onClose:(...args)=>{recordIsOpen=false;if(onClose){return onClose(...args);}},};try{return openRecord(params);}catch(e){recordIsOpen=false;throw e;}};}
__exports.useX2ManyCrud=useX2ManyCrud;function useX2ManyCrud(getList,isMany2Many){let saveRecord;if(isMany2Many){saveRecord=async(object)=>{const list=getList();if(Array.isArray(object)){return list.addAndRemove({add:object});}else{if(!object.resId||object.isDirty){await object.save();}
return list.linkTo(object.resId);}};}else{saveRecord=async(record)=>{return getList().validateExtendedRecord(record);};}
const updateRecord=async(record)=>{if(isMany2Many){await record.save();}
return getList().validateExtendedRecord(record);};const removeRecord=(record)=>{const list=getList();if(isMany2Many){return list.forget(record);}
return list.delete(record);};return{saveRecord,updateRecord,removeRecord,};}
return __exports;});;

/* /web/static/src/views/fields/remaining_days/remaining_days_field.js */
odoo.define('@web/views/fields/remaining_days/remaining_days_field',['@odoo/owl','@web/core/l10n/dates','@web/core/l10n/localization','@web/core/l10n/translation','@web/core/registry','@web/views/fields/datetime/datetime_field','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{formatDate,formatDateTime}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{DateTimeField}=require("@web/views/fields/datetime/datetime_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{DateTime}=luxon;const RemainingDaysField=__exports.RemainingDaysField=class RemainingDaysField extends Component{static components={DateTimeField};static props=standardFieldProps;static template="web.RemainingDaysField";get diffDays(){const{record,name}=this.props;const value=record.data[name];if(!value){return null;}
const today=DateTime.local().startOf("day");const diff=value.startOf("day").diff(today,"days");return Math.floor(diff.days);}
get diffString(){if(this.diffDays===null){return"";}
switch(this.diffDays){case-1:return _t("Yesterday");case 0:return _t("Today");case 1:return _t("Tomorrow");}
if(Math.abs(this.diffDays)>99){return this.formattedValue;}
if(this.diffDays<0){return _t("%s days ago",-this.diffDays);}
return _t("In %s days",this.diffDays);}
get formattedValue(){const{record,name}=this.props;return record.fields[name].type==="datetime"?formatDateTime(record.data[name],{format:localization.dateFormat}):formatDate(record.data[name]);}}
const remainingDaysField=__exports.remainingDaysField={component:RemainingDaysField,displayName:_t("Remaining Days"),supportedTypes:["date","datetime"],};registry.category("fields").add("remaining_days",remainingDaysField);return __exports;});;

/* /web/static/src/views/fields/selection/filterable_selection_field.js */
odoo.define('@web/views/fields/selection/filterable_selection_field',['@web/core/registry','@web/views/fields/selection/selection_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SelectionField,selectionField}=require("@web/views/fields/selection/selection_field");const FilterableSelectionField=__exports.FilterableSelectionField=class FilterableSelectionField extends SelectionField{get options(){let options=super.options;if(this.props.whitelisted_values){options=options.filter((option)=>{return option[0]===this.props.record.data[this.props.name]||this.props.whitelisted_values.includes(option[0])});}else if(this.props.blacklisted_values){options=options.filter((option)=>{return option[0]===this.props.record.data[this.props.name]||!this.props.blacklisted_values.includes(option[0]);});}
return options;}};FilterableSelectionField.props={...SelectionField.props,whitelisted_values:{type:Array,optional:true},blacklisted_values:{type:Array,optional:true},};const filterableSelectionField=__exports.filterableSelectionField={...selectionField,component:FilterableSelectionField,supportedOptions:[{label:"Whitelisted Values",name:"whitelisted_values",type:"string",},{label:"Blacklisted Values",name:"blacklisted_values",type:"string",}],extractProps({options}){const props=selectionField.extractProps(...arguments);props.whitelisted_values=options.whitelisted_values;props.blacklisted_values=options.blacklisted_values;return props;},};registry.category("fields").add("filterable_selection",filterableSelectionField);return __exports;});;

/* /web/static/src/views/fields/selection/selection_field.js */
odoo.define('@web/views/fields/selection/selection_field',['@odoo/owl','@web/core/l10n/translation','@web/core/registry','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const SelectionField=__exports.SelectionField=class SelectionField extends Component{static template="web.SelectionField";static props={...standardFieldProps,placeholder:{type:String,optional:true},required:{type:Boolean,optional:true},domain:{type:Array,optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={autosave:false,};setup(){this.type=this.props.record.fields[this.props.name].type;if(this.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const{relation}=props.record.fields[props.name];return orm.call(relation,"name_search",["",props.domain]);});}}
get options(){switch(this.type){case"many2one":return[...this.specialData.data];case"selection":return this.props.record.fields[this.props.name].selection.filter((option)=>option[0]!==false&&option[1]!=="");default:return[];}}
get string(){switch(this.type){case"many2one":return this.props.record.data[this.props.name]?this.props.record.data[this.props.name][1]:"";case"selection":return this.props.record.data[this.props.name]!==false?this.options.find((o)=>o[0]===this.props.record.data[this.props.name])[1]:"";default:return"";}}
get value(){const rawValue=this.props.record.data[this.props.name];return this.type==="many2one"&&rawValue?rawValue[0]:rawValue;}
stringify(value){return JSON.stringify(value);}
onChange(ev){const value=JSON.parse(ev.target.value);switch(this.type){case"many2one":if(value===false){this.props.record.update({[this.props.name]:false},{save:this.props.autosave});}else{this.props.record.update({[this.props.name]:this.options.find((option)=>option[0]===value),},{save:this.props.autosave});}
break;case"selection":this.props.record.update({[this.props.name]:value},{save:this.props.autosave});break;}}}
const selectionField=__exports.selectionField={component:SelectionField,displayName:_t("Selection"),supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>record.data[fieldName]===false,extractProps({attrs,viewType},dynamicInfo){const props={autosave:viewType==="kanban",placeholder:attrs.placeholder,required:dynamicInfo.required,domain:dynamicInfo.domain(),};if(viewType==="kanban"){props.readonly=dynamicInfo.readonly;}
return props;},};registry.category("fields").add("selection",selectionField);registry.category("fields").add("kanban.selection",selectionField);return __exports;});;

/* /web/static/src/views/fields/signature/signature_field.js */
odoo.define('@web/views/fields/signature/signature_field',['@web/core/l10n/translation','@web/core/registry','@web/core/signature/signature_dialog','@web/core/utils/hooks','@web/core/utils/urls','@web/core/utils/binary','@web/views/fields/image/image_field','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{isBinarySize}=require("@web/core/utils/binary");const{fileTypeMagicWordMap,imageCacheKey}=require("@web/views/fields/image/image_field");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component,useState}=require("@odoo/owl");const placeholder="/web/static/img/placeholder.png";const SignatureField=__exports.SignatureField=class SignatureField extends Component{static template="web.SignatureField";static props={...standardFieldProps,defaultFont:{type:String},fullName:{type:String,optional:true},height:{type:Number,optional:true},previewImage:{type:String,optional:true},width:{type:Number,optional:true},};setup(){this.displaySignatureRatio=3;this.dialogService=useService("dialog");this.state=useState({isValid:true,});}
get rawCacheKey(){return this.props.record.data.write_date;}
get getUrl(){const{name,previewImage,record}=this.props;if(this.state.isValid&&this.value){if(isBinarySize(this.value)){return url("/web/image",{model:record.resModel,id:record.resId,field:previewImage||name,unique:imageCacheKey(this.rawCacheKey),});}else{const magic=fileTypeMagicWordMap[this.value[0]]||"png";return`data:image/${magic};base64,${this.props.record.data[this.props.name]}`;}}
return placeholder;}
get sizeStyle(){let{width,height}=this.props;if(!this.value){if(width&&height){width=Math.min(width,this.displaySignatureRatio*height);height=width/this.displaySignatureRatio;}else if(width){height=width/this.displaySignatureRatio;}else if(height){width=height*this.displaySignatureRatio;}}
let style="";if(width){style+=`width:${width}px; max-width:${width}px;`;}
if(height){style+=`height:${height}px; max-height:${height}px;`;}
return style;}
get value(){return this.props.record.data[this.props.name];}
onClickSignature(){if(!this.props.readonly){const nameAndSignatureProps={displaySignatureRatio:3,signatureType:"signature",noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(signature)=>this.uploadSignature(signature),};this.dialogService.add(SignatureDialog,dialogProps);}}
onLoadFailed(){this.state.isValid=false;this.notification.add(_t("Could not display the selected image"),{type:"danger",});}
uploadSignature({signatureImage}){return this.props.record.update({[this.props.name]:signatureImage[1]||false});}}
const signatureField=__exports.signatureField={component:SignatureField,fieldDependencies:[{name:"write_date",type:"datetime"}],supportedOptions:[{label:_t("Prefill with"),name:"full_name",type:"field",availableTypes:["char","many2one"],help:_t("The selected field will be used to pre-fill the signature"),},{label:_t("Default font"),name:"default_font",type:"string",},{label:_t("Size"),name:"size",type:"selection",choices:[{label:_t("Small"),value:"[0,90]"},{label:_t("Medium"),value:"[0,180]"},{label:_t("Large"),value:"[0,270]"},],},{label:_t("Preview image field"),name:"preview_image",type:"field",availableTypes:["binary"],},],extractProps:({attrs,options})=>({defaultFont:options.default_font||"",fullName:options.full_name,height:options.size?options.size[1]||undefined:attrs.height,previewImage:options.preview_image,width:options.size?options.size[0]||undefined:attrs.width,}),};registry.category("fields").add("signature",signatureField);return __exports;});;

/* /web/static/src/views/fields/standard_field_props.js */
odoo.define('@web/views/fields/standard_field_props',[],function(require){'use strict';let __exports={};const standardFieldProps=__exports.standardFieldProps={id:{type:String,optional:true},name:{type:String},readonly:{type:Boolean,optional:true},record:{type:Object},};return __exports;});;

/* /web/static/src/views/fields/stat_info/stat_info_field.js */
odoo.define('@web/views/fields/stat_info/stat_info_field',['@web/core/l10n/translation','@web/core/registry','@web/views/utils','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const formatters=registry.category("formatters");const StatInfoField=__exports.StatInfoField=class StatInfoField extends Component{static template="web.StatInfoField";static props={...standardFieldProps,labelField:{type:String,optional:true},noLabel:{type:Boolean,optional:true},digits:{type:Array,optional:true},string:{type:String,optional:true},};get digits(){const fieldDigits=this.props.record.fields[this.props.name].digits;return!this.props.digits&&Array.isArray(fieldDigits)?fieldDigits:this.props.digits;}
get formattedValue(){const formatter=formatters.get(this.props.record.fields[this.props.name].type);return formatter(this.props.record.data[this.props.name]||0,{digits:this.digits});}
get label(){return this.props.labelField?this.props.record.data[this.props.labelField]:this.props.string;}}
const statInfoField=__exports.statInfoField={component:StatInfoField,displayName:_t("Stat Info"),supportedOptions:[{label:_t("Label field"),name:"label_field",type:"field",availableTypes:["char"],},],supportedTypes:["float","integer","monetary"],isEmpty:()=>false,extractProps:({attrs,options,string})=>{let digits;if(attrs.digits){digits=JSON.parse(attrs.digits);}else if(options.digits){digits=options.digits;}
return{digits,labelField:options.label_field,noLabel:archParseBoolean(attrs.nolabel),string,};},};registry.category("fields").add("statinfo",statInfoField);return __exports;});;

/* /web/static/src/views/fields/state_selection/state_selection_field.js */
odoo.define('@web/views/fields/state_selection/state_selection_field',['@odoo/owl','@web/core/commands/command_hook','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{useCommand}=require("@web/core/commands/command_hook");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{formatSelection}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const StateSelectionField=__exports.StateSelectionField=class StateSelectionField extends Component{static template="web.StateSelectionField";static components={Dropdown,DropdownItem,};static props={...standardFieldProps,showLabel:{type:Boolean,optional:true},withCommand:{type:Boolean,optional:true},autosave:{type:Boolean,optional:true},};static defaultProps={showLabel:true,};setup(){this.colorPrefix="o_status_";this.colors={blocked:"red",done:"green",};if(this.props.withCommand){const hotkeys=["D","F","G"];for(const[index,[value,label]]of this.options.entries()){useCommand(_t("Set kanban state as %s",label),()=>{this.updateRecord(value);},{category:"smart_action",hotkey:hotkeys[index]&&"alt+"+hotkeys[index],isAvailable:()=>this.props.record.data[this.props.name]!==value,});}}}
get options(){return this.props.record.fields[this.props.name].selection.map(([state,label])=>{return[state,this.props.record.data[`legend_${state}`]||label];});}
get currentValue(){return this.props.record.data[this.props.name]||this.options[0][0];}
get label(){if(this.props.record.data[this.props.name]&&this.props.record.data[`legend_${this.props.record.data[this.props.name][0]}`]){return this.props.record.data[`legend_${this.props.record.data[this.props.name][0]}`];}
return formatSelection(this.currentValue,{selection:this.options});}
statusColor(value){return this.colors[value]?this.colorPrefix+this.colors[value]:"";}
async updateRecord(value){await this.props.record.update({[this.props.name]:value},{save:this.props.autosave});}}
const stateSelectionField=__exports.stateSelectionField={component:StateSelectionField,displayName:_t("Label Selection"),supportedOptions:[{label:_t("Autosave"),name:"autosave",type:"boolean",default:true,help:_t("If checked, the record will be saved immediately when the field is modified."),},{label:_t("Hide label"),name:"hide_label",type:"boolean",},],supportedTypes:["selection"],extractProps({options,viewType},dynamicInfo){return{showLabel:'hide_label'in options?!options.hide_label:false,withCommand:viewType==="form",readonly:dynamicInfo.readonly,autosave:"autosave"in options?!!options.autosave:true,};},};registry.category("fields").add("state_selection",stateSelectionField);return __exports;});;

/* /web/static/src/views/fields/statusbar/statusbar_field.js */
odoo.define('@web/views/fields/statusbar/statusbar_field',['@odoo/owl','@web/core/browser/browser','@web/core/commands/command_hook','@web/core/domain','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/registry','@web/core/utils/arrays','@web/core/utils/strings','@web/core/utils/timing','@web/views/fields/relational_utils','@web/views/fields/standard_field_props'],function(require){'use strict';let __exports={};const{Component,onWillRender,useEffect,useExternalListener,useRef}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{useCommand}=require("@web/core/commands/command_hook");const{Domain}=require("@web/core/domain");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{groupBy}=require("@web/core/utils/arrays");const{escape}=require("@web/core/utils/strings");const{throttleForAnimation}=require("@web/core/utils/timing");const{useSpecialData}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const hide=(...els)=>els.forEach((el)=>el.classList.add("d-none"));const show=(...els)=>els.forEach((el)=>el.classList.remove("d-none"));const StatusBarField=__exports.StatusBarField=class StatusBarField extends Component{static template="web.StatusBarField";static components={Dropdown,DropdownItem,};static props={...standardFieldProps,domain:{type:typeof Domain,optional:true},foldField:{type:String,optional:true},isDisabled:{type:Boolean,optional:true},visibleSelection:{type:Array,element:String,optional:true},withCommand:{type:Boolean,optional:true},};setup(){this.items={};this.beforeRef=useRef("before");this.rootRef=useRef("root");this.afterRef=useRef("after");this.dropdownRef=useRef("dropdown");let status="idle";const adjust=()=>{status="adjusting";this.adjustVisibleItems();this.render();browser.requestAnimationFrame(()=>(status="idle"));};useEffect(()=>status==="shouldAdjust"&&adjust(),()=>[status]);onWillRender(()=>{if(status!=="adjusting"){Object.assign(this.items,this.getSortedItems());status="shouldAdjust";}});useExternalListener(window,"resize",throttleForAnimation(adjust));if(this.field.type==="many2one"){this.specialData=useSpecialData((orm,props)=>{const{foldField,name:fieldName,record}=props;const{relation}=record.fields[fieldName];const fieldNames=["display_name"];if(foldField){fieldNames.push(foldField);}
const value=props.record.data[fieldName];let domain=props.domain;if(domain.length&&value){domain=Domain.or([[["id","=",value[0]]],domain]).toList(props.record.evalContext);}
return orm.searchRead(relation,domain,fieldNames);});}
if(this.props.withCommand){const moveToCommandName=_t("Move to %s...",escape(this.field.string));useCommand(moveToCommandName,()=>({placeholder:moveToCommandName,providers:[{provide:()=>this.getAllItems().map((item)=>({name:item.label,action:()=>this.selectItem(item),})),},],}),{category:"smart_action",hotkey:"alt+shift+x",isAvailable:()=>!this.props.isDisabled,});useCommand(_t("Move to next %s",this.field.string),()=>{const items=this.getAllItems();const nextIndex=items.findIndex((item)=>item.isSelected)+1;this.selectItem(items[nextIndex]);},{category:"smart_action",hotkey:"alt+x",isAvailable:()=>!this.props.isDisabled&&!this.getAllItems().at(-1).isSelected,});}}
get field(){return this.props.record.fields[this.props.name];}
adjustVisibleItems(){const itemEls=[...this.rootRef.el.querySelectorAll(".o_arrow_button:not(.dropdown-toggle)"),];const selectedIndex=itemEls.findIndex((el)=>el.classList.contains("o_arrow_button_current"));const itemsBefore=itemEls.slice(selectedIndex+2).reverse();const itemsAfter=itemEls.slice(0,Math.max(selectedIndex-1,0)).reverse();show(...itemEls);hide(this.dropdownRef.el,this.beforeRef.el);if(this.items.folded.length){show(this.afterRef.el);itemEls.forEach((el)=>el.classList.remove("o_first"));}else{hide(this.afterRef.el);itemEls[0]?.classList.add("o_first");}
this.items.before=[];this.items.after=[...this.items.folded];const itemsToAssign=this.getAllItems().filter((item)=>!item.isFolded);while(this.areItemsWrapping()){if(itemsBefore.length){show(this.beforeRef.el);hide(itemsBefore.shift());this.items.before.push(itemsToAssign.shift());}else if(itemsAfter.length){show(this.afterRef.el);hide(itemsAfter.pop());this.items.after.unshift(itemsToAssign.pop());}else{show(this.dropdownRef.el);hide(this.beforeRef.el,this.afterRef.el,...itemEls);break;}}}
areItemsWrapping(){const root=this.rootRef.el;const firstItem=root.querySelector(":scope > :not(.d-none)");if(!firstItem){return false;}
const{height:currentHeight}=root.getBoundingClientRect();const{height:targetHeight}=firstItem.getBoundingClientRect();return currentHeight>targetHeight;}
getAllItems(){const{foldField,name,record}=this.props;const currentValue=record.data[name];if(this.field.type==="many2one"){return this.specialData.data.map((option)=>({value:option.id,label:option.display_name,isFolded:option[foldField],isSelected:Boolean(currentValue&&option.id===currentValue[0]),}));}else{let{selection}=this.field;const{visibleSelection}=this.props;if(visibleSelection?.length){selection=selection.filter(([value])=>value===currentValue||visibleSelection.includes(value));}
return selection.map(([value,label])=>({value,label,isFolded:false,isSelected:value===currentValue,}));}}
getCurrentLabel(){return this.getAllItems().find((item)=>item.isSelected)?.label||_t("More");}
getDropdownItemClassNames(item){const classNames=[];if(item.isSelected){classNames.push("active");}
if(item.isSelected||this.props.isDisabled){classNames.push("disabled");}
return classNames.join(" ");}
getItemTooltip(item){if(item.isSelected){return _t("Current state");}
if(this.props.isDisabled){return _t("Not active state");}
return _t("Not active state, click to change it");}
getSortedItems(){const before=[];const after=[];const{true:inline=[],false:folded=[]}=groupBy(this.getAllItems(),(item)=>item.isSelected||!item.isFolded);inline.reverse();after.push(...folded);return{inline,before,after,folded};}
async selectItem(item){const{name,record}=this.props;const value=this.field.type==="many2one"?[item.value,item.label]:item.value;await record.update({[name]:value});await record.save();}
onDropdownItemSelected(ev){this.selectItem(ev.detail.payload);}}
const statusBarField=__exports.statusBarField={component:StatusBarField,displayName:_t("Status"),supportedOptions:[{label:_t("Clickable"),name:"clickable",type:"boolean",default:true,},{label:_t("Fold field"),name:"fold_field",type:"field",availableTypes:["boolean"],help:_t("Boolean field from the model used in the relation, which indicates whether the state is folded or not."),},],supportedTypes:["many2one","selection"],isEmpty:(record,fieldName)=>!record.data[fieldName],extractProps:({attrs,options,viewType},dynamicInfo)=>({isDisabled:!options.clickable||dynamicInfo.readonly,visibleSelection:attrs.statusbar_visible?.trim().split(/\s*,\s*/g),withCommand:viewType==="form",foldField:options.fold_field,domain:dynamicInfo.domain(),}),};registry.category("fields").add("statusbar",statusBarField);return __exports;});;

/* /web/static/src/views/fields/text/text_field.js */
odoo.define('@web/views/fields/text/text_field',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/autoresize','@web/core/utils/hooks','@web/views/fields/dynamic_placeholder_hook','@web/views/fields/input_field_hook','@web/views/fields/parsers','@web/views/fields/standard_field_props','@web/views/fields/translation_button','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useAutoresize}=require("@web/core/utils/autoresize");const{useSpellCheck}=require("@web/core/utils/hooks");const{useDynamicPlaceholder}=require("@web/views/fields/dynamic_placeholder_hook");const{useInputField}=require("@web/views/fields/input_field_hook");const{parseInteger}=require("@web/views/fields/parsers");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{TranslationButton}=require("@web/views/fields/translation_button");const{Component,useExternalListener,useEffect,useRef}=require("@odoo/owl");const TextField=__exports.TextField=class TextField extends Component{static template="web.TextField";static components={TranslationButton,};static props={...standardFieldProps,lineBreaks:{type:Boolean,optional:true},placeholder:{type:String,optional:true},dynamicPlaceholder:{type:Boolean,optional:true},dynamicPlaceholderModelReferenceField:{type:String,optional:true},rowCount:{type:Number,optional:true},};static defaultProps={lineBreaks:true,dynamicPlaceholder:false,rowCount:2,};setup(){this.divRef=useRef("div");this.textareaRef=useRef("textarea");if(this.props.dynamicPlaceholder){const dynamicPlaceholder=useDynamicPlaceholder(this.textareaRef);useExternalListener(document,"keydown",dynamicPlaceholder.onKeydown);useEffect(()=>dynamicPlaceholder.updateModel(this.props.dynamicPlaceholderModelReferenceField));}
useInputField({getValue:()=>this.props.record.data[this.props.name]||"",refName:"textarea",preventLineBreaks:!this.props.lineBreaks,});useSpellCheck({refName:"textarea"});useAutoresize(this.textareaRef,{minimumHeight:this.minimumHeight});}
get isTranslatable(){return this.props.record.fields[this.props.name].translate;}
get minimumHeight(){return this.props.lineBreaks?50:0;}
get rowCount(){return this.props.lineBreaks?this.props.rowCount:1;}}
const textField=__exports.textField={component:TextField,displayName:_t("Multiline Text"),supportedOptions:[{label:_t("Enable line breaks"),name:"line_breaks",type:"boolean",default:true,},],supportedTypes:["html","text"],extractProps:({attrs,options})=>({placeholder:attrs.placeholder,dynamicPlaceholder:options?.dynamic_placeholder||false,dynamicPlaceholderModelReferenceField:options?.dynamic_placeholder_model_reference_field||"",rowCount:attrs.rows&&parseInteger(attrs.rows),lineBreaks:options?.line_breaks!==undefined?Boolean(options.line_breaks):true,}),};registry.category("fields").add("text",textField);const ListTextField=__exports.ListTextField=class ListTextField extends TextField{static defaultProps={...super.defaultProps,rowCount:1,};get minimumHeight(){return 0;}
get rowCount(){return this.props.rowCount;}}
const listTextField=__exports.listTextField={...textField,component:ListTextField,};registry.category("fields").add("list.text",listTextField);return __exports;});;

/* /web/static/src/views/fields/timezone_mismatch/timezone_mismatch_field.js */
odoo.define('@web/views/fields/timezone_mismatch/timezone_mismatch_field',['@web/core/l10n/dates','@web/core/l10n/translation','@web/core/registry','@web/views/fields/selection/selection_field'],function(require){'use strict';let __exports={};const{formatDateTime}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{selectionField,SelectionField}=require("@web/views/fields/selection/selection_field");const{DateTime}=luxon;const TimezoneMismatchField=__exports.TimezoneMismatchField=class TimezoneMismatchField extends SelectionField{static template="web.TimezoneMismatchField";static props={...super.props,tzOffsetField:{type:String,optional:true},mismatchTitle:{type:String,optional:true},};static defaultProps={...super.defaultProps,tzOffsetField:"tz_offset",mismatchTitle:_t("Timezone Mismatch : This timezone is different from that of your browser.\nPlease, set the same timezone as your browser's to avoid time discrepancies in your system."),};get mismatch(){const userOffset=this.props.record.data[this.props.tzOffsetField];if(userOffset&&this.props.record.data[this.props.name]){const offset=-new Date().getTimezoneOffset();let browserOffset=offset<0?"-":"+";browserOffset+=Math.abs(offset/60).toFixed(0).padStart(2,"0");browserOffset+=Math.abs(offset%60).toFixed(0).padStart(2,"0");return browserOffset!==userOffset;}else if(!this.props.record.data[this.props.name]){return true;}
return false;}
get mismatchTitle(){if(!this.props.record.data[this.props.name]){return _t("Set a timezone on your user");}
return this.props.mismatchTitle;}
get options(){if(!this.mismatch){return super.options;}
return super.options.map((option)=>{const[value,label]=option;if(value===this.props.record.data[this.props.name]){const offset=this.props.record.data[this.props.tzOffsetField].match(/([+-])([0-9]{2})([0-9]{2})/);const sign=offset[1]==="-"?-1:1;const userOffset=sign*(parseInt(offset[2])*60+parseInt(offset[3]));const browserOffset=-new Date().getTimezoneOffset();const userUTCDatetime=DateTime.utc().plus({minutes:userOffset-browserOffset,});return[value,`${label} (${formatDateTime(userUTCDatetime)})`];}
return[value,label];});}}
const timezoneMismatchField=__exports.timezoneMismatchField={...selectionField,component:TimezoneMismatchField,additionalClasses:["d-flex"],supportedOptions:[...(selectionField.supportedOptions||[]),{label:_t("Mismatch title"),name:"mismatch_title",type:"string",},{label:_t("Timezone offset field"),name:"tz_offset_field",type:"field",availableTypes:["char"],},],extractProps({options}){const props=selectionField.extractProps(...arguments);props.tzOffsetField=options.tz_offset_field;props.mismatchTitle=options.mismatch_title;return props;},};registry.category("fields").add("timezone_mismatch",timezoneMismatchField);return __exports;});;

/* /web/static/src/views/fields/translation_button.js */
odoo.define('@web/views/fields/translation_button',['@web/core/l10n/localization','@web/core/utils/hooks','@web/views/fields/translation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{TranslationDialog}=require("@web/views/fields/translation_dialog");const{Component}=require("@odoo/owl");__exports.useTranslationDialog=useTranslationDialog;function useTranslationDialog(){const addDialog=useOwnedDialogs();async function openTranslationDialog({record,fieldName}){const saved=await record.save();if(!saved){return;}
const{resModel,resId}=record;addDialog(TranslationDialog,{fieldName:fieldName,resId:resId,resModel:resModel,userLanguageValue:record.data[fieldName]||"",isComingFromTranslationAlert:false,onSave:async()=>{await record.load();},});}
return openTranslationDialog;}
const TranslationButton=__exports.TranslationButton=class TranslationButton extends Component{setup(){this.user=useService("user");this.translationDialog=useTranslationDialog();}
get isMultiLang(){return localization.multiLang;}
get lang(){return this.user.lang.split("_")[0].toUpperCase();}
onClick(){const{fieldName,record}=this.props;this.translationDialog({fieldName,record});}}
TranslationButton.template="web.TranslationButton";TranslationButton.props={fieldName:{type:String},record:{type:Object},};return __exports;});;

/* /web/static/src/views/fields/translation_dialog.js */
odoo.define('@web/views/fields/translation_dialog',['@web/core/dialog/dialog','@web/core/utils/hooks','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{loadLanguages,_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const TranslationDialog=__exports.TranslationDialog=class TranslationDialog extends Component{setup(){super.setup();this.title=_t("Translate: %s",this.props.fieldName);this.orm=useService("orm");this.user=useService("user");this.terms=[];this.updatedTerms={};onWillStart(async()=>{const languages=await loadLanguages(this.orm);const[translations,context]=await this.loadTranslations(languages);let id=1;translations.forEach((t)=>(t.id=id++));this.props.isText=context.translation_type==="text";this.props.showSource=context.translation_show_source;this.terms=translations.map((term)=>{const relatedLanguage=languages.find((l)=>l[0]===term.lang);const termInfo={...term,langName:relatedLanguage[1],value:term.value||"",};if(term.lang===this.user.lang&&!this.props.showSource&&!this.props.isComingFromTranslationAlert){this.updatedTerms[term.id]=this.props.userLanguageValue;termInfo.value=this.props.userLanguageValue;}
return termInfo;});this.terms.sort((a,b)=>a.langName.localeCompare(b.langName));});}
get domain(){const domain=this.props.domain;if(this.props.searchName){domain.push(["name","=",`${this.props.searchName}`]);}
return domain;}
async loadTranslations(languages){return this.orm.call(this.props.resModel,"get_field_translations",[[this.props.resId],this.props.fieldName,]);}
async onSave(){const translations={};this.terms.map((term)=>{const updatedTermValue=this.updatedTerms[term.id];if(term.id in this.updatedTerms&&term.value!==updatedTermValue){if(this.props.showSource){if(!translations[term.lang]){translations[term.lang]={};}
const oldTermValue=term.value?term.value:term.source;translations[term.lang][oldTermValue]=updatedTermValue||term.source;}else{translations[term.lang]=updatedTermValue||false;}}});await this.orm.call(this.props.resModel,"update_field_translations",[[this.props.resId],this.props.fieldName,translations,]);await this.props.onSave();this.props.close();}}
TranslationDialog.template="web.TranslationDialog";TranslationDialog.components={Dialog};return __exports;});;

/* /web/static/src/views/fields/url/url_field.js */
odoo.define('@web/views/fields/url/url_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/input_field_hook','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{useInputField}=require("@web/views/fields/input_field_hook");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const UrlField=__exports.UrlField=class UrlField extends Component{static template="web.UrlField";static props={...standardFieldProps,placeholder:{type:String,optional:true},text:{type:String,optional:true},websitePath:{type:Boolean,optional:true},};setup(){useInputField({getValue:()=>this.props.record.data[this.props.name]||""});}
get formattedHref(){let value=this.props.record.data[this.props.name];if(value&&!this.props.websitePath){const regex=/^((ftp|http)s?:\/)?\//i;value=!regex.test(value)?`http://${value}`:value;}
return value;}}
const urlField=__exports.urlField={component:UrlField,displayName:_t("URL"),supportedOptions:[{label:_t("Is a website path"),name:"website_path",type:"boolean",help:_t("If True, the url will be used as it is, without any prefix added to it."),},],supportedTypes:["char"],extractProps:({attrs,options})=>({text:attrs.text,websitePath:options.website_path,placeholder:attrs.placeholder,}),};registry.category("fields").add("url",urlField);class FormUrlField extends UrlField{static template="web.FormUrlField";}
const formUrlField=__exports.formUrlField={...urlField,component:FormUrlField,};registry.category("fields").add("form.url",formUrlField);return __exports;});;

/* /web/static/src/views/fields/x2many/list_x2many_field.js */
odoo.define('@web/views/fields/x2many/list_x2many_field',['@web/core/registry','@web/views/fields/formatters','@web/views/fields/standard_field_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{formatX2many}=require("@web/views/fields/formatters");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{Component}=require("@odoo/owl");const ListX2ManyField=__exports.ListX2ManyField=class ListX2ManyField extends Component{static template="web.ListX2ManyField";static props={...standardFieldProps};get formattedValue(){return formatX2many(this.props.record.data[this.props.name]);}}
const listX2ManyField=__exports.listX2ManyField={component:ListX2ManyField,useSubView:false,};registry.category("fields").add("list.one2many",listX2ManyField);registry.category("fields").add("list.many2many",listX2ManyField);return __exports;});;

/* /web/static/src/views/fields/x2many/x2many_field.js */
odoo.define('@web/views/fields/x2many/x2many_field',['@web/core/context','@web/core/py_js/py','@web/core/l10n/translation','@web/core/pager/pager','@web/core/registry','@web/views/fields/relational_utils','@web/views/fields/standard_field_props','@web/views/kanban/kanban_renderer','@web/views/list/list_renderer','@web/views/utils','@web/views/view_button/view_button','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{makeContext}=require("@web/core/context");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{_t}=require("@web/core/l10n/translation");const{Pager}=require("@web/core/pager/pager");const{registry}=require("@web/core/registry");const{useActiveActions,useAddInlineRecord,useOpenX2ManyRecord,useSelectCreate,useX2ManyCrud,}=require("@web/views/fields/relational_utils");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{ListRenderer}=require("@web/views/list/list_renderer");const{computeViewClassName}=require("@web/views/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const X2ManyField=__exports.X2ManyField=class X2ManyField extends Component{static template="web.X2ManyField";static components={Pager,KanbanRenderer,ListRenderer,ViewButton};static props={...standardFieldProps,addLabel:{type:String,optional:true},editable:{type:String,optional:true},viewMode:{type:String,optional:true},widget:{type:String,optional:true},crudOptions:{type:Object,optional:true},string:{type:String,optional:true},relatedFields:{type:Object,optional:true},views:{type:Object,optional:true},domain:{type:[Array,Function],optional:true},context:{type:Object},};setup(){this.field=this.props.record.fields[this.props.name];const{saveRecord,updateRecord,removeRecord}=useX2ManyCrud(()=>this.list,this.isMany2Many);this.archInfo=this.props.views?.[this.props.viewMode]||{};const classes=this.props.viewMode?["o_field_x2many",`o_field_x2many_${this.props.viewMode}`]:["o_field_x2many"];this.className=computeViewClassName(this.props.viewMode,this.archInfo.xmlDoc,classes);const{activeActions,creates}=this.archInfo;if(this.props.viewMode==="kanban"){this.creates=creates.length?creates:[{type:"create",string:this.props.addLabel||_t("Add"),class:"o-kanban-button-new",},];}
const subViewActiveActions=activeActions;this.activeActions=useActiveActions({crudOptions:Object.assign({},this.props.crudOptions,{onDelete:removeRecord,edit:this.props.record.isInEdition,}),fieldType:this.isMany2Many?"many2many":"one2many",subViewActiveActions,getEvalParams:(props)=>{return{evalContext:props.record.evalContext,readonly:props.readonly,};},});this.addInLine=useAddInlineRecord({addNew:(...args)=>this.list.addNewRecord(...args),});const openRecord=useOpenX2ManyRecord({resModel:this.list.resModel,activeField:this.activeField,activeActions:this.activeActions,getList:()=>this.list,saveRecord,updateRecord,isMany2Many:this.isMany2Many,});this._openRecord=(params)=>{const activeElement=document.activeElement;openRecord({...params,onClose:()=>{if(activeElement){activeElement.focus();}},});};this.canOpenRecord=this.props.viewMode==="list"?!(this.archInfo.editable||this.props.editable):true;const selectCreate=useSelectCreate({resModel:this.props.record.data[this.props.name].resModel,activeActions:this.activeActions,onSelected:(resIds)=>saveRecord(resIds),onCreateEdit:({context})=>this._openRecord({context}),onUnselect:this.isMany2Many?undefined:()=>saveRecord(),});this.selectCreate=(params)=>{const p=Object.assign({},params);const currentIds=this.props.record.data[this.props.name].currentIds.filter((id)=>typeof id==="number");p.domain=[...(p.domain||[]),"!",["id","in",currentIds]];return selectCreate(p);};this.action=useService("action");}
get activeField(){return{fields:this.props.relatedFields,views:this.props.views,viewMode:this.props.viewMode,string:this.props.string,};}
get displayControlPanelButtons(){return(this.props.viewMode==="kanban"&&("link"in this.activeActions?this.activeActions.link:this.activeActions.create)&&!this.props.readonly);}
get isMany2Many(){return this.field.type==="many2many"||this.props.widget==="many2many";}
get list(){return this.props.record.data[this.props.name];}
get nestedKeyOptionalFieldsData(){return{field:this.props.name,model:this.props.record.resModel,viewMode:"form",};}
get pagerProps(){const list=this.list;return{offset:list.offset,limit:list.limit,total:list.count,onUpdate:async({offset,limit})=>{const initialLimit=this.list.limit;const leaved=await list.leaveEditMode();if(leaved){if(initialLimit===limit&&initialLimit===this.list.limit+1){offset-=1;limit-=1;}
await list.load({limit,offset});this.render();}},withAccessKey:false,};}
get rendererProps(){const{archInfo}=this;const props={archInfo,list:this.list,openRecord:this.openRecord.bind(this),evalViewModifier:(modifier)=>{return evaluateBooleanExpr(modifier,this.list.evalContext);},};if(this.props.viewMode==="kanban"){const recordsDraggable=!this.props.readonly&&archInfo.recordsDraggable;props.archInfo={...archInfo,recordsDraggable};props.readonly=this.props.readonly;props.deleteRecord=(record)=>{if(this.isMany2Many){return this.list.forget(record);}
return this.list.delete(record);};return props;}
const editable=(this.archInfo.activeActions.edit&&archInfo.editable)||this.props.editable;props.activeActions=this.activeActions;props.cycleOnTab=false;props.editable=!this.props.readonly&&editable;props.nestedKeyOptionalFieldsData=this.nestedKeyOptionalFieldsData;props.onAdd=(params)=>{params.editable=!this.props.readonly&&("editable"in params?params.editable:editable);this.onAdd(params);};const openFormView=archInfo.editable?archInfo.openFormView:false;props.onOpenFormView=openFormView?this.switchToForm.bind(this):undefined;return props;}
async switchToForm(record){await this.props.record.save();this.action.doAction({type:"ir.actions.act_window",views:[[false,"form"]],res_id:record.resId,res_model:this.list.resModel,},{props:{resIds:this.list.resIds},});}
async onAdd({context,editable}={}){const domain=typeof this.props.domain==="function"?this.props.domain():this.props.domain;context=makeContext([this.props.context,context]);if(this.isMany2Many){const{string}=this.props;const title=_t("Add: %s",string);return this.selectCreate({domain,context,title});}
if(editable){if(this.list.editedRecord){const proms=[];this.list.model.bus.trigger("NEED_LOCAL_CHANGES",{proms});await Promise.all([...proms,this.list.editedRecord._updatePromise]);await this.list.leaveEditMode({canAbandon:false});}
if(!this.list.editedRecord){return this.addInLine({context,editable});}
return;}
return this._openRecord({context});}
async openRecord(record){if(this.canOpenRecord){return this._openRecord({record,context:this.props.context,mode:this.props.readonly?"readonly":"edit",});}}}
const x2ManyField=__exports.x2ManyField={component:X2ManyField,displayName:_t("Relational table"),supportedTypes:["one2many","many2many"],useSubView:true,extractProps:({attrs,relatedFields,viewMode,views,widget,options,string},dynamicInfo)=>{const props={addLabel:attrs["add-label"],context:dynamicInfo.context,domain:dynamicInfo.domain,crudOptions:options,string,};if(viewMode){props.views=views;props.viewMode=viewMode;props.relatedFields=relatedFields;}
if(widget){props.widget=widget;}
return props;},};registry.category("fields").add("one2many",x2ManyField);registry.category("fields").add("many2many",x2ManyField);return __exports;});;

/* /web/static/src/views/form/button_box/button_box.js */
odoo.define('@web/views/form/button_box/button_box',['@web/core/utils/hooks','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component,onWillRender}=require("@odoo/owl");const ButtonBox=__exports.ButtonBox=class ButtonBox extends Component{setup(){const ui=useService("ui");onWillRender(()=>{const maxVisibleButtons=[3,4,5,7,4,5,8][ui.size]||8;const allVisibleButtons=Object.entries(this.props.slots).filter(([_,slot])=>this.isSlotVisible(slot)).map(([slotName])=>slotName);if(allVisibleButtons.length<=maxVisibleButtons){this.visibleButtons=allVisibleButtons;this.additionalButtons=[];this.isFull=allVisibleButtons.length===maxVisibleButtons;}else{this.visibleButtons=allVisibleButtons.slice(0,maxVisibleButtons-1);this.additionalButtons=allVisibleButtons.slice(maxVisibleButtons-1);this.isFull=true;}});}
isSlotVisible(slot){return!("isVisible"in slot)||slot.isVisible;}}
ButtonBox.template="web.Form.ButtonBox";ButtonBox.components={Dropdown,DropdownItem};ButtonBox.props={slots:Object,class:{type:String,optional:true},};ButtonBox.defaultProps={class:"",};return __exports;});;

/* /web/static/src/views/form/form_arch_parser.js */
odoo.define('@web/views/form/form_arch_parser',['@web/core/utils/xml','@web/views/fields/field','@web/views/widgets/widget','@web/views/utils'],function(require){'use strict';let __exports={};const{visitXML}=require("@web/core/utils/xml");const{Field}=require("@web/views/fields/field");const{Widget}=require("@web/views/widgets/widget");const{archParseBoolean,getActiveActions}=require("@web/views/utils");const FormArchParser=__exports.FormArchParser=class FormArchParser{parse(xmlDoc,models,modelName){const jsClass=xmlDoc.getAttribute("js_class");const disableAutofocus=archParseBoolean(xmlDoc.getAttribute("disable_autofocus")||"");const activeActions=getActiveActions(xmlDoc);const fieldNodes={};const widgetNodes={};let widgetNextId=0;const fieldNextIds={};let autofocusFieldId=null;visitXML(xmlDoc,(node)=>{if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"form",jsClass);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(archParseBoolean(node.getAttribute("default_focus")||"")){autofocusFieldId=fieldId;}
if(fieldInfo.type==="properties"){activeActions.addPropertyFieldValue=true;}
return false;}else if(node.tagName==="div"&&node.classList.contains("oe_chatter")){return false;}else if(node.tagName==="widget"){const widgetInfo=Widget.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);}});return{activeActions,autofocusFieldId,disableAutofocus,fieldNodes,widgetNodes,xmlDoc,};}}
return __exports;});;

/* /web/static/src/views/form/form_compiler.js */
odoo.define('@web/views/form/form_compiler',['@web/core/registry','@web/core/ui/ui_service','@web/core/utils/xml','@web/views/utils','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{copyAttributes,getModifier,isComponentNode,isTextNode,makeSeparator,}=require("@web/views/view_compiler");const{ViewCompiler}=require("@web/views/view_compiler");const compilersRegistry=registry.category("form_compilers");function appendAttf(el,attr,string){const attrKey=`t-attf-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToExpr(attrVal,string));}
function appendToExpr(expr,string){const re=/{{.*}}/;const oldString=re.exec(expr);return oldString?`${oldString} {{${string} }}`:`{{${string} }}`;}
__exports.objectToString=objectToString;function objectToString(obj){return`{${Object.entries(obj)
        .map((t) => t.join(":"))
        .join(",")}}`;}
const FormCompiler=__exports.FormCompiler=class FormCompiler extends ViewCompiler{setup(){this.encounteredFields={};this.labels={};this.noteBookId=0;this.compilers.push(...compilersRegistry.getAll(),{selector:"div[name='button_box']",fn:this.compileButtonBox},{selector:"form",fn:this.compileForm,doNotCopyAttributes:true},{selector:"group",fn:this.compileGroup},{selector:"header",fn:this.compileHeader},{selector:"label",fn:this.compileLabel,doNotCopyAttributes:true},{selector:"notebook",fn:this.compileNotebook},{selector:"setting",fn:this.compileSetting},{selector:"separator",fn:this.compileSeparator},{selector:"sheet",fn:this.compileSheet});}
compile(key,params={}){const compiled=super.compile(...arguments);if(!params.isSubView){compiled.children[0].setAttribute("t-ref","compiled_view_root");}
return compiled;}
createLabelFromField(fieldId,fieldName,fieldString,label,params){let labelText=label.textContent||fieldString;if(label.hasAttribute("data-no-label")){labelText=toStringExpression("");}else{labelText=labelText?toStringExpression(labelText):`__comp__.props.record.fields['${fieldName}'].string`;}
const formLabel=createElement("FormLabel",{id:`'${fieldId}'`,fieldName:`'${fieldName}'`,record:`__comp__.props.record`,fieldInfo:`__comp__.props.archInfo.fieldNodes['${fieldId}']`,className:`"${label.className}"`,string:labelText,});const condition=label.getAttribute("t-if");if(condition){formLabel.setAttribute("t-if",condition);}
return formLabel;}
getLabels(fieldName){const labels=this.labels[fieldName]||[];this.labels[fieldName]=null;return labels;}
pushLabel(fieldName,label){this.labels[fieldName]=this.labels[fieldName]||[];this.labels[fieldName].push(label);}
compileButtonBox(el,params){if(!el.children.length){return this.compileGenericNode(el,params);}
el.classList.remove("oe_button_box");const buttonBox=createElement("ButtonBox");buttonBox.setAttribute("t-if","!__comp__.env.inDialog");let slotId=0;let hasContent=false;for(const child of el.children){const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
hasContent=true;let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                    invisible
                )},__comp__.props.record.evalContextWithVirtualIds)`;}
const mainSlot=createElement("t",{"t-set-slot":`slot_${slotId++}`,isVisible:isVisibleExpr,});if(child.tagName==="button"||child.children.tagName==="button"){child.classList.add("oe_stat_button","btn","btn-outline-secondary","flex-grow-1","flex-lg-grow-0");}
if(child.tagName==="field"){child.classList.add("d-inline-block","mb-0","z-index-0");}
append(mainSlot,this.compileNode(child,params,false));append(buttonBox,mainSlot);}
return hasContent?buttonBox:"";}
compileButton(el,params){return super.compileButton(el,params);}
compileField(el,params){const field=super.compileField(el,params);const fieldName=el.getAttribute("name");const fieldString=el.getAttribute("string");const fieldId=el.getAttribute("field_id");const labelsForAttr=el.getAttribute("id")||fieldName;const labels=this.getLabels(labelsForAttr);const dynamicLabel=(label)=>{const formLabel=this.createLabelFromField(fieldId,fieldName,fieldString,label,{...params,currentFieldArchNode:el,});if(formLabel){label.replaceWith(formLabel);}else{label.remove();}
return formLabel;};for(const label of labels){dynamicLabel(label);}
this.encounteredFields[fieldName]=dynamicLabel;return field;}
compileForm(el,params){const sheetNode=el.querySelector("sheet");const displayClasses=sheetNode?`d-flex {{ __comp__.uiService.size < ${SIZES.XXL} ? "flex-column" : "flex-nowrap h-100" }}`:"d-block";const stateClasses="{{ __comp__.props.record.dirty ? 'o_form_dirty' : !__comp__.props.record.isNew ? 'o_form_saved' : '' }}";const form=createElement("div",{class:"o_form_renderer","t-att-class":"__comp__.props.class","t-attf-class":`{{__comp__.props.record.isInEdition ? 'o_form_editable' : 'o_form_readonly'}} ${displayClasses} ${stateClasses}`,});if(!sheetNode){for(const child of el.childNodes){if(child.attributes?.name?.value!=="button_box"){append(form,this.compileNode(child,params));}}
form.classList.add("o_form_nosheet");}else{let compiledList=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(getTag(child,true)==="sheet"){append(form,compiled);compiled.prepend(...compiledList);compiledList=[];}else if(compiled){compiledList.push(compiled);}}
append(form,compiledList);}
return form;}
compileGroup(el,params){const isOuterGroup=[...el.children].some((c)=>getTag(c,true)==="group");const formGroup=createElement(isOuterGroup?"OuterGroup":"InnerGroup");let slotId=0;let sequence=0;if(el.hasAttribute("col")){formGroup.setAttribute("maxCols",el.getAttribute("col"));}
if(el.hasAttribute("string")){const titleSlot=createElement("t",{"t-set-slot":"title"},[makeSeparator(el.getAttribute("string")),]);append(formGroup,titleSlot);}
let forceNewline=false;for(const child of el.children){if(getTag(child,true)==="newline"){forceNewline=true;continue;}
const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
const mainSlot=createElement("t",{"t-set-slot":`item_${slotId++}`,type:"'item'",sequence:sequence++,"t-slot-scope":"scope",});let itemSpan=parseInt(child.getAttribute("colspan")||"1",10);if(forceNewline){mainSlot.setAttribute("newline",true);forceNewline=false;}
if(getTag(child,true)==="separator"){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
if(child.matches("div[class='clearfix']:empty")){itemSpan=parseInt(formGroup.getAttribute("maxCols")||2,10);}
let slotContent;if(getTag(child,true)==="field"){const addLabel=child.hasAttribute("nolabel")?child.getAttribute("nolabel")!=="1":true;slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);if(slotContent&&addLabel&&!isOuterGroup&&!isTextNode(slotContent)){itemSpan=itemSpan===1?itemSpan+1:itemSpan;const fieldName=child.getAttribute("name");const fieldId=slotContent.getAttribute("id")||fieldName;const props={id:`${fieldId}`,fieldName:`'${fieldName}'`,record:`__comp__.props.record`,string:child.hasAttribute("string")?toStringExpression(child.getAttribute("string")):`__comp__.props.record.fields.${fieldName}.string`,fieldInfo:`__comp__.props.archInfo.fieldNodes[${fieldId}]`,};mainSlot.setAttribute("props",objectToString(props));mainSlot.setAttribute("Component","__comp__.constructor.components.FormLabel");mainSlot.setAttribute("subType","'item_component'");}}else{if(child.classList.contains("o_wrap_label")||child.classList.contains("o_td_label")||getTag(child,true)==="label"){mainSlot.setAttribute("subType","'label'");child.classList.remove("o_wrap_label");}
slotContent=this.compileNode(child,{...params,currentSlot:mainSlot},false);}
if(slotContent&&!isTextNode(slotContent)){let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                        invisible
                    )},__comp__.props.record.evalContextWithVirtualIds)`;}
mainSlot.setAttribute("isVisible",isVisibleExpr);if(itemSpan>0){mainSlot.setAttribute("itemSpan",`${itemSpan}`);}
const groupClassExpr=`scope && scope.className`;if(isComponentNode(slotContent)){if(getTag(slotContent)==="FormLabel"){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"className",`(addClass ? " " + addClass : "")`,`+`);}else if(getTag(child,true)!=="button"){if(slotContent.hasAttribute("class")){mainSlot.prepend(createElement("t",{"t-set":"addClass","t-value":groupClassExpr,}));combineAttributes(slotContent,"class",`(addClass ? " " + addClass : "")`,`+`);}else{slotContent.setAttribute("class",groupClassExpr);}}}else{appendAttf(slotContent,"class",`${groupClassExpr} || ""`);}
append(mainSlot,slotContent);append(formGroup,mainSlot);}}
return formGroup;}
compileHeader(el,params){const statusBar=createElement("div");statusBar.className="o_form_statusbar position-relative d-flex justify-content-between mb-0 mb-md-2 pb-2 pb-md-0";const buttons=[];const others=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled||isTextNode(compiled)){continue;}
if(getTag(child,true)==="field"){compiled.setAttribute("showTooltip",true);others.push(compiled);}else{if(compiled.tagName==="ViewButton"){compiled.setAttribute("defaultRank","'btn-secondary'");}
buttons.push(compiled);}}
let slotId=0;const statusBarButtons=createElement("StatusBarButtons");for(const button of buttons){const slot=createElement("t",{"t-set-slot":`button_${slotId++}`,isVisible:button.getAttribute("t-if")||true,});append(slot,button);append(statusBarButtons,slot);}
append(statusBar,statusBarButtons);append(statusBar,others);return statusBar;}
compileLabel(el,params){const forAttr=el.getAttribute("for");if(forAttr){let label=createElement("label");copyAttributes(el,label);const string=el.getAttribute("string");if(string){append(label,createTextNode(string));}else if(string===""){label.setAttribute("data-no-label","true");}
if(this.encounteredFields[forAttr]){label=this.encounteredFields[forAttr](label);}else{this.pushLabel(forAttr,label);}
return label;}
const res=this.compileGenericNode(el,params);copyAttributes(el,res);return res;}
compileNotebook(el,params){const noteBookId=this.noteBookId++;const noteBook=createElement("Notebook");const pageAnchors=[...document.querySelectorAll("[href^=\\#]")].map((a)=>CSS.escape(a.getAttribute("href").substring(1))).filter((a)=>a.length);const noteBookAnchors={};if(el.hasAttribute("class")){noteBook.setAttribute("className",toStringExpression(el.getAttribute("class")));el.removeAttribute("class");}
noteBook.setAttribute("defaultPage",`__comp__.props.record.isNew ? undefined : __comp__.props.activeNotebookPages[${noteBookId}]`);noteBook.setAttribute("onPageUpdate",`(page) => __comp__.props.onNotebookPageChange(${noteBookId}, page)`);for(const child of el.children){if(getTag(child,true)!=="page"){continue;}
const invisible=getModifier(child,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){continue;}
const pageSlot=createElement("t");append(noteBook,pageSlot);const pageId=`page_${this.id++}`;const pageTitle=toStringExpression(child.getAttribute("string")||child.getAttribute("name")||"");const pageNodeName=toStringExpression(child.getAttribute("name")||"");pageSlot.setAttribute("t-set-slot",pageId);pageSlot.setAttribute("title",pageTitle);pageSlot.setAttribute("name",pageNodeName);if(child.className){pageSlot.setAttribute("className",`"${child.className}"`);}
if(child.getAttribute("autofocus")==="autofocus"){noteBook.setAttribute("defaultPage",`__comp__.props.record.isNew ? "${pageId}" : (__comp__.props.activeNotebookPages[${noteBookId}] || "${pageId}")`);}
for(const anchor of child.querySelectorAll("[href^=\\#]")){const anchorValue=CSS.escape(anchor.getAttribute("href").substring(1));if(!anchorValue.length){continue;}
pageAnchors.push(anchorValue);noteBookAnchors[anchorValue]={origin:`'${pageId}'`,};}
let isVisibleExpr;if(!invisible||invisible==="False"||invisible==="0"){isVisibleExpr="true";}else if(invisible==="True"||invisible==="1"){isVisibleExpr="false";}else{isVisibleExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
                    invisible
                )},__comp__.props.record.evalContextWithVirtualIds)`;}
pageSlot.setAttribute("isVisible",isVisibleExpr);for(const contents of child.children){append(pageSlot,this.compileNode(contents,{...params,currentSlot:pageSlot}));}}
if(pageAnchors.length){for(const anchor of pageAnchors){let pageId=1;for(const child of el.children){if(child.querySelector(`#${anchor}`)){noteBookAnchors[anchor].target=`'page_${pageId}'`;noteBookAnchors[anchor]=objectToString(noteBookAnchors[anchor]);break;}
pageId++;}}
noteBook.setAttribute("anchors",objectToString(noteBookAnchors));}
return noteBook;}
compileSetting(el,params){const setting=createElement(params.componentName||"Setting",{title:toStringExpression(el.getAttribute("title")||""),help:toStringExpression(el.getAttribute("help")||""),companyDependent:el.getAttribute("company_dependent")==="1"||"false",documentation:toStringExpression(el.getAttribute("documentation")||""),record:`__comp__.props.record`,});let string=toStringExpression(el.getAttribute("string")||"");let addLabel=true;Array.from(el.children).forEach((child,index)=>{if(getTag(child,true)==="field"&&index===0){const fieldSlot=createElement("t",{"t-set-slot":"fieldSlot"});const field=this.compileNode(child,params);if(field){append(fieldSlot,field);setting.setAttribute("fieldInfo",field.getAttribute("fieldInfo"));addLabel=child.hasAttribute("nolabel")?child.getAttribute("nolabel")!=="1":true;const fieldName=child.getAttribute("name");string=child.hasAttribute("string")?toStringExpression(child.getAttribute("string")):string;setting.setAttribute("fieldName",toStringExpression(fieldName));setting.setAttribute("fieldId",toStringExpression(child.getAttribute("field_id")));}
append(setting,fieldSlot);}else{append(setting,this.compileNode(child,params));}});setting.setAttribute("string",string);setting.setAttribute("addLabel",addLabel);return setting;}
compileSeparator(el,params={}){const separator=makeSeparator(el.getAttribute("string"));copyAttributes(el,separator);return this.applyInvisible(getModifier(el,"invisible"),separator,params);}
compileSheet(el,params){const sheetBG=createElement("div");sheetBG.className="o_form_sheet_bg";const sheetFG=createElement("div");sheetFG.className="o_form_sheet position-relative";append(sheetBG,sheetFG);for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(!compiled){continue;}
if(compiled.nodeName==="ButtonBox"){continue;}
if(getTag(child,true)==="field"){compiled.setAttribute("showTooltip",true);}
append(sheetFG,compiled);}
return sheetBG;}}
return __exports;});;

/* /web/static/src/views/form/form_controller.js */
odoo.define('@web/views/form/form_controller',['@web/core/l10n/translation','@web/core/browser/feature_detection','@web/core/confirmation_dialog/confirmation_dialog','@web/core/context','@web/core/debug/debug_context','@web/core/registry','@web/core/ui/ui_service','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/xml','@web/core/py_js/py','@web/search/layout','@web/search/pager_hook','@web/views/standard_view_props','@web/views/utils','@web/views/view_button/view_button_hook','@web/views/view_hook','@web/views/view_button/view_button','@web/views/fields/field','@web/model/model','@web/model/relational_model/utils','@web/views/view_compiler','@web/search/cog_menu/cog_menu','@web/search/action_menus/action_menus','@web/views/form/button_box/button_box','@web/views/form/form_compiler','@web/views/form/form_error_dialog/form_error_dialog','@web/views/form/form_status_indicator/form_status_indicator','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{hasTouch}=require("@web/core/browser/feature_detection");const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{registry}=require("@web/core/registry");const{SIZES}=require("@web/core/ui/ui_service");const{useBus,useService}=require("@web/core/utils/hooks");const{omit}=require("@web/core/utils/objects");const{createElement,parseXML}=require("@web/core/utils/xml");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{standardViewProps}=require("@web/views/standard_view_props");const{isX2Many}=require("@web/views/utils");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{useSetupView}=require("@web/views/view_hook");const{ViewButton}=require("@web/views/view_button/view_button");const{Field}=require("@web/views/fields/field");const{useModel}=require("@web/model/model");const{addFieldDependencies,extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{useViewCompiler}=require("@web/views/view_compiler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{ButtonBox}=require("@web/views/form/button_box/button_box");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormErrorDialog}=require("@web/views/form/form_error_dialog/form_error_dialog");const{FormStatusIndicator}=require("@web/views/form/form_status_indicator/form_status_indicator");const{Component,onRendered,useEffect,useRef,useState}=require("@odoo/owl");const viewRegistry=registry.category("views");__exports.loadSubViews=loadSubViews;async function loadSubViews(fieldNodes,fields,context,resModel,viewService,userService,isSmall){for(const fieldInfo of Object.values(fieldNodes)){const fieldName=fieldInfo.name;const field=fields[fieldName];if(!isX2Many(field)){continue;}
if(fieldInfo.invisible==="True"||fieldInfo.invisible==="1"){continue;}
if(!fieldInfo.field.useSubView){continue;}
fieldInfo.views=fieldInfo.views||{};let viewType=fieldInfo.viewMode||"list,kanban";viewType=viewType.replace("tree","list");if(viewType.includes(",")){viewType=isSmall?"kanban":"list";}
fieldInfo.viewMode=viewType;if(fieldInfo.views[viewType]){continue;}
const fieldContext={};const regex=/'([a-z]*_view_ref)' *: *'(.*?)'/g;let matches;while((matches=regex.exec(fieldInfo.context))!==null){fieldContext[matches[1]]=matches[2];}
const refinedContext={};for(const key in context){if(key.indexOf("_view_ref")===-1){refinedContext[key]=context[key];}}
refinedContext.base_model_name=resModel;const comodel=field.relation;const{fields:comodelFields,relatedModels,views,}=await viewService.loadViews({resModel:comodel,views:[[false,viewType]],context:makeContext([fieldContext,userService.context,refinedContext]),});const{ArchParser}=viewRegistry.get(viewType);const xmlDoc=parseXML(views[viewType].arch);const archInfo=new ArchParser().parse(xmlDoc,relatedModels,comodel);fieldInfo.views[viewType]={...archInfo,limit:archInfo.limit||40,fields:comodelFields,};fieldInfo.relatedFields=comodelFields;}}
const FormController=__exports.FormController=class FormController extends Component{setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;this.dialogService=useService("dialog");this.router=useService("router");this.orm=useService("orm");this.user=useService("user");this.viewService=useService("view");this.ui=useService("ui");useBus(this.ui.bus,"resize",this.render);this.archInfo=this.props.archInfo;const{create,edit}=this.archInfo.activeActions;this.canCreate=create&&!this.props.preventCreate;this.canEdit=edit&&!this.props.preventEdit;this.duplicateId=false;this.display={...this.props.display};if(this.env.inDialog){this.display.controlPanel=false;}
const beforeFirstLoad=async()=>{await loadSubViews(this.archInfo.fieldNodes,this.props.fields,this.props.context,this.props.resModel,this.viewService,this.user,this.env.isSmall);const{activeFields,fields}=extractFieldsFromArchInfo(this.archInfo,this.props.fields);if(this.display.controlPanel){addFieldDependencies(activeFields,fields,[{name:"display_name",type:"char",readonly:true},]);}
this.model.config.activeFields=activeFields;this.model.config.fields=fields;};this.model=useState(useModel(this.props.Model,this.modelParams,{beforeFirstLoad}));this.cpButtonsRef=useRef("cpButtons");useEffect(()=>{if(!this.env.inDialog){this.updateURL();}});const footers=[...this.archInfo.xmlDoc.querySelectorAll("footer:not(field footer)")];if(footers.length){this.footerArchInfo=Object.assign({},this.archInfo);this.footerArchInfo.xmlDoc=createElement("t");this.footerArchInfo.xmlDoc.append(...footers);this.footerArchInfo.arch=this.footerArchInfo.xmlDoc.outerHTML;this.archInfo.arch=this.archInfo.xmlDoc.outerHTML;}
const xmlDocButtonBox=this.archInfo.xmlDoc.querySelector("div[name='button_box']:not(field div)");if(xmlDocButtonBox){const buttonBoxTemplates=useViewCompiler(this.props.Compiler||FormCompiler,{ButtonBox:xmlDocButtonBox},{isSubView:true});this.buttonBoxTemplate=buttonBoxTemplates.ButtonBox;}
this.rootRef=useRef("root");useViewButtons(this.model,this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});const state=this.props.state||{};const activeNotebookPages={...state.activeNotebookPages};this.onNotebookPageChange=(notebookId,page)=>{if(page){activeNotebookPages[notebookId]=page;}};useSetupView({rootRef:this.rootRef,beforeLeave:()=>this.beforeLeave(),beforeUnload:(ev)=>this.beforeUnload(ev),getLocalState:()=>{return{activeNotebookPages:!this.model.root.isNew?activeNotebookPages:{},modelState:this.model.exportState(),resId:this.model.root.resId,};},});useDebugCategory("form",{component:this});usePager(()=>{if(!this.model.root.isNew){const resIds=this.model.root.resIds;return{offset:resIds.indexOf(this.model.root.resId),limit:1,total:resIds.length,onUpdate:({offset})=>this.onPagerUpdate({offset,resIds}),};}});onRendered(()=>{this.env.config.setDisplayName(this.displayName());});const{disableAutofocus}=this.archInfo;if(!disableAutofocus){useEffect((isInEdition)=>{if(!isInEdition&&!this.rootRef.el.querySelector(".o_content").contains(document.activeElement)){const elementToFocus=this.rootRef.el.querySelector(".o_content button.btn-primary");if(elementToFocus){elementToFocus.focus();}}},()=>[this.model.root.isInEdition]);}}
get modelParams(){let mode=this.props.mode||"edit";if(!this.canEdit&&this.props.resId){mode="readonly";}
return{config:{resModel:this.props.resModel,resId:this.props.resId||false,resIds:this.props.resIds||(this.props.resId?[this.props.resId]:[]),fields:this.props.fields,activeFields:{},isMonoRecord:true,mode,context:this.props.context,},state:this.props.state?.modelState,hooks:{onWillLoadRoot:this.onWillLoadRoot.bind(this),onWillSaveRecord:this.onWillSaveRecord.bind(this),onRecordSaved:this.onRecordSaved.bind(this),},useSendBeaconToSaveUrgently:true,};}
onWillLoadRoot(){this.duplicateId=undefined;}
async onRecordSaved(record,changes){if(this.duplicateId===record.id){const translationChanges={};for(const fieldName in changes){if(record.fields[fieldName].translate){translationChanges[fieldName]=changes[fieldName];}}
if(Object.keys(translationChanges).length){await this.orm.call(this.model.root.resModel,"web_override_translations",[[this.model.root.resId],translationChanges,]);}}}
async onWillSaveRecord(){}
async onSaveError(error,{discard}){const proceed=await new Promise((resolve)=>{this.model.dialog.add(FormErrorDialog,{message:error.data.message,onDiscard:()=>{discard();resolve(true);},onStayHere:()=>resolve(false),});});return proceed;}
displayName(){return this.model.root.data.display_name||(this.model.root.isNew&&_t("New"))||"";}
async onPagerUpdate({offset,resIds}){const dirty=await this.model.root.isDirty();if(dirty){return this.model.root.save({onError:this.onSaveError.bind(this),nextId:resIds[offset],});}else{return this.model.load({resId:resIds[offset]});}}
async beforeLeave(){if(this.model.root.dirty){return this.model.root.save({reload:false,onError:this.onSaveError.bind(this),});}}
async beforeUnload(ev){const succeeded=await this.model.root.urgentSave();if(!succeeded){ev.preventDefault();ev.returnValue="Unsaved changes";}}
updateURL(){this.router.pushState({id:this.model.root.resId||undefined});}
getStaticActionMenuItems(){const{activeActions}=this.archInfo;return{archive:{isAvailable:()=>this.archiveEnabled&&this.model.root.isActive,sequence:10,description:_t("Archive"),icon:"oi oi-archive",callback:()=>{this.dialogService.add(ConfirmationDialog,this.archiveDialogProps);},},unarchive:{isAvailable:()=>this.archiveEnabled&&!this.model.root.isActive,sequence:20,icon:"oi oi-unarchive",description:_t("Unarchive"),callback:()=>this.model.root.unarchive(),},duplicate:{isAvailable:()=>activeActions.create&&activeActions.duplicate,sequence:30,icon:"fa fa-clone",description:_t("Duplicate"),callback:()=>this.duplicateRecord(),},delete:{isAvailable:()=>activeActions.delete&&!this.model.root.isNew,sequence:40,icon:"fa fa-trash-o",description:_t("Delete"),callback:()=>this.deleteRecord(),skipSave:true,},addPropertyFieldValue:{isAvailable:()=>activeActions.addPropertyFieldValue,sequence:50,icon:"fa fa-cogs",description:_t("Add Properties"),callback:()=>this.model.bus.trigger("PROPERTY_FIELD:ADD_PROPERTY_VALUE"),},};}
get archiveDialogProps(){return{body:_t("Are you sure that you want to archive this record?"),confirmLabel:_t("Archive"),confirm:()=>this.model.root.archive(),cancel:()=>{},};}
get actionMenuItems(){const{actionMenus}=this.props.info;const staticActionItems=Object.entries(this.getStaticActionMenuItems()).filter(([key,item])=>item.isAvailable===undefined||item.isAvailable()).sort(([k1,item1],[k2,item2])=>(item1.sequence||0)-(item2.sequence||0)).map(([key,item])=>Object.assign({key},omit(item,"isAvailable","sequence"),{groupNumber:STATIC_ACTIONS_GROUP_NUMBER,}));return{action:[...staticActionItems,...(actionMenus.action||[])],print:actionMenus.print,};}
get archiveEnabled(){return"active"in this.model.root.activeFields?!this.props.fields.active.readonly:"x_active"in this.model.root.activeFields?!this.props.fields.x_active.readonly:false;}
async shouldExecuteAction(item){const dirty=await this.model.root.isDirty();if((dirty||this.model.root.isNew)&&!item.skipSave){let hasError=false;const isSaved=await this.model.root.save({onError:(...args)=>{hasError=true;return this.onSaveError(...args);},});return isSaved&&!hasError;}
return true;}
async duplicateRecord(){await this.model.root.duplicate();this.duplicateId=this.model.root.id;}
get deleteConfirmationDialogProps(){return{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:async()=>{await this.model.root.delete();if(!this.model.root.resId){this.env.config.historyBack();}},confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),};}
async deleteRecord(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
async beforeExecuteActionButton(clickParams){const record=this.model.root;if(clickParams.special!=="cancel"){let saved=false;if(clickParams.special==="save"&&this.props.saveRecord){saved=await this.props.saveRecord(record,clickParams);}else{const params={reload:!(this.env.inDialog&&clickParams.close)};saved=await record.save(params);}
if(saved!==false&&this.props.onSave){this.props.onSave(record,clickParams);}
return saved;}else if(this.props.onDiscard){this.props.onDiscard(record);}}
async afterExecuteActionButton(clickParams){}
async create(){const canProceed=await this.model.root.save({onError:this.onSaveError.bind(this),});if(canProceed){await executeButtonCallback(this.ui.activeElement,()=>this.model.load({resId:false}));}}
async save(params){const record=this.model.root;let saved=false;if(this.props.saveRecord){saved=await this.props.saveRecord(record,params);}else{saved=await record.save(params);}
if(saved&&this.props.onSave){this.props.onSave(record,params);}
return saved;}
saveButtonClicked(params={}){return executeButtonCallback(this.ui.activeElement,()=>this.save(params));}
async discard(){if(this.props.discardRecord){this.props.discardRecord(this.model.root);return;}
await this.model.root.discard();if(this.props.onDiscard){this.props.onDiscard(this.model.root);}
if(this.model.root.isNew||this.env.inDialog){this.env.config.historyBack();}}
get className(){const result={};const{size}=this.ui;if(size<=SIZES.XS){result.o_xxs_form_view=true;}else if(!this.env.inDialog&&size===SIZES.XXL){result["o_xxl_form_view h-100"]=true;}
if(this.props.className){result[this.props.className]=true;}
result["o_field_highlight"]=size<SIZES.SM||hasTouch();return result;}}
FormController.template=`web.FormView`;FormController.components={FormStatusIndicator,Layout,ButtonBox,ViewButton,Field,CogMenu,};FormController.props={...standardViewProps,discardRecord:{type:Function,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},saveRecord:{type:Function,optional:true},removeRecord:{type:Function,optional:true},Model:Function,Renderer:Function,Compiler:Function,archInfo:Object,buttonTemplate:String,preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},onDiscard:{type:Function,optional:true},onSave:{type:Function,optional:true},};FormController.defaultProps={preventCreate:false,preventEdit:false,};return __exports;});;

/* /web/static/src/views/form/form_error_dialog/form_error_dialog.js */
odoo.define('@web/views/form/form_error_dialog/form_error_dialog',['@web/core/dialog/dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Component}=require("@odoo/owl");const FormErrorDialog=__exports.FormErrorDialog=class FormErrorDialog extends Component{async discard(){await this.props.onDiscard();this.props.close();}
async stay(){await this.props.onStayHere();this.props.close();}}
FormErrorDialog.template="web.FormErrorDialog";FormErrorDialog.components={Dialog};return __exports;});;

/* /web/static/src/views/form/form_group/form_group.js */
odoo.define('@web/views/form/form_group/form_group',['@odoo/owl','@web/core/utils/arrays'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{sortBy}=require("@web/core/utils/arrays");class Group extends Component{_getItems(){const items=Object.entries(this.props.slots||{}).filter(([k,v])=>v.type==="item");return sortBy(items,(i)=>i[1].sequence);}
getItems(){return this._getItems();}
get allClasses(){return this.props.class;}}
Group.props=["class?","slots?","maxCols?","style?"];Group.defaultProps={maxCols:2,};const OuterGroup=__exports.OuterGroup=class OuterGroup extends Group{getItems(){const nbCols=this.props.maxCols;const colSize=Math.max(1,Math.round(12/nbCols));const items=super.getItems().filter(([k,v])=>!("isVisible"in v)||v.isVisible);return items.map((item)=>{const[slotName,slot]=item;const itemSpan=slot.itemSpan||1;return{name:slotName,size:itemSpan*colSize,newline:slot.newline,colspan:itemSpan,};});}}
OuterGroup.template="web.Form.OuterGroup";OuterGroup.defaultProps={...Group.defaultProps,slots:[],hasOuterTemplate:true,};const InnerGroup=__exports.InnerGroup=class InnerGroup extends Group{getTemplate(subType){return this.constructor.templates[subType]||this.constructor.templates.default;}
getRows(){const maxCols=this.props.maxCols;const rows=[];let currentRow=[];let reservedSpace=0;const items=this.getItems();while(items.length){const[slotName,slot]=items.shift();if(!slot.isVisible){continue;}
const{newline,itemSpan}=slot;if(newline){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const fullItemSpan=itemSpan||1;if(fullItemSpan+reservedSpace>maxCols){rows.push(currentRow);currentRow=[];reservedSpace=0;}
const isVisible=!("isVisible"in slot)||slot.isVisible;currentRow.push({...slot,name:slotName,itemSpan,isVisible});reservedSpace+=itemSpan||1;currentRow.isVisible=currentRow.isVisible||isVisible;}
rows.push(currentRow);rows.forEach((row)=>{let labelCount=0;const dataCells=[];for(const c of row){if(c.subType==="label"){labelCount++;}else if(c.subType==="item_component"){labelCount++;dataCells.push(c);}else{dataCells.push(c);}}
const sizeOfDataCell=100/(maxCols-labelCount);dataCells.forEach((c)=>{const itemSpan=c.subType==="item_component"?c.itemSpan-1:c.itemSpan;c.width=(itemSpan||1)*sizeOfDataCell;});});return rows;}}
InnerGroup.template="web.Form.InnerGroup";return __exports;});;

/* /web/static/src/views/form/form_label.js */
odoo.define('@web/views/form/form_label',['@web/views/fields/field','@web/session','@web/views/fields/field_tooltip','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{fieldVisualFeedback}=require("@web/views/fields/field");const{session}=require("@web/session");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const FormLabel=__exports.FormLabel=class FormLabel extends Component{get className(){const{invalid,empty,readonly}=fieldVisualFeedback(this.props.fieldInfo.field,this.props.record,this.props.fieldName,this.props.fieldInfo);const classes=this.props.className?[this.props.className]:[];if(invalid){classes.push("o_field_invalid");}
if(empty){classes.push("o_form_label_empty");}
if(readonly&&!this.props.notMuttedLabel){classes.push("o_form_label_readonly");}
return classes.join(" ");}
get hasTooltip(){return Boolean(odoo.debug)||this.tooltipHelp;}
get tooltipHelp(){const field=this.props.record.fields[this.props.fieldName];let help=this.props.fieldInfo.help||field.help||"";if(field.company_dependent&&session.display_switch_company_menu){help+=(help?"\n\n":"")+_t("Values set here are company-specific.");}
return help;}
get tooltipInfo(){if(!odoo.debug){return JSON.stringify({field:{help:this.tooltipHelp,},});}
return getTooltipInfo({viewMode:"form",resModel:this.props.record.resModel,field:this.props.record.fields[this.props.fieldName],fieldInfo:this.props.fieldInfo,help:this.tooltipHelp,});}}
FormLabel.template="web.FormLabel";FormLabel.props={fieldInfo:{type:Object},record:{type:Object},fieldName:{type:String},className:{type:String,optional:true},string:{type:String},id:{type:String},notMuttedLabel:{type:Boolean,optional:true},};return __exports;});;

/* /web/static/src/views/form/form_renderer.js */
odoo.define('@web/views/form/form_renderer',['@web/core/py_js/py','@web/core/notebook/notebook','@web/views/form/setting/setting','@web/views/fields/field','@web/core/browser/browser','@web/core/browser/feature_detection','@web/core/utils/hooks','@web/core/utils/timing','@web/views/form/button_box/button_box','@web/views/form/form_group/form_group','@web/views/view_button/view_button','@web/views/view_compiler','@web/views/view_hook','@web/views/widgets/widget','@web/views/form/form_compiler','@web/views/form/form_label','@web/views/form/status_bar_buttons/status_bar_buttons','@odoo/owl'],function(require){'use strict';let __exports={};const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Notebook}=require("@web/core/notebook/notebook");const{Setting}=require("@web/views/form/setting/setting");const{Field}=require("@web/views/fields/field");const{browser}=require("@web/core/browser/browser");const{hasTouch}=require("@web/core/browser/feature_detection");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{ButtonBox}=require("@web/views/form/button_box/button_box");const{InnerGroup,OuterGroup}=require("@web/views/form/form_group/form_group");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{FormCompiler}=require("@web/views/form/form_compiler");const{FormLabel}=require("@web/views/form/form_label");const{StatusBarButtons}=require("@web/views/form/status_bar_buttons/status_bar_buttons");const{Component,onMounted,onWillUnmount,useEffect,useSubEnv,useRef,useState,xml,}=require("@odoo/owl");const FormRenderer=__exports.FormRenderer=class FormRenderer extends Component{setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;const{archInfo,Compiler,record}=this.props;const templates={FormRenderer:archInfo.xmlDoc};this.state=useState({});this.templates=useViewCompiler(Compiler||FormCompiler,templates);useSubEnv({model:record.model});useBounceButton(useRef("compiled_view_root"),(target)=>{return!record.isInEdition&&!!target.closest(".oe_title, .o_inner_group");});this.uiService=useService("ui");this.onResize=useDebounced(this.render,200);onMounted(()=>browser.addEventListener("resize",this.onResize));onWillUnmount(()=>browser.removeEventListener("resize",this.onResize));const{autofocusFieldId}=archInfo;const rootRef=useRef("compiled_view_root");if(this.shouldAutoFocus){useEffect((isNew,rootEl)=>{if(!rootEl){return;}
let elementToFocus;if(isNew){const focusableSelectors=['input[type="text"]',"textarea","[contenteditable]",];elementToFocus=(autofocusFieldId&&rootEl.querySelector(`#${autofocusFieldId}`))||rootEl.querySelector(focusableSelectors.map((sel)=>`.o_content .o_field_widget ${sel}`).join(", "));}
if(elementToFocus){elementToFocus.focus();}},()=>[this.props.record.isNew,rootRef.el]);}
if(this.env.inDialog){const fieldNodeIds=Object.keys(this.props.archInfo.fieldNodes);const elementsByNodeIds={};onMounted(()=>{if(!rootRef.el){return;}
for(const id of fieldNodeIds){const els=[...document.querySelectorAll(`[id=${id}]`)].filter((el)=>!rootRef.el.contains(el));if(els.length){els[0].removeAttribute("id");elementsByNodeIds[id]=els[0];}}});onWillUnmount(()=>{for(const[id,el]of Object.entries(elementsByNodeIds)){el.setAttribute("id",id);}});}}
get shouldAutoFocus(){return!hasTouch()&&!this.props.archInfo.disableAutofocus;}}
FormRenderer.template=xml`<t t-call="{{ templates.FormRenderer }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this: this }) }" />`;FormRenderer.components={Field,FormLabel,ButtonBox,ViewButton,Widget,Notebook,Setting,OuterGroup,InnerGroup,StatusBarButtons,};FormRenderer.props={archInfo:Object,Compiler:{type:Function,optional:true},record:Object,class:{type:String,optional:1},translateAlert:{type:[Object,{value:null}],optional:true},onNotebookPageChange:{type:Function,optional:true},activeNotebookPages:{type:Object,optional:true},setFieldAsDirty:{type:Function,optional:true},};FormRenderer.defaultProps={activeNotebookPages:{},onNotebookPageChange:()=>{},};return __exports;});;

/* /web/static/src/views/form/form_status_indicator/form_status_indicator.js */
odoo.define('@web/views/form/form_status_indicator/form_status_indicator',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef,useState}=require("@odoo/owl");const{useBus}=require("@web/core/utils/hooks");const FormStatusIndicator=__exports.FormStatusIndicator=class FormStatusIndicator extends Component{setup(){this.state=useState({fieldIsDirty:false,});useBus(this.props.model.bus,"FIELD_IS_DIRTY",(ev)=>(this.state.fieldIsDirty=ev.detail));useEffect(()=>{if(!this.props.model.root.isNew&&this.indicatorMode==="invalid"){this.saveButton.el.setAttribute("disabled","1");}else{this.saveButton.el.removeAttribute("disabled");}},()=>[this.props.model.root.isValid]);this.saveButton=useRef("save");}
get displayButtons(){return this.indicatorMode!=="saved";}
get indicatorMode(){if(this.props.model.root.isNew){return this.props.model.root.isValid?"dirty":"invalid";}else if(!this.props.model.root.isValid){return"invalid";}else if(this.props.model.root.dirty||this.state.fieldIsDirty){return"dirty";}else{return"saved";}}
async discard(){await this.props.discard();}
async save(){await this.props.save();}}
FormStatusIndicator.template="web.FormStatusIndicator";FormStatusIndicator.props={model:Object,save:Function,discard:Function,};return __exports;});;

/* /web/static/src/views/form/form_view.js */
odoo.define('@web/views/form/form_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/form/form_renderer','@web/views/form/form_arch_parser','@web/views/form/form_controller','@web/views/form/form_compiler'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{FormRenderer}=require("@web/views/form/form_renderer");const{FormArchParser}=require("@web/views/form/form_arch_parser");const{FormController}=require("@web/views/form/form_controller");const{FormCompiler}=require("@web/views/form/form_compiler");const formView=__exports.formView={type:"form",display_name:"Form",multiRecord:false,searchMenuTypes:[],Controller:FormController,Renderer:FormRenderer,ArchParser:FormArchParser,Model:RelationalModel,Compiler:FormCompiler,buttonTemplate:"web.FormView.Buttons",props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:genericProps.buttonTemplate||view.buttonTemplate,Compiler:view.Compiler,archInfo,};},};registry.category("views").add("form",formView);return __exports;});;

/* /web/static/src/views/form/setting/setting.js */
odoo.define('@web/views/form/setting/setting',['@web/session','@odoo/owl','@web/views/form/form_label','@web/views/widgets/documentation_link/documentation_link'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{Component}=require("@odoo/owl");const{FormLabel}=require("@web/views/form/form_label");const{DocumentationLink}=require("@web/views/widgets/documentation_link/documentation_link");const Setting=__exports.Setting=class Setting extends Component{setup(){if(this.props.fieldName){this.fieldType=this.props.record.fields[this.props.fieldName].type;if(this.props.fieldInfo.readonly==="True"){this.notMuttedLabel=true;}}}
get classNames(){const{class:_class}=this.props;const classNames={o_setting_box:true,"col-12":true,"col-lg-6":true,[_class]:Boolean(_class),};return classNames;}
get displayCompanyDependentIcon(){return(this.labelString&&this.props.companyDependent&&session.display_switch_company_menu);}
get labelString(){if(this.props.string){return this.props.string;}
const label=this.props.record&&this.props.record.fields[this.props.fieldName]&&this.props.record.fields[this.props.fieldName].string;return label||"";}}
Setting.components={FormLabel,DocumentationLink,};Setting.template="web.Setting";Setting.props={title:{type:String,optional:1},fieldId:{type:String,optional:1},help:{type:String,optional:1},fieldName:{type:String,optional:1},fieldInfo:{type:Object,optional:1},class:{type:String,optional:1},record:{type:Object,optional:1},documentation:{type:String,optional:1},string:{type:String,optional:1},addLabel:{type:Boolean},companyDependent:{type:Boolean,optional:1},slots:{type:Object,optional:1},};return __exports;});;

/* /web/static/src/views/form/status_bar_buttons/status_bar_buttons.js */
odoo.define('@web/views/form/status_bar_buttons/status_bar_buttons',['@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@odoo/owl'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const StatusBarButtons=__exports.StatusBarButtons=class StatusBarButtons extends Component{get visibleSlotNames(){if(!this.props.slots){return[];}
return Object.entries(this.props.slots).filter((entry)=>entry[1].isVisible).map((entry)=>entry[0]);}}
StatusBarButtons.template="web.StatusBarButtons";StatusBarButtons.components={Dropdown,DropdownItem,};StatusBarButtons.props={slots:{type:Object,optional:1},};return __exports;});;

/* /web/static/src/views/graph/graph_arch_parser.js */
odoo.define('@web/views/graph/graph_arch_parser',['@web/core/utils/xml','@web/search/utils/misc','@web/views/utils'],function(require){'use strict';let __exports={};const{visitXML}=require("@web/core/utils/xml");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{archParseBoolean}=require("@web/views/utils");const MODES=["bar","line","pie"];const ORDERS=["ASC","DESC","asc","desc",null];const GraphArchParser=__exports.GraphArchParser=class GraphArchParser{parse(arch,fields={}){const archInfo={fields,fieldAttrs:{},groupBy:[],measures:[]};visitXML(arch,(node)=>{switch(node.tagName){case"graph":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=archParseBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("stacked")){archInfo.stacked=archParseBoolean(node.getAttribute("stacked"));}
if(node.hasAttribute("cumulated")){archInfo.cumulated=archParseBoolean(node.getAttribute("cumulated"));}
if(node.hasAttribute("cumulated_start")){archInfo.cumulatedStart=archParseBoolean(node.getAttribute("cumulated_start"));}
const mode=node.getAttribute("type");if(mode&&MODES.includes(mode)){archInfo.mode=mode;}
const order=node.getAttribute("order");if(order&&ORDERS.includes(order)){archInfo.order=order.toUpperCase();}
const title=node.getAttribute("string");if(title){archInfo.title=title;}
break;}
case"field":{const fieldName=node.getAttribute("name");if(fieldName==="id"){break;}
const string=node.getAttribute("string");if(string){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].string=string;}
const widget=node.getAttribute("widget");if(widget){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].widget=widget;}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){if(!archInfo.fieldAttrs[fieldName]){archInfo.fieldAttrs[fieldName]={};}
archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
const isMeasure=node.getAttribute("type")==="measure";if(isMeasure){archInfo.measures.push(fieldName);archInfo.measure=fieldName;}else{const{type}=archInfo.fields[fieldName];if(GROUPABLE_TYPES.includes(type)){let groupBy=fieldName;const interval=node.getAttribute("interval");if(interval){groupBy+=`:${interval}`;}
archInfo.groupBy.push(groupBy);}}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/graph/graph_controller.js */
odoo.define('@web/views/graph/graph_controller',['@web/search/layout','@web/model/model','@web/views/standard_view_props','@web/views/view_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/search/cog_menu/cog_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{Component,useRef}=require("@odoo/owl");const GraphController=__exports.GraphController=class GraphController extends Component{setup(){this.model=useModelWithSampleData(this.props.Model,this.props.modelParams);useSetupView({rootRef:useRef("root"),getLocalState:()=>{return{metaData:this.model.metaData};},getContext:()=>this.getContext(),});this.searchBarToggler=useSearchBarToggler();}
getContext(){const{measure,groupBy,mode}=this.model.metaData;const context={graph_measure:measure,graph_mode:mode,graph_groupbys:groupBy.map((gb)=>gb.spec),};if(mode!=="pie"){context.graph_order=this.model.metaData.order;context.graph_stacked=this.model.metaData.stacked;if(mode==="line"){context.graph_cumulated=this.model.metaData.cumulated;}}
return context;}}
GraphController.template="web.GraphView";GraphController.components={Layout,SearchBar,CogMenu};GraphController.props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:String,};return __exports;});;

/* /web/static/src/views/graph/graph_model.js */
odoo.define('@web/views/graph/graph_model',['@web/core/l10n/translation','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/search/utils/group_by','@web/search/utils/misc','@web/model/model','@web/views/utils','@web/core/domain'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sortBy,groupBy}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{rankInterval}=require("@web/search/utils/dates");const{getGroupBy}=require("@web/search/utils/group_by");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const{Domain}=require("@web/core/domain");const SEP=__exports.SEP=" / ";const SEQUENTIAL_TYPES=__exports.SEQUENTIAL_TYPES=["date","datetime"];class DateClasses{constructor(array){this.__referenceIndex=null;this.__array=array;for(let i=0;i<this.__array.length;i++){const arr=this.__array[i];if(arr.length&&this.__referenceIndex===null){this.__referenceIndex=i;}}}
classLabel(index,o){return`${this.__array[index].indexOf(o)}`;}
classMembers(classLabel){const classNumber=Number(classLabel);const classMembers=new Set();for(const arr of this.__array){if(arr[classNumber]!==undefined){classMembers.add(arr[classNumber]);}}
return[...classMembers];}
representative(classLabel,index){const classNumber=Number(classLabel);const i=index===undefined?this.__referenceIndex:index;if(i===null){return null;}
return this.__array[i][classNumber];}
arrayLength(index){return this.__array[index].length;}}
const GraphModel=__exports.GraphModel=class GraphModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _fetchDataPoints=this._fetchDataPoints.bind(this);this._fetchDataPoints=(...args)=>{return this.race.add(_fetchDataPoints(...args));};this.initialGroupBy=null;this.metaData=params;this.data=null;this.searchParams=null;this.lineOverlayDataset=null;}
async load(searchParams){this.searchParams=searchParams;if(!this.initialGroupBy){this.initialGroupBy=searchParams.context.graph_groupbys||this.metaData.groupBy;}
const metaData=this._buildMetaData();await this._fetchDataPoints(metaData);}
hasData(){return this.dataPoints.length>0;}
async updateMetaData(params){if("measure"in params){const metaData=this._buildMetaData(params);await this._fetchDataPoints(metaData);this.useSampleModel=false;}else{await this.race.getCurrentProm();this.metaData=Object.assign({},this.metaData,params);this._prepareData();}
this.notify();}
_buildMetaData(params){const{comparison,domain,context,groupBy}=this.searchParams;const metaData=Object.assign({},this.metaData,{context});if(comparison){metaData.domains=comparison.domains;metaData.comparisonField=comparison.fieldName;}else{metaData.domains=[{arrayRepr:domain,description:null}];}
metaData.measure=context.graph_measure||metaData.measure;metaData.mode=context.graph_mode||metaData.mode;metaData.groupBy=groupBy.length?groupBy:this.initialGroupBy;if(metaData.mode!=="pie"){metaData.order="graph_order"in context?context.graph_order:metaData.order;if(comparison){metaData.stacked=false;}else if("graph_stacked"in context){metaData.stacked=context.graph_stacked;}
if(metaData.mode==="line"){metaData.cumulated="graph_cumulated"in context?context.graph_cumulated:metaData.cumulated;}}
this._normalize(metaData);metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...(metaData.viewMeasures||[]),metaData.measure,]);return Object.assign(metaData,params);}
async _fetchDataPoints(metaData){this.dataPoints=await this.keepLast.add(this._loadDataPoints(metaData));this.metaData=metaData;this._prepareData();}
_getData(dataPoints){const{comparisonField,groupBy,mode}=this.metaData;let identify=false;if(comparisonField&&groupBy.length&&groupBy[0].fieldName===comparisonField){identify=true;}
const dateClasses=identify?this._getDateClasses(dataPoints):null;let labels=[];const labelMap={};for(const dataPt of dataPoints){const x=dataPt.labels.slice(0,mode==="pie"?undefined:1);const trueLabel=x.length?x.join(SEP):_t("Total");if(dateClasses){x[0]=dateClasses.classLabel(dataPt.originIndex,x[0]);}
const key=JSON.stringify(x);if(labelMap[key]===undefined){labelMap[key]=labels.length;if(dateClasses){if(mode==="pie"){x[0]=dateClasses.classMembers(x[0]).join(", ");}else{x[0]=dateClasses.representative(x[0]);}}
const label=x.length?x.join(SEP):_t("Total");labels.push(label);}
dataPt.labelIndex=labelMap[key];dataPt.trueLabel=trueLabel;}
const datasetsTmp={};for(const dataPt of dataPoints){const{domain,labelIndex,originIndex,trueLabel,value,identifier,cumulatedStart,}=dataPt;const datasetLabel=this._getDatasetLabel(dataPt);if(!(datasetLabel in datasetsTmp)){let dataLength=labels.length;if(mode!=="pie"&&dateClasses){dataLength=dateClasses.arrayLength(originIndex);}
datasetsTmp[datasetLabel]={data:new Array(dataLength).fill(0),cumulatedStart,trueLabels:labels.slice(0,dataLength),domains:new Array(dataLength).fill([]),label:datasetLabel,originIndex:originIndex,identifiers:new Set(),};}
datasetsTmp[datasetLabel].data[labelIndex]=value;datasetsTmp[datasetLabel].domains[labelIndex]=domain;datasetsTmp[datasetLabel].trueLabels[labelIndex]=trueLabel;datasetsTmp[datasetLabel].identifiers.add(identifier);}
let datasets=sortBy(Object.values(datasetsTmp),"originIndex");if(mode==="pie"){datasets=datasets.filter((dataset)=>dataset.data.some((v)=>Boolean(v)));const labelsToKeepIndexes={};labels.forEach((_,index)=>{if(datasets.some((dataset)=>Boolean(dataset.data[index]))){labelsToKeepIndexes[index]=true;}});labels=labels.filter((_,index)=>labelsToKeepIndexes[index]);for(const dataset of datasets){dataset.data=dataset.data.filter((_,index)=>labelsToKeepIndexes[index]);dataset.domains=dataset.domains.filter((_,index)=>labelsToKeepIndexes[index]);dataset.trueLabels=dataset.trueLabels.filter((_,index)=>labelsToKeepIndexes[index]);}}
return{datasets,labels};}
_getLabel(description){if(!description){return _t("Sum");}else{return _t("Sum (%s)",description);}}
_getLineOverlayDataset(){const{domains,stacked}=this.metaData;const data=this.data;let lineOverlayDataset=null;if(stacked){const stacks=groupBy(data.datasets,(dataset)=>dataset.originIndex);if(Object.keys(stacks).length==1){const[[originIndex,datasets]]=Object.entries(stacks);if(datasets.length>1){const data=[];for(const dataset of datasets){for(let i=0;i<dataset.data.length;i++){data[i]=(data[i]||0)+dataset.data[i];}}
lineOverlayDataset={label:this._getLabel(domains[originIndex].description),data,trueLabels:datasets[0].trueLabels,};}}}
return lineOverlayDataset;}
_getDatasetLabel(dataPoint){const{measure,measures,domains,mode}=this.metaData;const{labels,originIndex}=dataPoint;if(mode==="pie"){return domains[originIndex].description||"";}
let datasetLabel=labels.slice(1).join(SEP);if(domains.length>1){datasetLabel=domains[originIndex].description+(datasetLabel?SEP+datasetLabel:"");}
datasetLabel=datasetLabel||measures[measure].string;return datasetLabel;}
_getDateClasses(dataPoints){const{domains}=this.metaData;const dateSets=domains.map(()=>new Set());for(const{labels,originIndex}of dataPoints){const date=labels[0];dateSets[originIndex].add(date);}
const arrays=dateSets.map((dateSet)=>[...dateSet]);return new DateClasses(arrays);}
_getDefaultFilterLabel(field){return _t("None");}
_getProcessedDataPoints(){const{domains,groupBy,mode,order}=this.metaData;let processedDataPoints=[];if(mode==="line"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.labels[0]!==this._getDefaultFilterLabel(groupBy[0]));}else if(mode==="pie"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.value>0&&dataPoint.count!==0);}else{processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.count!==0);}
if(order!==null&&mode!=="pie"&&domains.length===1&&groupBy.length>0){const groupedDataPoints={};for(const dataPt of processedDataPoints){const key=dataPt.labels[0];if(!groupedDataPoints[key]){groupedDataPoints[key]=[];}
groupedDataPoints[key].push(dataPt);}
const groups=Object.values(groupedDataPoints);const groupTotal=(group)=>group.reduce((sum,dataPt)=>sum+dataPt.value,0);processedDataPoints=sortBy(groups,groupTotal,order.toLowerCase()).flat();}
return processedDataPoints;}
async _loadDataPoints(metaData){const{measure,domains,fields,groupBy,resModel,cumulatedStart}=metaData;const fieldName=groupBy[0]?.fieldName;const sequential_field=cumulatedStart&&SEQUENTIAL_TYPES.includes(fields[fieldName]?.type)?fieldName:null;const sequential_spec=sequential_field&&groupBy[0].spec;const measures=["__count"];if(measure!=="__count"){let{group_operator,type}=fields[measure];if(type==="many2one"){group_operator="count_distinct";}
if(group_operator===undefined){throw new Error(`No aggregate function has been provided for the measure '${measure}'`);}
measures.push(`${measure}:${group_operator}`);}
const numbering={};const proms=domains.map(async(domain,originIndex)=>{const data=await this.orm.webReadGroup(resModel,domain.arrayRepr,measures,groupBy.map((gb)=>gb.spec),{lazy:false,context:{fill_temporal:true,...this.searchParams.context},});let start=false;if(cumulatedStart&&sequential_field&&data.groups.length&&domain.arrayRepr.some((leaf)=>leaf.length===3&&leaf[0]==sequential_field)){const first_date=data.groups[0].__range[sequential_spec].from;const new_domain=Domain.combine([new Domain([[sequential_field,"<",first_date]]),Domain.removeDomainLeaves(domain.arrayRepr,[sequential_field]),],"AND").toList();start=await this.orm.webReadGroup(resModel,new_domain,measures,groupBy.filter((gb)=>gb.fieldName!=sequential_field).map((gb)=>gb.spec),{lazy:false,context:{...this.searchParams.context},});}
const dataPoints=[];const cumulatedStartValue={};if(start){for(const group of start.groups){const rawValues=[];for(const gb of groupBy.filter((gb)=>gb.fieldName!=sequential_field)){rawValues.push({[gb.spec]:group[gb.spec]});}
cumulatedStartValue[JSON.stringify(rawValues)]=group[measure];}}
for(const group of data.groups){const{__domain,__count}=group;const labels=[];const rawValues=[];for(const gb of groupBy){let label;const val=group[gb.spec];rawValues.push({[gb.spec]:val});const fieldName=gb.fieldName;const{type}=fields[fieldName];if(type==="boolean"){label=`${val}`;}else if(val===false){label=this._getDefaultFilterLabel(gb);}else if(["many2many","many2one"].includes(type)){const[id,name]=val;const key=JSON.stringify([fieldName,name]);if(!numbering[key]){numbering[key]={};}
const numbers=numbering[key];if(!numbers[id]){numbers[id]=Object.keys(numbers).length+1;}
const num=numbers[id];label=num===1?name:`${name} (${num})`;}else if(type==="selection"){const selected=fields[fieldName].selection.find((s)=>s[0]===val);label=selected[1];}else{label=val;}
labels.push(label);}
let value=group[measure];if(value instanceof Array){value=1;}
if(!Number.isInteger(value)){metaData.allIntegers=false;}
const group_id=JSON.stringify(rawValues.slice(1));dataPoints.push({count:__count,domain:__domain,value,labels,originIndex,identifier:JSON.stringify(rawValues),cumulatedStart:cumulatedStartValue[group_id]||0,});}
return dataPoints;});const promResults=await Promise.all(proms);return promResults.flat();}
_normalize(metaData){const{fields}=metaData;const groupBy=[];for(const gb of metaData.groupBy){let ngb=gb;if(typeof gb==="string"){ngb=getGroupBy(gb,fields);}
groupBy.push(ngb);}
const processedGroupBy=[];for(const gb of groupBy){const{fieldName,interval}=gb;const{sortable,type,store}=fields[fieldName];if((type==="many2many"?!store:!sortable)||["id","__count"].includes(fieldName)||!GROUPABLE_TYPES.includes(type)){continue;}
const index=processedGroupBy.findIndex((gb)=>gb.fieldName===fieldName);if(index===-1){processedGroupBy.push(gb);}else if(interval){const registeredInterval=processedGroupBy[index].interval;if(rankInterval(registeredInterval)<rankInterval(interval)){processedGroupBy.splice(index,1,gb);}}}
metaData.groupBy=processedGroupBy;metaData.measure=processMeasure(metaData.measure);}
_prepareData(){const processedDataPoints=this._getProcessedDataPoints();this.data=this._getData(processedDataPoints);this.lineOverlayDataset=null;if(this.metaData.mode==="bar"){this.lineOverlayDataset=this._getLineOverlayDataset();}}}
return __exports;});;

/* /web/static/src/views/graph/graph_renderer.js */
odoo.define('@web/views/graph/graph_renderer',['@web/core/l10n/translation','@web/core/registry','@web/core/colors/colors','@web/views/fields/formatters','@web/views/graph/graph_model','@web/core/utils/arrays','@web/core/assets','@web/core/utils/render','@web/core/utils/hooks','@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{getBorderWhite,DEFAULT_BG,getColor,hexToRGBA}=require("@web/core/colors/colors");const{formatFloat}=require("@web/views/fields/formatters");const{SEP}=require("@web/views/graph/graph_model");const{sortBy}=require("@web/core/utils/arrays");const{loadBundle}=require("@web/core/assets");const{renderToString}=require("@web/core/utils/render");const{useService}=require("@web/core/utils/hooks");const{Component,onWillUnmount,useEffect,useRef,onWillStart}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{cookie}=require("@web/core/browser/cookie");const NO_DATA=_t("No data");const formatters=registry.category("formatters");const LINE_FILL_TRANSPARENCY=__exports.LINE_FILL_TRANSPARENCY=0.4;function getMaxWidth(chartArea){const{left,right}=chartArea;return Math.floor((right-left)/1.618)+"px";}
function shortenLabel(label){const groups=label.toString().split(SEP);let shortLabel=groups.slice(0,3).join(SEP);if(shortLabel.length>30){shortLabel=`${shortLabel.slice(0, 30)}...`;}else if(groups.length>3){shortLabel=`${shortLabel}${SEP}...`;}
return shortLabel;}
const GraphRenderer=__exports.GraphRenderer=class GraphRenderer extends Component{setup(){this.model=this.props.model;this.rootRef=useRef("root");this.canvasRef=useRef("canvas");this.containerRef=useRef("container");this.actionService=useService("action");this.chart=null;this.tooltip=null;this.legendTooltip=null;onWillStart(async()=>{await loadBundle("web.chartjs_lib");});useEffect(()=>this.renderChart());onWillUnmount(this.onWillUnmount);}
onWillUnmount(){if(this.chart){this.chart.destroy();}}
adjustTooltipHeight(tooltip,maxTooltipHeight){const sizeOneLine=tooltip.querySelector("tbody tr").clientHeight;const tbodySize=tooltip.querySelector("tbody").clientHeight;const toKeep=Math.max(0,Math.floor((maxTooltipHeight-(tooltip.clientHeight-tbodySize))/sizeOneLine)-1);const lines=tooltip.querySelectorAll("tbody tr");const toRemove=lines.length-toKeep;if(toRemove>0){for(let index=toKeep;index<lines.length;++index){lines[index].remove();}
const tr=document.createElement("tr");const td=document.createElement("td");tr.classList.add("o_show_more","text-center","fw-bold");td.setAttribute("colspan","2");td.innerText=_t("...");tr.appendChild(td);tooltip.querySelector("tbody").appendChild(tr);}}
customTooltip(data,metaData,context){const tooltipModel=context.tooltip;const{measure,measures,disableLinking,mode}=metaData;this.containerRef.el.style.cursor="";this.removeTooltips();if(tooltipModel.opacity===0||tooltipModel.dataPoints.length===0){return;}
if(!disableLinking&&mode!=="line"){this.containerRef.el.style.cursor="pointer";}
const chartAreaTop=this.chart.chartArea.top;const viewContentTop=this.containerRef.el.getBoundingClientRect().top;const innerHTML=renderToString("web.GraphRenderer.CustomTooltip",{maxWidth:getMaxWidth(this.chart.chartArea),measure:measures[measure].string,mode:this.model.metaData.mode,tooltipItems:this.getTooltipItems(data,metaData,tooltipModel),});const template=Object.assign(document.createElement("template"),{innerHTML});const tooltip=template.content.firstChild;this.containerRef.el.prepend(tooltip);let top;const tooltipHeight=tooltip.clientHeight;const minTopAllowed=Math.floor(chartAreaTop);const maxTopAllowed=Math.floor(window.innerHeight-(viewContentTop+tooltipHeight))-2;const y=Math.floor(tooltipModel.y);if(minTopAllowed<=maxTopAllowed){if(y<=maxTopAllowed){if(y>=minTopAllowed){top=y;}else{top=minTopAllowed;}}else{top=maxTopAllowed;}}else{top=minTopAllowed;const maxTooltipHeight=window.innerHeight-(viewContentTop+chartAreaTop)-2;this.adjustTooltipHeight(tooltip,maxTooltipHeight);}
this.fixTooltipLeftPosition(tooltip,tooltipModel.x);tooltip.style.top=Math.floor(top)+"px";this.tooltip=tooltip;}
fixTooltipLeftPosition(tooltip,x){let left;const tooltipWidth=tooltip.clientWidth;const minLeftAllowed=Math.floor(this.chart.chartArea.left+2);const maxLeftAllowed=Math.floor(this.chart.chartArea.right-tooltipWidth-2);x=Math.floor(x);if(x<minLeftAllowed){left=minLeftAllowed;}else if(x>maxLeftAllowed){left=maxLeftAllowed;}else{left=x;}
tooltip.style.left=`${left}px`;}
formatValue(value,allIntegers=true,formatType=""){const largeNumber=Math.abs(value)>=1000;if(formatType){return formatters.get(formatType)(value);}
if(allIntegers&&!largeNumber){return String(value);}
if(largeNumber){return formatFloat(value,{humanReadable:true,decimals:2,minDigits:1});}
return formatFloat(value);}
getBarChartData(){const{domains,stacked}=this.model.metaData;const{data,lineOverlayDataset}=this.model;for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];if(stacked){dataset.stack=domains[dataset.originIndex].description||"";}
dataset.backgroundColor=getColor(index,cookie.get("color_scheme"));}
if(lineOverlayDataset){const color=cookie.get("color_scheme")==="dark"?"ffffff":"000000";Object.assign(lineOverlayDataset,{type:"line",order:-1,tension:0,fill:false,borderWidth:2,borderDash:[5,4],borderColor:hexToRGBA(color,LINE_FILL_TRANSPARENCY),pointHitRadius:5,pointRadius:5,pointHoverRadius:10,backgroundColor:hexToRGBA(color,LINE_FILL_TRANSPARENCY),});return{...data,datasets:[...data.datasets,lineOverlayDataset],};}
return data;}
getChartConfig(){const{mode}=this.model.metaData;let data;switch(mode){case"bar":data=this.getBarChartData();break;case"line":data=this.getLineChartData();break;case"pie":data=this.getPieChartData();}
const options=this.prepareOptions();return{data,options,type:mode};}
getElementOptions(){const{mode,stacked}=this.model.metaData;const elementOptions={};if(mode==="bar"){elementOptions.bar={borderWidth:1};}else if(mode==="line"){elementOptions.line={fill:stacked,tension:0};}
return elementOptions;}
getLegendOptions(){const{mode}=this.model.metaData;const data=this.model.data;const refLength=mode==="pie"?data.labels.length:data.datasets.length;const legendOptions={display:refLength<=20,position:"top",onHover:this.onlegendHover.bind(this),onLeave:this.onLegendLeave.bind(this),};if(mode==="line"){legendOptions.onClick=this.onLegendClick.bind(this);}
if(mode==="pie"){legendOptions.labels={generateLabels:(chart)=>{return chart.data.labels.map((label,index)=>{const hidden=!chart.getDataVisibility(index);const fullText=label;const text=shortenLabel(fullText);const fillStyle=label===NO_DATA?DEFAULT_BG:getColor(index,cookie.get("color_scheme"));const fontColor=cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null;return{text,fullText,fillStyle,hidden,index,fontColor};});},};}else{const referenceColor=mode==="bar"?"backgroundColor":"borderColor";legendOptions.labels={generateLabels:(chart)=>{const{data}=chart;const labels=data.datasets.map((dataset,index)=>{return{text:shortenLabel(dataset.label),fullText:dataset.label,fillStyle:dataset[referenceColor],hidden:!chart.isDatasetVisible(index),lineCap:dataset.borderCapStyle,lineDash:dataset.borderDash,lineDashOffset:dataset.borderDashOffset,lineJoin:dataset.borderJoinStyle,lineWidth:dataset.borderWidth,strokeStyle:dataset[referenceColor],pointStyle:dataset.pointStyle,datasetIndex:index,fontColor:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,};});return labels;},};}
return legendOptions;}
getLineChartData(){const{groupBy,domains,stacked,cumulated}=this.model.metaData;const data=this.model.data;const color0=getColor(0,cookie.get("color_scheme"));const color1=getColor(1,cookie.get("color_scheme"));for(let index=0;index<data.datasets.length;++index){const dataset=data.datasets[index];if(groupBy.length<=1&&domains.length>1){if(dataset.originIndex===0){dataset.fill="origin";dataset.backgroundColor=hexToRGBA(color0,LINE_FILL_TRANSPARENCY);dataset.borderColor=color0;}else if(dataset.originIndex===1){dataset.borderColor=color1;}else{dataset.borderColor=getColor(index,cookie.get("color_scheme"));}}else{dataset.borderColor=getColor(index,cookie.get("color_scheme"));}
if(cumulated){let accumulator=dataset.cumulatedStart;dataset.data=dataset.data.map((value)=>{accumulator+=value;return accumulator;});}
if(data.labels.length===1){dataset.data.unshift(undefined);dataset.trueLabels.unshift(undefined);dataset.domains.unshift(undefined);}
dataset.pointBackgroundColor=dataset.borderColor;dataset.pointBorderColor="rgba(0,0,0,0.2)";if(stacked){dataset.backgroundColor=hexToRGBA(dataset.borderColor,LINE_FILL_TRANSPARENCY);}}
if(data.datasets.length===1&&data.datasets[0].originIndex===0){const dataset=data.datasets[0];dataset.fill="origin";dataset.backgroundColor=hexToRGBA(color0,LINE_FILL_TRANSPARENCY);}
data.labels=data.labels.length>1?data.labels:["",...data.labels,""];return data;}
getPieChartData(){const{domains}=this.model.metaData;const data=this.model.data;const colors=data.labels.map((_,index)=>getColor(index,cookie.get("color_scheme")));const borderColor=getBorderWhite(cookie.get("color_scheme"));for(const dataset of data.datasets){dataset.backgroundColor=colors;dataset.borderColor=borderColor;}
const representedOriginIndexes=new Set(data.datasets.map((dataset)=>dataset.originIndex));let addNoDataToLegend=false;const fakeData=new Array(data.labels.length+1);fakeData[data.labels.length]=1;const fakeTrueLabels=new Array(data.labels.length+1);fakeTrueLabels[data.labels.length]=NO_DATA;for(let index=0;index<domains.length;++index){if(!representedOriginIndexes.has(index)){data.datasets.push({label:domains[index].description,data:fakeData,trueLabels:fakeTrueLabels,backgroundColor:[...colors,DEFAULT_BG],borderColor,});addNoDataToLegend=true;}}
if(addNoDataToLegend){data.labels.push(NO_DATA);}
return data;}
getScaleOptions(){const labels=this.model.data.labels;const{allIntegers,fieldAttrs,fields,groupBy,measure,measures,mode,stacked}=this.model.metaData;if(mode==="pie"){return{};}
const xAxe={type:"category",title:{display:Boolean(groupBy.length),text:groupBy.length?fields[groupBy[0].fieldName].string:"",color:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,},ticks:{callback:(val,index)=>{const value=labels[index];return shortenLabel(value);},color:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,},};const yAxe={type:"linear",title:{text:measures[measure].string,color:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,},ticks:{callback:(value)=>this.formatValue(value,allIntegers,fieldAttrs[measure]?.widget),color:cookie.get("color_scheme")==="dark"?getColor(15,cookie.get("color_scheme")):null,},suggestedMax:0,suggestedMin:0,stacked:mode==="line"&&stacked?stacked:undefined,};return{x:xAxe,y:yAxe};}
getTooltipItems(data,metaData,tooltipModel){const{allIntegers,domains,mode,groupBy,measure}=metaData;const sortedDataPoints=sortBy(tooltipModel.dataPoints,"raw","desc");const items=[];for(const item of sortedDataPoints){const index=item.dataIndex;const dataset=data.datasets[item.datasetIndex]||this.model.lineOverlayDataset;let label=dataset.trueLabels[index];let value=dataset.data[index];const measureWidget=metaData.fieldAttrs[measure]?.widget;value=this.formatValue(value,allIntegers,measureWidget);let boxColor;let percentage;if(mode==="pie"){if(label===NO_DATA){value=this.formatValue(0,allIntegers,measureWidget);}
if(domains.length>1){label=`${dataset.label} / ${label}`;}
boxColor=dataset.backgroundColor[index];const totalData=dataset.data.reduce((a,b)=>a+b,0);percentage=totalData&&((dataset.data[index]*100)/totalData).toFixed(2);}else{if(groupBy.length>1||domains.length>1){label=`${label} / ${dataset.label}`;}
boxColor=mode==="bar"?dataset.backgroundColor:dataset.borderColor;}
items.push({label,value,boxColor,percentage});}
return items;}
getTooltipOptions(){const{data,metaData}=this.model;const{mode}=metaData;const tooltipOptions={enabled:false,external:this.customTooltip.bind(this,data,metaData),};if(mode==="line"){tooltipOptions.mode="index";tooltipOptions.intersect=false;}
return tooltipOptions;}
onGraphClicked(ev){const[activeElement]=this.chart.getElementsAtEventForMode(ev,"nearest",{intersect:true},false);if(!activeElement){return;}
const{datasetIndex,index}=activeElement;const{domains}=this.chart.data.datasets[datasetIndex];if(domains){this.onGraphClickedFinal(domains[index]);}}
onLegendClick(ev,legendItem){this.removeTooltips();const index=legendItem.datasetIndex;const meta=this.chart.getDatasetMeta(index);meta.hidden=meta.hidden===null?!this.chart.data.datasets[index].hidden:null;this.chart.update();}
onlegendHover(ev,legendItem){ev=ev.native;this.canvasRef.el.style.cursor="pointer";const{fullText,text}=legendItem;if(this.legendTooltip||text===fullText){return;}
const viewContentTop=this.canvasRef.el.getBoundingClientRect().top;const legendTooltip=Object.assign(document.createElement("div"),{className:"o_tooltip_legend popover p-3 pe-none",innerText:fullText,});legendTooltip.style.top=`${ev.clientY - viewContentTop}px`;legendTooltip.style.maxWidth=getMaxWidth(this.chart.chartArea);this.containerRef.el.appendChild(legendTooltip);this.fixTooltipLeftPosition(legendTooltip,ev.clientX);this.legendTooltip=legendTooltip;}
onLegendLeave(){this.canvasRef.el.style.cursor="";this.removeLegendTooltip();}
prepareOptions(){const{disableLinking,mode}=this.model.metaData;const options={maintainAspectRatio:false,scales:this.getScaleOptions(),plugins:{legend:this.getLegendOptions(),tooltip:this.getTooltipOptions(),},elements:this.getElementOptions(),};if(!disableLinking&&mode!=="line"){options.onClick=this.onGraphClicked.bind(this);}
return options;}
removeLegendTooltip(){if(this.legendTooltip){this.legendTooltip.remove();this.legendTooltip=null;}}
removeTooltips(){if(this.tooltip){this.tooltip.remove();this.tooltip=null;}
this.removeLegendTooltip();}
renderChart(){if(this.chart){this.chart.destroy();}
const config=this.getChartConfig();this.chart=new Chart(this.canvasRef.el,config);}
openView(domain,views,context){this.actionService.doAction({context,domain,name:this.model.metaData.title,res_model:this.model.metaData.resModel,target:"current",type:"ir.actions.act_window",views,},{viewType:"list",});}
onGraphClickedFinal(domain){const{context}=this.model.metaData;Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const views={};for(const[viewId,viewType]of this.env.config.views||[]){views[viewType]=viewId;}
function getView(viewType){return[views[viewType]||false,viewType];}
const actionViews=[getView("list"),getView("form")];this.openView(domain,actionViews,context);}
onMeasureSelected({measure}){this.model.updateMetaData({measure});}
onModeSelected(mode){this.model.updateMetaData({mode});}
toggleOrder(order){const{order:currentOrder}=this.model.metaData;const nextOrder=currentOrder===order?null:order;this.model.updateMetaData({order:nextOrder});}
toggleStacked(){const{stacked}=this.model.metaData;this.model.updateMetaData({stacked:!stacked});}
toggleCumulated(){const{cumulated}=this.model.metaData;this.model.updateMetaData({cumulated:!cumulated});}}
GraphRenderer.template="web.GraphRenderer";GraphRenderer.components={Dropdown,DropdownItem};GraphRenderer.props=["class?","model","buttonTemplate"];return __exports;});;

/* /web/static/src/views/graph/graph_search_model.js */
odoo.define('@web/views/graph/graph_search_model',['@web/search/search_model'],function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const GraphSearchModel=__exports.GraphSearchModel=class GraphSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.graph_groupbys){return context.graph_groupbys;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/graph/graph_view.js */
odoo.define('@web/views/graph/graph_view',['@web/core/l10n/translation','@web/core/registry','@web/views/graph/graph_arch_parser','@web/views/graph/graph_model','@web/views/graph/graph_controller','@web/views/graph/graph_renderer','@web/views/graph/graph_search_model'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{GraphArchParser}=require("@web/views/graph/graph_arch_parser");const{GraphModel}=require("@web/views/graph/graph_model");const{GraphController}=require("@web/views/graph/graph_controller");const{GraphRenderer}=require("@web/views/graph/graph_renderer");const{GraphSearchModel}=require("@web/views/graph/graph_search_model");const viewRegistry=registry.category("views");const graphView=__exports.graphView={type:"graph",display_name:_t("Graph"),icon:"fa fa-area-chart",multiRecord:true,Controller:GraphController,Renderer:GraphRenderer,Model:GraphModel,ArchParser:GraphArchParser,SearchModel:GraphSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],buttonTemplate:"web.GraphView.Buttons",props:(genericProps,view)=>{let modelParams;if(genericProps.state){modelParams=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const parser=new view.ArchParser();const archInfo=parser.parse(arch,fields);modelParams={disableLinking:Boolean(archInfo.disableLinking),fieldAttrs:archInfo.fieldAttrs,fields:fields,groupBy:archInfo.groupBy,measure:archInfo.measure||"__count",viewMeasures:archInfo.measures,mode:archInfo.mode||"bar",order:archInfo.order||null,resModel:resModel,stacked:"stacked"in archInfo?archInfo.stacked:true,cumulated:archInfo.cumulated||false,cumulatedStart:archInfo.cumulatedStart||false,title:archInfo.title||_t("Untitled"),};}
return{...genericProps,modelParams,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,};},};viewRegistry.add("graph",graphView);return __exports;});;

/* /web/static/src/views/kanban/kanban_arch_parser.js */
odoo.define('@web/views/kanban/kanban_arch_parser',['@web/core/utils/xml','@web/search/utils/order_by','@web/views/fields/field','@web/views/widgets/widget','@web/views/utils'],function(require){'use strict';let __exports={};const{extractAttributes,visitXML}=require("@web/core/utils/xml");const{stringToOrderBy}=require("@web/search/utils/order_by");const{Field}=require("@web/views/fields/field");const{Widget}=require("@web/views/widgets/widget");const{archParseBoolean,getActiveActions,processButton}=require("@web/views/utils");const KANBAN_BOX_ATTRIBUTE=__exports.KANBAN_BOX_ATTRIBUTE="kanban-box";const KANBAN_MENU_ATTRIBUTE=__exports.KANBAN_MENU_ATTRIBUTE="kanban-menu";const KANBAN_TOOLTIP_ATTRIBUTE=__exports.KANBAN_TOOLTIP_ATTRIBUTE="kanban-tooltip";const KanbanArchParser=__exports.KanbanArchParser=class KanbanArchParser{parse(xmlDoc,models,modelName){const fields=models[modelName];const className=xmlDoc.getAttribute("class")||null;let defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const defaultGroupBy=xmlDoc.getAttribute("default_group_by");const limit=xmlDoc.getAttribute("limit");const countLimit=xmlDoc.getAttribute("count_limit");const recordsDraggable=archParseBoolean(xmlDoc.getAttribute("records_draggable"),true);const groupsDraggable=archParseBoolean(xmlDoc.getAttribute("groups_draggable"),true);const activeActions=getActiveActions(xmlDoc);activeActions.archiveGroup=archParseBoolean(xmlDoc.getAttribute("archivable"),true);activeActions.createGroup=archParseBoolean(xmlDoc.getAttribute("group_create"),true);activeActions.deleteGroup=archParseBoolean(xmlDoc.getAttribute("group_delete"),true);activeActions.editGroup=archParseBoolean(xmlDoc.getAttribute("group_edit"),true);activeActions.quickCreate=activeActions.create&&archParseBoolean(xmlDoc.getAttribute("quick_create"),true);const onCreate=xmlDoc.getAttribute("on_create");const quickCreateView=xmlDoc.getAttribute("quick_create_view");const tooltipInfo={};let handleField=null;const fieldNodes={};const fieldNextIds={};const widgetNodes={};let widgetNextId=0;const jsClass=xmlDoc.getAttribute("js_class");const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");const openAction=action&&type?{action,type}:null;const templateDocs={};let headerButtons=[];const creates=[];let button_id=0;visitXML(xmlDoc,(node)=>{if(node.hasAttribute("t-name")){templateDocs[node.getAttribute("t-name")]=node;return;}
if(node.tagName==="header"){headerButtons=[...node.children].filter((node)=>node.tagName==="button").map((node)=>({...processButton(node),type:"button",id:button_id++,})).filter((button)=>button.invisible!=="True"&&button.invisible!=="1");return false;}else if(node.tagName==="control"){for(const childNode of node.children){if(childNode.tagName==="button"){creates.push({type:"button",...processButton(childNode),});}else if(childNode.tagName==="create"){creates.push({type:"create",context:childNode.getAttribute("context"),string:childNode.getAttribute("string"),});}}
return false;}
if(node.tagName==="field"){const widget=node.getAttribute("widget");if(!widget&&models[modelName][node.getAttribute("name")].type==="many2many"){node.setAttribute("widget","many2many_tags");}
const fieldInfo=Field.parseFieldNode(node,models,modelName,"kanban",jsClass);if(!node.hasAttribute("force_save")){fieldInfo.forceSave=true;}
const name=fieldInfo.name;if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(fieldInfo.options.group_by_tooltip){tooltipInfo[name]=fieldInfo.options.group_by_tooltip;}
if(fieldInfo.isHandle){handleField=name;}}
if(node.tagName==="widget"){const widgetInfo=Widget.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);}
if(node.tagName==="img"){const attSrc=node.getAttribute("t-att-src");if(attSrc&&/\bkanban_image\b/.test(attSrc)&&!Object.values(fieldNodes).some((f)=>f.name==="write_date")){fieldNodes.write_date_0={name:"write_date",type:"datetime"};}}});let progressAttributes=false;const progressBar=xmlDoc.querySelector("progressbar");if(progressBar){progressAttributes=this.parseProgressBar(progressBar,fields);}
const cardDoc=templateDocs[KANBAN_BOX_ATTRIBUTE];if(!cardDoc){throw new Error(`Missing '${KANBAN_BOX_ATTRIBUTE}' template.`);}
const cardColorEl=cardDoc.querySelector("[color]");const cardColorField=cardColorEl&&cardColorEl.getAttribute("color");const colorEl=xmlDoc.querySelector("templates .oe_kanban_colorpicker[data-field]");const colorField=(colorEl&&colorEl.getAttribute("data-field"))||"color";if(!defaultOrder.length&&handleField){defaultOrder=stringToOrderBy(handleField);}
return{activeActions,className,creates,defaultGroupBy,fieldNodes,widgetNodes,handleField,headerButtons,colorField,defaultOrder,onCreate,openAction,quickCreateView,recordsDraggable,groupsDraggable,limit:limit&&parseInt(limit,10),countLimit:countLimit&&parseInt(countLimit,10),progressAttributes,cardColorField,templateDocs,tooltipInfo,examples:xmlDoc.getAttribute("examples"),xmlDoc,};}
parseProgressBar(progressBar,fields){const attrs=extractAttributes(progressBar,["field","colors","sum_field","help"]);return{fieldName:attrs.field,colors:JSON.parse(attrs.colors),sumField:fields[attrs.sum_field]||false,help:attrs.help,};}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_column_examples_dialog.js */
odoo.define('@web/views/kanban/kanban_column_examples_dialog',['@web/core/dialog/dialog','@web/core/notebook/notebook','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{Notebook}=require("@web/core/notebook/notebook");const{_t}=require("@web/core/l10n/translation");const{Component,useRef}=require("@odoo/owl");const random=(min,max)=>Math.floor(Math.random()*(max-min)+min);class KanbanExamplesNotebookTemplate extends Component{static defaultProps={columns:[],foldedColumns:[],};setup(){this.columns=[];const hasBullet=this.props.bullets&&this.props.bullets.length;const allColumns=[...this.props.columns,...this.props.foldedColumns];for(const title of allColumns){const col={title,records:[]};this.columns.push(col);for(let i=0;i<random(1,5);i++){const rec={id:i};if(hasBullet&&Math.random()>0.3){const sampleId=Math.floor(Math.random()*this.props.bullets.length);rec.bullet=this.props.bullets[sampleId];}
col.records.push(rec);}}}}
KanbanExamplesNotebookTemplate.template="web.KanbanExamplesNotebookTemplate";const KanbanColumnExamplesDialog=__exports.KanbanColumnExamplesDialog=class KanbanColumnExamplesDialog extends Component{setup(){this.navList=useRef("navList");this.pages=[];this.activePage=null;this.props.examples.forEach((eg)=>{this.pages.push({Component:KanbanExamplesNotebookTemplate,title:eg.name,props:eg,id:eg.name,});});}
onPageUpdate(page){this.activePage=page;}
applyExamples(){const index=this.props.examples.findIndex((e)=>e.name===this.activePage);this.props.applyExamples(index);this.props.close();}}
KanbanColumnExamplesDialog.template="web.KanbanColumnExamplesDialog";KanbanColumnExamplesDialog.components={Dialog,Notebook};KanbanColumnExamplesDialog.title=_t("Kanban Examples");return __exports;});;

/* /web/static/src/views/kanban/kanban_column_quick_create.js */
odoo.define('@web/views/kanban/kanban_column_quick_create',['@web/core/l10n/translation','@web/core/hotkeys/hotkey_hook','@web/core/utils/hooks','@web/views/kanban/kanban_column_examples_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{KanbanColumnExamplesDialog}=require("@web/views/kanban/kanban_column_examples_dialog");const{Component,useExternalListener,useState,useRef}=require("@odoo/owl");const KanbanColumnQuickCreate=__exports.KanbanColumnQuickCreate=class KanbanColumnQuickCreate extends Component{setup(){this.dialog=useService("dialog");this.root=useRef("root");this.state=useState({hasInputFocused:false,});useAutofocus();this.inputRef=useRef("autofocus");useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{const target=this.mousedownTarget||ev.target;const gotClickedInside=this.root.el.contains(target);if(!gotClickedInside){this.fold();}
this.mousedownTarget=null;},{capture:true});useHotkey("escape",()=>this.fold());}
get canShowExamples(){const{allowedGroupBys=[],examples=[]}=this.props.exampleData||{};const hasExamples=Boolean(examples.length);return hasExamples&&allowedGroupBys.includes(this.props.groupByField.name);}
get relatedFieldName(){return this.props.groupByField.string;}
fold(){this.props.onFoldChange(true);}
unfold(){this.props.onFoldChange(false);}
validate(){const title=this.inputRef.el.value.trim();if(title.length){this.props.onValidate(title);this.inputRef.el.value="";}}
showExamples(){this.dialog.add(KanbanColumnExamplesDialog,{examples:this.props.exampleData.examples,applyExamplesText:this.props.exampleData.applyExamplesText||_t("Use This For My Kanban"),applyExamples:(index)=>{const{examples,foldField}=this.props.exampleData;const{columns,foldedColumns=[]}=examples[index];for(const groupName of columns){this.props.onValidate(groupName);}
for(const groupName of foldedColumns){this.props.onValidate(groupName,foldField);}},});}
onInputKeydown(ev){if(ev.key==="Enter"){this.validate();}}}
KanbanColumnQuickCreate.props={exampleData:[Object,{value:null}],onFoldChange:Function,onValidate:Function,folded:Boolean,groupByField:Object,};KanbanColumnQuickCreate.template="web.KanbanColumnQuickCreate";return __exports;});;

/* /web/static/src/views/kanban/kanban_compiler.js */
odoo.define('@web/views/kanban/kanban_compiler',['@web/core/utils/xml','@web/views/utils','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,extractAttributes,getTag,}=require("@web/core/utils/xml");const{toStringExpression}=require("@web/views/utils");const{toInterpolatedStringExpression,ViewCompiler}=require("@web/views/view_compiler");const ACTION_TYPES=["action","object"];const SPECIAL_TYPES=[...ACTION_TYPES,"edit","open","delete","url","set_cover"];const KanbanCompiler=__exports.KanbanCompiler=class KanbanCompiler extends ViewCompiler{setup(){this.ctx.readonly="read_only_mode";this.compilers.push({selector:".oe_kanban_colorpicker",fn:this.compileColorPicker},{selector:"t[t-call]",fn:this.compileTCall},{selector:"img",fn:this.compileImage});}
compileButton(el,params){if(el.hasAttribute("data-type")){for(const{name,value}of el.attributes){el.setAttribute(name.replace(/^data-/,""),value);}}
const type=el.getAttribute("type");if(!SPECIAL_TYPES.includes(type)){return super.compileButton(el,params);}
combineAttributes(el,"class",["oe_kanban_action",`oe_kanban_action_${getTag(el, true)}`,]);if(ACTION_TYPES.includes(type)){if(!el.hasAttribute("debounce")){el.setAttribute("debounce",300);}
return super.compileButton(el,params);}
const nodeParams=extractAttributes(el,["type"]);if(type==="set_cover"){const{"auto-open":autoOpen,"data-field":fieldName}=extractAttributes(el,["auto-open","data-field",]);Object.assign(nodeParams,{autoOpen,fieldName});}
const strParams=Object.entries(nodeParams).map(([k,v])=>[k,toStringExpression(v)].join(":")).join(",");el.setAttribute("t-on-click",`()=>__comp__.triggerAction({${strParams}})`);const compiled=createElement(el.nodeName);for(const{name,value}of el.attributes){compiled.setAttribute(name,value);}
if(getTag(el,true)==="a"&&!compiled.hasAttribute("href")){compiled.setAttribute("href","#");}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
return compiled;}
compileImage(el){const element=el.cloneNode(true);element.setAttribute("loading","lazy");return element;}
compileColorPicker(){return createElement("t",{"t-call":"web.KanbanColorPicker","t-call-context":"__comp__",});}
compileField(el,params){let compiled;let isSpan=false;const recordExpr=params.recordExpr||'__comp__.props.record';const dataPointIdExpr=params.dataPointIdExpr||`${recordExpr}.id`;if(!el.hasAttribute("widget")){isSpan=true;const fieldId=el.getAttribute("field_id");compiled=createElement("span",{"t-out":params.formattedValueExpr||`__comp__.getFormattedValue("${fieldId}")`,});}else{compiled=super.compileField(el,params);const fieldId=el.getAttribute("field_id");compiled.setAttribute("id",`'${fieldId}_' + ${dataPointIdExpr}`);const readonlyAttr=compiled.getAttribute("readonly");if(readonlyAttr){compiled.setAttribute("readonly",`${recordExpr}.isInEdition || (${readonlyAttr})`);}else{compiled.setAttribute("readonly",`${recordExpr}.isInEdition`);}}
const{bold,display}=extractAttributes(el,["bold","display"]);const classNames=[];if(display==="right"){classNames.push("float-end");}else if(display==="full"){classNames.push("o_text_block");}
if(bold){classNames.push("o_text_bold");}
if(classNames.length>0){const clsFormatted=isSpan?classNames.join(" "):toStringExpression(classNames.join(" "));compiled.setAttribute("class",clsFormatted);}
const attrs={};for(const attr of el.attributes){attrs[attr.name]=attr.value;}
if(el.hasAttribute("widget")){const attrsParts=Object.entries(attrs).map(([key,value])=>{if(key.startsWith("t-attf-")){key=key.slice(7);value=toInterpolatedStringExpression(value);}else if(key.startsWith("t-att-")){key=key.slice(6);value=`"" + (${value})`;}else if(key.startsWith("t-att")){throw new Error("t-att on <field> nodes is not supported");}else if(!key.startsWith("t-")){value=toStringExpression(value);}
return`'${key}':${value}`;});compiled.setAttribute("attrs",`{${attrsParts.join(",")}}`);}
for(const attr in attrs){if(attr.startsWith("t-")&&!attr.startsWith("t-att")){compiled.setAttribute(attr,attrs[attr]);}}
return compiled;}
compileTCall(el,params){const compiled=this.compileGenericNode(el,params);const tname=el.getAttribute("t-call");if(tname in this.templates){compiled.setAttribute("t-call",`{{__comp__.templates[${toStringExpression(tname)}]}}`);}
return compiled;}}
KanbanCompiler.OWL_DIRECTIVE_WHITELIST=[...ViewCompiler.OWL_DIRECTIVE_WHITELIST,"t-name","t-esc","t-out","t-set","t-value","t-if","t-else","t-elif","t-foreach","t-as","t-key","t-att.*","t-call","t-translation",];return __exports;});;

/* /web/static/src/views/kanban/kanban_controller.js */
odoo.define('@web/views/kanban/kanban_controller',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/search/cog_menu/cog_menu','@web/core/py_js/py','@web/search/layout','@web/search/pager_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/session','@web/views/view_hook','@web/model/model','@web/views/standard_view_props','@web/views/view_button/multi_record_view_button','@web/views/view_button/view_button_hook','@web/model/relational_model/utils','@web/views/kanban/kanban_renderer','@web/views/kanban/progress_bar_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{deleteConfirmationMessage,ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{session}=require("@web/session");const{useSetupView}=require("@web/views/view_hook");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{MultiRecordViewButton}=require("@web/views/view_button/multi_record_view_button");const{useViewButtons}=require("@web/views/view_button/view_button_hook");const{addFieldDependencies,extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const{useProgressBar}=require("@web/views/kanban/progress_bar_hook");const{Component,reactive,useRef,useState}=require("@odoo/owl");const QUICK_CREATE_FIELD_TYPES=["char","boolean","many2one","selection","many2many"];const KanbanController=__exports.KanbanController=class KanbanController extends Component{setup(){this.actionService=useService("action");this.dialog=useService("dialog");const{Model,archInfo}=this.props;class KanbanSampleModel extends Model{setup(){super.setup(...arguments);this.initialSampleGroups=undefined;}
hasData(){if(this.root.groups){if(!this.root.groups.length){return true;}
return this.root.groups.some((group)=>group.hasData);}
return super.hasData();}
async load(){if(this.orm.isSample&&this.initialSampleGroups){this.orm.setGroups(this.initialSampleGroups);}
return super.load(...arguments);}
async _webReadGroup(){const result=await super._webReadGroup(...arguments);if(!this.initialSampleGroups){this.initialSampleGroups=JSON.parse(JSON.stringify(result.groups));}
return result;}
removeSampleDataInGroups(){if(this.useSampleModel){for(const group of this.root.groups){const list=group.list;group.count=0;list.count=0;if(list.records){list.records=[];}else{list.groups=[];}}}}}
this.model=useState(useModelWithSampleData(KanbanSampleModel,this.modelParams,this.modelOptions));if(archInfo.progressAttributes){const{activeBars}=this.props.state||{};this.progressBarState=useProgressBar(archInfo.progressAttributes,this.model,this.progressBarAggregateFields,activeBars);}
this.headerButtons=archInfo.headerButtons;const self=this;this.quickCreateState=reactive({get groupId(){return this._groupId||false;},set groupId(groupId){if(self.model.useSampleModel){self.model.removeSampleDataInGroups();self.model.useSampleModel=false;}
this._groupId=groupId;},view:archInfo.quickCreateView,});this.rootRef=useRef("root");useViewButtons(this.model,this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});useSetupView({rootRef:this.rootRef,getGlobalState:()=>{return{resIds:this.model.root.records.map((rec)=>rec.resId),};},getLocalState:()=>{return{activeBars:this.progressBarState?.activeBars,modelState:this.model.exportState(),};},});usePager(()=>{const root=this.model.root;const{count,hasLimitedCount,isGrouped,limit,offset}=root;if(!isGrouped){return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit})=>{await this.model.root.load({offset,limit});await this.onUpdatedPager();},updateTotal:hasLimitedCount?()=>root.fetchCount():undefined,};}});this.searchBarToggler=useSearchBarToggler();}
get modelParams(){const{resModel,archInfo,limit,defaultGroupBy}=this.props;const{activeFields,fields}=extractFieldsFromArchInfo(archInfo,this.props.fields);addFieldDependencies(activeFields,fields,this.progressBarAggregateFields);const modelConfig=this.props.state?.modelState?.config||{resModel,activeFields,fields,openGroupsByDefault:true,};return{config:modelConfig,state:this.props.state?.modelState,limit:archInfo.limit||limit||40,groupsLimit:Number.MAX_SAFE_INTEGER,countLimit:archInfo.countLimit,defaultGroupBy,defaultOrderBy:archInfo.defaultOrder,maxGroupByDepth:1,activeIdsLimit:session.active_ids_limit,hooks:{onRecordSaved:this.onRecordSaved.bind(this),},};}
get modelOptions(){return{};}
get progressBarAggregateFields(){const res=[];const{progressAttributes}=this.props.archInfo;if(progressAttributes&&progressAttributes.sumField){res.push(progressAttributes.sumField);}
return res;}
get className(){if(this.env.isSmall&&this.model.root.isGrouped){const classList=(this.props.className||"").split(" ");classList.push("o_action_delegate_scroll");return classList.join(" ");}
return this.props.className;}
async deleteRecord(record){this.dialog.add(ConfirmationDialog,{title:_t("Bye-bye, record!"),body:deleteConfirmationMessage,confirm:()=>this.model.root.deleteRecords([record]),confirmLabel:_t("Delete"),cancel:()=>{},cancelLabel:_t("No, keep it"),});}
evalViewModifier(modifier){return evaluateBooleanExpr(modifier,{context:this.props.context});}
async openRecord(record,mode){const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds,mode});}
async createRecord(){const{onCreate}=this.props.archInfo;const{root}=this.model;if(this.canQuickCreate&&onCreate==="quick_create"){const firstGroup=root.groups[0];if(firstGroup.isFolded){await firstGroup.toggle();}
this.quickCreateState.groupId=firstGroup.id;}else if(onCreate&&onCreate!=="quick_create"){const options={additionalContext:root.context,onClose:async()=>{await root.load();this.model.useSampleModel=false;this.render(true);},};await this.actionService.doAction(onCreate,options);}else{await this.props.createRecord();}}
get canCreate(){const{create,createGroup}=this.props.archInfo.activeActions;const list=this.model.root;if(!create){return false;}
if(list.isGrouped){if(list.groupByField.type!=="many2one"){return true;}
return list.groups.length||!createGroup;}
return true;}
get canQuickCreate(){const{activeActions}=this.props.archInfo;if(!activeActions.quickCreate){return false;}
const list=this.model.root;if(list.groups&&!list.groups.length){return false;}
return this.isQuickCreateField(list.groupByField);}
onRecordSaved(record){if(this.model.root.isGrouped){const group=this.model.root.groups.find((l)=>l.records.find((r)=>r.id===record.id));this.progressBarState?.updateCounts(group);}}
async beforeExecuteActionButton(clickParams){}
async afterExecuteActionButton(clickParams){}
async onUpdatedPager(){}
scrollTop(){this.rootRef.el.querySelector(".o_content").scrollTo({top:0});}
isQuickCreateField(field){return field&&QUICK_CREATE_FIELD_TYPES.includes(field.type);}}
KanbanController.template=`web.KanbanView`;KanbanController.components={Layout,KanbanRenderer,MultiRecordViewButton,SearchBar,CogMenu};KanbanController.props={...standardViewProps,defaultGroupBy:{validate:(dgb)=>!dgb||typeof dgb==="string",optional:true,},editable:{type:Boolean,optional:true},forceGlobalClick:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Compiler:{type:Function,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};KanbanController.defaultProps={createRecord:()=>{},forceGlobalClick:false,selectRecord:()=>{},showButtons:true,};return __exports;});;

/* /web/static/src/views/kanban/kanban_cover_image_dialog.js */
odoo.define('@web/views/kanban/kanban_cover_image_dialog',['@web/core/dialog/dialog','@web/core/file_input/file_input','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{FileInput}=require("@web/core/file_input/file_input");const{useService}=require("@web/core/utils/hooks");const{Component,useState,onWillStart}=require("@odoo/owl");let nextDialogId=1;const KanbanCoverImageDialog=__exports.KanbanCoverImageDialog=class KanbanCoverImageDialog extends Component{setup(){this.id=`o_cover_image_upload_${nextDialogId++}`;this.orm=useService("orm");this.http=useService("http");const{record,fieldName}=this.props;const attachment=(record&&record.data[fieldName])||[];this.state=useState({selectFile:false,selectedAttachmentId:attachment[0],});onWillStart(async()=>{this.attachments=await this.orm.searchRead("ir.attachment",[["res_model","=",record.resModel],["res_id","=",record.resId],["mimetype","ilike","image"],],["id"]);this.state.selectFile=this.props.autoOpen&&this.attachments.length;});}
get hasCoverImage(){return Boolean(this.props.record.data[this.props.fieldName]);}
onUpload([attachment]){if(!attachment){return;}
this.state.selectFile=false;this.selectAttachment(attachment,true);}
selectAttachment(attachment,setSelected){if(this.state.selectedAttachmentId!==attachment.id){this.state.selectedAttachmentId=attachment.id;}else{this.state.selectedAttachmentId=null;}
if(setSelected){this.setCover();}}
removeCover(){this.state.selectedAttachmentId=null;this.setCover();}
async setCover(){const id=this.state.selectedAttachmentId?[this.state.selectedAttachmentId]:false;await this.props.record.update({[this.props.fieldName]:id},{save:true});this.props.close();}
uploadImage(){this.state.selectFile=true;}}
KanbanCoverImageDialog.template="web.KanbanCoverImageDialog";KanbanCoverImageDialog.components={Dialog,FileInput};return __exports;});;

/* /web/static/src/views/kanban/kanban_dropdown_menu_wrapper.js */
odoo.define('@web/views/kanban/kanban_dropdown_menu_wrapper',['@odoo/owl','@web/core/dropdown/dropdown'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{DROPDOWN}=require("@web/core/dropdown/dropdown");const KanbanDropdownMenuWrapper=__exports.KanbanDropdownMenuWrapper=class KanbanDropdownMenuWrapper extends Component{onClick(ev){this.env[DROPDOWN].closeAllParents();}}
KanbanDropdownMenuWrapper.template="web.KanbanDropdownMenuWrapper";KanbanDropdownMenuWrapper.props={slots:Object,};return __exports;});;

/* /web/static/src/views/kanban/kanban_header.js */
odoo.define('@web/views/kanban/kanban_header',['@web/core/l10n/translation','@odoo/owl','@web/core/confirmation_dialog/confirmation_dialog','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/popover/popover_hook','@web/core/utils/functions','@web/core/utils/hooks','@web/core/utils/timing','@web/model/relational_model/utils','@web/views/utils','@web/views/view_components/column_progress','@web/views/view_dialogs/form_view_dialog','@web/core/registry','@web/core/ui/ui_service'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useRef}=require("@odoo/owl");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{usePopover}=require("@web/core/popover/popover_hook");const{memoize}=require("@web/core/utils/functions");const{useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{isRelational}=require("@web/model/relational_model/utils");const{isNull}=require("@web/views/utils");const{ColumnProgress}=require("@web/views/view_components/column_progress");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{registry}=require("@web/core/registry");const{utils}=require("@web/core/ui/ui_service");class KanbanHeaderTooltip extends Component{static template="web.KanbanGroupTooltip";}
const KanbanHeader=__exports.KanbanHeader=class KanbanHeader extends Component{static template="web.KanbanHeader";static components={ColumnProgress,Dropdown,DropdownItem};static props={activeActions:{type:Object},canQuickCreate:{type:Boolean},deleteGroup:{type:Function},dialogClose:{type:Array},group:{type:Object},list:{type:Object},quickCreateState:{type:Object},scrollTop:{type:Function},tooltipInfo:{type:Object},progressBarState:{type:true,optional:true},};setup(){this.dialog=useService("dialog");this.orm=useService("orm");this.rootRef=useRef("root");this.popover=usePopover(KanbanHeaderTooltip);this.onTitleMouseEnter=useDebounced(this.onTitleMouseEnter,400);}
async onTitleMouseEnter(ev){if(!this.hasTooltip){return;}
const tooltip=await this.loadTooltip();if(tooltip.length){this.popover.open(ev.target,{tooltip});}}
onTitleMouseLeave(){this.onTitleMouseEnter.cancel();this.popover.close();}
get _configDropdownContainer(){return this.rootRef.el.closest(`.o_kanban_group[data-id="${this.props.group.id}"]`);}
get configItems(){const args={permissions:this.permissions,props:this.props};return registry.category("kanban_header_config_items").getEntries().map(([key,desc])=>({key,method:desc.method,label:desc.label,isVisible:typeof desc.isVisible==="function"?desc.isVisible(args):desc.isVisible,class:typeof desc.class==="function"?desc.class(args):desc.class,}));}
get progressBar(){return this.props.progressBarState?.getGroupInfo(this.group);}
get group(){return this.props.group;}
_getEmptyGroupLabel(fieldName){return _t("None");}
get groupName(){const{groupByField,displayName}=this.group;let name=displayName;if(groupByField.type==="boolean"){name=name?_t("Yes"):_t("No");}else if(!name){if(isRelational(groupByField)||groupByField.type==="date"||groupByField.type==="datetime"||isNull(name)){name=this._getEmptyGroupLabel(groupByField.name);}}
return name;}
get groupAggregate(){const{group,progressBarState}=this.props;const{sumField}=progressBarState.progressAttributes;return progressBarState.getAggregateValue(group,sumField);}
get hasTooltip(){const{name,type}=this.group.groupByField;return type==="many2one"&&this.group.value&&name in this.props.tooltipInfo;}
loadTooltip=memoize(async()=>{const{name,relation:resModel}=this.group.groupByField;const tooltipInfo=this.props.tooltipInfo[name];const fieldNames=Object.keys(tooltipInfo);const[values]=await this.orm.silent.read(resModel,[this.group.value],["display_name",...fieldNames]);return fieldNames.filter((fieldName)=>values[fieldName]).map((fieldName)=>({title:tooltipInfo[fieldName],value:values[fieldName]}));});archiveGroup(){this.dialog.add(ConfirmationDialog,{body:_t("Are you sure that you want to archive all the records from this column?"),confirmLabel:_t("Archive All"),confirm:()=>this.group.list.archive(),cancel:()=>{},});}
unarchiveGroup(){this.group.list.unarchive();}
deleteGroup(){this.dialog.add(ConfirmationDialog,{body:_t("Are you sure you want to delete this column?"),confirm:async()=>{this.props.deleteGroup(this.group);},confirmLabel:_t("Delete"),cancel:()=>{},});}
editGroup(){const{context,displayName,groupByField,value}=this.group;this.props.dialogClose.push(this.dialog.add(FormViewDialog,{context,resId:value,resModel:groupByField.relation,title:_t("Edit: %s",displayName),onRecordSaved:async()=>{await this.props.list.load();this.props.list.model.notify();},}));}
quickCreate(group){this.props.quickCreateState.groupId=this.group.id;}
toggleGroup(){return this.group.toggle();}
get permissions(){return["canArchiveGroup","canDeleteGroup","canEditGroup","canQuickCreate"].reduce((o,key)=>{Object.defineProperty(o,key,{get:()=>this[key]()});return o;},{});}
canArchiveGroup(){const{archiveGroup}=this.props.activeActions;const hasActiveField="active"in this.group.fields;return archiveGroup&&hasActiveField&&this.group.groupByField.type!=="many2many";}
canDeleteGroup(){const{deleteGroup}=this.props.activeActions;const{groupByField,value}=this.group;return deleteGroup&&isRelational(groupByField)&&value;}
canEditGroup(){const{editGroup}=this.props.activeActions;const{groupByField,value}=this.group;return editGroup&&isRelational(groupByField)&&value;}
canQuickCreate(){return this.props.canQuickCreate;}
async onBarClicked(value){await this.props.progressBarState.selectBar(this.props.group.id,value);this.props.scrollTop();}}
const kanbanHeaderConfigItems=registry.category("kanban_header_config_items");kanbanHeaderConfigItems.add("toggle_group",{label:_t("Fold"),method:"toggleGroup",isVisible:()=>!utils.isSmall(),class:({props})=>({o_kanban_toggle_fold:true,disabled:props.list.model.useSampleModel,}),},{sequence:10});kanbanHeaderConfigItems.add("edit_group",{label:_t("Edit"),method:"editGroup",isVisible:({permissions})=>permissions.canEditGroup,class:"o_column_edit",},{sequence:20});kanbanHeaderConfigItems.add("delete_group",{label:_t("Delete"),method:"deleteGroup",isVisible:({permissions})=>permissions.canDeleteGroup,class:"o_column_delete",},{sequence:30});kanbanHeaderConfigItems.add("archive_group",{label:_t("Archive All"),method:"archiveGroup",isVisible:({permissions})=>permissions.canArchiveGroup,class:"o_column_archive_records",},{sequence:40});kanbanHeaderConfigItems.add("unarchive_group",{label:_t("Unarchive All"),method:"unarchiveGroup",isVisible:({permissions})=>permissions.canArchiveGroup,class:"o_column_unarchive_records",},{sequence:50});return __exports;});;

/* /web/static/src/views/kanban/kanban_record.js */
odoo.define('@web/views/kanban/kanban_record',['@web/core/l10n/translation','@web/core/colorlist/colorlist','@web/core/py_js/py','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/tooltip/tooltip_hook','@web/core/utils/hooks','@web/core/utils/urls','@web/model/relational_model/utils','@web/views/fields/field','@web/views/fields/image/image_field','@web/views/view_button/view_button','@web/views/view_compiler','@web/views/widgets/widget','@web/views/utils','@web/views/kanban/kanban_arch_parser','@web/views/kanban/kanban_compiler','@web/views/kanban/kanban_cover_image_dialog','@web/views/kanban/kanban_dropdown_menu_wrapper','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{ColorList}=require("@web/core/colorlist/colorlist");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{useTooltip}=require("@web/core/tooltip/tooltip_hook");const{useService}=require("@web/core/utils/hooks");const{url}=require("@web/core/utils/urls");const{useRecordObserver}=require("@web/model/relational_model/utils");const{Field}=require("@web/views/fields/field");const{fileTypeMagicWordMap,imageCacheKey}=require("@web/views/fields/image/image_field");const{ViewButton}=require("@web/views/view_button/view_button");const{useViewCompiler}=require("@web/views/view_compiler");const{Widget}=require("@web/views/widgets/widget");const{getFormattedValue}=require("@web/views/utils");const{KANBAN_BOX_ATTRIBUTE,KANBAN_MENU_ATTRIBUTE,KANBAN_TOOLTIP_ATTRIBUTE,}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanCoverImageDialog}=require("@web/views/kanban/kanban_cover_image_dialog");const{KanbanDropdownMenuWrapper}=require("@web/views/kanban/kanban_dropdown_menu_wrapper");const{Component,onMounted,onWillUpdateProps,useRef,useState,useEffect}=require("@odoo/owl");const{COLORS}=ColorList;const formatters=registry.category("formatters");const CANCEL_GLOBAL_CLICK=__exports.CANCEL_GLOBAL_CLICK=["a",".dropdown",".oe_kanban_action","[data-bs-toggle]"].join(",");const ALLOW_GLOBAL_CLICK=[".oe_kanban_global_click",".oe_kanban_global_click_edit"].join(",");function getColorClass(value){return`oe_kanban_color_${getColorIndex(value)}`;}
function getColorIndex(value){if(typeof value==="number"){return Math.round(value)%COLORS.length;}else if(typeof value==="string"){const charCodeSum=[...value].reduce((acc,_,i)=>acc+value.charCodeAt(i),0);return charCodeSum%COLORS.length;}else{return 0;}}
function getColorName(value){return COLORS[getColorIndex(value)];}
__exports.getRawValue=getRawValue;function getRawValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];switch(field.type){case"one2many":case"many2many":{return value.count?value.currentIds:[];}
case"many2one":{return(value&&value[0])||false;}
case"date":case"datetime":{return value&&value.toISO();}
default:{return value;}}}
function getValue(record,fieldName){const field=record.fields[fieldName];const value=record.data[fieldName];const formatter=formatters.get(field.type,String);return formatter(value,{field,data:record.data});}
__exports.getFormattedRecord=getFormattedRecord;function getFormattedRecord(record){const formattedRecord={id:{value:record.resId,raw_value:record.resId,},};for(const fieldName of record.fieldNames){formattedRecord[fieldName]={value:getValue(record,fieldName),raw_value:getRawValue(record,fieldName),};}
return formattedRecord;}
__exports.getImageSrcFromRecordInfo=getImageSrcFromRecordInfo;function getImageSrcFromRecordInfo(record,model,field,idOrIds,placeholder){const id=(Array.isArray(idOrIds)?idOrIds[0]:idOrIds)||null;const isCurrentRecord=record.resModel===model&&(record.resId===id||(!record.resId&&!id));const fieldVal=record.data[field];if(isCurrentRecord&&fieldVal&&!isBinSize(fieldVal)){const type=fileTypeMagicWordMap[fieldVal[0]];return`data:image/${type};base64,${fieldVal}`;}else if(placeholder&&(!model||!field||!id||!fieldVal)){return placeholder;}else{const params={model,field,id,};if(isCurrentRecord){params.unique=imageCacheKey(record.data.write_date);}
return url("/web/image",params);}}
function isBinSize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
__exports.isHtmlEmpty=isHtmlEmpty;function isHtmlEmpty(innerHTML=""){const div=Object.assign(document.createElement("div"),{innerHTML});return div.innerText.trim()==="";}
const KanbanRecord=__exports.KanbanRecord=class KanbanRecord extends Component{setup(){this.evaluateBooleanExpr=evaluateBooleanExpr;this.action=useService("action");this.dialog=useService("dialog");this.notification=useService("notification");this.user=useService("user");const{Compiler,templates}=this.props;const ViewCompiler=Compiler||this.constructor.Compiler;this.templates=useViewCompiler(ViewCompiler,templates);if(this.constructor.KANBAN_MENU_ATTRIBUTE in templates){this.showMenu=true;}
if(KANBAN_TOOLTIP_ATTRIBUTE in templates){useTooltip("root",{info:{...this,record:getFormattedRecord(this.props.record)},template:this.templates[KANBAN_TOOLTIP_ATTRIBUTE],});}
this.dataState=useState({record:{},widget:{}});this.createWidget(this.props);onWillUpdateProps(this.createWidget);useRecordObserver((record)=>Object.assign(this.dataState.record,getFormattedRecord(record)));this.rootRef=useRef("root");onMounted(()=>{this.allowGlobalClick=!!this.rootRef.el.querySelector(ALLOW_GLOBAL_CLICK);});useEffect((color)=>{if(!color){return;}
const classList=this.rootRef.el.firstElementChild.classList;const colorClasses=[...classList].filter((c)=>c.startsWith("oe_kanban_color_"));colorClasses.forEach((cls)=>classList.remove(cls));classList.add(getColorClass(color));},()=>[this.props.record.data[this.props.archInfo.colorField]]);}
get record(){return this.dataState.record;}
getFormattedValue(fieldId){const{archInfo,record}=this.props;const{attrs,name}=archInfo.fieldNodes[fieldId];return getFormattedValue(record,name,attrs);}
createWidget(props){const{archInfo,list}=props;const{activeActions}=archInfo;const deletable=activeActions.delete&&(!list.groupByField||list.groupByField.type!=="many2many");const editable=activeActions.edit;this.dataState.widget={deletable,editable,isHtmlEmpty,};}
getRecordClasses(){const{archInfo,canResequence,forceGlobalClick,record,progressBarState}=this.props;const classes=["o_kanban_record d-flex"];if(canResequence){classes.push("o_draggable");}
if(forceGlobalClick||archInfo.openAction){classes.push("oe_kanban_global_click");}
if(progressBarState){const{fieldName,colors}=progressBarState.progressAttributes;const value=record.data[fieldName];const color=colors[value];classes.push(`oe_kanban_card_${color}`);}
if(archInfo.cardColorField){const value=record.data[archInfo.cardColorField];classes.push(getColorClass(value));}
if(!this.props.list.isGrouped){classes.push("flex-grow-1 flex-md-shrink-1 flex-shrink-0");}
return classes.join(" ");}
onGlobalClick(ev){if(ev.target.closest(CANCEL_GLOBAL_CLICK)){return;}
const{archInfo,forceGlobalClick,openRecord,record}=this.props;if(!forceGlobalClick&&archInfo.openAction){this.action.doActionButton({name:archInfo.openAction.action,type:archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();},});}else if(forceGlobalClick||this.allowGlobalClick){openRecord(record);}}
async selectColor(colorIndex){const{archInfo,record}=this.props;await record.update({[archInfo.colorField]:colorIndex},{save:true});}
triggerAction(params){const{archInfo,openRecord,deleteRecord,record}=this.props;const{type}=params;switch(type){case"edit":{return openRecord(record,"edit");}
case"open":{return openRecord(record);}
case"delete":{return deleteRecord(record);}
case"set_cover":{const{autoOpen,fieldName}=params;const widgets=Object.values(archInfo.fieldNodes).filter((x)=>x.name===fieldName).map((x)=>x.widget);const field=record.fields[fieldName];if(field.type==="many2one"&&field.relation==="ir.attachment"&&widgets.includes("attachment_image")){this.dialog.add(KanbanCoverImageDialog,{autoOpen,fieldName,record});}else{const warning=_t(`Could not set the cover image: incorrect field ("%s") is provided in the view.`,fieldName);this.notification.add({title:warning,type:"danger"});}
break;}
default:{return this.notification.add(_t("Kanban: no action for type: ")+type,{type:"danger",});}}}
get renderingContext(){return{context:this.props.record.context,JSON,kanban_color:getColorClass,kanban_getcolor:getColorIndex,kanban_getcolorname:getColorName,kanban_image:(...args)=>getImageSrcFromRecordInfo(this.props.record,...args),luxon,read_only_mode:this.props.readonly,record:this.dataState.record,selection_mode:this.props.forceGlobalClick,user_context:this.user.context,widget:this.dataState.widget,__comp__:Object.assign(Object.create(this),{this:this}),};}}
KanbanRecord.components={Dropdown,DropdownItem,KanbanDropdownMenuWrapper,Field,KanbanCoverImageDialog,ViewButton,Widget,};KanbanRecord.defaultProps={colors:COLORS,deleteRecord:()=>{},openRecord:()=>{},};KanbanRecord.props=["archInfo","canResequence?","colors?","Compiler?","forceGlobalClick?","group?","list","deleteRecord?","openRecord?","readonly?","record","templates","progressBarState?",];KanbanRecord.Compiler=KanbanCompiler;KanbanRecord.KANBAN_BOX_ATTRIBUTE=KANBAN_BOX_ATTRIBUTE;KanbanRecord.KANBAN_MENU_ATTRIBUTE=KANBAN_MENU_ATTRIBUTE;KanbanRecord.menuTemplate="web.KanbanRecordMenu";KanbanRecord.template="web.KanbanRecord";return __exports;});;

/* /web/static/src/views/kanban/kanban_record_quick_create.js */
odoo.define('@web/views/kanban/kanban_record_quick_create',['@web/core/l10n/translation','@web/core/utils/xml','@web/core/hotkeys/hotkey_hook','@web/core/utils/hooks','@odoo/owl','@web/core/network/rpc_service','@web/model/relational_model/utils','@web/views/form/form_view','@web/views/view','@web/views/view_dialogs/form_view_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{parseXML}=require("@web/core/utils/xml");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useOwnedDialogs,useService}=require("@web/core/utils/hooks");const{Component,onMounted,onWillStart,useExternalListener,useRef,useState,useSubEnv,}=require("@odoo/owl");const{RPCError}=require("@web/core/network/rpc_service");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{formView}=require("@web/views/form/form_view");const{getDefaultConfig}=require("@web/views/view");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const DEFAULT_QUICK_CREATE_VIEW={arch:`
        <form>
            <field name="display_name" placeholder="Title" required="True" />
        </form>`,};const DEFAULT_QUICK_CREATE_FIELDS={display_name:{string:"Display name",type:"char"},};const ACTION_SELECTORS=[".o_kanban_quick_add",".o_kanban_load_more button",".o-kanban-button-new",];class KanbanQuickCreateController extends Component{static props={Model:Function,Renderer:Function,Compiler:Function,resModel:String,onValidate:Function,onCancel:Function,fields:{type:Object},context:{type:Object},archInfo:{type:Object},};static template="web.KanbanQuickCreateController";setup(){super.setup();this.uiService=useService("ui");this.rootRef=useRef("root");this.state=useState({disabled:false});this.addDialog=useOwnedDialogs();const{activeFields,fields}=extractFieldsFromArchInfo(this.props.archInfo,this.props.fields);const modelServices=Object.fromEntries(this.props.Model.services.map((servName)=>{return[servName,useService(servName)];}));modelServices.orm=useService("orm");const config={resModel:this.props.resModel,resId:false,resIds:[],fields,activeFields,isMonoRecord:true,mode:"edit",context:this.props.context,};this.model=useState(new this.props.Model(this.env,{config},modelServices));onWillStart(()=>this.model.load());onMounted(()=>{this.uiActiveElement=this.uiService.activeElement;});useExternalListener(window,"mousedown",(ev)=>{this.mousedownTarget=ev.target;});useExternalListener(window,"click",(ev)=>{if(this.uiActiveElement!==this.uiService.activeElement){return;}
const target=this.mousedownTarget||ev.target;const gotClickedInside=target.closest(".o_datetime_picker")||target.closest(".ui-autocomplete")||this.rootRef.el.contains(target);if(!gotClickedInside){let force=false;for(const selector of ACTION_SELECTORS){const closestEl=target.closest(selector);if(closestEl){force=true;break;}}
this.cancel(force);}
this.mousedownTarget=null;},{capture:true});useHotkey("enter",()=>this.validate("add"),{bypassEditableProtection:true});useHotkey("escape",()=>this.cancel(true));}
async validate(mode){let resId=undefined;if(this.state.disabled){return;}
this.state.disabled=true;const keys=Object.keys(this.model.root.activeFields);if(keys.length===1&&keys[0]==="display_name"){const isValid=await this.model.root.checkValidity();if(isValid){try{[resId]=await this.model.orm.call(this.props.resModel,"name_create",[this.model.root.data.display_name],{context:this.props.context,});}catch(e){this.showFormDialogInError(e);}}else{this.model.notification.add(_t("Display Name"),{title:_t("Invalid fields: "),type:"danger",});}}else{await this.model.root.save({reload:false,onError:(e)=>this.showFormDialogInError(e),});resId=this.model.root.resId;}
if(resId){await this.props.onValidate(resId,mode);if(mode==="add"){await this.model.load({resId:false});}}
this.state.disabled=false;}
async cancel(force){if(this.state.disabled){return;}
if(force||!(await this.model.root.isDirty())){this.props.onCancel();}}
showFormDialogInError(e){if(!(e instanceof RPCError)){throw e;}
const context=this.props.context;const values=this.model.root.data;context.default_name=values.name||values.display_name;this.addDialog(FormViewDialog,{resModel:this.props.resModel,context,title:_t("Create"),onRecordSaved:async(record)=>{await this.props.onValidate(record.resId,"add");await this.model.load();},});}
get className(){return"o_kanban_quick_create o_field_highlight shadow";}}
const KanbanRecordQuickCreate=__exports.KanbanRecordQuickCreate=class KanbanRecordQuickCreate extends Component{static components={KanbanQuickCreateController};static template="web.KanbanRecordQuickCreate";static props={quickCreateView:{type:[String,{value:null}],optional:1},onValidate:Function,onCancel:Function,group:Object,};setup(){this.state=useState({isLoaded:false,});this.viewService=useService("view");onWillStart(()=>{this.getQuickCreateProps(this.props).then(()=>{this.state.isLoaded=true;});});useSubEnv({config:getDefaultConfig(),});}
async getQuickCreateProps(props){let quickCreateFields=DEFAULT_QUICK_CREATE_FIELDS;let quickCreateForm=DEFAULT_QUICK_CREATE_VIEW;let quickCreateRelatedModels={};if(props.quickCreateView){const{fields,relatedModels,views}=await this.viewService.loadViews({context:{...props.context,form_view_ref:props.quickCreateView},resModel:props.group.resModel,views:[[false,"form"]],});quickCreateFields=fields;quickCreateForm=views.form;quickCreateRelatedModels=relatedModels;}
const models={...quickCreateRelatedModels,[props.group.resModel]:quickCreateFields,};const archInfo=new formView.ArchParser().parse(parseXML(quickCreateForm.arch),models,props.group.resModel);this.quickCreateProps={Model:formView.Model,Renderer:formView.Renderer,Compiler:formView.Compiler,resModel:props.group.resModel,onValidate:props.onValidate,onCancel:props.onCancel,fields:quickCreateFields,context:props.group.context,archInfo,};}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_renderer.js */
odoo.define('@web/views/kanban/kanban_renderer',['@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/hotkeys/hotkey_hook','@web/core/registry','@web/core/utils/hooks','@web/core/utils/sortable_owl','@web/views/utils','@web/views/view_components/column_progress','@web/views/view_hook','@web/views/kanban/kanban_column_quick_create','@web/views/kanban/kanban_header','@web/views/kanban/kanban_record','@web/views/kanban/kanban_record_quick_create','@odoo/owl','@web/core/py_js/py'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable_owl");const{isNull}=require("@web/views/utils");const{ColumnProgress}=require("@web/views/view_components/column_progress");const{useBounceButton}=require("@web/views/view_hook");const{KanbanColumnQuickCreate}=require("@web/views/kanban/kanban_column_quick_create");const{KanbanHeader}=require("@web/views/kanban/kanban_header");const{KanbanRecord}=require("@web/views/kanban/kanban_record");const{KanbanRecordQuickCreate}=require("@web/views/kanban/kanban_record_quick_create");const{Component,onPatched,onWillDestroy,onWillPatch,useRef,useState}=require("@odoo/owl");const{evaluateExpr}=require("@web/core/py_js/py");const DRAGGABLE_GROUP_TYPES=["many2one"];const MOVABLE_RECORD_TYPES=["char","boolean","integer","selection","many2one"];function validateColumnQuickCreateExamples(data){const{allowedGroupBys=[],examples=[],foldField=""}=data;if(!allowedGroupBys.length){throw new Error("The example data must contain an array of allowed groupbys");}
if(!examples.length){throw new Error("The example data must contain an array of examples");}
const someHasFoldedColumns=examples.some(({foldedColumns=[]})=>foldedColumns.length);if(!foldField&&someHasFoldedColumns){throw new Error("The example data must contain a fold field if there are folded columns");}}
const KanbanRenderer=__exports.KanbanRenderer=class KanbanRenderer extends Component{static template="web.KanbanRenderer";static components={Dropdown,DropdownItem,ColumnProgress,KanbanColumnQuickCreate,KanbanHeader,KanbanRecord,KanbanRecordQuickCreate,};static props=["archInfo","Compiler?","list","deleteRecord","openRecord","readonly","evalViewModifier","forceGlobalClick?","noContentHelp?","scrollTop?","canQuickCreate?","quickCreateState?","progressBarState?",];static defaultProps={scrollTop:()=>{},quickCreateState:{groupId:false},tooltipInfo:{},};setup(){this.dialogClose=[];this.state=useState({processedIds:[],columnQuickCreateIsFolded:!this.props.list.isGrouped||this.props.list.groups.length>0,});this.dialog=useService("dialog");this.exampleData=registry.category("kanban_examples").get(this.props.archInfo.examples,null);if(this.exampleData){validateColumnQuickCreateExamples(this.exampleData);}
this.ghostColumns=this.generateGhostColumns();let dataRecordId;let dataGroupId;this.rootRef=useRef("root");if(this.canUseSortable){useSortable({enable:()=>this.canResequenceRecords,ref:this.rootRef,elements:".o_draggable",ignore:".dropdown,select",groups:()=>this.props.list.isGrouped&&".o_kanban_group",connectGroups:()=>this.canMoveRecords,cursor:"move",onDragStart:(params)=>{const{element,group}=params;dataRecordId=element.dataset.id;dataGroupId=group&&group.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onGroupEnter:(params)=>this.sortRecordGroupEnter(params),onGroupLeave:(params)=>this.sortRecordGroupLeave(params),onDrop:(params)=>this.sortRecordDrop(dataRecordId,dataGroupId,params),});useSortable({enable:()=>this.canResequenceGroups,ref:this.rootRef,elements:".o_group_draggable",handle:".o_column_title",cursor:"move",onDragStart:(params)=>{const{element}=params;dataGroupId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortGroupDrop(dataGroupId,params),});}
useBounceButton(this.rootRef,(clickedEl)=>{if(!this.props.list.count||this.props.list.model.useSampleModel){return clickedEl.matches([".o_kanban_renderer",".o_kanban_group",".o_kanban_header",".o_column_quick_create",".o_view_nocontent_smiling_face",].join(", "));}
return false;});onWillDestroy(()=>{this.dialogClose.forEach((close)=>close());});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{const{model}=this.props.list;if(model.useSampleModel||!model.hasData()){return;}
const firstCard=this.rootRef.el.querySelector(".o_kanban_record");if(firstCard){firstCard.focus();}});}
useHotkey("Enter",({target})=>{if(!target.classList.contains("o_kanban_record")){return;}
const firstLink=target.querySelector(".oe_kanban_global_click, a, button");if(firstLink&&firstLink instanceof HTMLElement){firstLink.click();}
return;},{area:()=>this.rootRef.el});const arrowsOptions={area:()=>this.rootRef.el,allowRepeat:true};if(this.env.searchModel){useHotkey("ArrowUp",({area})=>{if(!this.focusNextCard(area,"up")){this.env.searchModel.trigger("focus-search");}},arrowsOptions);}
useHotkey("ArrowDown",({area})=>this.focusNextCard(area,"down"),arrowsOptions);useHotkey("ArrowLeft",({area})=>this.focusNextCard(area,"left"),arrowsOptions);useHotkey("ArrowRight",({area})=>this.focusNextCard(area,"right"),arrowsOptions);let previousScrollTop=0;onWillPatch(()=>{previousScrollTop=this.rootRef.el.scrollTop;});onPatched(()=>{this.rootRef.el.scrollTop=previousScrollTop;});}
get canUseSortable(){return!this.env.isSmall;}
get canMoveRecords(){if(!this.canResequenceRecords){return false;}
const groupByField=this.props.list.groupByField;if(!groupByField){return true;}
const fieldNodes=Object.values(this.props.archInfo.fieldNodes).filter((fieldNode)=>fieldNode.name===groupByField.name);let isReadonly=this.props.list.fields[groupByField.name].readonly;if(!isReadonly&&fieldNodes.length){isReadonly=fieldNodes.every((fieldNode)=>{if(!fieldNode.readonly){return false;}
try{return evaluateExpr(fieldNode.readonly,this.props.list.evalContext);}catch{return false;}});}
return!isReadonly&&this.isMovableField(groupByField);}
get canResequenceGroups(){if(!this.props.list.isGrouped){return false;}
const{type}=this.props.list.groupByField;const{groupsDraggable}=this.props.archInfo;return groupsDraggable&&DRAGGABLE_GROUP_TYPES.includes(type);}
get canResequenceRecords(){const{isGrouped,orderBy}=this.props.list;const{handleField,recordsDraggable}=this.props.archInfo;return Boolean(recordsDraggable&&(isGrouped||(handleField&&(!orderBy[0]||orderBy[0].name===handleField))));}
get showNoContentHelper(){const{model,isGrouped,groupByField,groups}=this.props.list;if(model.useSampleModel){return true;}
if(isGrouped){if(this.props.quickCreateState.groupId){return false;}
if(this.canCreateGroup()&&!this.state.columnQuickCreateIsFolded){return false;}
if(groups.length===0){return groupByField.type!=="many2one";}}
return!model.hasData();}
getGroupsOrRecords(){const{list}=this.props;if(list.isGrouped){return[...list.groups].sort((a,b)=>(a.value&&!b.value?1:!a.value&&b.value?-1:0)).map((group,i)=>({group,key:isNull(group.value)?`group_key_${i}`:String(group.value),}));}else{return list.records.map((record)=>({record,key:record.id}));}}
getGroupClasses(group,isGroupProcessing){const classes=[];if(!isGroupProcessing&&this.canResequenceGroups&&group.value){classes.push("o_group_draggable");}
if(!group.count){classes.push("o_kanban_no_records");}
if(!this.env.isSmall&&group.isFolded){classes.push("o_column_folded","flex-basis-0");}
if(this.props.progressBarState&&!group.isFolded){const progressBarInfo=this.props.progressBarState.getGroupInfo(group);if(progressBarInfo.activeBar){const progressBar=progressBarInfo.bars.find((b)=>b.value===progressBarInfo.activeBar);classes.push("o_kanban_group_show",`o_kanban_group_show_${progressBar.color}`);}}
return classes.join(" ");}
getGroupUnloadedCount(group){const records=group.list.records.filter((r)=>!r.isInQuickCreation);const count=this.props.progressBarState?.getGroupCount(group)||group.count;return count-records.length;}
generateGhostColumns(){let colNames;if(this.exampleData&&this.exampleData.ghostColumns){colNames=this.exampleData.ghostColumns;}else{colNames=[1,2,3,4].map((num)=>_t("Column %s",num));}
return colNames.map((colName)=>({name:colName,cards:new Array(Math.floor(Math.random()*4)+2),}));}
isProcessing(id){return this.state.processedIds.includes(id);}
isMovableField(field){return MOVABLE_RECORD_TYPES.includes(field.type);}
canCreateGroup(){const{activeActions}=this.props.archInfo;return activeActions.createGroup&&this.props.list.groupByField.type==="many2one";}
canQuickCreate(){return this.props.canQuickCreate;}
async validateQuickCreate(recordId,mode,group){this.props.quickCreateState.groupId=false;if(mode==="add"){this.props.quickCreateState.groupId=group.id;}
const record=await group.addExistingRecord(recordId,true);group.model.bus.trigger("group-updated",{group:group,withProgressBars:true,});if(mode==="edit"){await this.props.openRecord(record,"edit");}else{this.props.progressBarState?.updateCounts(group);}}
cancelQuickCreate(){this.props.quickCreateState.groupId=false;}
async deleteGroup(group){await this.props.list.deleteGroups([group]);if(this.props.list.groups.length===0){this.state.columnQuickCreateIsFolded=false;}}
toggleGroup(group){return group.toggle();}
loadMore(group){return group.list.load({limit:group.list.records.length+group.model.initialLimit});}
toggleProcessing(id,isProcessing){if(isProcessing){this.state.processedIds=[...this.state.processedIds,id];}else{this.state.processedIds=this.state.processedIds.filter((processedId)=>processedId!==id);}}
async onGroupClick(group,ev){if(!this.env.isSmall&&group.isFolded){await group.toggle();this.props.scrollTop();}}
async sortGroupDrop(dataGroupId,{previous}){this.toggleProcessing(dataGroupId,true);const refId=previous?previous.dataset.id:null;try{await this.props.list.resequence(dataGroupId,refId);}finally{this.toggleProcessing(dataGroupId,false);}}
async sortRecordDrop(dataRecordId,dataGroupId,{element,parent,previous}){if(!this.props.list.isGrouped||parent.classList.contains("o_kanban_hover")||parent.dataset.id===element.parentElement.dataset.id){this.toggleProcessing(dataRecordId,true);parent?.classList.remove("o_kanban_hover");while(previous&&!previous.dataset.id){previous=previous.previousElementSibling;}
const refId=previous?previous.dataset.id:null;const targetGroupId=parent?.dataset.id;try{await this.props.list.moveRecord(dataRecordId,dataGroupId,refId,targetGroupId);}finally{this.toggleProcessing(dataRecordId,false);}
if(dataGroupId!==targetGroupId){const group=this.props.list.groups.find((g)=>g.id===dataGroupId);this.props.progressBarState?.updateAggreagteGroup(group);}}}
sortRecordGroupEnter({group}){group.classList.add("o_kanban_hover");}
sortRecordGroupLeave({group}){group.classList.remove("o_kanban_hover");}
sortStart({element}){element.classList.add("shadow");}
sortStop({element,group}){element.classList.remove("shadow");if(group){group.classList.remove("o_kanban_hover");}}
focusNextCard(area,direction){const{isGrouped}=this.props.list;const closestCard=document.activeElement.closest(".o_kanban_record");if(!closestCard){return;}
const groups=isGrouped?[...area.querySelectorAll(".o_kanban_group")]:[area];const cards=[...groups].map((group)=>[...group.querySelectorAll(".o_kanban_record")]).filter((group)=>group.length);let iGroup;let iCard;for(iGroup=0;iGroup<cards.length;iGroup++){const i=cards[iGroup].indexOf(closestCard);if(i!==-1){iCard=i;break;}}
let nextCard;switch(direction){case"down":nextCard=iCard<cards[iGroup].length-1&&cards[iGroup][iCard+1];break;case"up":nextCard=iCard>0&&cards[iGroup][iCard-1];break;case"right":if(isGrouped){nextCard=iGroup<cards.length-1&&cards[iGroup+1][0];}else{nextCard=iCard<cards[0].length-1&&cards[0][iCard+1];}
break;case"left":if(isGrouped){nextCard=iGroup>0&&cards[iGroup-1][0];}else{nextCard=iCard>0&&cards[0][iCard-1];}
break;}
if(nextCard&&nextCard instanceof HTMLElement){nextCard.focus();return true;}}}
return __exports;});;

/* /web/static/src/views/kanban/kanban_view.js */
odoo.define('@web/views/kanban/kanban_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/kanban/kanban_arch_parser','@web/views/kanban/kanban_compiler','@web/views/kanban/kanban_controller','@web/views/kanban/kanban_renderer'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{KanbanArchParser}=require("@web/views/kanban/kanban_arch_parser");const{KanbanCompiler}=require("@web/views/kanban/kanban_compiler");const{KanbanController}=require("@web/views/kanban/kanban_controller");const{KanbanRenderer}=require("@web/views/kanban/kanban_renderer");const kanbanView=__exports.kanbanView={type:"kanban",display_name:"Kanban",icon:"oi oi-view-kanban",multiRecord:true,ArchParser:KanbanArchParser,Controller:KanbanController,Model:RelationalModel,Renderer:KanbanRenderer,Compiler:KanbanCompiler,buttonTemplate:"web.KanbanView.Buttons",props:(genericProps,view)=>{const{arch,relatedModels,resModel}=genericProps;const{ArchParser}=view;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);const defaultGroupBy=genericProps.searchMenuTypes.includes("groupBy")&&archInfo.defaultGroupBy;return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,defaultGroupBy,};},};registry.category("views").add("kanban",kanbanView);return __exports;});;

/* /web/static/src/views/kanban/progress_bar_hook.js */
odoo.define('@web/views/kanban/progress_bar_hook',['@odoo/owl','@web/core/domain','@web/core/l10n/translation','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{extractInfoFromGroupData}=require("@web/model/relational_model/utils");const FALSE=Symbol("False");function _findGroup(groups,groupByField,value){return groups.find((g)=>g[groupByField.name]===value)||{};}
function _createFilterDomain(fieldName,bars,value){let filterDomain=undefined;if(value===FALSE){const keys=bars.filter((x)=>x.value!==FALSE).map((x)=>x.value);filterDomain=["!",[fieldName,"in",keys]];}else{filterDomain=[[fieldName,"=",value]];}
return filterDomain;}
function _groupsToAggregateValues(groups,groupBy,fields){const groupByFieldName=groupBy[0].split(":")[0];return groups.map((g)=>{const groupInfo=extractInfoFromGroupData(g,groupBy,fields);return Object.assign(groupInfo.aggregates,{[groupByFieldName]:groupInfo.serverValue});});}
class ProgressBarState{constructor(progressAttributes,model,aggregateFields,activeBars={}){this.progressAttributes=progressAttributes;this.model=model;this._groupsInfo={};this._aggregateFields=aggregateFields;this.activeBars=activeBars;this._aggregateValues=[];this._pbCounts=null;}
getGroupInfo(group){if(!this._groupsInfo[group.id]){const aggValues=_findGroup(this._aggregateValues,group.groupByField,group.serverValue);const index=this._aggregateValues.indexOf(aggValues);if(index>-1){this._aggregateValues.splice(index,1);}
this._aggregateValues.push({...group.aggregates,[group.groupByField.name]:group.serverValue,});let groupValue=group.displayName||group.value;if(groupValue===true){groupValue="True";}else if(groupValue===false){groupValue="False";}
const pbCount=this._pbCounts[groupValue];const{fieldName,colors}=this.progressAttributes;const{selection:fieldSelection}=this.model.root.fields[fieldName];const selection=fieldSelection&&Object.fromEntries(fieldSelection);const bars=Object.entries(colors).map(([value,color])=>{let string;if(selection){string=selection[value];}else{string=String(value);}
return{count:(pbCount&&pbCount[value])||0,value,string,color,};});bars.push({count:group.count-bars.map((r)=>r.count).reduce((a,b)=>a+b,0),value:FALSE,string:_t("Other"),color:"200",});if(this.activeBars[group.serverValue]){this.activeBars[group.serverValue].count=bars.find((x)=>x.value===this.activeBars[group.serverValue].value).count;if(this.activeBars[group.serverValue].count===0){group.applyFilter(undefined).then(()=>{delete this.activeBars[group.serverValue];group.model.notify();});}
if(this._aggregateFields.length){this.activeBars[group.serverValue].aggregates=_findGroup(this._aggregateValues,group.groupByField,group.serverValue);}}
const self=this;const progressBar={get activeBar(){return self.activeBars[group.serverValue]?.value||null;},bars,};this._groupsInfo[group.id]=progressBar;}
return this._groupsInfo[group.id];}
getAggregateValue(group,aggregateField){const title=aggregateField?aggregateField.string:_t("Count");let value=0;if(!this.activeBars[group.serverValue]){value=group.count;if(aggregateField){value=_findGroup(this._aggregateValues,group.groupByField,group.serverValue)[aggregateField.name]||0;}}else{value=this.activeBars[group.serverValue].count;if(aggregateField){value=(this.activeBars[group.serverValue]?.aggregates&&this.activeBars[group.serverValue]?.aggregates[aggregateField.name])||0;}}
return{title,value};}
async selectBar(groupId,bar){const group=this.model.root.groups.find((group)=>group.id===groupId);const progressBar=this.getGroupInfo(group);const nextActiveBar={};if(bar.value&&this.activeBars[group.serverValue]?.value!==bar.value){nextActiveBar.value=bar.value;}else{group.applyFilter(undefined).then(()=>{delete this.activeBars[group.serverValue];group.model.notify();});return;}
const{bars}=progressBar;const filterDomain=_createFilterDomain(this.progressAttributes.fieldName,bars,nextActiveBar.value);const proms=[];proms.push(group.applyFilter(filterDomain).then((res)=>{const groupInfo=this.getGroupInfo(group);nextActiveBar.count=groupInfo.bars.find((x)=>x.value===nextActiveBar.value).count;}));if(this._aggregateFields.length){proms.push(this._updateAggregateGroup(group,bars,nextActiveBar));}
await Promise.all(proms);this.activeBars[group.serverValue]=nextActiveBar;this.updateCounts(group);}
_updateAggregateGroup(group,bars,activeBar){const filterDomain=_createFilterDomain(this.progressAttributes.fieldName,bars,activeBar.value);const{context,fields,groupBy,resModel}=this.model.root;const kwargs={context};const fieldNames=[...this._aggregateFields.map((f)=>f.name),group.groupByField.name];const domain=filterDomain?Domain.and([group.groupDomain,filterDomain]).toList():group.groupDomain;return this.model.orm.webReadGroup(resModel,domain,fieldNames,groupBy,kwargs).then((res)=>{if(res.length){const groupByField=group.groupByField;const aggrValues=_groupsToAggregateValues(res.groups,groupBy,fields);activeBar.aggregates=_findGroup(aggrValues,groupByField,group.serverValue);}});}
updateCounts(group){this._updateProgressBar();if(this._aggregateFields.length){this._updateAggregates();this.updateAggreagteGroup(group);}
for(const group of this.model.root.groups){if(this.activeBars[group.serverValue]&&group.list.count===0){this.selectBar(group.id,{value:null});}}}
updateAggreagteGroup(group){if(group&&this.activeBars[group.serverValue]){const{bars}=this.getGroupInfo(group);this._updateAggregateGroup(group,bars,this.activeBars[group.serverValue]);}}
async _updateAggregates(){const{context,fields,groupBy,domain,resModel}=this.model.root;const fieldsName=this._aggregateFields.map((f)=>f.name);const firstGroupByName=groupBy[0].split(":")[0];const kwargs={context};const res=await this.model.orm.webReadGroup(resModel,domain,[...fieldsName,firstGroupByName],groupBy,kwargs);this._aggregateValues=_groupsToAggregateValues(res.groups,groupBy,fields);}
async _updateProgressBar(){const groupBy=this.model.root.groupBy;const defaultGroupBy=this.model.root.defaultGroupBy;if(groupBy.length||defaultGroupBy){const resModel=this.model.root.resModel;const domain=this.model.root.domain;const context=this.model.root.context;const{colors,fieldName:field,help}=this.progressAttributes;const groupsId=this.model.root.groups.map((g)=>g.id).join();const res=await this.model.orm.call(resModel,"read_progress_bar",[],{domain,group_by:groupBy.length?groupBy[0]:defaultGroupBy,progress_bar:{colors,field,help},context,});if(groupsId!==this.model.root.groups.map((g)=>g.id).join()){return;}
this._pbCounts=res;for(const group of this.model.root.groups){if(!group.isFolded){const groupInfo=this.getGroupInfo(group);let groupValue=group.displayName||group.value;if(groupValue===true){groupValue="True";}else if(groupValue===false){groupValue="False";}
const counts=res[groupValue];for(const bar of groupInfo.bars){bar.count=(counts&&counts[bar.value])||0;}
groupInfo.bars.find((b)=>b.value===FALSE).count=counts?group.count-Object.values(counts).reduce((a,b)=>a+b,0):group.count;if(this.activeBars[group.serverValue]){this.activeBars[group.serverValue].count=groupInfo.bars.find((x)=>x.value===this.activeBars[group.serverValue].value).count;}}}}}
async loadProgressBar({context,domain,groupBy,resModel}){if(groupBy.length){const{colors,fieldName:field,help}=this.progressAttributes;const res=await this.model.orm.call(resModel,"read_progress_bar",[],{domain,group_by:groupBy[0],progress_bar:{colors,field,help},context,});this._pbCounts=res;}}
getGroupCount(group){const progressBarInfo=this.getGroupInfo(group);if(progressBarInfo.activeBar){const progressBar=progressBarInfo.bars.find((b)=>b.value===progressBarInfo.activeBar);return progressBar.count;}}}
__exports.useProgressBar=useProgressBar;function useProgressBar(progressAttributes,model,aggregateFields,activeBars){const progressBarState=reactive(new ProgressBarState(progressAttributes,model,aggregateFields,activeBars));let prom;const onWillLoadRoot=model.hooks.onWillLoadRoot;model.hooks.onWillLoadRoot=(config)=>{onWillLoadRoot();prom=progressBarState.loadProgressBar({context:config.context,domain:config.domain,groupBy:config.groupBy,resModel:config.resModel,});};const onRootLoaded=model.hooks.onRootLoaded;model.hooks.onRootLoaded=async()=>{await onRootLoaded();return prom;};return progressBarState;}
return __exports;});;

/* /web/static/src/views/list/export_all/export_all.js */
odoo.define('@web/views/list/export_all/export_all',['@web/core/dropdown/dropdown_item','@web/core/registry','@web/views/utils','@web/search/action_menus/action_menus','@odoo/owl'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{archParseBoolean}=require("@web/views/utils");const{STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{Component}=require("@odoo/owl");const cogMenuRegistry=registry.category("cogMenu");const ExportAll=__exports.ExportAll=class ExportAll extends Component{static template="web.ExportAll";static components={DropdownItem};async onDirectExportData(){this.env.searchModel.trigger('direct-export-data');}}
const exportAllItem=__exports.exportAllItem={Component:ExportAll,groupNumber:STATIC_ACTIONS_GROUP_NUMBER,isDisplayed:async(env)=>env.config.viewType==="list"&&!env.model.root.selection.length&&await env.model.user.hasGroup("base.group_allow_export")&&archParseBoolean(env.config.viewArch.getAttribute("export_xlsx"),true),};cogMenuRegistry.add("export-all-menu",exportAllItem,{sequence:10});return __exports;});;

/* /web/static/src/views/list/list_arch_parser.js */
odoo.define('@web/views/list/list_arch_parser',['@web/views/fields/field','@web/core/utils/xml','@web/search/utils/order_by','@web/views/utils','@web/views/view_compiler','@web/model/relational_model/utils','@web/views/widgets/widget'],function(require){'use strict';let __exports={};const{Field}=require("@web/views/fields/field");const{visitXML}=require("@web/core/utils/xml");const{stringToOrderBy}=require("@web/search/utils/order_by");const{archParseBoolean,getActiveActions,getDecoration,processButton}=require("@web/views/utils");const{encodeObjectForTemplate}=require("@web/views/view_compiler");const{combineModifiers}=require("@web/model/relational_model/utils");const{Widget}=require("@web/views/widgets/widget");const GroupListArchParser=__exports.GroupListArchParser=class GroupListArchParser{parse(arch,models,modelName,jsClass){const fieldNodes={};const fieldNextIds={};const buttons=[];let buttonId=0;visitXML(arch,(node)=>{if(node.tagName==="button"){buttons.push({...processButton(node),id:buttonId++,});return false;}else if(node.tagName==="field"){const fieldInfo=Field.parseFieldNode(node,models,modelName,"list",jsClass);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);return false;}});return{fieldNodes,buttons};}}
const ListArchParser=__exports.ListArchParser=class ListArchParser{parseFieldNode(node,models,modelName){return Field.parseFieldNode(node,models,modelName,"list");}
parseWidgetNode(node,models,modelName){return Widget.parseWidgetNode(node);}
processButton(node){return processButton(node);}
parse(xmlDoc,models,modelName){const fieldNodes={};const widgetNodes={};let widgetNextId=0;const columns=[];const fields=models[modelName];let buttonId=0;const groupBy={buttons:{},fields:{},};let headerButtons=[];const creates=[];const groupListArchParser=new GroupListArchParser();let buttonGroup;let handleField=null;const treeAttr={};let nextId=0;const fieldNextIds={};visitXML(xmlDoc,(node)=>{if(node.tagName!=="button"){buttonGroup=undefined;}
if(node.tagName==="button"){const button={...this.processButton(node),defaultRank:"btn-link",type:"button",id:buttonId++,};if(buttonGroup){buttonGroup.buttons.push(button);buttonGroup.column_invisible=combineModifiers(buttonGroup.column_invisible,node.getAttribute("column_invisible"),"AND");}else{buttonGroup={id:`column_${nextId++}`,type:"button_group",buttons:[button],hasLabel:false,column_invisible:node.getAttribute("column_invisible"),};columns.push(buttonGroup);}}else if(node.tagName==="field"){const fieldInfo=this.parseFieldNode(node,models,modelName);if(!(fieldInfo.name in fieldNextIds)){fieldNextIds[fieldInfo.name]=0;}
const fieldId=`${fieldInfo.name}_${fieldNextIds[fieldInfo.name]++}`;fieldNodes[fieldId]=fieldInfo;node.setAttribute("field_id",fieldId);if(fieldInfo.isHandle){handleField=fieldInfo.name;}
const label=fieldInfo.field.label;columns.push({...fieldInfo,id:`column_${nextId++}`,className:node.getAttribute("class"),optional:node.getAttribute("optional")||false,type:"field",hasLabel:!(archParseBoolean(fieldInfo.attrs.nolabel)||fieldInfo.field.noLabel),label:(fieldInfo.widget&&label&&label.toString())||fieldInfo.string,});return false;}else if(node.tagName==="widget"){const widgetInfo=this.parseWidgetNode(node);const widgetId=`widget_${++widgetNextId}`;widgetNodes[widgetId]=widgetInfo;node.setAttribute("widget_id",widgetId);const widgetProps={name:widgetInfo.name,node:encodeObjectForTemplate({attrs:widgetInfo.attrs}).slice(1,-1),className:node.getAttribute("class")||"",};columns.push({...widgetInfo,props:widgetProps,id:`column_${nextId++}`,type:"widget",});}else if(node.tagName==="groupby"&&node.getAttribute("name")){const fieldName=node.getAttribute("name");const coModelName=fields[fieldName].relation;const groupByArchInfo=groupListArchParser.parse(node,models,coModelName);groupBy.buttons[fieldName]=groupByArchInfo.buttons;groupBy.fields[fieldName]={fieldNodes:groupByArchInfo.fieldNodes,fields:models[coModelName],};return false;}else if(node.tagName==="header"){headerButtons=[...node.children].map((node)=>({...this.processButton(node),type:"button",id:buttonId++,}));return false;}else if(node.tagName==="control"){for(const childNode of node.children){if(childNode.tagName==="button"){creates.push({type:"button",...processButton(childNode),});}else if(childNode.tagName==="create"){creates.push({type:"create",context:childNode.getAttribute("context"),string:childNode.getAttribute("string"),});}}
return false;}else if(["tree","list"].includes(node.tagName)){const activeActions={...getActiveActions(xmlDoc),exportXlsx:archParseBoolean(xmlDoc.getAttribute("export_xlsx"),true),};treeAttr.activeActions=activeActions;treeAttr.className=xmlDoc.getAttribute("class")||null;let editableAttr=xmlDoc.getAttribute("editable");if(editableAttr&&!["top","bottom"].includes(editableAttr)){editableAttr=archParseBoolean(editableAttr)?"bottom":null;}
treeAttr.editable=editableAttr;treeAttr.multiEdit=activeActions.edit?archParseBoolean(node.getAttribute("multi_edit")||""):false;treeAttr.openFormView=treeAttr.editable?archParseBoolean(xmlDoc.getAttribute("open_form_view")||""):false;const limitAttr=node.getAttribute("limit");treeAttr.limit=limitAttr&&parseInt(limitAttr,10);const countLimitAttr=node.getAttribute("count_limit");treeAttr.countLimit=countLimitAttr&&parseInt(countLimitAttr,10);const groupsLimitAttr=node.getAttribute("groups_limit");treeAttr.groupsLimit=groupsLimitAttr&&parseInt(groupsLimitAttr,10);treeAttr.noOpen=archParseBoolean(node.getAttribute("no_open")||"");treeAttr.rawExpand=xmlDoc.getAttribute("expand");treeAttr.decorations=getDecoration(xmlDoc);treeAttr.defaultGroupBy=xmlDoc.getAttribute("default_group_by");treeAttr.defaultOrder=stringToOrderBy(xmlDoc.getAttribute("default_order")||null);const action=xmlDoc.getAttribute("action");const type=xmlDoc.getAttribute("type");treeAttr.openAction=action&&type?{action,type}:null;}});if(!treeAttr.defaultOrder.length&&handleField){const handleFieldSort=`${handleField}, id`;treeAttr.defaultOrder=stringToOrderBy(handleFieldSort);}
return{creates,headerButtons,fieldNodes,widgetNodes,columns,groupBy,xmlDoc,...treeAttr,};}}
return __exports;});;

/* /web/static/src/views/list/list_confirmation_dialog.js */
odoo.define('@web/views/list/list_confirmation_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/views/fields/field','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Field}=require("@web/views/fields/field");const{useAutofocus}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ListConfirmationDialog=__exports.ListConfirmationDialog=class ListConfirmationDialog extends Component{setup(){useAutofocus();}
_cancel(){if(this.props.cancel){this.props.cancel();}
this.props.close();}
async _confirm(){if(this.props.confirm){await this.props.confirm();}
this.props.close();}}
ListConfirmationDialog.template="web.ListView.ConfirmationModal";ListConfirmationDialog.components={Dialog,Field};ListConfirmationDialog.props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},confirm:{type:Function,optional:true},cancel:{type:Function,optional:true},isDomainSelected:Boolean,fields:Object,nbRecords:Number,nbValidRecords:Number,record:Object,};ListConfirmationDialog.defaultProps={title:_t("Confirmation"),};return __exports;});;

/* /web/static/src/views/list/list_controller.js */
odoo.define('@web/views/list/list_controller',['@web/core/l10n/translation','@web/core/confirmation_dialog/confirmation_dialog','@web/core/network/download','@web/core/py_js/py','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/utils/objects','@web/search/action_menus/action_menus','@web/search/layout','@web/search/pager_hook','@web/model/model','@web/model/relational_model/dynamic_record_list','@web/model/relational_model/utils','@web/views/standard_view_props','@web/views/view_button/multi_record_view_button','@web/views/view_button/view_button','@web/views/view_button/view_button_hook','@web/views/view_dialogs/export_data_dialog','@web/views/view_hook','@web/views/list/list_confirmation_dialog','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/search/cog_menu/cog_menu','@web/session','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{deleteConfirmationMessage,ConfirmationDialog,}=require("@web/core/confirmation_dialog/confirmation_dialog");const{download}=require("@web/core/network/download");const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{unique}=require("@web/core/utils/arrays");const{useService,useBus}=require("@web/core/utils/hooks");const{omit}=require("@web/core/utils/objects");const{ActionMenus,STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const{Layout}=require("@web/search/layout");const{usePager}=require("@web/search/pager_hook");const{useModelWithSampleData}=require("@web/model/model");const{DynamicRecordList}=require("@web/model/relational_model/dynamic_record_list");const{extractFieldsFromArchInfo}=require("@web/model/relational_model/utils");const{standardViewProps}=require("@web/views/standard_view_props");const{MultiRecordViewButton}=require("@web/views/view_button/multi_record_view_button");const{ViewButton}=require("@web/views/view_button/view_button");const{executeButtonCallback,useViewButtons}=require("@web/views/view_button/view_button_hook");const{ExportDataDialog}=require("@web/views/view_dialogs/export_data_dialog");const{useSetupView}=require("@web/views/view_hook");const{ListConfirmationDialog}=require("@web/views/list/list_confirmation_dialog");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{session}=require("@web/session");const{Component,onMounted,onWillPatch,onWillStart,useEffect,useRef,useState,useSubEnv,}=require("@odoo/owl");const ListController=__exports.ListController=class ListController extends Component{setup(){this.actionService=useService("action");this.dialogService=useService("dialog");this.userService=useService("user");this.rpc=useService("rpc");this.orm=useService("orm");this.rootRef=useRef("root");this.archInfo=this.props.archInfo;const openFormView=this.props.editable?this.archInfo.openFormView:false;this.onOpenFormView=openFormView?this.openRecord.bind(this):undefined;this.activeActions=this.archInfo.activeActions;this.editable=this.activeActions.edit&&this.props.editable?this.archInfo.editable:false;this.model=useState(useModelWithSampleData(this.props.Model,this.modelParams));this.hasMousedownDiscard=false;this.nextActionAfterMouseup=null;this.optionalActiveFields=[];onWillStart(async()=>{this.isExportEnable=await this.userService.hasGroup("base.group_allow_export");});onMounted(()=>{const{rendererScrollPositions}=this.props.state||{};if(rendererScrollPositions){const renderer=this.rootRef.el.querySelector(".o_list_renderer");renderer.scrollLeft=rendererScrollPositions.left;renderer.scrollTop=rendererScrollPositions.top;}});this.archiveEnabled="active"in this.props.fields?!this.props.fields.active.readonly:"x_active"in this.props.fields?!this.props.fields.x_active.readonly:false;useSubEnv({model:this.model});useViewButtons(this.model,this.rootRef,{beforeExecuteAction:this.beforeExecuteActionButton.bind(this),afterExecuteAction:this.afterExecuteActionButton.bind(this),});useSetupView({rootRef:this.rootRef,beforeLeave:async()=>{return this.model.root.leaveEditMode();},beforeUnload:async(ev)=>{const editedRecord=this.model.root.editedRecord;if(editedRecord){const isValid=await editedRecord.urgentSave();if(!isValid){ev.preventDefault();ev.returnValue="Unsaved changes";}}},getLocalState:()=>{const renderer=this.rootRef.el.querySelector(".o_list_renderer");return{modelState:this.model.exportState(),rendererScrollPositions:{left:renderer.scrollLeft,top:renderer.scrollTop,},};},getOrderBy:()=>{return this.model.root.orderBy;},});usePager(()=>{const{count,hasLimitedCount,isGrouped,limit,offset}=this.model.root;return{offset:offset,limit:limit,total:count,onUpdate:async({offset,limit},hasNavigated)=>{if(this.model.root.editedRecord){if(!(await this.model.root.editedRecord.save())){return;}}
await this.model.root.load({limit,offset});if(hasNavigated){this.onPageChangeScroll();}},updateTotal:!isGrouped&&hasLimitedCount?()=>this.model.root.fetchCount():undefined,};});useEffect(()=>{if(this.props.onSelectionChanged){const resIds=this.model.root.selection.map((record)=>record.resId);this.props.onSelectionChanged(resIds);}},()=>[this.model.root.selection.length]);this.searchBarToggler=useSearchBarToggler();this.firstLoad=true;onWillPatch(()=>{this.firstLoad=false;});useBus(this.env.searchModel,"direct-export-data",this.onDirectExportData.bind(this));}
get modelParams(){const{defaultGroupBy,rawExpand}=this.archInfo;const{activeFields,fields}=extractFieldsFromArchInfo(this.archInfo,this.props.fields);const groupByInfo={};for(const fieldName in this.archInfo.groupBy.fields){const fieldNodes=this.archInfo.groupBy.fields[fieldName].fieldNodes;const fields=this.archInfo.groupBy.fields[fieldName].fields;groupByInfo[fieldName]=extractFieldsFromArchInfo({fieldNodes},fields);}
const modelConfig=this.props.state?.modelState?.config||{resModel:this.props.resModel,fields,activeFields,openGroupsByDefault:rawExpand?evaluateExpr(rawExpand,this.props.context):false,};return{config:modelConfig,state:this.props.state?.modelState,groupByInfo,limit:this.archInfo.limit||this.props.limit,countLimit:this.archInfo.countLimit,defaultOrderBy:this.archInfo.defaultOrder,defaultGroupBy:this.props.searchMenuTypes.includes("groupBy")?defaultGroupBy:false,groupsLimit:this.archInfo.groupsLimit,multiEdit:this.archInfo.multiEdit,activeIdsLimit:session.active_ids_limit,hooks:{onRecordSaved:this.onRecordSaved.bind(this),onWillSaveRecord:this.onWillSaveRecord.bind(this),onWillSaveMulti:this.onWillSaveMulti.bind(this),onSavedMulti:this.onSavedMulti.bind(this),onWillSetInvalidField:this.onWillSetInvalidField.bind(this),},};}
async onRecordSaved(record){}
async onWillSaveRecord(record){}
async createRecord({group}={}){const list=(group&&group.list)||this.model.root;if(this.editable&&!list.isGrouped){if(!(list instanceof DynamicRecordList)){throw new Error("List should be a DynamicRecordList");}
await list.leaveEditMode();if(!list.editedRecord){await(group||list).addNewRecord(this.editable==="top");}
this.render();}else{await this.props.createRecord();}}
async openRecord(record){await record.save();if(this.archInfo.openAction){this.actionService.doActionButton({name:this.archInfo.openAction.action,type:this.archInfo.openAction.type,resModel:record.resModel,resId:record.resId,resIds:record.resIds,context:record.context,onClose:async()=>{await record.model.root.load();},});}else{const activeIds=this.model.root.records.map((datapoint)=>datapoint.resId);this.props.selectRecord(record.resId,{activeIds});}}
async onClickCreate(){return executeButtonCallback(this.rootRef.el,()=>this.createRecord());}
async onClickDiscard(){return executeButtonCallback(this.rootRef.el,()=>this.model.root.leaveEditMode({discard:true}));}
async onClickSave(){return executeButtonCallback(this.rootRef.el,async()=>{const saved=await this.model.root.editedRecord.save();if(saved){await this.model.root.leaveEditMode();}});}
onMouseDownDiscard(mouseDownEvent){this.hasMousedownDiscard=true;document.addEventListener("mouseup",(mouseUpEvent)=>{this.hasMousedownDiscard=false;if(mouseUpEvent.target!==mouseDownEvent.target){if(this.nextActionAfterMouseup){this.nextActionAfterMouseup();}}
this.nextActionAfterMouseup=null;},{capture:true,once:true});}
onPageChangeScroll(){if(this.rootRef&&this.rootRef.el){this.rootRef.el.querySelector(".o_content").scrollTop=0;}}
getSelectedResIds(){return this.model.root.getResIds(true);}
getStaticActionMenuItems(){const list=this.model.root;const isM2MGrouped=list.groupBy.some((groupBy)=>{const fieldName=groupBy.split(":")[0];return list.fields[fieldName].type==="many2many";});return{export:{isAvailable:()=>this.isExportEnable,sequence:10,icon:"fa fa-upload",description:_t("Export"),callback:()=>this.onExportData(),},archive:{isAvailable:()=>this.archiveEnabled&&!isM2MGrouped,sequence:20,icon:"oi oi-archive",description:_t("Archive"),callback:()=>{this.dialogService.add(ConfirmationDialog,this.archiveDialogProps);},},unarchive:{isAvailable:()=>this.archiveEnabled&&!isM2MGrouped,sequence:30,icon:"oi oi-unarchive",description:_t("Unarchive"),callback:()=>this.toggleArchiveState(false),},duplicate:{isAvailable:()=>this.activeActions.duplicate&&!isM2MGrouped,sequence:35,icon:"fa fa-clone",description:_t("Duplicate"),callback:()=>this.duplicateRecords(),},delete:{isAvailable:()=>this.activeActions.delete&&!isM2MGrouped,sequence:40,icon:"fa fa-trash-o",description:_t("Delete"),callback:()=>this.onDeleteSelectedRecords(),},};}
get archiveDialogProps(){return{body:_t("Are you sure that you want to archive all the selected records?"),confirmLabel:_t("Archive"),confirm:()=>{this.toggleArchiveState(true);},cancel:()=>{},};}
get actionMenuItems(){const{actionMenus}=this.props.info;const staticActionItems=Object.entries(this.getStaticActionMenuItems()).filter(([key,item])=>item.isAvailable===undefined||item.isAvailable()).sort(([k1,item1],[k2,item2])=>(item1.sequence||0)-(item2.sequence||0)).map(([key,item])=>Object.assign({key,groupNumber:STATIC_ACTIONS_GROUP_NUMBER},omit(item,"isAvailable")));return{action:[...staticActionItems,...(actionMenus.action||[])],print:actionMenus.print,};}
async onSelectDomain(){if(!this.isTotalTrustable){this.nbRecordsMatchingDomain=await this.orm.searchCount(this.props.resModel,this.model.root.domain,{limit:this.model.initialCountLimit});}
await this.model.root.selectDomain(true);if(this.props.onSelectionChanged){const resIds=await this.model.root.getResIds(true);this.props.onSelectionChanged(resIds);}}
onUnselectAll(){this.model.root.selection.forEach((record)=>{record.toggleSelection(false);});this.model.root.selectDomain(false);}
evalViewModifier(modifier){return evaluateBooleanExpr(modifier,this.model.root.evalContext);}
get className(){return this.props.className;}
get nbSelected(){return this.model.root.selection.length;}
get isPageSelected(){const root=this.model.root;return root.selection.length===root.records.length;}
get isDomainSelected(){return this.model.root.isDomainSelected;}
get isTotalTrustable(){return!this.model.root.isGrouped||this.model.root.count<=this.model.root.limit;}
get nbTotal(){const list=this.model.root;return list.isGrouped?list.recordCount:list.count;}
onOptionalFieldsChanged(optionalActiveFields){this.optionalActiveFields=optionalActiveFields;}
get defaultExportList(){return unique(this.props.archInfo.columns.filter((col)=>col.type==="field").filter((col)=>!col.optional||this.optionalActiveFields[col.name]).map((col)=>this.props.fields[col.name]).filter((field)=>field.exportable!==false));}
get display(){const{controlPanel}=this.props.display;if(!controlPanel){return this.props.display;}
return{...this.props.display,controlPanel:{...controlPanel,layoutActions:!this.nbSelected,},};}
async downloadExport(fields,import_compat,format){let ids=false;if(!this.isDomainSelected){const resIds=await this.getSelectedResIds();ids=resIds.length>0&&resIds;}
const exportedFields=fields.map((field)=>({name:field.name||field.id,label:field.label||field.string,store:field.store,type:field.field_type||field.type,}));if(import_compat){exportedFields.unshift({name:"id",label:_t("External ID"),});}
await download({data:{data:JSON.stringify({import_compat,context:this.props.context,domain:this.model.root.domain,fields:exportedFields,groupby:this.model.root.groupBy,ids,model:this.model.root.resModel,}),},url:`/web/export/${format}`,});}
async getExportedFields(model,import_compat,parentParams){return await this.rpc("/web/export/get_fields",{...parentParams,model,import_compat,});}
async onExportData(){const dialogProps={context:this.props.context,defaultExportList:this.defaultExportList,download:this.downloadExport.bind(this),getExportedFields:this.getExportedFields.bind(this),root:this.model.root,};this.dialogService.add(ExportDataDialog,dialogProps);}
async onDirectExportData(){await this.downloadExport(this.defaultExportList,false,"xlsx");}
async toggleArchiveState(archive){if(archive){return this.model.root.archive(true);}
return this.model.root.unarchive(true);}
async duplicateRecords(){return this.model.root.duplicateRecords();}
get deleteConfirmationDialogProps(){const root=this.model.root;let body=deleteConfirmationMessage;if(root.isDomainSelected||root.selection.length>1){body=_t("Are you sure you want to delete these records?");}
return{title:_t("Bye-bye, record!"),body,confirmLabel:_t("Delete"),confirm:()=>this.model.root.deleteRecords(),cancel:()=>{},cancelLabel:_t("No, keep it"),};}
async onDeleteSelectedRecords(){this.dialogService.add(ConfirmationDialog,this.deleteConfirmationDialogProps);}
discardSelection(){this.model.root.records.forEach((record)=>{record.toggleSelection(false);});}
async beforeExecuteActionButton(clickParams){if(clickParams.special!=="cancel"&&this.model.root.editedRecord){return this.model.root.editedRecord.save();}}
async afterExecuteActionButton(clickParams){}
onWillSaveMulti(editedRecord,changes,validSelectedRecords){if(this.hasMousedownDiscard){this.nextActionAfterMouseup=()=>this.model.root.multiSave(editedRecord);return false;}
if(validSelectedRecords.length>1){const{isDomainSelected,selection}=this.model.root;return new Promise((resolve)=>{const dialogProps={confirm:()=>resolve(true),cancel:()=>{if(this.model.root.editedRecord){this.model.root.leaveEditMode({discard:true});}else{editedRecord.discard();}
resolve(false);},isDomainSelected,fields:Object.keys(changes).map((fieldName)=>{const fieldNode=Object.values(this.archInfo.fieldNodes).find((fieldNode)=>fieldNode.name===fieldName);const label=fieldNode&&fieldNode.string;return{name:fieldName,label:label||editedRecord.fields[fieldName].string,fieldNode,widget:fieldNode&&fieldNode.widget,};}),nbRecords:selection.length,nbValidRecords:validSelectedRecords.length,record:editedRecord,};const focusedCellBeforeDialog=document.activeElement.closest(".o_data_cell");this.dialogService.add(ListConfirmationDialog,dialogProps,{onClose:()=>{if(focusedCellBeforeDialog){focusedCellBeforeDialog.focus();}
this.model.root.leaveEditMode({discard:true});resolve(false);},});});}
return true;}
onWillSetInvalidField(record,fieldName){if(this.hasMousedownDiscard){this.nextActionAfterMouseup=()=>record.setInvalidField(fieldName);return false;}
return true;}
onSavedMulti(records){records.forEach((record)=>{record.selected=false;});}}
ListController.template=`web.ListView`;ListController.components={ActionMenus,Layout,ViewButton,MultiRecordViewButton,SearchBar,CogMenu,};ListController.props={...standardViewProps,allowSelectors:{type:Boolean,optional:true},editable:{type:Boolean,optional:true},onSelectionChanged:{type:Function,optional:true},showButtons:{type:Boolean,optional:true},Model:Function,Renderer:Function,buttonTemplate:String,archInfo:Object,};ListController.defaultProps={allowSelectors:true,createRecord:()=>{},editable:true,selectRecord:()=>{},showButtons:true,};return __exports;});;

/* /web/static/src/views/list/list_renderer.js */
odoo.define('@web/views/list/list_renderer',['@web/core/browser/browser','@web/core/checkbox/checkbox','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/hotkeys/hotkey_service','@web/core/pager/pager','@web/core/py_js/py','@web/core/registry','@web/core/utils/hooks','@web/core/utils/sortable_owl','@web/core/utils/ui','@web/views/fields/field','@web/views/fields/field_tooltip','@web/views/utils','@web/model/relational_model/utils','@web/views/view_button/view_button','@web/views/view_hook','@web/views/widgets/widget','@web/core/l10n/localization','@web/core/utils/functions','@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{Pager}=require("@web/core/pager/pager");const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{useSortable}=require("@web/core/utils/sortable_owl");const{getTabableElements}=require("@web/core/utils/ui");const{Field,getPropertyFieldInfo}=require("@web/views/fields/field");const{getTooltipInfo}=require("@web/views/fields/field_tooltip");const{getClassNameFromDecoration}=require("@web/views/utils");const{combineModifiers}=require("@web/model/relational_model/utils");const{ViewButton}=require("@web/views/view_button/view_button");const{useBounceButton}=require("@web/views/view_hook");const{Widget}=require("@web/views/widgets/widget");const{getFormattedValue}=require("@web/views/utils");const{localization}=require("@web/core/l10n/localization");const{uniqueId}=require("@web/core/utils/functions");const{Component,onMounted,onPatched,onWillPatch,onWillUpdateProps,useEffect,useExternalListener,useRef,useState,}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const formatters=registry.category("formatters");const DEFAULT_GROUP_PAGER_COLSPAN=1;const FIELD_CLASSES={char:"o_list_char",float:"o_list_number",integer:"o_list_number",monetary:"o_list_number",text:"o_list_text",many2one:"o_list_many2one",};const FIXED_FIELD_COLUMN_WIDTHS={boolean:"70px",date:"92px",datetime:"146px",float:"92px",integer:"74px",monetary:"104px",handle:"33px",};function containsActiveElement(parent){const{activeElement}=document;return parent!==activeElement&&parent.contains(activeElement);}
function getElementToFocus(cell,index){return getTabableElements(cell).at(index)||cell;}
class OptionalFieldsDropdown extends Dropdown{static template="web.ListRenderer.OptionalFieldsDropdown";static props={...Dropdown.props,listRendererClass:String,};onWindowClicked(ev){if(ev.target.closest(".o_optional_columns_dropdown.o-dropdown--menu")){return;}
super.onWindowClicked(...arguments);}}
const ListRenderer=__exports.ListRenderer=class ListRenderer extends Component{setup(){this.uiService=useService("ui");this.allColumns=this.processAllColumn(this.props.archInfo.columns,this.props.list);this.notificationService=useService("notification");this.keyOptionalFields=this.createKeyOptionalFields();this.getOptionalActiveFields();this.cellClassByColumn={};this.groupByButtons=this.props.archInfo.groupBy.buttons;this.state=useState({columns:this.getActiveColumns(this.props.list),});this.withHandleColumn=this.state.columns.some((col)=>col.widget==="handle");useExternalListener(document,"click",this.onGlobalClick.bind(this));this.tableRef=useRef("table");this.longTouchTimer=null;this.touchStartMs=0;this.resizing=false;this.preventReorder=false;this.creates=this.props.archInfo.creates.length?this.props.archInfo.creates:[{type:"create",string:_t("Add a line")}];this.cellToFocus=null;this.activeRowId=null;onMounted(async()=>{await Promise.resolve();this.activeElement=this.uiService.activeElement;});onWillPatch(()=>{const activeRow=document.activeElement.closest(".o_data_row.o_selected_row");this.activeRowId=activeRow?activeRow.dataset.id:null;});onWillUpdateProps((nextProps)=>{this.allColumns=this.processAllColumn(nextProps.archInfo.columns,nextProps.list);this.state.columns=this.getActiveColumns(nextProps.list);});let dataRowId;this.rootRef=useRef("root");this.resequencePromise=Promise.resolve();useSortable({enable:()=>this.canResequenceRows,ref:this.rootRef,elements:".o_row_draggable",handle:".o_handle_cell",cursor:"grabbing",onDragStart:(params)=>{const{element}=params;dataRowId=element.dataset.id;return this.sortStart(params);},onDragEnd:(params)=>this.sortStop(params),onDrop:(params)=>this.sortDrop(dataRowId,params),});if(this.env.searchModel){useBus(this.env.searchModel,"focus-view",()=>{if(this.props.list.model.useSampleModel){return;}
const nextTh=this.tableRef.el.querySelector("thead th");const toFocus=getElementToFocus(nextTh);this.focus(toFocus);this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");});}
useBus(this.props.list.model.bus,"FIELD_IS_DIRTY",(ev)=>(this.lastIsDirty=ev.detail));useBounceButton(this.rootRef,()=>{return this.showNoContentHelper;});useEffect((editedRecord)=>{if(editedRecord){this.keepColumnWidths=true;}},()=>[this.props.list.editedRecord]);useEffect(()=>{this.freezeColumnWidths();},()=>[this.state.columns,this.isEmpty,this.props.list.offset,this.props.list.limit]);useExternalListener(window,"resize",()=>{this.columnWidths=null;this.freezeColumnWidths();});useExternalListener(window,"keydown",(ev)=>{this.shiftKeyMode=ev.shiftKey;});useExternalListener(window,"keyup",(ev)=>{this.shiftKeyMode=ev.shiftKey;const hotkey=getActiveHotkey(ev);if(hotkey==="shift"){this.shiftKeyedRecord=undefined;}});useExternalListener(window,"blur",(ev)=>{this.shiftKeyMode=false;});onPatched(async()=>{await Promise.resolve();if(this.activeElement!==this.uiService.activeElement){return;}
const editedRecord=this.props.list.editedRecord;if(editedRecord&&this.activeRowId!==editedRecord.id){if(this.cellToFocus&&this.cellToFocus.record===editedRecord){const column=this.cellToFocus.column;const forward=this.cellToFocus.forward;this.focusCell(column,forward);}else if(this.lastEditedCell){this.focusCell(this.lastEditedCell.column,true);}else{this.focusCell(this.state.columns[0]);}}
this.cellToFocus=null;this.lastEditedCell=null;});this.isRTL=localization.direction==="rtl";this.uniqueRendererClass=uniqueId("o_list_renderer_");}
displaySaveNotification(){this.notificationService.add(_t('Please click on the "save" button first'),{type:"danger",});}
getActiveColumns(list){return this.allColumns.filter((col)=>{if(list.isGrouped&&col.widget==="handle"){return false;}
if(col.optional&&!this.optionalActiveFields[col.name]){return false;}
if(this.evalColumnInvisible(col.column_invisible)){return false;}
return true;});}
get hasSelectors(){return this.props.allowSelectors&&!this.env.isSmall;}
add(params){if(this.canCreate){this.props.onAdd(params);}}
processAllColumn(allColumns,list){return allColumns.flatMap((column)=>{if(column.type==="field"&&list.fields[column.name].type==="properties"){return this.getPropertyFieldColumns(column,list);}else{return[column];}});}
getPropertyFieldColumns(column,list){return Object.values(list.fields).filter((field)=>field.relatedPropertyField&&field.relatedPropertyField.fieldName===column.name&&field.type!=='separator').map((propertyField)=>{return{...getPropertyFieldInfo(propertyField),id:`${column.id}_${propertyField.name}`,column_invisible:combineModifiers(propertyField.column_invisible,column.column_invisible,"OR"),classNames:column.classNames,optional:"hide",type:"field",hasLabel:true,label:propertyField.string,sortable:false,attrs:["integer","float"].includes(propertyField.type)?{sum:propertyField.string}:{},};});}
getFieldProps(record,column){return{readonly:this.isCellReadonly(column,record)||this.isRecordReadonly(record),};}
freezeColumnWidths(){if(!this.keepColumnWidths){this.columnWidths=null;}
const table=this.tableRef.el;const headers=[...table.querySelectorAll("thead th:not(.o_list_actions_header)")];if(!this.columnWidths||!this.columnWidths.length){table.style.tableLayout="auto";headers.forEach((th)=>{th.style.width=null;th.style.maxWidth=null;});this.setDefaultColumnWidths();this.columnWidths=this.computeColumnWidthsFromContent();table.style.tableLayout="fixed";}
headers.forEach((th,index)=>{if(!th.style.width){th.style.width=`${Math.floor(this.columnWidths[index])}px`;}});}
setDefaultColumnWidths(){const widths=this.state.columns.map((col)=>this.calculateColumnWidth(col));const sumOfRelativeWidths=widths.filter(({type})=>type==="relative").reduce((sum,{value})=>sum+value,0);const columnOffset=this.hasSelectors?2:1;widths.forEach(({type,value},i)=>{const headerEl=this.tableRef.el.querySelector(`th:nth-child(${i + columnOffset})`);if(type==="absolute"){if(this.isEmpty){headerEl.style.width=value;}else{headerEl.style.minWidth=value;}}else if(type==="relative"&&this.isEmpty){headerEl.style.width=`${((value / sumOfRelativeWidths) * 100).toFixed(2)}%`;}});}
computeColumnWidthsFromContent(){const table=this.tableRef.el;table.classList.add("o_list_computing_widths");const headers=[...table.querySelectorAll("thead th")];const columnWidths=headers.map((th)=>th.getBoundingClientRect().width);const getWidth=(th)=>columnWidths[headers.indexOf(th)]||0;const getTotalWidth=()=>columnWidths.reduce((tot,width)=>tot+width,0);const shrinkColumns=(thsToShrink,shrinkAmount)=>{let canKeepShrinking=true;for(const th of thsToShrink){const index=headers.indexOf(th);let maxWidth=columnWidths[index]-shrinkAmount;if(maxWidth<92){maxWidth=92;canKeepShrinking=false;}
th.style.maxWidth=`${Math.floor(maxWidth)}px`;columnWidths[index]=maxWidth;}
return canKeepShrinking;};const sortedThs=[...table.querySelectorAll("thead th:not(.o_list_button)")].sort((a,b)=>getWidth(b)-getWidth(a));const allowedWidth=table.parentNode.getBoundingClientRect().width;let totalWidth=getTotalWidth();for(let index=1;totalWidth>allowedWidth;index++){const largestCols=sortedThs.slice(0,index);const currentWidth=getWidth(largestCols[0]);for(;currentWidth===getWidth(sortedThs[index]);index++){largestCols.push(sortedThs[index]);}
const nextLargest=sortedThs[index];const toRemove=Math.ceil((totalWidth-allowedWidth)/largestCols.length);const shrinkAmount=Math.min(toRemove,currentWidth-getWidth(nextLargest));const canKeepShrinking=shrinkColumns(largestCols,shrinkAmount);if(!canKeepShrinking){break;}
totalWidth=getTotalWidth();}
table.classList.remove("o_list_computing_widths");return columnWidths;}
get activeActions(){return this.props.activeActions||{};}
get canResequenceRows(){if(!this.props.list.canResequence()){return false;}
const{handleField,orderBy}=this.props.list;return!orderBy.length||(orderBy.length&&orderBy[0].name===handleField);}
get isEmpty(){return!this.props.list.records.length;}
get fields(){return this.props.list.fields;}
get nbCols(){let nbCols=this.state.columns.length;if(this.hasSelectors){nbCols++;}
if(this.activeActions.onDelete||this.displayOptionalFields){nbCols++;}
if(this.props.onOpenFormView){nbCols++;}
return nbCols;}
canUseFormatter(column,record){if(column.widget){return false;}
if(record.isInEdition&&(record.model.multiEdit||this.isInlineEditable(record))){return false;}
return true;}
isRecordReadonly(record){if(record.isNew){return false;}
if(this.props.activeActions?.edit===false){return true;}
if(record.isInEdition&&!this.isInlineEditable(record)&&!record.model.multiEdit){return true;}
return false;}
focusCell(column,forward=true){const index=column?this.state.columns.findIndex((col)=>col.id===column.id&&col.name===column.name):-1;let columns;if(index===-1&&!forward){columns=this.state.columns.slice(0).reverse();}else{columns=[...this.state.columns.slice(index,this.state.columns.length),...this.state.columns.slice(0,index),];}
const editedRecord=this.props.list.editedRecord;for(const column of columns){if(column.type!=="field"){continue;}
if(!this.isCellReadonly(column,editedRecord)){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name='${column.name}']`);if(cell){const toFocus=getElementToFocus(cell);if(cell!==toFocus){this.focus(toFocus);this.lastEditedCell={column,record:editedRecord};break;}}}}}
focus(el){if(!el){return;}
el.focus();if(["text","search","url","tel","password","textarea"].includes(el.type)&&el.selectionStart===el.selectionEnd){el.selectionStart=0;el.selectionEnd=el.value.length;}}
editGroupRecord(group){const{resId,resModel}=group.record;this.env.services.action.doAction({context:{create:false,},res_model:resModel,res_id:resId,type:"ir.actions.act_window",views:[[false,"form"]],flags:{mode:"edit"},});}
createKeyOptionalFields(){let keyParts={fields:this.props.list.fieldNames,model:this.props.list.resModel,viewMode:"list",viewId:this.env.config.viewId,};if(this.props.nestedKeyOptionalFieldsData){keyParts=Object.assign(keyParts,{model:this.props.nestedKeyOptionalFieldsData.model,viewMode:this.props.nestedKeyOptionalFieldsData.viewMode,relationalField:this.props.nestedKeyOptionalFieldsData.field,subViewType:"list",});}
const parts=["model","viewMode","viewId","relationalField","subViewType"];const viewIdentifier=["optional_fields"];parts.forEach((partName)=>{if(partName in keyParts){viewIdentifier.push(keyParts[partName]);}});keyParts.fields.sort((left,right)=>(left<right?-1:1)).forEach((fieldName)=>{return viewIdentifier.push(fieldName);});return viewIdentifier.join(",");}
get optionalFieldGroups(){const propertyGroups={};const optionalFields=[];const optionalColumns=this.allColumns.filter((col)=>col.optional&&!this.evalColumnInvisible(col.column_invisible));for(const col of optionalColumns){const optionalField={label:col.label,name:col.name,value:this.optionalActiveFields[col.name],};if(!col.relatedPropertyField){optionalFields.push(optionalField);}else{const{displayName,id}=col.relatedPropertyField;if(propertyGroups[id]){propertyGroups[id].optionalFields.push(optionalField);}else{propertyGroups[id]={id,displayName,optionalFields:[optionalField]};}}}
if(optionalFields.length){return[{optionalFields},...Object.values(propertyGroups)];}
return Object.values(propertyGroups);}
get hasOptionalFields(){return this.allColumns.some((col)=>col.optional&&!this.evalColumnInvisible(col.column_invisible));}
get displayOptionalFields(){return this.hasOptionalFields;}
nbRecordsInGroup(group){if(group.isFolded){return 0;}else if(group.list.isGrouped){let count=0;for(const gr of group.list.groups){count+=this.nbRecordsInGroup(gr);}
return count;}else{return group.list.records.length;}}
get selectAll(){const list=this.props.list;const nbDisplayedRecords=list.records.length;if(list.isDomainSelected){return true;}else{return nbDisplayedRecords>0&&list.selection.length===nbDisplayedRecords;}}
get aggregates(){let values;if(this.props.list.selection&&this.props.list.selection.length){values=this.props.list.selection.map((r)=>r.data);}else if(this.props.list.isGrouped){values=this.props.list.groups.map((g)=>g.aggregates);}else{values=this.props.list.records.map((r)=>r.data);}
const aggregates={};for(const column of this.allColumns){if(column.type!=="field"){continue;}
const fieldName=column.name;if(fieldName in this.optionalActiveFields&&!this.optionalActiveFields[fieldName]){continue;}
const field=this.fields[fieldName];const fieldValues=values.map((v)=>v[fieldName]).filter((v)=>v||v===0);if(!fieldValues.length){continue;}
const type=field.type;if(type!=="integer"&&type!=="float"&&type!=="monetary"){continue;}
const{attrs,widget}=column;let currencyId;if(type==="monetary"||widget==="monetary"){const currencyField=column.options.currency_field||this.fields[fieldName].currency_field||"currency_id";if(!(currencyField in this.props.list.activeFields)){aggregates[fieldName]={help:_t("No currency provided"),value:"—",};continue;}
currencyId=values[0][currencyField]&&values[0][currencyField][0];if(currencyId){const sameCurrency=values.every((value)=>currencyId===value[currencyField][0]);if(!sameCurrency){aggregates[fieldName]={help:_t("Different currencies cannot be aggregated"),value:"—",};continue;}}}
const func=(attrs.sum&&"sum")||(attrs.avg&&"avg")||(attrs.max&&"max")||(attrs.min&&"min");if(func){let aggregateValue=0;if(func==="max"){aggregateValue=Math.max(-Infinity,...fieldValues);}else if(func==="min"){aggregateValue=Math.min(Infinity,...fieldValues);}else if(func==="avg"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val)/fieldValues.length;}else if(func==="sum"){aggregateValue=fieldValues.reduce((acc,val)=>acc+val);}
const formatter=formatters.get(widget,false)||formatters.get(type,false);const formatOptions={digits:attrs.digits?JSON.parse(attrs.digits):undefined,escape:true,};if(currencyId){formatOptions.currencyId=currencyId;}
aggregates[fieldName]={help:attrs[func],value:formatter?formatter(aggregateValue,formatOptions):aggregateValue,};}}
return aggregates;}
formatAggregateValue(group,column){const{widget,attrs}=column;const field=this.props.list.fields[column.name];const aggregateValue=group.aggregates[column.name];if(!(column.name in group.aggregates)){return"";}
const formatter=formatters.get(widget,false)||formatters.get(field.type,false);const formatOptions={digits:attrs.digits?JSON.parse(attrs.digits):field.digits,escape:true,};return formatter?formatter(aggregateValue,formatOptions):aggregateValue;}
getGroupLevel(group){return this.props.list.groupBy.length-group.list.groupBy.length-1;}
getColumnClass(column){const classNames=["align-middle"];if(this.isSortable(column)){classNames.push("o_column_sortable","position-relative","cursor-pointer");}else{classNames.push("cursor-default");}
const orderBy=this.props.list.orderBy;if(orderBy.length&&column.widget!=="handle"&&orderBy[0].name===column.name&&column.hasLabel){classNames.push("table-active");}
if(this.isNumericColumn(column)){classNames.push("o_list_number_th");}
if(column.type==="button_group"){classNames.push("o_list_button");}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}
return classNames.join(" ");}
getColumns(record){return this.state.columns;}
isNumericColumn(column){const{type}=this.fields[column.name];return["float","integer","monetary"].includes(type);}
shouldReverseHeader(column){return this.isNumericColumn(column)&&!this.isRTL;}
isSortable(column){const{hasLabel,name,options}=column;const{sortable}=this.fields[name];return(sortable||options.allow_order)&&hasLabel;}
getSortableIconClass(column){const{orderBy}=this.props.list;const classNames=this.isSortable(column)?["fa","fa-lg"]:["d-none"];if(orderBy.length&&orderBy[0].name===column.name){classNames.push(orderBy[0].asc?"fa-angle-up":"fa-angle-down");}else{classNames.push("fa-angle-down","opacity-0","opacity-75-hover");}
return classNames.join(" ");}
getRowClass(record){const classNames=this.props.archInfo.decorations.filter((decoration)=>evaluateBooleanExpr(decoration.condition,record.evalContextWithVirtualIds)).map((decoration)=>decoration.class);if(record.selected){classNames.push("table-info");}
if(record.isInEdition){classNames.push("o_selected_row");}
if(record.selected){classNames.push("o_data_row_selected");}
if(this.canResequenceRows){classNames.push("o_row_draggable");}
return classNames.join(" ");}
getCellClass(column,record){if(column.relatedPropertyField&&!(column.name in record.data)){return"";}
if(!this.cellClassByColumn[column.id]){const classNames=["o_data_cell"];if(column.type==="button_group"){classNames.push("o_list_button");}else if(column.type==="field"){classNames.push("o_field_cell");if(column.attrs&&column.attrs.class&&this.canUseFormatter(column,record)){classNames.push(column.attrs.class);}
const typeClass=FIELD_CLASSES[this.fields[column.name].type];if(typeClass){classNames.push(typeClass);}
if(column.widget){classNames.push(`o_${column.widget}_cell`);}}
this.cellClassByColumn[column.id]=classNames;}
const classNames=[...this.cellClassByColumn[column.id]];if(column.type==="field"){if(evaluateBooleanExpr(column.required,record.evalContextWithVirtualIds)){classNames.push("o_required_modifier");}
if(record.isFieldInvalid(column.name)){classNames.push("o_invalid_cell");}
if(this.isCellReadonly(column,record)){classNames.push("o_readonly_modifier");}
if(this.canUseFormatter(column,record)){const{decorations}=column;for(const decoName in decorations){if(evaluateBooleanExpr(decorations[decoName],record.evalContextWithVirtualIds)){classNames.push(getClassNameFromDecoration(decoName));}}}
if(record.isInEdition&&this.props.list.editedRecord&&this.isCellReadonly(column,this.props.list.editedRecord)){classNames.push("text-muted");}else{classNames.push("cursor-pointer");}}
return classNames.join(" ");}
isCellReadonly(column,record){return!!(this.isRecordReadonly(record)||(column.relatedPropertyField&&record.selected&&record.model.multiEdit)||evaluateBooleanExpr(column.readonly,record.evalContextWithVirtualIds));}
getCellTitle(column,record){const fieldType=this.fields[column.name].type;if(!(fieldType in FIXED_FIELD_COLUMN_WIDTHS)&&!["json","one2many","many2many"].includes(fieldType)){return this.getFormattedValue(column,record);}}
getFieldClass(column){return column.attrs&&column.attrs.class;}
getFormattedValue(column,record){const fieldName=column.name;if(column.options.enable_formatting===false){return record.data[fieldName];}
return getFormattedValue(record,fieldName,column.attrs);}
evalInvisible(invisible,record){return evaluateBooleanExpr(invisible,record.evalContextWithVirtualIds);}
evalColumnInvisible(columnInvisible){return this.props.evalViewModifier(columnInvisible);}
getGroupDisplayName(group){if(group.groupByField.type==="boolean"){return group.value===undefined?_t("None"):group.value?_t("Yes"):_t("No");}else{return group.value===undefined||group.value===false?_t("None"):group.displayName;}}
get canCreate(){return"link"in this.activeActions?this.activeActions.link:this.activeActions.create;}
get isX2Many(){return this.activeActions.type!=="view";}
get getEmptyRowIds(){let nbEmptyRow=Math.max(0,4-this.props.list.records.length);if(nbEmptyRow>0&&this.displayRowCreates){nbEmptyRow-=1;}
return Array.from(Array(nbEmptyRow).keys());}
get displayRowCreates(){return this.isX2Many&&this.canCreate;}
getFirstAggregateIndex(group){return this.state.columns.findIndex((col)=>col.name in group.aggregates);}
getLastAggregateIndex(group){const reversedColumns=[...this.state.columns].reverse();const index=reversedColumns.findIndex((col)=>col.name in group.aggregates);return index>-1?this.state.columns.length-index-1:-1;}
getAggregateColumns(group){const firstIndex=this.getFirstAggregateIndex(group);const lastIndex=this.getLastAggregateIndex(group);return this.state.columns.slice(firstIndex,lastIndex+1);}
getGroupNameCellColSpan(group){const firstAggregateIndex=this.getFirstAggregateIndex(group);let colspan;if(firstAggregateIndex>-1){colspan=firstAggregateIndex;}else{colspan=Math.max(1,this.state.columns.length-DEFAULT_GROUP_PAGER_COLSPAN);if(this.displayOptionalFields){colspan++;}}
if(this.hasSelectors){colspan++;}
return colspan;}
getGroupPagerCellColspan(group){const lastAggregateIndex=this.getLastAggregateIndex(group);let colspan;if(lastAggregateIndex>-1){colspan=this.state.columns.length-lastAggregateIndex-1;if(this.displayOptionalFields){colspan++;}}else{colspan=this.state.columns.length>1?DEFAULT_GROUP_PAGER_COLSPAN:0;}
if(this.props.onOpenFormView){colspan++;}
return colspan;}
getGroupPagerProps(group){const list=group.list;return{offset:list.offset,limit:list.limit,total:list.isGrouped?list.count:group.count,onUpdate:async({offset,limit})=>{await list.load({limit,offset});this.render(true);},withAccessKey:false,};}
getOptionalActiveFields(){this.optionalActiveFields={};let optionalActiveFields=browser.localStorage.getItem(this.keyOptionalFields);const optionalColumn=this.allColumns.filter((col)=>col.type==="field"&&col.optional);if(optionalActiveFields){optionalActiveFields=optionalActiveFields.split(",");optionalColumn.forEach((col)=>{this.optionalActiveFields[col.name]=optionalActiveFields.includes(col.name);});}else if(optionalActiveFields!==""){for(const col of optionalColumn){this.optionalActiveFields[col.name]=col.optional==="show";}}
if(this.props.onOptionalFieldsChanged){this.props.onOptionalFieldsChanged(this.optionalActiveFields);}}
onClickSortColumn(column){if(this.preventReorder){this.preventReorder=false;return;}
if(this.props.list.editedRecord||this.props.list.model.useSampleModel){return;}
const fieldName=column.name;const list=this.props.list;if(this.isSortable(column)){list.sortBy(fieldName);}}
onButtonCellClicked(record,column,ev){if(!ev.target.closest("button")){this.onCellClicked(record,column,ev);}}
async onCellClicked(record,column,ev){if(ev.target.special_click){return;}
const recordAfterResequence=async()=>{const recordIndex=this.props.list.records.indexOf(record);await this.resequencePromise;record=this.props.list.records[recordIndex]||record;};if((this.props.list.model.multiEdit&&record.selected)||this.isInlineEditable(record)){if(record.isInEdition&&this.props.list.editedRecord===record){const cell=this.tableRef.el.querySelector(`.o_selected_row td[name='${column.name}']`);if(cell&&containsActiveElement(cell)){this.lastEditedCell={column,record};return;}
this.focusCell(column);this.cellToFocus=null;}else{await recordAfterResequence();await this.props.list.enterEditMode(record);this.cellToFocus={column,record};if(column.type==="field"&&record.fields[column.name].type==="boolean"&&(!column.widget||column.widget==="boolean")){if(!this.isCellReadonly(column,record)&&!this.evalInvisible(column.invisible,record)){await record.update({[column.name]:!record.data[column.name]});}}}}else if(this.props.list.editedRecord&&this.props.list.editedRecord!==record){this.props.list.leaveEditMode();}else if(!this.props.archInfo.noOpen){this.props.openRecord(record);}}
async onDeleteRecord(record,ev){this.keepColumnWidths=true;const editedRecord=this.props.list.editedRecord;if(editedRecord&&editedRecord!==record){const leaved=await this.props.list.leaveEditMode();if(!leaved){return;}}
if(this.activeActions.onDelete){if(ev){const element=ev.target.closest(".o_list_record_remove");if(element.dataset.clicked){return;}
element.dataset.clicked=true;}
this.activeActions.onDelete(record);}}
findFocusFutureCell(cell,cellIsInGroupRow,direction){const row=cell.parentElement;const children=[...row.children];const index=children.indexOf(cell);let futureCell;switch(direction){case"up":{let futureRow=row.previousElementSibling;futureRow=futureRow||row.parentElement.previousElementSibling?.lastElementChild;if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"down":{let futureRow=row.nextElementSibling;futureRow=futureRow||row.parentElement.nextElementSibling?.firstElementChild;if(futureRow){const addCell=[...futureRow.children].find((c)=>c.classList.contains("o_group_field_row_add"));const nextIsGroup=futureRow.classList.contains("o_group_header");const rowTypeSwitched=cellIsInGroupRow!==nextIsGroup;let defaultIndex=0;if(cellIsInGroupRow){defaultIndex=this.hasSelectors?1:0;}
futureCell=addCell||(futureRow&&futureRow.children[rowTypeSwitched?defaultIndex:index]);}
break;}
case"left":{futureCell=children[index-1];break;}
case"right":{futureCell=children[index+1];break;}}
return futureCell&&getElementToFocus(futureCell);}
isInlineEditable(record){return!!this.props.editable;}
onCellKeydown(ev,group=null,record=null){if(this.props.list.model.useSampleModel){return;}
const hotkey=getActiveHotkey(ev);if(ev.target.tagName==="TEXTAREA"&&hotkey==="enter"){return;}
const closestCell=ev.target.closest("td, th");if(this.toggleFocusInsideCell(hotkey,closestCell)){return;}
const handled=this.props.list.editedRecord?this.onCellKeydownEditMode(hotkey,closestCell,group,record):this.onCellKeydownReadOnlyMode(hotkey,closestCell,group,record);if(handled){this.lastCreatingAction=false;this.tableRef.el.querySelector("tbody").classList.add("o_keyboard_navigation");ev.preventDefault();ev.stopPropagation();}}
findNextFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const nextCells=children.slice(index+1);for(const c of nextCells){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c,0);if(toFocus!==c){return toFocus;}}
return null;}
findPreviousFocusableOnRow(row,cell){const children=[...row.children];const index=children.indexOf(cell);const previousCells=children.slice(0,index);for(const c of previousCells.reverse()){if(!c.classList.contains("o_data_cell")){continue;}
if(c.firstElementChild&&c.firstElementChild.classList.contains("o_readonly_modifier")){continue;}
const toFocus=getElementToFocus(c,-1);if(toFocus!==c){return toFocus;}}
return null;}
expandCheckboxes(record,direction){const{records}=this.props.list;if(!record&&direction==="down"){const defaultRecord=records[0];this.shiftKeyedRecord=defaultRecord;defaultRecord.toggleSelection(true);return true;}
const recordIndex=records.indexOf(record);const shiftKeyedRecordIndex=records.indexOf(this.shiftKeyedRecord);let nextRecord;let isExpanding;switch(direction){case"up":if(recordIndex<=0){return false;}
nextRecord=records[recordIndex-1];isExpanding=shiftKeyedRecordIndex>recordIndex-1;break;case"down":if(recordIndex===records.length-1){return false;}
nextRecord=records[recordIndex+1];isExpanding=shiftKeyedRecordIndex<recordIndex+1;break;}
if(isExpanding){record.toggleSelection(true);nextRecord.toggleSelection(true);}else{record.toggleSelection(false);}
return true;}
applyCellKeydownMultiEditMode(hotkey,cell,group,record){const{list}=this.props;const row=cell.parentElement;let toFocus,futureRecord;const index=list.selection.indexOf(record);if(this.lastIsDirty&&["tab","shift+tab","enter"].includes(hotkey)){list.leaveEditMode();return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":futureRecord=list.selection[index+1]||list.selection[0];if(record===futureRecord){toFocus=this.findNextFocusableOnRow(row,cell);this.focus(toFocus);return true;}
break;case"shift+tab":futureRecord=list.selection[index-1]||list.selection[list.selection.length-1];if(record===futureRecord){toFocus=this.findPreviousFocusableOnRow(row,cell);this.focus(toFocus);return true;}
this.cellToFocus={forward:false,record:futureRecord};break;case"enter":if(list.selection.length===1){list.leaveEditMode();return true;}
futureRecord=list.selection[index+1]||list.selection[0];break;}
if(futureRecord){list.enterEditMode(futureRecord);return true;}
return false;}
applyCellKeydownEditModeGroup(hotkey,_cell,group,record){const{editable}=this.props;const groupIndex=group.list.records.indexOf(record);const isLastOfGroup=groupIndex===group.list.records.length-1;const isDirty=record.dirty||this.lastIsDirty;const isEnterBehavior=hotkey==="enter"&&(!record.canBeAbandoned||isDirty);const isTabBehavior=hotkey==="tab"&&!record.canBeAbandoned&&isDirty;if(isLastOfGroup&&this.canCreate&&editable==="bottom"&&(isEnterBehavior||isTabBehavior)){this.add({group});return true;}
return false;}
applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record){let toFocus;const row=cell.parentElement;switch(hotkey){case"tab":toFocus=this.findNextFocusableOnRow(row,cell);break;case"shift+tab":toFocus=this.findPreviousFocusableOnRow(row,cell);break;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
onCellKeydownEditMode(hotkey,cell,group,record){const{cycleOnTab,list}=this.props;const row=cell.parentElement;const applyMultiEditBehavior=record&&record.selected&&list.model.multiEdit;const topReCreate=this.props.editable==="top"&&record.isNew;if(applyMultiEditBehavior&&this.applyCellKeydownMultiEditMode(hotkey,cell,group,record)){return true;}
if(this.applyCellKeydownEditModeStayOnRow(hotkey,cell,group,record)){return true;}
if(group&&this.applyCellKeydownEditModeGroup(hotkey,cell,group,record)){return true;}
switch(hotkey){case"tab":{const index=list.records.indexOf(record);const lastIndex=topReCreate?0:list.records.length-1;if(index===lastIndex){if(this.displayRowCreates){if(record.isNew&&!record.dirty){list.leaveEditMode();return false;}
const{context}=this.creates[0];this.add({context});}else if(this.canCreate&&!record.canBeAbandoned&&(record.dirty||this.lastIsDirty)){this.add({group});}else if(cycleOnTab){if(record.canBeAbandoned){list.leaveEditMode();}
const futureRecord=list.records[0];if(record===futureRecord){const toFocus=this.findNextFocusableOnRow(row);this.focus(toFocus);}else{list.enterEditMode(futureRecord);}}else{return false;}}else{const futureRecord=list.records[index+1];list.enterEditMode(futureRecord);}
break;}
case"shift+tab":{const index=list.records.indexOf(record);if(index===0){if(cycleOnTab){if(record.canBeAbandoned){list.leaveEditMode();}
const futureRecord=list.records[list.records.length-1];if(record===futureRecord){const toFocus=this.findPreviousFocusableOnRow(row);this.focus(toFocus);}else{this.cellToFocus={forward:false,record:futureRecord};list.enterEditMode(futureRecord);}}else{list.leaveEditMode();return false;}}else{const futureRecord=list.records[index-1];this.cellToFocus={forward:false,record:futureRecord};list.enterEditMode(futureRecord);}
break;}
case"enter":{const index=list.records.indexOf(record);let futureRecord=list.records[index+1];if(topReCreate&&index===0){futureRecord=null;}
if(!futureRecord&&!this.canCreate){futureRecord=list.records[0];}
if(futureRecord){list.leaveEditMode({validate:true}).then((canProceed)=>{if(canProceed){list.enterEditMode(futureRecord);}});}else if(this.lastIsDirty||!record.canBeAbandoned||this.displayRowCreates){this.add({group});}else{futureRecord=list.records.at(0);list.enterEditMode(futureRecord);}
break;}
case"escape":{list.leaveEditMode({discard:true});const firstAddButton=this.tableRef.el.querySelector(".o_field_x2many_list_row_add a");if(firstAddButton){this.focus(firstAddButton);}else if(group&&record.isNew){const children=[...row.parentElement.children];const index=children.indexOf(row);for(let i=index+1;i<children.length;i++){const row=children[i];if(row.classList.contains("o_group_header")){break;}
const addCell=[...row.children].find((c)=>c.classList.contains("o_group_field_row_add"));if(addCell){const toFocus=addCell.querySelector("a");this.focus(toFocus);return true;}}
this.focus(cell);}else{this.focus(cell);}
break;}
default:return false;}
return true;}
onCellKeydownReadOnlyMode(hotkey,cell,group,record){const cellIsInGroupRow=Boolean(group&&!record);const applyMultiEditBehavior=record&&record.selected&&this.props.list.model.multiEdit;let toFocus;switch(hotkey){case"arrowup":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"up");if(!toFocus&&this.env.searchModel){this.env.searchModel.trigger("focus-search");return true;}
break;case"arrowdown":toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"down");break;case"arrowleft":if(cellIsInGroupRow&&!group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.previousElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"left");}
break;case"arrowright":if(cellIsInGroupRow&&group.isFolded){this.toggleGroup(group);return true;}
if(cell.classList.contains("o_field_x2many_list_row_add")){const a=document.activeElement;toFocus=a.nextElementSibling;}else{toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"right");}
break;case"tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index+1]||currentButton;}
break;case"shift+tab":if(cellIsInGroupRow){const buttons=Array.from(cell.querySelectorAll(".o_group_buttons button"));const currentButton=document.activeElement.closest("button");const index=buttons.indexOf(currentButton);toFocus=buttons[index-1]||currentButton;}
break;case"shift+arrowdown":{if(this.expandCheckboxes(record,"down")){toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"down");}
break;}
case"shift+arrowup":{if(this.expandCheckboxes(record,"up")){toFocus=this.findFocusFutureCell(cell,cellIsInGroupRow,"up");}
break;}
case"shift+space":this.toggleRecordSelection(record);toFocus=getElementToFocus(cell);break;case"shift":this.shiftKeyedRecord=record;break;case"enter":if(!group&&!record){return false;}
if(cell.classList.contains("o_list_record_remove")){this.onDeleteRecord(record);return true;}
if(cellIsInGroupRow){const button=document.activeElement.closest("button");if(button){button.click();}else{this.toggleGroup(group);}
return true;}
if(this.isInlineEditable(record)||applyMultiEditBehavior){const column=this.state.columns.find((c)=>c.name===cell.getAttribute("name"));this.cellToFocus={column,record};this.props.list.enterEditMode(record);return true;}
if(!this.props.archInfo.noOpen){this.props.openRecord(record);return true;}
break;default:return false;}
if(toFocus){this.focus(toFocus);return true;}
return false;}
async onCreateAction(context){if(this.createProm){return;}
this.add({context});this.createProm=Promise.resolve();this.createProm.then(()=>{this.lastCreatingAction=true;});await this.createProm;this.createProm=null;}
onFocusIn(ev){const{relatedTarget,target}=ev;const fromOutside=!this.rootRef.el.contains(relatedTarget);if(!fromOutside){return;}
const isX2MRowAdder=target.tagName==="A"&&target.parentElement.classList.contains("o_field_x2many_list_row_add");const withinSameUIActiveElement=this.uiService.getActiveElementOf(relatedTarget)===this.activeElement;if(withinSameUIActiveElement&&isX2MRowAdder){const{context}=this.creates[0];this.onCreateAction(context);}}
saveOptionalActiveFields(){browser.localStorage.setItem(this.keyOptionalFields,Object.keys(this.optionalActiveFields).filter((fieldName)=>this.optionalActiveFields[fieldName]));}
get showNoContentHelper(){const{model}=this.props.list;return this.props.noContentHelp&&(model.useSampleModel||!model.hasData());}
showGroupPager(group){return(!group.isFolded&&group.list.limit<(group.list.isGrouped?group.list.count:group.count));}
toggleFocusInsideCell(hotkey,cell){if(!["tab","shift+tab"].includes(hotkey)||!containsActiveElement(cell)){return false;}
const focusableEls=getTabableElements(cell).filter((el)=>el===document.activeElement||["INPUT","TEXTAREA"].includes(el.tagName));const index=focusableEls.indexOf(document.activeElement);return((hotkey==="tab"&&index<focusableEls.length-1)||(hotkey==="shift+tab"&&index>0));}
toggleGroup(group){group.toggle();}
get canSelectRecord(){return!this.props.list.editedRecord&&!this.props.list.model.useSampleModel;}
toggleSelection(){const list=this.props.list;if(!this.canSelectRecord){return;}
return list.toggleSelection();}
toggleRecordSelection(record,ev){if(!this.canSelectRecord){return;}
if(this.shiftKeyMode&&this.lastCheckedRecord){this.toggleRecordShiftSelection(record);}else{record.toggleSelection();}
this.lastCheckedRecord=record;this.props.list.selectDomain(false);}
toggleRecordShiftSelection(record){const{records}=this.props.list;const recordIndex=records.indexOf(record);const lastCheckedRecordIndex=records.indexOf(this.lastCheckedRecord);const start=Math.min(recordIndex,lastCheckedRecordIndex);const end=Math.max(recordIndex,lastCheckedRecordIndex);const{selected}=record;for(let i=start;i<=end;i++){records[i].toggleSelection(!selected);}}
async toggleOptionalField(fieldName){this.optionalActiveFields[fieldName]=!this.optionalActiveFields[fieldName];if(this.props.onOptionalFieldsChanged){this.props.onOptionalFieldsChanged(this.optionalActiveFields);}
this.state.columns=this.getActiveColumns(this.props.list);this.saveOptionalActiveFields(this.allColumns.filter((col)=>this.optionalActiveFields[col.name]&&col.optional));}
toggleOptionalFieldGroup(groupId){const fieldNames=this.allColumns.filter((col)=>col.type==="field"&&col.relatedPropertyField&&col.relatedPropertyField.id===groupId).map((col)=>col.name);const active=!fieldNames.every((fieldName)=>this.optionalActiveFields[fieldName]);for(const fieldName of fieldNames){this.optionalActiveFields[fieldName]=active;}
this.state.columns=this.getActiveColumns(this.props.list);this.saveOptionalActiveFields(this.allColumns.filter((col)=>this.optionalActiveFields[col.name]&&col.optional));}
onGlobalClick(ev){if(!this.props.list.editedRecord){return;}
this.tableRef.el.querySelector("tbody").classList.remove("o_keyboard_navigation");const target=ev.target;if(this.tableRef.el.contains(target)&&target.closest(".o_data_row")){return;}
if(this.activeElement!==this.uiService.activeElement){return;}
if(target.closest(".o_datetime_picker")){return;}
if(ev.target.closest(".ui-autocomplete")){return;}
this.props.list.leaveEditMode();}
calculateColumnWidth(column){if(column.options&&column.attrs.width){return{type:"absolute",value:column.attrs.width};}
if(column.type!=="field"){return{type:"relative",value:1};}
const type=column.widget||this.fields[column.name].type;if(type in FIXED_FIELD_COLUMN_WIDTHS){return{type:"absolute",value:FIXED_FIELD_COLUMN_WIDTHS[type]};}
return{type:"relative",value:1};}
get isDebugMode(){return Boolean(odoo.debug);}
makeTooltip(column){return getTooltipInfo({viewMode:"list",resModel:this.props.list.resModel,field:this.fields[column.name],fieldInfo:column,});}
onColumnTitleMouseUp(){if(this.resizing){this.preventReorder=true;}}
onStartResize(ev){this.resizing=true;const table=this.tableRef.el;const th=ev.target.closest("th");const handler=th.querySelector(".o_resize");table.style.width=`${Math.floor(table.getBoundingClientRect().width)}px`;const thPosition=[...th.parentNode.children].indexOf(th);const resizingColumnElements=[...table.getElementsByTagName("tr")].filter((tr)=>tr.children.length===th.parentNode.children.length).map((tr)=>tr.children[thPosition]);const initialX=ev.clientX;const initialWidth=th.getBoundingClientRect().width;const initialTableWidth=table.getBoundingClientRect().width;const resizeStoppingEvents=["keydown","pointerdown","pointerup"];if(!this.rootRef.el.style.width){this.rootRef.el.style.width=`${Math.floor(
                this.rootRef.el.getBoundingClientRect().width
            )}px`;}
table.classList.add("o_resizing");for(const el of resizingColumnElements){el.classList.add("o_column_resizing");handler.classList.add("bg-primary","opacity-100");handler.classList.remove("bg-black-25","opacity-50-hover");}
const resizeHeader=(ev)=>{ev.preventDefault();ev.stopPropagation();const delta=ev.clientX-initialX;const newWidth=Math.max(10,initialWidth+delta);const tableDelta=newWidth-initialWidth;th.style.width=`${Math.floor(newWidth)}px`;th.style.maxWidth=`${Math.floor(newWidth)}px`;table.style.width=`${Math.floor(initialTableWidth + tableDelta)}px`;};window.addEventListener("pointermove",resizeHeader);const stopResize=(ev)=>{this.resizing=false;this.keepColumnWidths=true;if(ev.type==="pointerdown"&&ev.button===0){return;}
ev.preventDefault();ev.stopPropagation();table.classList.remove("o_resizing");for(const el of resizingColumnElements){el.classList.remove("o_column_resizing");handler.classList.remove("bg-primary","opacity-100");handler.classList.add("bg-black-25","opacity-50-hover");}
window.removeEventListener("pointermove",resizeHeader);for(const eventType of resizeStoppingEvents){window.removeEventListener(eventType,stopResize);}
document.activeElement.blur();};for(const eventType of resizeStoppingEvents){window.addEventListener(eventType,stopResize);}}
resetLongTouchTimer(){if(this.longTouchTimer){browser.clearTimeout(this.longTouchTimer);this.longTouchTimer=null;}}
onRowTouchStart(record,ev){if(!this.props.allowSelectors){return;}
if(this.props.list.selection.length){ev.stopPropagation();}
this.touchStartMs=Date.now();if(this.longTouchTimer===null){this.longTouchTimer=browser.setTimeout(()=>{this.toggleRecordSelection(record);this.resetLongTouchTimer();},this.constructor.LONG_TOUCH_THRESHOLD);}}
onRowTouchEnd(record){const elapsedTime=Date.now()-this.touchStartMs;if(elapsedTime<this.constructor.LONG_TOUCH_THRESHOLD){this.resetLongTouchTimer();}}
onRowTouchMove(record){this.resetLongTouchTimer();}
async sortDrop(dataRowId,{element,previous}){await this.props.list.leaveEditMode();element.classList.remove("o_row_draggable");const refId=previous?previous.dataset.id:null;this.resequencePromise=this.props.list.resequence(dataRowId,refId,{handleField:this.props.list.handleField,});await this.resequencePromise;element.classList.add("o_row_draggable");}
sortStart({element}){const table=this.tableRef.el;const headers=[...table.querySelectorAll("thead th")];const cells=[...element.querySelectorAll("td")];let headerIndex=0;for(const cell of cells){let width=0;for(let i=0;i<cell.colSpan;i++){const header=headers[headerIndex+i];const style=getComputedStyle(header);width+=parseFloat(style.width);}
cell.style.width=`${width}px`;headerIndex+=cell.colSpan;}}
sortStop({element}){for(const cell of element.querySelectorAll("td")){cell.style.width=null;}}
ignoreEventInSelectionMode(ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();}}
onClickCapture(record,ev){const{list}=this.props;if(this.env.isSmall&&list.selection&&list.selection.length){ev.stopPropagation();ev.preventDefault();this.toggleRecordSelection(record);}}}
ListRenderer.template="web.ListRenderer";ListRenderer.rowsTemplate="web.ListRenderer.Rows";ListRenderer.recordRowTemplate="web.ListRenderer.RecordRow";ListRenderer.groupRowTemplate="web.ListRenderer.GroupRow";ListRenderer.components={DropdownItem,Field,ViewButton,CheckBox,Dropdown:OptionalFieldsDropdown,Pager,Widget};ListRenderer.props=["activeActions?","list","archInfo","openRecord","evalViewModifier","onAdd?","cycleOnTab?","allowSelectors?","editable?","onOpenFormView?","noContentHelp?","nestedKeyOptionalFieldsData?","onOptionalFieldsChanged?",];ListRenderer.defaultProps={hasSelectors:false,cycleOnTab:true};ListRenderer.LONG_TOUCH_THRESHOLD=400;return __exports;});;

/* /web/static/src/views/list/list_view.js */
odoo.define('@web/views/list/list_view',['@web/core/registry','@web/model/relational_model/relational_model','@web/views/list/list_arch_parser','@web/views/list/list_controller','@web/views/list/list_renderer'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{RelationalModel}=require("@web/model/relational_model/relational_model");const{ListArchParser}=require("@web/views/list/list_arch_parser");const{ListController}=require("@web/views/list/list_controller");const{ListRenderer}=require("@web/views/list/list_renderer");const listView=__exports.listView={type:"list",display_name:"List",icon:"oi oi-view-list",multiRecord:true,Controller:ListController,Renderer:ListRenderer,ArchParser:ListArchParser,Model:RelationalModel,buttonTemplate:"web.ListView.Buttons",limit:80,props:(genericProps,view)=>{const{ArchParser}=view;const{arch,relatedModels,resModel}=genericProps;const archInfo=new ArchParser().parse(arch,relatedModels,resModel);return{...genericProps,Model:view.Model,Renderer:view.Renderer,buttonTemplate:view.buttonTemplate,archInfo,};},};registry.category("views").add("list",listView);return __exports;});;

/* /web/static/src/views/onboarding_banner.js */
odoo.define('@web/views/onboarding_banner',['@web/core/assets','@web/core/utils/hooks','@web/views/view_hook','@odoo/owl','@web/core/transition'],function(require){'use strict';let __exports={};const{loadCSS,loadJS}=require("@web/core/assets");const{useService}=require("@web/core/utils/hooks");const{useActionLinks}=require("@web/views/view_hook");const{Component,markup,onWillStart,useRef,xml}=require("@odoo/owl");const{useTransition}=require("@web/core/transition");const OnboardingBanner=__exports.OnboardingBanner=class OnboardingBanner extends Component{setup(){this.rpc=useService("rpc");this.user=useService("user");this.onboardingContainerRef=useRef("onboardingContainer");const resModel="searchModel"in this.env?this.env.searchModel.resModel:undefined;this._handleActionLinks=useActionLinks({resModel,reload:async()=>{this.bannerHTML=await this.loadBanner(this.env.config.bannerRoute);this.render();},});this.transition=useTransition({name:"o-vertical-slide",initialVisibility:true,leaveDuration:400,});this.handleActionLinks=(event)=>{if(event.target.dataset.oHideBanner){const container=this.onboardingContainerRef.el;container.style.height=`${container.getBoundingClientRect().height}px`;this.transition.shouldMount=false;}
this._handleActionLinks(event);};onWillStart(this.onWillStart);}
async onWillStart(){this.bannerHTML=await this.loadBanner(this.env.config.bannerRoute);}
async loadBanner(bannerRoute){let response=await this.rpc(bannerRoute,{context:this.user.context});if(response.code===503){response=await this.rpc(bannerRoute,{context:this.user.context});}
if(!response.html){return;}
const banner=new DOMParser().parseFromString(response.html,"text/html");await Promise.all([...[...banner.querySelectorAll(`script[type="text/javascript"]`)].map((el)=>{el.remove();return loadJS(el.getAttribute("src"));}),...[...banner.querySelectorAll(`link[rel="stylesheet"]`)].map((el)=>{el.remove();return loadCSS(el.getAttribute("href"));}),]);return markup(new XMLSerializer().serializeToString(banner));}}
OnboardingBanner.template=xml`<div t-if="transition.shouldMount" t-attf-class="o_onboarding_container w-100 {{transition.className}}" t-ref="onboardingContainer" t-on-click="handleActionLinks" t-out="bannerHTML"/>`;OnboardingBanner.props={};return __exports;});;

/* /web/static/src/views/pivot/pivot_arch_parser.js */
odoo.define('@web/views/pivot/pivot_arch_parser',['@web/core/utils/xml','@web/views/utils'],function(require){'use strict';let __exports={};const{visitXML}=require("@web/core/utils/xml");const{archParseBoolean}=require("@web/views/utils");const PivotArchParser=__exports.PivotArchParser=class PivotArchParser{parse(arch){const archInfo={activeMeasures:[],colGroupBys:[],defaultOrder:null,fieldAttrs:{},rowGroupBys:[],widgets:{},};visitXML(arch,(node)=>{switch(node.tagName){case"pivot":{if(node.hasAttribute("disable_linking")){archInfo.disableLinking=archParseBoolean(node.getAttribute("disable_linking"));}
if(node.hasAttribute("default_order")){archInfo.defaultOrder=node.getAttribute("default_order");}
if(node.hasAttribute("string")){archInfo.title=node.getAttribute("string");}
if(node.hasAttribute("display_quantity")){archInfo.displayQuantity=archParseBoolean(node.getAttribute("display_quantity"));}
break;}
case"field":{let fieldName=node.getAttribute("name");archInfo.fieldAttrs[fieldName]={};if(node.hasAttribute("string")){archInfo.fieldAttrs[fieldName].string=node.getAttribute("string");}
if(node.getAttribute("invisible")==="True"||node.getAttribute("invisible")==="1"){archInfo.fieldAttrs[fieldName].isInvisible=true;break;}
if(node.hasAttribute("interval")){fieldName+=":"+node.getAttribute("interval");}
if(node.hasAttribute("widget")){archInfo.widgets[fieldName]=node.getAttribute("widget");}
if(node.getAttribute("type")==="measure"||node.hasAttribute("operator")){archInfo.activeMeasures.push(fieldName);}
if(node.getAttribute("type")==="col"){archInfo.colGroupBys.push(fieldName);}
if(node.getAttribute("type")==="row"){archInfo.rowGroupBys.push(fieldName);}
break;}}});return archInfo;}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_controller.js */
odoo.define('@web/views/pivot/pivot_controller',['@web/search/layout','@web/model/model','@web/views/standard_view_props','@web/views/view_hook','@web/search/search_bar/search_bar','@web/search/search_bar/search_bar_toggler','@web/search/cog_menu/cog_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{Layout}=require("@web/search/layout");const{useModelWithSampleData}=require("@web/model/model");const{standardViewProps}=require("@web/views/standard_view_props");const{useSetupView}=require("@web/views/view_hook");const{SearchBar}=require("@web/search/search_bar/search_bar");const{useSearchBarToggler}=require("@web/search/search_bar/search_bar_toggler");const{CogMenu}=require("@web/search/cog_menu/cog_menu");const{Component,useRef}=require("@odoo/owl");const PivotController=__exports.PivotController=class PivotController extends Component{setup(){this.model=useModelWithSampleData(this.props.Model,this.props.modelParams);useSetupView({rootRef:useRef("root"),getLocalState:()=>{const{data,metaData}=this.model;return{data,metaData};},getContext:()=>this.getContext(),});this.searchBarToggler=useSearchBarToggler();}
getContext(){return{pivot_measures:this.model.metaData.activeMeasures,pivot_column_groupby:this.model.metaData.fullColGroupBys,pivot_row_groupby:this.model.metaData.fullRowGroupBys,};}}
PivotController.template="web.PivotView";PivotController.components={Layout,SearchBar,CogMenu};PivotController.props={...standardViewProps,Model:Function,modelParams:Object,Renderer:Function,buttonTemplate:{type:String,optional:true},};return __exports;});;

/* /web/static/src/views/pivot/pivot_group_by_menu.js */
odoo.define('@web/views/pivot/pivot_group_by_menu',['@web/core/dropdown/dropdown','@web/core/utils/arrays','@web/core/utils/hooks','@web/search/custom_group_by_item/custom_group_by_item','@web/search/properties_group_by_item/properties_group_by_item','@web/core/dropdown/checkbox_item','@web/search/utils/dates','@web/search/utils/misc','@odoo/owl'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{sortBy}=require("@web/core/utils/arrays");const{useBus}=require("@web/core/utils/hooks");const{CustomGroupByItem}=require("@web/search/custom_group_by_item/custom_group_by_item");const{PropertiesGroupByItem}=require("@web/search/properties_group_by_item/properties_group_by_item");const{CheckboxItem}=require("@web/core/dropdown/checkbox_item");const{getIntervalOptions}=require("@web/search/utils/dates");const{FACET_ICONS,GROUPABLE_TYPES}=require("@web/search/utils/misc");const{Component}=require("@odoo/owl");const PivotGroupByMenu=__exports.PivotGroupByMenu=class PivotGroupByMenu extends Component{setup(){this.icon=FACET_ICONS.groupBy;this.dropdownProps=Object.keys(this.props).filter((key)=>key in Dropdown.props).reduce((obj,key)=>({...obj,[key]:this.props[key]}),{});const fields=[];for(const[fieldName,field]of Object.entries(this.env.searchModel.searchViewFields)){if(this.validateField(fieldName,field)){fields.push(Object.assign({name:fieldName},field));}}
this.fields=sortBy(fields,"string");useBus(this.env.searchModel,"update",this.render);}
get hideCustomGroupBy(){return this.env.searchModel.hideCustomGroupBy||false;}
get items(){let items=this.env.searchModel.getSearchItems((searchItem)=>["groupBy","dateGroupBy"].includes(searchItem.type));items=items.filter((i)=>!i.custom);if(items.length===0){items=this.fields;}
let groupNumber=1+Math.max(0,...items.map(({groupNumber:n})=>n));for(const[fieldName,customGroupBy]of this.props.customGroupBys.entries()){items.push({...customGroupBy,name:fieldName,groupNumber:groupNumber++});}
return items.map((item)=>({...item,id:item.id||item.name,fieldName:item.fieldName||item.name,description:item.description||item.string,isActive:false,options:item.options||["date","datetime"].includes(item.type)?getIntervalOptions():undefined,}));}
validateField(fieldName,field){const{sortable,store,type}=field;return((type==="many2many"?store:sortable)&&fieldName!=="id"&&GROUPABLE_TYPES.includes(type));}
onGroupBySelected({itemId,optionId}){const item=this.items.find(({id})=>id===itemId);this.props.onItemSelected({itemId,optionId,fieldName:item.fieldName,interval:optionId,groupId:this.props.cell.groupId,});}
onAddCustomGroup(fieldName){this.props.onAddCustomGroupBy(fieldName);}}
PivotGroupByMenu.components={CustomGroupByItem,Dropdown,CheckboxItem,PropertiesGroupByItem,};PivotGroupByMenu.template="web.PivotGroupByMenu";PivotGroupByMenu.defaultProps={showCaretDown:false,};PivotGroupByMenu.props={...Dropdown.props,showCaretDown:{type:Boolean,optional:true},cell:Object,customGroupBys:Object,onAddCustomGroupBy:Function,onItemSelected:Function,};return __exports;});;

/* /web/static/src/views/pivot/pivot_model.js */
odoo.define('@web/views/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/model/model','@web/views/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{cartesian,sections,sortBy,symmetricalDifference}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{DEFAULT_INTERVAL}=require("@web/search/utils/dates");const{Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
const PivotModel=__exports.PivotModel=class PivotModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _loadData=this._loadData.bind(this);this._loadData=(...args)=>{return this.race.add(_loadData(...args));};let sortedColumn=params.metaData.sortedColumn||null;if(!sortedColumn&&params.metaData.defaultOrder){const defaultOrder=params.metaData.defaultOrder.split(" ");sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:"asc",};}
this.searchParams={context:{},domain:[],domains:[],groupBy:[],};this.data=params.data||{colGroupTree:null,rowGroupTree:null,groupDomains:{},measurements:{},counts:{},numbering:{},};const metaData=Object.assign({},params.metaData,{customGroupBys:params.metaData.customGroupBys||new Map(),expandedRowGroupBys:params.metaData.expandedRowGroupBys||[],expandedColGroupBys:params.metaData.expandedColGroupBys||[],sortedColumn,});this.metaData=this._buildMetaData(metaData);this.reload=false;this.nextActiveMeasures=null;}
async addGroupBy(params){if(this.race.getCurrentProm()){return;}
const{groupId,fieldName,type,custom}=params;let{interval}=params;const metaData=this._buildMetaData();if(custom&&!metaData.customGroupBys.has(fieldName)){const field=metaData.fields[fieldName];if(!interval&&["date","datetime"].includes(field.type)){interval=DEFAULT_INTERVAL;}
metaData.customGroupBys.set(fieldName,{...field,id:fieldName,});}
let groupBy=fieldName;if(interval){groupBy=`${groupBy}:${interval}`;}
if(type==="row"){metaData.expandedRowGroupBys.push(groupBy);}else{metaData.expandedColGroupBys.push(groupBy);}
const config={metaData,data:this.data};await this._expandGroup(groupId,type,config);this.metaData=metaData;this.notify();}
closeGroup(groupId,type){if(this.race.getCurrentProm()){return;}
let groupBys;let expandedGroupBys;let keyPart;let group;let tree;if(type==="row"){groupBys=this.metaData.rowGroupBys;expandedGroupBys=this.metaData.expandedRowGroupBys;tree=this.data.rowGroupTree;group=this._findGroup(this.data.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.metaData.colGroupBys;expandedGroupBys=this.metaData.expandedColGroupBys;tree=this.data.colGroupTree;group=this._findGroup(this.data.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return(range.some((index)=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length);}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.data.measurements=omitKeys(this.data.measurements);this.data.counts=omitKeys(this.data.counts);this.data.groupDomains=omitKeys(this.data.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}
this.notify();}
async expandAll(){const config={metaData:this.metaData,data:this.data};await this._loadData(config,false);this.notify();}
async expandGroup(groupId,type){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};await this._expandGroup(groupId,type,config);this.notify();}
exportData(){const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const table=this.getTable();const headers=table.headers;let colGroupHeaderRows;let measureRow=[];let originRow=[];function processHeader(header){const inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn,};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map((headerRow)=>{return headerRow.map(processHeader);});const tableRows=table.rows.map((row)=>{return{title:row.title,indent:row.indent,values:row.subGroupMeasurements.map((measurement)=>{let value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),};});return{model:this.metaData.resModel,title:this.metaData.title,col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};}
async flip(){await this.race.getCurrentProm();let temp=this.data.rowGroupTree;this.data.rowGroupTree=this.data.colGroupTree;this.data.colGroupTree=temp;temp=this.metaData.rowGroupBys;this.metaData.rowGroupBys=this.metaData.colGroupBys;this.metaData.colGroupBys=temp;temp=this.metaData.expandedColGroupBys;this.metaData.expandedColGroupBys=this.metaData.expandedRowGroupBys;this.metaData.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){const newObject={};Object.keys(object).forEach((key)=>{const value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.data.measurements=twist(this.data.measurements);this.data.counts=twist(this.data.counts);this.data.groupDomains=twist(this.data.groupDomains);this.notify();}
getGroupDomain(group){const config={metaData:this.metaData,data:this.data};return this._getGroupDomain(group,config);}
getTable(){const headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.data.rowGroupTree,headers[headers.length-1]),};}
getTableWidth(){var leafCounts=this._getLeafCounts(this.data.colGroupTree);return leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]+2;}
hasData(){return this._hasData(this.data);}
async load(searchParams){this.searchParams=searchParams;const processedMeasures=processMeasure(searchParams.context.pivot_measures);const activeMeasures=processedMeasures||this.metaData.activeMeasures;const metaData=this._buildMetaData({activeMeasures});if(!this.reload){metaData.rowGroupBys=searchParams.context.pivot_row_groupby||(searchParams.groupBy.length?searchParams.groupBy:metaData.rowGroupBys);this.reload=true;}else{metaData.rowGroupBys=searchParams.groupBy.length?searchParams.groupBy:searchParams.context.pivot_row_groupby||metaData.rowGroupBys;}
metaData.colGroupBys=searchParams.context.pivot_column_groupby||this.metaData.colGroupBys;if(JSON.stringify(metaData.rowGroupBys)!==JSON.stringify(this.metaData.rowGroupBys)){metaData.expandedRowGroupBys=[];}
if(JSON.stringify(metaData.colGroupBys)!==JSON.stringify(this.metaData.colGroupBys)){metaData.expandedColGroupBys=[];}
const allActivesMeasures=new Set(this.metaData.activeMeasures);if(processedMeasures){processedMeasures.forEach((e)=>allActivesMeasures.add(e));}
metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...allActivesMeasures,]);const config={metaData,data:this.data};return this._loadData(config);}
sortRows(sortedColumn){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};this._sortRows(sortedColumn,config);this.notify();}
async toggleMeasure(fieldName){const metaData=this._buildMetaData();this.nextActiveMeasures=this.nextActiveMeasures||metaData.activeMeasures;metaData.activeMeasures=this.nextActiveMeasures;const index=metaData.activeMeasures.indexOf(fieldName);if(index!==-1){metaData.activeMeasures.splice(index,1);await Promise.resolve(this.race.getCurrentProm());this.metaData=metaData;}else{metaData.activeMeasures.push(fieldName);const config={metaData,data:this.data};await this._loadData(config);this.useSampleModel=false;}
this.nextActiveMeasures=null;this.notify();}
_addGroup(groupTree,labels,values){let tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});const value=values[values.length-1];if(tree.directSubTrees.has(value)){return;}
tree.directSubTrees.set(value,{root:{labels:labels,values:values,},directSubTrees:new Map(),});}
_buildMetaData(params){const metaData=Object.assign({},this.metaData,params);metaData.activeMeasures=[...metaData.activeMeasures];metaData.colGroupBys=[...metaData.colGroupBys];metaData.rowGroupBys=[...metaData.rowGroupBys];metaData.expandedColGroupBys=[...metaData.expandedColGroupBys];metaData.expandedRowGroupBys=[...metaData.expandedRowGroupBys];metaData.customGroupBys=new Map([...metaData.customGroupBys]);metaData.sortedColumn=metaData.sortedColumn?{...metaData.sortedColumn}:null;if(this.searchParams.comparison){const domains=this.searchParams.comparison.domains.slice().reverse();metaData.domains=domains.map((d)=>d.arrayRepr);metaData.origins=domains.map((d)=>d.description);}else{metaData.domains=[this.searchParams.domain];metaData.origins=[""];}
Object.defineProperty(metaData,"fullColGroupBys",{get(){return metaData.colGroupBys.concat(metaData.expandedColGroupBys);},});Object.defineProperty(metaData,"fullRowGroupBys",{get(){return metaData.rowGroupBys.concat(metaData.expandedRowGroupBys);},});return metaData;}
async _expandGroup(groupId,type,config){const{metaData}=config;const group={rowValues:groupId[0],colValues:groupId[1],type:type,};const groupValues=type==="row"?groupId[0]:groupId[1];const groupBys=type==="row"?metaData.fullRowGroupBys:metaData.fullColGroupBys;if(groupValues.length>=groupBys.length){throw new Error("Cannot expand group");}
const groupBy=groupBys[groupValues.length];let leftDivisors;let rightDivisors;if(group.type==="row"){leftDivisors=[[groupBy]];rightDivisors=sections(metaData.fullColGroupBys);}else{leftDivisors=sections(metaData.fullRowGroupBys);rightDivisors=[[groupBy]];}
const divisors=cartesian(leftDivisors,rightDivisors);delete group.type;await this._subdivideGroup(group,divisors,config);}
_findGroup(groupTree,values){let tree=groupTree;values.slice(0,values.length).forEach((value)=>{tree=tree.directSubTrees.get(value);});return tree;}
_getCellValue(groupId,measure,originIndexes,config){var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>{return config.data.measurements[key][originIndex][measure];});if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}}
_getGroupBySpecs(rowGroupBy,colGroupBy){const set=rowGroupBy.concat(colGroupBy).reduce((acc,gb)=>{acc.add(this._normalize(gb));return acc;},new Set());return[...set];}
_getGroupDomain(group,config){const{data}=config;var key=JSON.stringify([group.rowValues,group.colValues]);return data.groupDomains[key][group.originIndex];}
_getGroupLabels(group,groupBys,config){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeLabel(group[groupBy],groupBy,config);});}
async _getGroupSubdivision(group,rowGroupBy,colGroupBy,config){const groupDomain=this._getGroupDomain(group,config);const measureSpecs=this._getMeasureSpecs(config);const groupBy=this._getGroupBySpecs(rowGroupBy,colGroupBy);const kwargs={lazy:false,context:this.searchParams.context};const subGroups=await this.orm.readGroup(config.metaData.resModel,groupDomain,measureSpecs,groupBy,kwargs);return{group:group,subGroups:subGroups,rowGroupBy:rowGroupBy,colGroupBy:colGroupBy,};}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeValue(group[groupBy]);});}
_getLeafCounts(tree){const leafCounts={};let leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce((acc,subTree)=>{const subLeafCounts=this._getLeafCounts(subTree);Object.assign(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;}
_getMeasurements(group,config){const{metaData}=config;return metaData.activeMeasures.reduce((measurements,measureName)=>{var measurement=group[measureName];if(measurement instanceof Array){measurement=1;}
if(metaData.measures[measureName].type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(metaData.origins.length>1&&!measurement){measurement=0;}
measurements[measureName]=measurement;return measurements;},{});}
_getMeasuresRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const measureRow=[];columns.forEach((column)=>{this.metaData.activeMeasures.forEach((measureName)=>{const measureCell={groupId:column.groupId,height:1,measure:measureName,title:this.metaData.measures[measureName].string,width:2*this.metaData.origins.length-1,};if(sortedColumn.measure===measureName&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;}
_getMeasureSpecs(config){const{metaData}=config;return metaData.activeMeasures.reduce((acc,measure)=>{if(measure==="__count"){acc.push(measure);return acc;}
const field=this.metaData.fields[measure];if(field.type==="many2one"){field.group_operator="count_distinct";}
if(field.group_operator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
acc.push(measure+":"+field.group_operator);return acc;},[]);}
_getNumberedLabel(label,fieldName,config){const{data}=config;const id=label[0];const name=label[1];data.numbering[fieldName]=data.numbering[fieldName]||{};data.numbering[fieldName][name]=data.numbering[fieldName][name]||{};const numbers=data.numbering[fieldName][name];numbers[id]=numbers[id]||Object.keys(numbers).length+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");}
_getOriginsRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const originRow=[];columns.forEach((column)=>{const groupId=column.groupId;const measure=column.measure;const isSorted=sortedColumn.measure===measure&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(groupId);const isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];const isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];this.metaData.origins.forEach((origin,originIndex)=>{const originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){const variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:_t("Variation"),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;}
_getTableHeaders(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length+1;const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);let headers=[];const measureColumns=[];const colGroupRows=new Array(height).fill(0).map(()=>[]);colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;const row=colGroupRows[rowIndex];const groupId=[[],group.values];const isLeaf=!tree.directSubTrees.size;const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={groupId:groupId,height:isLeaf?colGroupBys.length+1-rowIndex:1,isLeaf:isLeaf,isFolded:isLeaf&&colGroupBys.length>group.values.length,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(":")[0]].string,title:group.labels.length?group.labels[group.labels.length-1]:_t("Total"),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);if(leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;}
_getTableRows(tree,columns){let rows=[];const group=tree.root;const rowGroupId=[group.values,[]];const title=group.labels.length?group.labels[group.labels.length-1]:_t("Total");const indent=group.labels.length;const isLeaf=!tree.directSubTrees.size;const rowGroupBys=this.metaData.fullRowGroupBys;const subGroupMeasurements=columns.map((column)=>{const colGroupId=column.groupId;const groupIntersectionId=[rowGroupId[0],colGroupId[1]];const measure=column.measure;const originIndexes=column.originIndexes||[0];const value=this._getCellValue(groupIntersectionId,measure,originIndexes,{data:this.data,});const measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.metaData.fields[rowGroupBys[indent-1].split(":")[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,isFolded:isLeaf&&rowGroupBys.length>group.values.length,subGroupMeasurements:subGroupMeasurements,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(this._getTableRows(subTree,columns));});return rows;}
_getTreeHeight(tree){const subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;}
_hasData(data){return(data.counts[JSON.stringify([[],[]])]||[]).some((count)=>{return count>0;});}
async _loadData(config,prune=true){config.data={};const{data,metaData}=config;data.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.measurements={};data.counts={};data.groupDomains={};data.numbering={};const key=JSON.stringify([[],[]]);data.groupDomains[key]=metaData.domains.slice(0);const group={rowValues:[],colValues:[]};const leftDivisors=sections(metaData.fullRowGroupBys);const rightDivisors=sections(metaData.fullColGroupBys);const divisors=cartesian(leftDivisors,rightDivisors);await this._subdivideGroup(group,divisors.slice(0,1),config);await this._subdivideGroup(group,divisors.slice(1),config);if(prune&&this._hasData(data)&&this._hasData(this.data)){if(symmetricalDifference(metaData.rowGroupBys,this.metaData.rowGroupBys).length===0){this._pruneTree(data.rowGroupTree,this.data.rowGroupTree);}
if(symmetricalDifference(metaData.colGroupBys,this.metaData.colGroupBys).length===0){this._pruneTree(data.colGroupTree,this.data.colGroupTree);}}
this.data=config.data;this.metaData=config.metaData;}
_normalize(gb){const[fieldName,interval]=gb.split(":");const field=this.metaData.fields[fieldName];if(["date","datetime"].includes(field.type)){return`${fieldName}:${interval || "month"}`;}else{return fieldName;}}
_prepareData(group,groupSubdivisions,config){const{data,metaData}=config;const groupRowValues=group.rowValues;let groupRowLabels=[];let rowSubTree=data.rowGroupTree;let root;if(groupRowValues.length){rowSubTree=this._findGroup(data.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
const groupColValues=group.colValues;let groupColLabels=[];if(groupColValues.length){root=this._findGroup(data.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach((groupSubdivision)=>{groupSubdivision.subGroups.forEach((subGroup)=>{const rowValues=groupRowValues.concat(this._getGroupValues(subGroup,groupSubdivision.rowGroupBy));const rowLabels=groupRowLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.rowGroupBy,config));const colValues=groupColValues.concat(this._getGroupValues(subGroup,groupSubdivision.colGroupBy));const colLabels=groupColLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.colGroupBy,config));if(!colValues.length&&rowValues.length){this._addGroup(data.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){this._addGroup(data.colGroupTree,colLabels,colValues);}
const key=JSON.stringify([rowValues,colValues]);const originIndex=groupSubdivision.group.originIndex;if(!(key in data.measurements)){data.measurements[key]=metaData.origins.map(()=>{return this._getMeasurements({},config);});}
data.measurements[key][originIndex]=this._getMeasurements(subGroup,config);if(!(key in data.counts)){data.counts[key]=metaData.origins.map(function(){return 0;});}
data.counts[key][originIndex]=subGroup.__count;if(!(key in data.groupDomains)){data.groupDomains[key]=metaData.origins.map(function(){return Domain.FALSE.toList();});}
if(subGroup.__domain){data.groupDomains[key][originIndex]=subGroup.__domain;}});});if(metaData.sortedColumn){this._sortRows(metaData.sortedColumn,config);}}
_pruneTree(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
[...tree.directSubTrees.keys()].forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTree.sortedKeys;}else{const oldSubTree=oldTree.directSubTrees.get(subTreeKey);this._pruneTree(subTree,oldSubTree);}});}
_getEmptyGroupLabel(fieldName){return _t("None");}
_sanitizeLabel(value,groupBy,config){const{metaData}=config;const fieldName=groupBy.split(":")[0];if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="boolean"){return value===undefined?_t("None"):value?_t("Yes"):_t("No");}
if(value===false){return this._getEmptyGroupLabel(fieldName);}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName,config);}
if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="selection"){const selected=metaData.fields[fieldName].selection.find((o)=>o[0]===value);return selected?selected[1]:value;}
return value;}
_sanitizeValue(value){if(value instanceof Array){return value[0];}
return value;}
async _subdivideGroup(group,divisors,config){const{data,metaData}=config;const key=JSON.stringify([group.rowValues,group.colValues]);const proms=metaData.origins.reduce((acc,origin,originIndex)=>{if(!data.counts[key]||data.counts[key][originIndex]>0){const subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex,};divisors.forEach((divisor)=>{acc.push(this._getGroupSubdivision(subGroup,divisor[0],divisor[1],config));});}
return acc;},[]);const groupSubdivisions=await this.keepLast.add(Promise.all(proms));if(groupSubdivisions.length){this._prepareData(group,groupSubdivisions,config);}}
_sortRows(sortedColumn,config){const metaData=config.metaData||this.metaData;const data=config.data||this.data;const colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];metaData.sortedColumn=sortedColumn;const sortFunction=(tree)=>{return(subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);const groupIntersectionId=[subTree.root.values,colGroupValues];const value=this._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes,{data})||0;return sortedColumn.order==="asc"?value:-value;};};this._sortTree(sortFunction,data.rowGroupTree);}
_sortTree(sortFunction,tree){tree.sortedKeys=sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach((subTree)=>{this._sortTree(sortFunction,subTree);});}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_renderer.js */
odoo.define('@web/views/pivot/pivot_renderer',['@web/core/l10n/translation','@web/core/checkbox/checkbox','@web/core/l10n/localization','@web/core/registry','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/views/fields/formatters','@web/views/pivot/pivot_group_by_menu','@odoo/owl','@web/core/network/download','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{registry}=require("@web/core/registry");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{formatPercentage}=require("@web/views/fields/formatters");const{PivotGroupByMenu}=require("@web/views/pivot/pivot_group_by_menu");const{Component,onWillUpdateProps,useRef}=require("@odoo/owl");const{download}=require("@web/core/network/download");const{useService}=require("@web/core/utils/hooks");const formatters=registry.category("formatters");const PivotRenderer=__exports.PivotRenderer=class PivotRenderer extends Component{setup(){this.actionService=useService("action");this.model=this.props.model;this.table=this.model.getTable();this.l10n=localization;this.tableRef=useRef("table");onWillUpdateProps(this.onWillUpdateProps);}
onWillUpdateProps(){this.table=this.model.getTable();}
getFormattedValue(cell){const field=this.model.metaData.measures[cell.measure];let formatType=this.model.metaData.widgets[cell.measure];if(!formatType){const fieldType=field.type;formatType=["many2one","reference"].includes(fieldType)?"integer":fieldType;}
const formatter=formatters.get(formatType);return formatter(cell.value,field);}
getFormattedVariation(cell){if(isNaN(cell.value)){return"-";}
return formatPercentage(cell.value,this.model.metaData.fields[cell.measure]);}
getPadding(cell){return 5+cell.indent*30;}
onAddCustomGroupBy(type,groupId,fieldName){this.model.addGroupBy({groupId,fieldName,custom:true,type});}
onGroupBySelected(type,payload){this.model.addGroupBy({...payload,type});}
onHeaderClick(cell,type){if(cell.isLeaf&&cell.isFolded){this.model.expandGroup(cell.groupId,type);}else if(!cell.isLeaf){this.model.closeGroup(cell.groupId,type);}}
onMeasureClick(cell){this.model.sortRows({groupId:cell.groupId,measure:cell.measure,order:(cell.order||"desc")==="asc"?"desc":"asc",originIndexes:cell.originIndexes,});}
onMouseEnter(ev){var index=[...ev.currentTarget.parentNode.children].indexOf(ev.currentTarget);if(ev.currentTarget.tagName==="TH"){if(!ev.currentTarget.classList.contains("o_pivot_origin_row")&&this.model.metaData.origins.length===2){index=3*index;}
index+=1;}
this.tableRef.el.querySelectorAll("td:nth-child("+(index+1)+")").forEach((elt)=>elt.classList.add("o_cell_hover"));}
onMouseLeave(){this.tableRef.el.querySelectorAll(".o_cell_hover").forEach((elt)=>elt.classList.remove("o_cell_hover"));}
onDownloadButtonClicked(){if(this.model.getTableWidth()>16384){throw new Error(_t("For Excel compatibility, data cannot be exported if there are more than 16384 columns.\n\nTip: try to flip axis, filter further or reduce the number of measures."));}
const table=this.model.exportData();download({url:"/web/pivot/export_xlsx",data:{data:JSON.stringify(table)},});}
onExpandButtonClicked(){this.model.expandAll();}
onFlipButtonClicked(){this.model.flip();}
onMeasureSelected({measure}){this.model.toggleMeasure(measure);}
openView(domain,views,context){this.actionService.doAction({type:"ir.actions.act_window",name:this.model.metaData.title,res_model:this.model.metaData.resModel,views:views,view_mode:"list",target:"current",context,domain,});}
onOpenView(cell){if(cell.value===undefined||this.model.metaData.disableLinking){return;}
const context=Object.assign({},this.model.searchParams.context);Object.keys(context).forEach((x)=>{if(x==="group_by"||x.startsWith("search_default_")){delete context[x];}});const{views=[]}=this.env.config;this.views=["list","form"].map((viewType)=>{const view=views.find((view)=>view[1]===viewType);return[view?view[0]:false,viewType];});const group={rowValues:cell.groupId[0],colValues:cell.groupId[1],originIndex:cell.originIndexes[0],};this.openView(this.model.getGroupDomain(group),this.views,context);}}
PivotRenderer.template="web.PivotRenderer";PivotRenderer.components={Dropdown,DropdownItem,CheckBox,PivotGroupByMenu};PivotRenderer.props=["model","buttonTemplate?"];PivotRenderer.defaultProps={buttonTemplate:"web.PivotView.Buttons",};return __exports;});;

/* /web/static/src/views/pivot/pivot_search_model.js */
odoo.define('@web/views/pivot/pivot_search_model',['@web/search/search_model'],function(require){'use strict';let __exports={};const{SearchModel}=require("@web/search/search_model");const PivotSearchModel=__exports.PivotSearchModel=class PivotSearchModel extends SearchModel{_getIrFilterDescription(){this.preparingIrFilterDescription=true;const result=super._getIrFilterDescription(...arguments);this.preparingIrFilterDescription=false;return result;}
_getSearchItemGroupBys(activeItem){const{searchItemId}=activeItem;const{context,type}=this.searchItems[searchItemId];if(!this.preparingIrFilterDescription&&type==="favorite"&&context.pivot_row_groupby){return context.pivot_row_groupby;}
return super._getSearchItemGroupBys(...arguments);}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_view.js */
odoo.define('@web/views/pivot/pivot_view',['@web/core/l10n/translation','@web/core/registry','@web/views/pivot/pivot_arch_parser','@web/views/pivot/pivot_controller','@web/views/pivot/pivot_model','@web/views/pivot/pivot_renderer','@web/views/pivot/pivot_search_model'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{PivotArchParser}=require("@web/views/pivot/pivot_arch_parser");const{PivotController}=require("@web/views/pivot/pivot_controller");const{PivotModel}=require("@web/views/pivot/pivot_model");const{PivotRenderer}=require("@web/views/pivot/pivot_renderer");const{PivotSearchModel}=require("@web/views/pivot/pivot_search_model");const viewRegistry=registry.category("views");const pivotView=__exports.pivotView={type:"pivot",display_name:_t("Pivot"),icon:"oi oi-view-pivot",multiRecord:true,Controller:PivotController,Renderer:PivotRenderer,Model:PivotModel,ArchParser:PivotArchParser,SearchModel:PivotSearchModel,searchMenuTypes:["filter","groupBy","comparison","favorite"],props:(genericProps,view)=>{const modelParams={};if(genericProps.state){modelParams.data=genericProps.state.data;modelParams.metaData=genericProps.state.metaData;}else{const{arch,fields,resModel}=genericProps;const archInfo=new view.ArchParser().parse(arch);if(!archInfo.activeMeasures.length||archInfo.displayQuantity){archInfo.activeMeasures.unshift("__count");}
modelParams.metaData={activeMeasures:archInfo.activeMeasures,colGroupBys:archInfo.colGroupBys,defaultOrder:archInfo.defaultOrder,disableLinking:Boolean(archInfo.disableLinking),fields:fields,fieldAttrs:archInfo.fieldAttrs,resModel:resModel,rowGroupBys:archInfo.rowGroupBys,title:archInfo.title||_t("Untitled"),widgets:archInfo.widgets,};}
return{...genericProps,Model:view.Model,modelParams,Renderer:view.Renderer,};},};viewRegistry.add("pivot",pivotView);return __exports;});;

/* /web/static/src/views/standard_view_props.js */
odoo.define('@web/views/standard_view_props',[],function(require){'use strict';let __exports={};const standardViewProps=__exports.standardViewProps={info:{type:Object,},resModel:String,arch:{type:Element},bannerRoute:{type:String,optional:true},className:{type:String,optional:true},comparison:{type:[Object,{value:null}],optional:true},context:{type:Object},createRecord:{type:Function,optional:true},display:{type:Object,optional:true},domain:{type:Array},fields:{type:Object},globalState:{type:Object,optional:true},groupBy:{type:Array,element:String},limit:{type:Number,optional:true},noBreadcrumbs:{type:Boolean,optional:true},orderBy:{type:Array,element:Object},relatedModels:{type:Object,optional:true},resId:{type:[Number,Boolean],optional:true},resIds:{type:Array,optional:true},searchMenuTypes:{type:Array,element:String},selectRecord:{type:Function,optional:true},state:{type:Object,optional:true},useSampleModel:{type:Boolean},};return __exports;});;

/* /web/static/src/views/utils.js */
odoo.define('@web/views/utils',['@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{combineModifiers}=require("@web/model/relational_model/utils");const X2M_TYPES=__exports.X2M_TYPES=["one2many","many2many"];const NUMERIC_TYPES=["integer","float","monetary"];const BUTTON_CLICK_PARAMS=__exports.BUTTON_CLICK_PARAMS=["name","type","args","context","close","confirm","confirm-title","confirm-label","special","effect","help","debounce","noSaveDialog",];__exports.archParseBoolean=archParseBoolean;function archParseBoolean(str,trueIfEmpty=false){return str?!/^false|0$/i.test(str):trueIfEmpty;}
function getViewClass(type){const isValidType=Boolean(type)&&registry.category("views").contains(type);return isValidType&&`o_${type}_view`;}
__exports.computeViewClassName=computeViewClassName;function computeViewClassName(viewType,rootNode,additionalClassList=[]){const subType=rootNode?.getAttribute("js_class");const classList=rootNode?.getAttribute("class")?.split(" ")||[];const uniqueClasses=new Set([getViewClass(viewType),getViewClass(subType),...classList,...additionalClassList,]);return Array.from(uniqueClasses).filter((c)=>c).join(" ");}
const computeReportMeasures=__exports.computeReportMeasures=(fields,fieldAttrs,activeMeasures)=>{const measures={__count:{name:"__count",string:_t("Count"),type:"integer"},};for(const[fieldName,field]of Object.entries(fields)){if(fieldName==="id"||!field.store){continue;}
const{isInvisible}=fieldAttrs[fieldName]||{};if(isInvisible){continue;}
if(["integer","float","monetary"].includes(field.type)&&field.group_operator!==undefined){measures[fieldName]=field;}}
for(const measure of activeMeasures){if(!measures[measure]){measures[measure]=fields[measure];}}
for(const fieldName in fieldAttrs){if(fieldAttrs[fieldName].string&&fieldName in measures){measures[fieldName].string=fieldAttrs[fieldName].string;}}
const sortedMeasures=Object.entries(measures).sort(([m1,f1],[m2,f2])=>{if(m1==="__count"||m2==="__count"){return m1==="__count"?1:-1;}
return f1.string.toLowerCase().localeCompare(f2.string.toLowerCase());});return Object.fromEntries(sortedMeasures);};__exports.getFormattedValue=getFormattedValue;function getFormattedValue(record,fieldName,attrs){const field=record.fields[fieldName];const formatter=registry.category("formatters").get(field.type,(val)=>val);const formatOptions={escape:false,data:record.data,isPassword:"password"in attrs,digits:attrs.digits?JSON.parse(attrs.digits):field.digits,field:record.fields[fieldName],};return record.data[fieldName]!==undefined?formatter(record.data[fieldName],formatOptions):"";}
__exports.getActiveActions=getActiveActions;function getActiveActions(rootNode){const activeActions={type:"view",edit:archParseBoolean(rootNode.getAttribute("edit"),true),create:archParseBoolean(rootNode.getAttribute("create"),true),delete:archParseBoolean(rootNode.getAttribute("delete"),true),};activeActions.duplicate=activeActions.create&&archParseBoolean(rootNode.getAttribute("duplicate"),true);return activeActions;}
__exports.getClassNameFromDecoration=getClassNameFromDecoration;function getClassNameFromDecoration(decoration){if(decoration==="bf"){return"fw-bold";}else if(decoration==="it"){return"fst-italic";}
return`text-${decoration}`;}
__exports.getDecoration=getDecoration;function getDecoration(rootNode){const decorations=[];for(const name of rootNode.getAttributeNames()){if(name.startsWith("decoration-")){decorations.push({class:getClassNameFromDecoration(name.replace("decoration-","")),condition:rootNode.getAttribute(name),});}}
return decorations;}
__exports.isX2Many=isX2Many;function isX2Many(field){return field&&X2M_TYPES.includes(field.type);}
__exports.isNumeric=isNumeric;function isNumeric(field){return NUMERIC_TYPES.includes(field.type);}
__exports.isNull=isNull;function isNull(value){return[null,undefined].includes(value);}
__exports.processButton=processButton;function processButton(node){const withDefault={close:(val)=>archParseBoolean(val,false),context:(val)=>val||"{}",};const clickParams={};for(const{name,value}of node.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=withDefault[name]?withDefault[name](value):value;}}
return{className:node.getAttribute("class")||"",disabled:!!node.getAttribute("disabled")||false,icon:node.getAttribute("icon")||false,title:node.getAttribute("title")||undefined,string:node.getAttribute("string")||undefined,options:JSON.parse(node.getAttribute("options")||"{}"),display:node.getAttribute("display")||"selection",clickParams,column_invisible:node.getAttribute("column_invisible"),invisible:combineModifiers(node.getAttribute("column_invisible"),node.getAttribute("invisible"),"OR"),readonly:node.getAttribute("readonly"),required:node.getAttribute("required"),};}
__exports.processMeasure=processMeasure;function processMeasure(measure){if(Array.isArray(measure)){return measure.map(processMeasure);}
return measure==="__count__"?"__count":measure;}
__exports.toStringExpression=toStringExpression;function toStringExpression(str){return`\`${str.replaceAll("`", "\\`")}\``;}
__exports.uuid=uuid;function uuid(){const array=new Uint8Array(8);window.crypto.getRandomValues(array);return[...array].map((b)=>b.toString(16).padStart(2,"0")).join("");}
return __exports;});;

/* /web/static/src/views/view.js */
odoo.define('@web/views/view',['@web/core/py_js/py','@web/core/registry','@web/core/utils/concurrency','@web/core/utils/hooks','@web/core/utils/objects','@web/core/utils/strings','@web/core/utils/xml','@web/search/layout','@web/search/with_search/with_search','@web/views/onboarding_banner','@web/views/view_hook','@web/views/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{KeepLast}=require("@web/core/utils/concurrency");const{useService}=require("@web/core/utils/hooks");const{deepCopy,pick}=require("@web/core/utils/objects");const{nbsp}=require("@web/core/utils/strings");const{parseXML}=require("@web/core/utils/xml");const{extractLayoutComponents}=require("@web/search/layout");const{WithSearch}=require("@web/search/with_search/with_search");const{OnboardingBanner}=require("@web/views/onboarding_banner");const{useActionLinks}=require("@web/views/view_hook");const{computeViewClassName}=require("@web/views/utils");const{Component,markRaw,onWillUpdateProps,onWillStart,toRaw,useSubEnv,reactive,}=require("@odoo/owl");const viewRegistry=registry.category("views");__exports.getDefaultConfig=getDefaultConfig;function getDefaultConfig(){let displayName;const config={actionId:false,actionType:false,actionFlags:{},breadcrumbs:reactive([{get name(){return displayName;},},]),disableSearchBarAutofocus:false,getDisplayName:()=>displayName,historyBack:()=>{},pagerProps:{},setDisplayName:(newDisplayName)=>{displayName=newDisplayName;config.breadcrumbs.push(undefined);config.breadcrumbs.pop();},viewSwitcherEntries:[],views:[],Banner:OnboardingBanner,};return config;}
const ViewNotFoundError=__exports.ViewNotFoundError=class ViewNotFoundError extends Error{}
const CALLBACK_RECORDER_NAMES=["__beforeLeave__","__getGlobalState__","__getLocalState__","__getContext__","__getOrderBy__",];const STANDARD_PROPS=["resModel","type","arch","fields","relatedModels","viewId","views","actionMenus","loadActionMenus","searchViewArch","searchViewFields","searchViewId","irFilters","loadIrFilters","comparison","context","domain","groupBy","orderBy","useSampleModel","noContentHelp","className","display","globalState","activateFavorite","dynamicFilters","hideCustomGroupBy","searchMenuTypes",...CALLBACK_RECORDER_NAMES,"searchPanel","searchModel",];const ACTIONS=["create","delete","edit","group_create","group_delete","group_edit"];const View=__exports.View=class View extends Component{setup(){const{arch,fields,resModel,searchViewArch,searchViewFields,type}=this.props;if(!resModel){throw Error(`View props should have a "resModel" key`);}
if(!type){throw Error(`View props should have a "type" key`);}
if((arch&&!fields)||(!arch&&fields)){throw new Error(`"arch" and "fields" props must be given together`);}
if((searchViewArch&&!searchViewFields)||(!searchViewArch&&searchViewFields)){throw new Error(`"searchViewArch" and "searchViewFields" props must be given together`);}
this.viewService=useService("view");this.withSearchProps=null;useSubEnv({keepLast:new KeepLast(),config:{...getDefaultConfig(),...this.env.config,},...Object.fromEntries(CALLBACK_RECORDER_NAMES.map((name)=>[name,this.props[name]||null])),});this.handleActionLinks=useActionLinks({resModel});onWillStart(()=>this.loadView(this.props));onWillUpdateProps((nextProps)=>this.onWillUpdateProps(nextProps));}
async loadView(props){let descr=viewRegistry.get(props.type);const type=descr.type;let{viewId,searchViewId}=props;const views=deepCopy(props.views||this.env.config.views);const view=views.find((v)=>v[1]===type)||[];if(view.length){view[0]=viewId!==undefined?viewId:view[0];viewId=view[0];}else{view.push(viewId||false,type);views.push(view);}
const searchView=views.find((v)=>v[1]==="search");if(searchView){searchView[0]=searchViewId!==undefined?searchViewId:searchView[0];searchViewId=searchView[0];}else if(searchViewId!==undefined){views.push([searchViewId,"search"]);}
const{context,resModel,loadActionMenus,loadIrFilters}=props;let{arch,fields,relatedModels,searchViewArch,searchViewFields,irFilters,actionMenus,}=props;const loadView=!arch||(!actionMenus&&loadActionMenus);const loadSearchView=(searchViewId!==undefined&&!searchViewArch)||(!irFilters&&loadIrFilters);let viewDescription={viewId,resModel,type};let searchViewDescription;if(loadView||loadSearchView){const result=await this.viewService.loadViews({context,resModel,views},{actionId:this.env.config.actionId,loadActionMenus,loadIrFilters});viewDescription=result.views[type];searchViewDescription=result.views.search;if(loadSearchView){searchViewId=searchViewId||searchViewDescription.id;if(!searchViewArch){searchViewArch=searchViewDescription.arch;searchViewFields=result.fields;}
if(!irFilters){irFilters=searchViewDescription.irFilters;}}
this.env.config.views=views;fields=fields||markRaw(result.fields);relatedModels=relatedModels||markRaw(result.relatedModels);}
if(!arch){arch=viewDescription.arch;}
if(!actionMenus){actionMenus=viewDescription.actionMenus;}
const archXmlDoc=parseXML(arch.replace(/&amp;nbsp;/g,nbsp));for(const action of ACTIONS){if(action in this.props.context&&!this.props.context[action]){archXmlDoc.setAttribute(action,"0");}}
let subType=archXmlDoc.getAttribute("js_class");const bannerRoute=archXmlDoc.getAttribute("banner_route");const sample=archXmlDoc.getAttribute("sample");const className=computeViewClassName(type,archXmlDoc,["o_view_controller",...(props.className||"").split(" "),]);if(subType){if(viewRegistry.contains(subType)){descr=viewRegistry.get(subType);}else{subType=null;}}
Object.assign(this.env.config,{viewArch:archXmlDoc,viewId:viewDescription.id,viewType:type,viewSubType:subType,bannerRoute,noBreadcrumbs:props.noBreadcrumbs,...extractLayoutComponents(descr),});const info={actionMenus,mode:props.display.mode,irFilters,searchViewArch,searchViewFields,searchViewId,};const viewProps={info,arch:archXmlDoc,fields,relatedModels,resModel,useSampleModel:false,className,};if(viewDescription.custom_view_id){viewProps.info.customViewId=viewDescription.custom_view_id;}
if(props.globalState){viewProps.globalState=props.globalState;}
if("useSampleModel"in props){viewProps.useSampleModel=props.useSampleModel;}else if(sample){viewProps.useSampleModel=evaluateBooleanExpr(sample);}
for(const key in props){if(!STANDARD_PROPS.includes(key)){viewProps[key]=props[key];}}
const{noContentHelp}=props;if(noContentHelp){viewProps.info.noContentHelp=noContentHelp;}
const searchMenuTypes=props.searchMenuTypes||descr.searchMenuTypes||this.constructor.searchMenuTypes;viewProps.searchMenuTypes=searchMenuTypes;const finalProps=descr.props?descr.props(viewProps,descr,this.env.config):viewProps;this.Controller=descr.Controller;this.componentProps=finalProps;this.withSearchProps={...toRaw(props),hideCustomGroupBy:props.hideCustomGroupBy||descr.hideCustomGroupBy,searchMenuTypes,SearchModel:descr.SearchModel,};if(searchViewId!==undefined){this.withSearchProps.searchViewId=searchViewId;}
if(searchViewArch){this.withSearchProps.searchViewArch=searchViewArch;this.withSearchProps.searchViewFields=searchViewFields;}
if(irFilters){this.withSearchProps.irFilters=irFilters;}
if(descr.display){const viewDisplay=deepCopy(descr.display);const display={...this.withSearchProps.display};for(const key in viewDisplay){if(typeof display[key]==="object"){Object.assign(display[key],viewDisplay[key]);}else if(!(key in display)||display[key]){display[key]=viewDisplay[key];}}
this.withSearchProps.display=display;}
for(const key in this.withSearchProps){if(!(key in WithSearch.props)){delete this.withSearchProps[key];}}}
onWillUpdateProps(nextProps){const oldProps=pick(this.props,"arch","type","resModel");const newProps=pick(nextProps,"arch","type","resModel");if(JSON.stringify(oldProps)!==JSON.stringify(newProps)){return this.loadView(nextProps);}
const{comparison,context,domain,groupBy,orderBy}=nextProps;Object.assign(this.withSearchProps,{comparison,context,domain,groupBy,orderBy});}}
View._download=async function(){};View.template="web.View";View.components={WithSearch};View.defaultProps={display:{},context:{},loadActionMenus:false,loadIrFilters:false,className:"",};View.props={"*":true,};View.searchMenuTypes=["filter","groupBy","favorite"];return __exports;});;

/* /web/static/src/views/view_button/multi_record_view_button.js */
odoo.define('@web/views/view_button/multi_record_view_button',['@web/views/view_button/view_button'],function(require){'use strict';let __exports={};const{ViewButton}=require("@web/views/view_button/view_button");const MultiRecordViewButton=__exports.MultiRecordViewButton=class MultiRecordViewButton extends ViewButton{async onClick(){const{clickParams,list}=this.props;const resIds=await list.getResIds(true);clickParams.buttonContext={active_domain:this.props.domain,active_ids:resIds,active_model:list.resModel,};this.env.onClickViewButton({clickParams,getResParams:()=>({context:list.context,evalContext:list.evalContext,resModel:list.resModel,resIds,}),});}}
MultiRecordViewButton.props=[...ViewButton.props,"list","domain"];return __exports;});;

/* /web/static/src/views/view_button/view_button.js */
odoo.define('@web/views/view_button/view_button',['@web/core/dropdown/dropdown','@web/core/utils/objects','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{DROPDOWN}=require("@web/core/dropdown/dropdown");const{pick}=require("@web/core/utils/objects");const{debounce:debounceFn}=require("@web/core/utils/timing");const{Component}=require("@odoo/owl");const explicitRankClasses=["btn-primary","btn-secondary","btn-link","btn-success","btn-info","btn-warning","btn-danger",];const odooToBootstrapClasses={oe_highlight:"btn-primary",oe_link:"btn-link",};function iconFromString(iconString){const icon={};if(iconString.startsWith("fa-")){icon.tag="i";icon.class=`o_button_icon fa fa-fw ${iconString}`;}else if(iconString.startsWith("oi-")){icon.tag="i";icon.class=`o_button_icon oi oi-fw ${iconString}`;}else{icon.tag="img";icon.src=iconString;}
return icon;}
const ViewButton=__exports.ViewButton=class ViewButton extends Component{setup(){if(this.props.icon){this.icon=iconFromString(this.props.icon);}
const{debounce}=this.clickParams;if(debounce){this.onClick=debounceFn(this.onClick.bind(this),debounce,true);}
this.tooltip=JSON.stringify({debug:Boolean(odoo.debug),button:{string:this.props.string,help:this.clickParams.help,context:this.clickParams.context,invisible:this.props.attrs?.invisible,column_invisible:this.props.attrs?.column_invisible,readonly:this.props.attrs?.readonly,required:this.props.attrs?.required,special:this.clickParams.special,type:this.clickParams.type,name:this.clickParams.name,title:this.props.title,},context:this.props.record&&this.props.record.context,model:(this.props.record&&this.props.record.resModel)||this.props.resModel,});}
get clickParams(){return{context:this.props.context,...this.props.clickParams};}
get hasBigTooltip(){return Boolean(odoo.debug)||this.clickParams.help;}
get hasSmallToolTip(){return!this.hasBigTooltip&&this.props.title;}
get disabled(){const{name,type,special}=this.clickParams;return(!name&&!type&&!special)||this.props.disabled;}
onClick(ev){if(this.props.tag==="a"){ev.preventDefault();}
if(this.props.onClick){return this.props.onClick();}
this.env.onClickViewButton({clickParams:this.clickParams,getResParams:()=>pick(this.props.record,"context","evalContext","resModel","resId","resIds"),beforeExecute:()=>{if(this.env[DROPDOWN]){this.env[DROPDOWN].close();}},});}
getClassName(){const classNames=[];let hasExplicitRank=false;if(this.props.className){for(let cls of this.props.className.split(" ")){if(cls in odooToBootstrapClasses){cls=odooToBootstrapClasses[cls];}
classNames.push(cls);if(!hasExplicitRank&&explicitRankClasses.includes(cls)){hasExplicitRank=true;}}}
if(this.props.tag==="button"){const hasOtherClasses=classNames.length;classNames.unshift("btn");if((!hasExplicitRank&&this.props.defaultRank)||!hasOtherClasses){classNames.push(this.props.defaultRank||"btn-secondary");}
if(this.props.size){classNames.push(`btn-${this.props.size}`);}}
return classNames.join(" ");}}
ViewButton.template="views.ViewButton";ViewButton.props=["id?","tag?","record?","attrs?","className?","context?","clickParams?","icon?","defaultRank?","disabled?","size?","tabindex?","title?","style?","string?","slots?","onClick?",];ViewButton.defaultProps={tag:"button",className:"",clickParams:{},};return __exports;});;

/* /web/static/src/views/view_button/view_button_hook.js */
odoo.define('@web/views/view_button/view_button_hook',['@web/core/utils/hooks','@web/core/py_js/py','@web/core/confirmation_dialog/confirmation_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{evaluateExpr}=require("@web/core/py_js/py");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{status,useComponent,useEnv,useSubEnv}=require("@odoo/owl");__exports.executeButtonCallback=executeButtonCallback;async function executeButtonCallback(el,fct){let btns=[];function disableButtons(){btns=[...btns,...el.querySelectorAll("button:not([disabled])")];for(const btn of btns){btn.setAttribute("disabled","1");}}
function enableButtons(){for(const btn of btns){btn.removeAttribute("disabled");}}
disableButtons();let res;try{res=await fct();}finally{enableButtons();}
return res;}
function undefinedAsTrue(val){return typeof val==="undefined"||val;}
__exports.useViewButtons=useViewButtons;function useViewButtons(model,ref,options={}){const action=useService("action");const dialog=useService("dialog");const comp=useComponent();const env=useEnv();const beforeExecuteAction=options.beforeExecuteAction||(()=>{return true;});const afterExecuteAction=options.afterExecuteAction||(()=>{});useSubEnv({async onClickViewButton({clickParams,getResParams,beforeExecute}){async function execute(){let _continue=true;if(beforeExecute){_continue=undefinedAsTrue(await beforeExecute());}
_continue=_continue&&undefinedAsTrue(await beforeExecuteAction(clickParams));if(!_continue){return;}
const closeDialog=(clickParams.close||clickParams.special)&&env.dialogData?.close;const params=getResParams();const resId=params.resId;const resIds=params.resIds||model.resIds;let buttonContext={};if(clickParams.context){if(typeof clickParams.context==="string"){buttonContext=evaluateExpr(clickParams.context,params.evalContext);}else{buttonContext=clickParams.context;}}
if(clickParams.buttonContext){Object.assign(buttonContext,clickParams.buttonContext);}
const doActionParams=Object.assign({},clickParams,{resModel:params.resModel||model.resModel,resId,resIds,context:params.context||{},buttonContext,onClose:async()=>{if(!closeDialog&&status(comp)!=="destroyed"){const reload=options.reload||(()=>model.load());await reload();}},});let error;try{await action.doActionButton(doActionParams);}catch(_e){error=_e;}
await afterExecuteAction(clickParams);if(closeDialog){closeDialog();}
if(error){return Promise.reject(error);}}
if(clickParams.confirm){executeButtonCallback(getEl(),async()=>{await new Promise((resolve)=>{const dialogProps={...(clickParams["confirm-title"]&&{title:clickParams["confirm-title"],}),...(clickParams["confirm-label"]&&{confirmLabel:clickParams["confirm-label"],}),body:clickParams.confirm,confirm:()=>execute(),cancel:()=>{},};dialog.add(ConfirmationDialog,dialogProps,{onClose:resolve});});});}else{return executeButtonCallback(getEl(),execute);}},});function getEl(){if(env.inDialog){const el=ref.el;return el?el.closest(".modal"):null;}else{return ref.el;}}}
return __exports;});;

/* /web/static/src/views/view_compiler.js */
odoo.define('@web/views/view_compiler',['@web/core/utils/xml','@web/views/utils','@odoo/owl'],function(require){'use strict';let __exports={};const{append,combineAttributes,createElement,createTextNode,getTag,}=require("@web/core/utils/xml");const{toStringExpression,BUTTON_CLICK_PARAMS}=require("@web/views/utils");const{xml}=require("@odoo/owl");const BUTTON_STRING_PROPS=["string","size","title","icon","id"];const INTERP_REGEXP=/(\{\{|#\{)(.*?)(\}{1,2})/g;__exports.toInterpolatedStringExpression=toInterpolatedStringExpression;function toInterpolatedStringExpression(str){const matches=str.matchAll(INTERP_REGEXP);const parts=[];let searchString=str;for(const[match,head,expr]of matches){const index=searchString.indexOf(head);const left=searchString.slice(0,index);if(left){parts.push(toStringExpression(left));}
parts.push(`(${expr})`);searchString=searchString.slice(index+match.length);}
parts.push(toStringExpression(searchString));return parts.join("+");}
__exports.appendAttr=appendAttr;function appendAttr(el,attr,string){const attrKey=`t-att-${attr}`;const attrVal=el.getAttribute(attrKey);el.setAttribute(attrKey,appendToStringifiedObject(attrVal,string));}
function appendToStringifiedObject(originalTattr,string){const re=/{(.*)}/;const oldString=re.exec(originalTattr);if(oldString){string=`${oldString[1]},${string}`;}
return`{${string}}`;}
__exports.assignOwlDirectives=assignOwlDirectives;function assignOwlDirectives(target,...sources){for(const source of sources){for(const{name,value}of source.attributes){if(name.startsWith("t-attf-")){const propName=name.slice(7);const interpolatedExpression=toInterpolatedStringExpression(value);target.setAttribute(propName,interpolatedExpression);}else if(name.startsWith("t-att-")){const propName=name.slice(6);target.setAttribute(propName,value);}else if(name.startsWith("t-")){target.setAttribute(name,value);}}}
return target;}
__exports.copyAttributes=copyAttributes;function copyAttributes(el,compiled){const isComponent=isComponentNode(compiled);const classes=el.className;if(classes){if(isComponent){const cls=compiled.className;compiled.setAttribute("class",cls?`'${classes} ' + ${cls}`:`'${classes}'`);}else{compiled.classList.add(...classes.split(/\s+/).filter(Boolean));}}
let att=el.getAttribute("style");if(att){if(isComponent){att=toStringExpression(att);}
compiled.setAttribute("style",att);}}
__exports.decodeObjectForTemplate=decodeObjectForTemplate;function decodeObjectForTemplate(str){return JSON.parse(decodeURI(str));}
__exports.encodeObjectForTemplate=encodeObjectForTemplate;function encodeObjectForTemplate(obj){return`"${encodeURI(JSON.stringify(obj))}"`;}
__exports.getModifier=getModifier;function getModifier(el,modifierName){return el.getAttribute(modifierName);}
function getTitleTag(node){return getTag(node)[0].toUpperCase()+getTag(node).slice(1);}
function isComment(node){return node.nodeType===8;}
__exports.isComponentNode=isComponentNode;function isComponentNode(el){return(getTag(el)===getTitleTag(el)||(getTag(el,true)==="t"&&"t-component"in el.attributes));}
__exports.isTextNode=isTextNode;function isTextNode(node){return node.nodeType===3;}
__exports.makeSeparator=makeSeparator;function makeSeparator(title){const separator=createElement("div");separator.className="o_horizontal_separator mt-4 mb-3 text-uppercase fw-bolder small";separator.textContent=title;return separator;}
const ViewCompiler=__exports.ViewCompiler=class ViewCompiler{constructor(templates){this.id=1;this.compilers=[{selector:"a[type]:not([data-bs-toggle]),a[data-type]:not([data-bs-toggle])",fn:this.compileButton,},{selector:"button:not([data-bs-toggle])",fn:this.compileButton,doNotCopyAttributes:true,},{selector:"field",fn:this.compileField},{selector:"widget",fn:this.compileWidget},];this.templates=templates;this.ctx={readonly:"__comp__.props.readonly"};this.owlDirectiveRegexesWhitelist=this.constructor.OWL_DIRECTIVE_WHITELIST.map((d)=>new RegExp(d));this.setup();}
setup(){}
applyInvisible(invisible,compiled,params){if(!invisible||invisible==="False"){return compiled;}
if(invisible==="True"||invisible==="1"){return;}
const recordExpr=params.recordExpr||"__comp__.props.record";let isVisileExpr=`!__comp__.evaluateBooleanExpr(${JSON.stringify(
            invisible
        )},${recordExpr}.evalContextWithVirtualIds)`;if(compiled.hasAttribute("t-if")){const formerTif=compiled.getAttribute("t-if");isVisileExpr=`( ${formerTif} ) and ${isVisileExpr}`;}
compiled.setAttribute("t-if",isVisileExpr);return compiled;}
compile(key,params={}){const root=this.templates[key].cloneNode(true);const child=this.compileNode(root,params);const newRoot=createElement("t",[child]);newRoot.setAttribute("t-translation","off");return newRoot;}
compileNode(node,params={},evalInvisible=true){if(isComment(node)){return;}
if(isTextNode(node)){return createTextNode(node.nodeValue);}
this.validateNode(node);let invisible;if(evalInvisible){invisible=getModifier(node,"invisible");if(!params.compileInvisibleNodes&&(invisible==="True"||invisible==="1")){return;}}
const compiler=this.compilers.find((cp)=>node.matches(cp.selector));let compiledNode;if(compiler){compiledNode=compiler.fn.call(this,node,params);if(!compiler.doNotCopyAttributes&&compiledNode){copyAttributes(node,compiledNode);}}else{compiledNode=this.compileGenericNode(node,params);}
if(evalInvisible&&compiledNode){compiledNode=this.applyInvisible(invisible,compiledNode,params);}
return compiledNode;}
compileButton(el,params){let tag=getTag(el,true);const type=el.getAttribute("type");if(tag==="a"&&type==="url"){tag="button";}
const recordExpr=params.recordExpr||"__comp__.props.record";const button=createElement("ViewButton",{tag:toStringExpression(tag),record:recordExpr,});assignOwlDirectives(button,el);combineAttributes(button,"className",[toStringExpression(el.className),button.className],"+` `+");el.removeAttribute("class");button.removeAttribute("class");const clickParams={};const attrs={};for(const{name,value}of el.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=value;}else if(BUTTON_STRING_PROPS.includes(name)){button.setAttribute(name,toStringExpression(value));}else if(!name.startsWith("t-")){attrs[name]=value;}}
button.setAttribute("clickParams",JSON.stringify(clickParams));button.setAttribute("attrs",JSON.stringify(attrs));const buttonContent=[];for(const child of el.childNodes){const compiled=this.compileNode(child,params);if(compiled){buttonContent.push(compiled);}}
if(buttonContent.length){const contentSlot=createElement("t");contentSlot.setAttribute("t-set-slot","contents");append(button,contentSlot);for(const buttonChild of buttonContent){append(contentSlot,buttonChild);}}
return button;}
compileField(el,params){const fieldName=el.getAttribute("name");const fieldId=el.getAttribute("field_id");const field=createElement("Field");const recordExpr=params.recordExpr||"__comp__.props.record";field.setAttribute("id",`'${fieldId}'`);field.setAttribute("name",`'${fieldName}'`);field.setAttribute("record",recordExpr);field.setAttribute("fieldInfo",`__comp__.props.archInfo.fieldNodes['${fieldId}']`);field.setAttribute("readonly",`__comp__.props.archInfo.activeActions?.edit === false and !${recordExpr}.isNew`);if(el.hasAttribute("widget")){field.setAttribute("type",`'${el.getAttribute("widget")}'`);}
return field;}
compileGenericNode(el,params){const compiled=createElement(el.nodeName.toLowerCase());const metaAttrs=["column_invisible","invisible","readonly","required"];for(const attr of el.attributes){if(metaAttrs.includes(attr.name)){continue;}
compiled.setAttribute(attr.name,attr.value);}
for(const child of el.childNodes){append(compiled,this.compileNode(child,params));}
if(el.hasAttribute("t-foreach")&&!el.hasAttribute("t-key")){compiled.setAttribute("t-key",`${el.getAttribute("t-as")}_index`);console.warn(`Missing attribute "t-key" in "t-foreach" statement.`);}
return compiled;}
compileWidget(el){const widgetId=el.getAttribute("widget_id");const props={record:"__comp__.props.record"};if(el.hasAttribute("name")){props.name=`'${el.getAttribute("name")}'`;}
if(el.hasAttribute("class")){props.className=`'${el.getAttribute("class")}'`;}
props.widgetInfo=`__comp__.props.archInfo.widgetNodes['${widgetId}']`;const widget=createElement("Widget",props);return assignOwlDirectives(widget,el);}
validateNode(node){const attributes=Object.values(node.attributes).map((attr)=>attr.name);const regexes=this.owlDirectiveRegexesWhitelist;for(const attr of attributes){if(attr.startsWith("t-")&&!regexes.some((regex)=>regex.test(attr))){console.warn(`Forbidden directive ${attr} used in arch`);}}}}
ViewCompiler.OWL_DIRECTIVE_WHITELIST=[];let templateCache=Object.create(null);__exports.useViewCompiler=useViewCompiler;function useViewCompiler(ViewCompiler,templates,params){const compiledTemplates={};let compiler;for(const tname in templates){const key=`${ViewCompiler.name}/${templates[tname].outerHTML}`;if(!templateCache[key]){compiler=compiler||new ViewCompiler(templates);templateCache[key]=xml`${compiler.compile(tname, params).outerHTML}`;}
compiledTemplates[tname]=templateCache[key];}
return compiledTemplates;}
__exports.resetViewCompilerCache=resetViewCompilerCache;function resetViewCompilerCache(){templateCache=Object.create(null);}
return __exports;});;

/* /web/static/src/views/view_components/animated_number.js */
odoo.define('@web/views/view_components/animated_number',['@web/core/browser/browser','@web/views/fields/formatters','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{formatInteger}=require("@web/views/fields/formatters");const{Component,onWillUpdateProps,onWillUnmount,useState}=require("@odoo/owl");const AnimatedNumber=__exports.AnimatedNumber=class AnimatedNumber extends Component{static template="web.AnimatedNumber";static props={value:Number,duration:Number,animationClass:{type:String,optional:true},currency:{type:[Object,Boolean],optional:true},title:{type:String,optional:true},slots:{type:Object,shape:{prefix:{type:Object,optional:true},},optional:true,},};static enableAnimations=true;setup(){this.formatInteger=formatInteger;this.state=useState({value:this.props.value});this.handle=null;onWillUpdateProps((nextProps)=>{const{value:from}=this.props;const{value:to,duration}=nextProps;if(!this.constructor.enableAnimations||!duration||to<=from){browser.cancelAnimationFrame(this.handle);this.state.value=to;return;}
const startTime=Date.now();const animate=()=>{const progress=(Date.now()-startTime)/duration;if(progress>=1){this.state.value=to;}else{this.state.value=from+(to-from)*progress;this.handle=browser.requestAnimationFrame(animate);}};browser.cancelAnimationFrame(this.handle);animate();});onWillUnmount(()=>browser.cancelAnimationFrame(this.handle));}
format(value){return this.formatInteger(value,{humanReadable:true,decimals:0,minDigits:3});}}
return __exports;});;

/* /web/static/src/views/view_components/column_progress.js */
odoo.define('@web/views/view_components/column_progress',['@odoo/owl','@web/views/view_components/animated_number'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{AnimatedNumber}=require("@web/views/view_components/animated_number");const ColumnProgress=__exports.ColumnProgress=class ColumnProgress extends Component{static components={AnimatedNumber,};static template="web.ColumnProgress";static props={aggregate:{type:Object},group:{type:Object},onBarClicked:{type:Function,optional:true},progressBar:{type:Object},};static defaultProps={onBarClicked:()=>{},};async onBarClick(bar){await this.props.onBarClicked(bar);}}
return __exports;});;

/* /web/static/src/views/view_components/view_scale_selector.js */
odoo.define('@web/views/view_components/view_scale_selector',['@odoo/owl','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const ViewScaleSelector=__exports.ViewScaleSelector=class ViewScaleSelector extends Component{static components={Dropdown,DropdownItem,};static template="web.ViewScaleSelector";static props={scales:{type:Object},currentScale:{type:String},isWeekendVisible:{type:Boolean,optional:true},setScale:{type:Function},toggleWeekendVisibility:{type:Function,optional:true},dropdownClass:{type:String,optional:true},};get scales(){return Object.entries(this.props.scales).map(([key,value])=>({key,...value}));}}
return __exports;});;

/* /web/static/src/views/view_dialogs/export_data_dialog.js */
odoo.define('@web/views/view_dialogs/export_data_dialog',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/checkbox/checkbox','@web/core/dialog/dialog','@web/core/utils/arrays','@web/core/utils/hooks','@web/core/utils/search','@web/core/utils/sortable_owl','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{CheckBox}=require("@web/core/checkbox/checkbox");const{Dialog}=require("@web/core/dialog/dialog");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{useSortable}=require("@web/core/utils/sortable_owl");const{useDebounced}=require("@web/core/utils/timing");const{Component,useRef,useState,onMounted,onWillStart,onWillUnmount}=require("@odoo/owl");class DeleteExportListDialog extends Component{async onDelete(){await this.props.delete();this.props.close();}}
DeleteExportListDialog.components={Dialog};DeleteExportListDialog.template="web.DeleteExportListDialog";class ExportDataItem extends Component{setup(){this.state=useState({subfields:[],});onWillStart(()=>{if(this.props.isExpanded){return this.toggleItem(this.props.field.id,false);}});}
async toggleItem(id,isUserToggle){if(this.props.isFieldExpandable(id)){if(this.state.subfields.length){this.state.subfields=[];}else{const subfields=await this.props.loadFields(id,!isUserToggle);if(subfields){this.state.subfields=isUserToggle?subfields:this.props.filterSubfields(subfields);}else{this.state.subfields=[];}}}}
onDoubleClick(id){if(!this.props.isFieldExpandable(id)&&!this.isFieldSelected(id)){this.props.onAdd(id);}}
isFieldSelected(current){return this.props.exportList.find(({id})=>id===current);}}
ExportDataItem.template="web.ExportDataItem";ExportDataItem.components={ExportDataItem};ExportDataItem.props={exportList:{type:Object,optional:true},field:{type:Object,optional:true},filterSubfields:Function,isDebug:Boolean,isExpanded:Boolean,isFieldExpandable:Function,onAdd:Function,loadFields:Function,};const ExportDataDialog=__exports.ExportDataDialog=class ExportDataDialog extends Component{setup(){this.dialog=useService("dialog");this.notification=useService("notification");this.orm=useService("orm");this.rpc=useService("rpc");this.draggableRef=useRef("draggable");this.exportListRef=useRef("exportList");this.searchRef=useRef("search");this.knownFields={};this.expandedFields={};this.availableFormats=[];this.templates=[];this.state=useState({exportList:[],isCompatible:false,isEditingTemplate:false,search:[],selectedFormat:0,templateId:null,isSmall:this.env.isSmall,disabled:false,});this.title=_t("Export Data");this.newTemplateText=_t("New template");this.removeFieldText=_t("Remove field");this.debouncedOnResize=useDebounced(this.updateSize,300);useSortable({ref:this.draggableRef,elements:".o_export_field",enable:!this.state.isSmall,cursor:"grabbing",onDrop:async({element,previous,next})=>{const indexes=[element,previous,next].map((e)=>e&&Object.values(this.state.exportList).findIndex(({id})=>id===e.dataset.field_id));let target;if(indexes[0]<indexes[1]){target=previous?indexes[1]:0;}else{target=next?indexes[2]:this.state.exportList.length-1;}
this.onDraggingEnd(indexes[0],target);},});onWillStart(async()=>{this.availableFormats=await this.rpc("/web/export/formats");this.templates=await this.orm.searchRead("ir.exports",[["resource","=",this.props.root.resModel]],[],{context:this.props.context,});await this.fetchFields();});onMounted(()=>{browser.addEventListener("resize",this.debouncedOnResize);this.updateSize();});onWillUnmount(()=>browser.removeEventListener("resize",this.debouncedOnResize));}
get fieldsAvailable(){if(this.searchRef.el&&this.searchRef.el.value){return this.state.search.length&&Object.values(this.state.search);}
return Object.values(this.knownFields);}
get isDebug(){return Boolean(odoo.debug);}
get rootFields(){if(this.searchRef.el&&this.searchRef.el.value){const rootFromSearchResults=this.fieldsAvailable.map((f)=>{if(f.parent){const parentEl=this.knownFields[f.parent.id];return this.knownFields[parentEl.parent?parentEl.parent.id:parentEl.id];}
return this.knownFields[f.id];});return unique(rootFromSearchResults);}
return this.fieldsAvailable.filter(({parent})=>!parent);}
filterSubfields(subfields){let subfieldsFromSearchResults=[];let searchResults;if(this.searchRef.el&&this.searchRef.el.value){searchResults=this.lookup(this.searchRef.el.value);}
const fieldsAvailable=Object.values(searchResults||this.knownFields);if(this.searchRef.el&&this.searchRef.el.value){subfieldsFromSearchResults=fieldsAvailable.filter((f)=>f.parent&&this.knownFields[f.parent.id].parent).map((f)=>f.parent);}
const availableSubFields=unique([...fieldsAvailable,...subfieldsFromSearchResults]);return subfields.filter((a)=>availableSubFields.some((b)=>a.id===b.id));}
updateSize(){this.state.isSmall=this.env.isSmall;}
async fetchFields(){this.state.search=[];this.knownFields={};this.expandedFields={};await this.loadFields();await this.setDefaultExportList();if(this.searchRef.el){this.searchRef.el.value="";}
if(this.state.templateId){this.loadExportList(this.state.templateId);}}
enterTemplateEdition(){if(this.state.templateId&&!this.state.isEditingTemplate){this.state.isEditingTemplate=true;}}
isFieldExpandable(id){return this.knownFields[id].children&&id.split("/").length<3;}
async loadExportList(value){this.state.templateId=value==="new_template"?value:Number(value);this.state.isEditingTemplate=value==="new_template";if(!value||value==="new_template"){return;}
const fields=await this.rpc("/web/export/namelist",{model:this.props.root.resModel,export_id:Number(value),});this.state.exportList=fields.map(({label,name})=>{return{string:label,id:name,};});}
async loadFields(id,preventLoad=false){let model=this.props.root.resModel;let parentField,parentParams;if(id){if(this.expandedFields[id]){return this.expandedFields[id].fields;}
parentField=this.knownFields[id];model=parentField.params&&parentField.params.model;parentParams={...parentField.params,parent_field_type:parentField.field_type,parent_field:parentField,parent_name:parentField.string,exclude:[parentField.relation_field],};}
if(preventLoad){return;}
const fields=await this.props.getExportedFields(model,this.state.isCompatible,parentParams);for(const field of fields){field.parent=parentField;if(!this.knownFields[field.id]){this.knownFields[field.id]=field;}}
if(id){this.expandedFields[id]={fields};}
return fields;}
onDraggingEnd(item,target){this.state.exportList.splice(target,0,this.state.exportList.splice(item,1)[0]);}
onAddItemExportList(fieldId){this.state.exportList.push(this.knownFields[fieldId]);this.enterTemplateEdition();}
onRemoveItemExportList(fieldId){const item=this.state.exportList.findIndex(({id})=>id===fieldId);this.state.exportList.splice(item,1);this.enterTemplateEdition();}
async onChangeExportList(ev){this.loadExportList(ev.target.value);}
async onSaveExportTemplate(){const name=this.exportListRef.el.value;if(!name){return this.notification.add(_t("Please enter save field list name"),{type:"danger",});}
const[id]=await this.orm.create("ir.exports",[{name,export_fields:this.state.exportList.map((field)=>[0,0,{name:field.id,},]),resource:this.props.root.resModel,},],{context:this.props.context});this.state.isEditingTemplate=false;this.state.templateId=id;this.templates.push({id,name});}
onCancelExportTemplate(){this.state.isEditingTemplate=false;if(this.state.templateId==="new_template"){this.state.templateId=null;return;}
this.loadExportList(this.state.templateId);}
async onClickExportButton(){if(!this.state.exportList.length){return this.notification.add(_t("Please select fields to save export list..."),{type:"danger",});}
this.state.disabled=true;await this.props.download(this.state.exportList,this.state.isCompatible,this.availableFormats[this.state.selectedFormat].tag);this.state.disabled=false;}
async onDeleteExportTemplate(){this.dialog.add(DeleteExportListDialog,{text:_t("Do you really want to delete this export template?"),delete:async()=>{const id=Number(this.state.templateId);await this.orm.unlink("ir.exports",[id],{context:this.props.context});this.templates.splice(this.templates.findIndex((i)=>i.id===id),1);this.state.templateId=null;this.setDefaultExportList();},});}
onSearch(ev){this.state.search=this.lookup(ev.target.value);}
lookup(value){let lookupResult=fuzzyLookup(value,Object.values(this.knownFields),(field)=>field.string.split("/").reverse().join("/"));if(this.isDebug){lookupResult=unique([...lookupResult,...Object.values(this.knownFields).filter((f)=>{return f.id.includes(value);}),]);}
return lookupResult;}
onToggleCompatibleExport(value){this.state.isCompatible=value;this.fetchFields();}
async setDefaultExportList(){this.state.exportList=Object.values(this.knownFields).filter((e)=>e.default_export||this.props.defaultExportList.find((i)=>i.name===e.id));}
setFormat(ev){if(ev.target.checked){this.state.selectedFormat=this.availableFormats.findIndex(({tag})=>tag===ev.target.value);}}}
ExportDataDialog.components={CheckBox,Dialog,ExportDataItem};ExportDataDialog.props={close:{type:Function},context:{type:Object,optional:true},defaultExportList:{type:Array},download:{type:Function},getExportedFields:{type:Function},root:{type:Object},};ExportDataDialog.template="web.ExportDataDialog";return __exports;});;

/* /web/static/src/views/view_dialogs/form_view_dialog.js */
odoo.define('@web/views/view_dialogs/form_view_dialog',['@web/core/dialog/dialog','@web/core/utils/hooks','@web/views/view','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useChildRef}=require("@web/core/utils/hooks");const{View}=require("@web/views/view");const{Component,onMounted}=require("@odoo/owl");const FormViewDialog=__exports.FormViewDialog=class FormViewDialog extends Component{setup(){super.setup();this.modalRef=useChildRef();this.env.dialogData.dismiss=()=>this.discardRecord();const buttonTemplate=this.props.isToMany?"web.FormViewDialog.ToMany.buttons":"web.FormViewDialog.ToOne.buttons";this.viewProps={type:"form",buttonTemplate,context:this.props.context||{},display:{controlPanel:false},mode:this.props.mode||"edit",resId:this.props.resId||false,resModel:this.props.resModel,viewId:this.props.viewId||false,preventCreate:this.props.preventCreate,preventEdit:this.props.preventEdit,discardRecord:this.discardRecord.bind(this),saveRecord:async(record,{saveAndNew})=>{const saved=await record.save({reload:false});if(saved){await this.props.onRecordSaved(record);if(saveAndNew){const context=Object.assign({},this.props.context);Object.keys(context).forEach((k)=>{if(k.startsWith("default_")){delete context[k];}});await record.model.load({resId:false,context});}else{this.props.close();}}
return saved;},};if(this.props.removeRecord){this.viewProps.removeRecord=async()=>{await this.props.removeRecord();this.props.close();};}
onMounted(()=>{if(this.modalRef.el.querySelector(".modal-footer").childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");if(defaultButton){defaultButton.classList.add("d-none");}}});}
async discardRecord(){if(this.props.onRecordDiscarded){await this.props.onRecordDiscarded();}
this.props.close();}}
FormViewDialog.components={Dialog,View};FormViewDialog.props={close:Function,resModel:String,context:{type:Object,optional:true},mode:{optional:true,validate:(m)=>["edit","readonly"].includes(m),},onRecordSaved:{type:Function,optional:true},onRecordDiscarded:{type:Function,optional:true},removeRecord:{type:Function,optional:true},resId:{type:[Number,Boolean],optional:true},title:{type:String,optional:true},viewId:{type:[Number,Boolean],optional:true},preventCreate:{type:Boolean,optional:true},preventEdit:{type:Boolean,optional:true},isToMany:{type:Boolean,optional:true},size:Dialog.props.size,};FormViewDialog.defaultProps={onRecordSaved:()=>{},preventCreate:false,preventEdit:false,isToMany:false,};FormViewDialog.template="web.FormViewDialog";return __exports;});;

/* /web/static/src/views/view_dialogs/select_create_dialog.js */
odoo.define('@web/views/view_dialogs/select_create_dialog',['@web/core/dialog/dialog','@web/core/l10n/translation','@web/core/utils/hooks','@web/views/view','@web/core/utils/strings','@web/views/view_dialogs/form_view_dialog','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{View}=require("@web/views/view");const{escape}=require("@web/core/utils/strings");const{FormViewDialog}=require("@web/views/view_dialogs/form_view_dialog");const{Component,markup,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");const SelectCreateDialog=__exports.SelectCreateDialog=class SelectCreateDialog extends Component{setup(){this.viewService=useService("view");this.dialogService=useService("dialog");this.state=useState({resIds:[]});const translatedText=_t("No records found!");this.busy=false;this.baseViewProps={display:{searchPanel:false},editable:false,noBreadcrumbs:true,noContentHelp:markup(`<p>${escape(translatedText)}</p>`),showButtons:false,selectRecord:(resId)=>this.select([resId]),onSelectionChanged:(resIds)=>{this.state.resIds=resIds;},};}
get viewProps(){const type=this.env.isSmall?"kanban":"list";const props={loadIrFilters:true,...this.baseViewProps,context:this.props.context,domain:this.props.domain,dynamicFilters:this.props.dynamicFilters,resModel:this.props.resModel,searchViewId:this.props.searchViewId,type,};if(type==="list"){props.allowSelectors=this.props.multiSelect;}else if(type==="kanban"){props.forceGlobalClick=true;}
return props;}
async executeOnceAndClose(callback){if(!this.busy){this.busy=true;try{await callback();}catch(e){this.busy=false;throw e;}
this.props.close();}}
async select(resIds){if(this.props.onSelected){this.executeOnceAndClose(()=>this.props.onSelected(resIds));}}
async unselect(){if(this.props.onUnselect){this.executeOnceAndClose(()=>this.props.onUnselect());}}
get canUnselect(){return this.env.isSmall&&!!this.props.onUnselect;}
async createEditRecord(){if(this.props.onCreateEdit){await this.props.onCreateEdit();this.props.close();}else{this.dialogService.add(FormViewDialog,{context:this.props.context,resModel:this.props.resModel,onRecordSaved:(record)=>{this.props.onSelected([record.resId]);this.props.close();},});}}}
SelectCreateDialog.components={Dialog,View};SelectCreateDialog.template="web.SelectCreateDialog";SelectCreateDialog.props={context:{type:Object,optional:true},domain:{type:Array,optional:true},dynamicFilters:{type:Array,optional:true},resModel:String,searchViewId:{type:[Number,{value:false}],optional:true},multiSelect:{type:Boolean,optional:true},onSelected:{type:Function,optional:true},close:{type:Function,optional:true},onCreateEdit:{type:Function,optional:true},title:{type:String,optional:true},noCreate:{type:Boolean,optional:true},onUnselect:{type:Function,optional:true},};SelectCreateDialog.defaultProps={dynamicFilters:[],multiSelect:true,searchViewId:false,domain:[],context:{},};registry.category("dialogs").add("select_create",SelectCreateDialog);return __exports;});;

/* /web/static/src/views/view_hook.js */
odoo.define('@web/views/view_hook',['@web/core/debug/debug_context','@web/webclient/actions/action_hook','@web/core/registry','@web/core/utils/hooks','@web/core/browser/browser','@web/core/py_js/py','@odoo/owl'],function(require){'use strict';let __exports={};const{useDebugCategory}=require("@web/core/debug/debug_context");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{evaluateExpr}=require("@web/core/py_js/py");const{useComponent,useEffect,xml}=require("@odoo/owl");__exports.useSetupView=useSetupView;function useSetupView(params){const component=useComponent();useDebugCategory("view",{component});useSetupAction(params);}
__exports.useViewArch=useViewArch;function useViewArch(arch,params={}){const CATEGORY="__processed_archs__";arch=arch.trim();const processedRegistry=registry.category(CATEGORY);let processedArch;if(!processedRegistry.contains(arch)){processedArch={};processedRegistry.add(arch,processedArch);}else{processedArch=processedRegistry.get(arch);}
const{compile,extract}=params;if(!("template"in processedArch)&&compile){processedArch.template=xml`${compile(arch)}`;}
if(!("extracted"in processedArch)&&extract){processedArch.extracted=extract(arch);}
return processedArch;}
__exports.useActionLinks=useActionLinks;function useActionLinks({resModel,reload}){const component=useComponent();const keepLast=component.env.keepLast;const orm=useService("orm");const{doAction}=useService("action");function checkAndCollapseBootstrap(target){if(target.dataset.bsToggle==="collapse"){$(target).trigger("click.bs.collapse.data-api");}}
async function handler(ev){ev.preventDefault();ev.stopPropagation();let target=ev.target;if(target.tagName!=="A"){target=target.closest("a");}
const data=target.dataset;if(data.method!==undefined&&data.model!==undefined){const options={};if(data.reloadOnClose){options.onClose=reload||(()=>component.render());}
const action=await keepLast.add(orm.call(data.model,data.method));if(action!==undefined){keepLast.add(Promise.resolve(doAction(action,options)));}}else if(target.getAttribute("name")){const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(target.getAttribute("name"),options));}else{let views;const resId=data.resid?parseInt(data.resid,10):null;if(data.views){views=evaluateExpr(data.views);}else{views=resId?[[false,"form"]]:[[false,"list"],[false,"form"],];}
const action={name:target.getAttribute("title")||target.textContent.trim(),type:"ir.actions.act_window",res_model:data.model||resModel,target:"current",views,domain:data.domain?evaluateExpr(data.domain):[],};if(resId){action.res_id=resId;}
const options={};if(data.context){options.additionalContext=evaluateExpr(data.context);}
keepLast.add(doAction(action,options));}
checkAndCollapseBootstrap(target);}
return(ev)=>{const a=ev.target.closest(`a[type="action"]`);if(a&&ev.currentTarget.contains(a)){handler(ev);}};}
__exports.useBounceButton=useBounceButton;function useBounceButton(containerRef,shouldBounce){let timeout;const ui=useService("ui");useEffect((containerEl)=>{if(!containerEl){return;}
const handler=(ev)=>{const button=ui.activeElement.querySelector("[data-bounce-button]");if(button&&shouldBounce(ev.target)){button.classList.add("o_catch_attention");browser.clearTimeout(timeout);timeout=browser.setTimeout(()=>{button.classList.remove("o_catch_attention");},400);}};containerEl.addEventListener("click",handler);return()=>containerEl.removeEventListener("click",handler);},()=>[containerRef.el]);}
return __exports;});;

/* /web/static/src/views/view_service.js */
odoo.define('@web/views/view_service',['@web/core/registry','@web/core/orm_service'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{UPDATE_METHODS}=require("@web/core/orm_service");const viewService=__exports.viewService={dependencies:["orm"],start(env,{orm}){let cache={};function clearCache(){cache={};const processedArchs=registry.category("__processed_archs__");processedArchs.content={};processedArchs.trigger("UPDATE");}
env.bus.addEventListener("CLEAR-CACHES",clearCache);env.bus.addEventListener("RPC:RESPONSE",(ev)=>{const{model,method}=ev.detail.data.params;if(["ir.ui.view","ir.filters"].includes(model)){if(UPDATE_METHODS.includes(method)){clearCache();}}});async function loadViews(params,options={}){const{context,resModel,views}=params;const loadViewsOptions={action_id:options.actionId||false,load_filters:options.loadIrFilters||false,toolbar:(!context?.disable_toolbar&&options.loadActionMenus)||false,};for(const key in options){if(!["actionId","loadIrFilters","loadActionMenus"].includes(key)){loadViewsOptions[key]=options[key];}}
if(env.isSmall){loadViewsOptions.mobile=true;}
const filteredContext=Object.fromEntries(Object.entries(context||{}).filter(([k,v])=>k=="lang"||k.endsWith("_view_ref")));const key=JSON.stringify([resModel,views,filteredContext,loadViewsOptions]);if(!cache[key]){cache[key]=orm.call(resModel,"get_views",[],{context:filteredContext,views,options:loadViewsOptions,}).then((result)=>{const{models,views}=result;const viewDescriptions={fields:models[resModel],relatedModels:models,views:{},};for(const viewType in views){const{arch,toolbar,id,filters,custom_view_id}=views[viewType];const viewDescription={arch,id,custom_view_id};if(toolbar){viewDescription.actionMenus=toolbar;}
if(filters){viewDescription.irFilters=filters;}
viewDescriptions.views[viewType]=viewDescription;}
return viewDescriptions;}).catch((error)=>{delete cache[key];return Promise.reject(error);});}
return cache[key];}
return{loadViews};},};registry.category("services").add("view",viewService);return __exports;});;

/* /web/static/src/views/widgets/attach_document/attach_document.js */
odoo.define('@web/views/widgets/attach_document/attach_document',['@web/core/file_input/file_input','@web/core/registry','@web/core/utils/hooks','@web/core/utils/files','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{FileInput}=require("@web/core/file_input/file_input");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{checkFileSize}=require("@web/core/utils/files");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const AttachDocumentWidget=__exports.AttachDocumentWidget=class AttachDocumentWidget extends Component{static template="web.AttachDocument";static components={FileInput,};static props={...standardWidgetProps,string:{type:String},action:{type:String,optional:true},highlight:{type:Boolean},};setup(){this.http=useService("http");this.notification=useService("notification");this.fileInput=document.createElement("input");this.fileInput.type="file";this.fileInput.accept="*";this.fileInput.multiple=true;this.fileInput.onchange=this.onInputChange.bind(this);}
async onInputChange(){const ufile=[...this.fileInput.files];for(const file of ufile){if(!checkFileSize(file.size,this.notification)){return null;}}
const fileData=await this.http.post("/web/binary/upload_attachment",{csrf_token:odoo.csrf_token,ufile:ufile,model:this.props.record.resModel,id:this.props.record.resId,},"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
await this.onFileUploaded(parsedFileData);}
async triggerUpload(){if(await this.beforeOpen()){this.fileInput.click();}}
async onFileUploaded(files){const{action,record}=this.props;if(action){const{resId,resModel}=record;await this.env.services.orm.call(resModel,action,[resId],{attachment_ids:files.map((file)=>file.id),});await record.load();}}
beforeOpen(){return this.props.record.save();}}
const attachDocumentWidget=__exports.attachDocumentWidget={component:AttachDocumentWidget,extractProps:({attrs})=>{const{action,highlight,string}=attrs;return{action,highlight:!!highlight,string,};},};registry.category("view_widgets").add("attach_document",attachDocumentWidget);return __exports;});;

/* /web/static/src/views/widgets/documentation_link/documentation_link.js */
odoo.define('@web/views/widgets/documentation_link/documentation_link',['@web/session','@web/views/widgets/standard_widget_props','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{session}=require("@web/session");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const{registry}=require("@web/core/registry");const LINK_REGEX=new RegExp("^https?://");const DocumentationLink=__exports.DocumentationLink=class DocumentationLink extends Component{static template="web.DocumentationLink";static props={...standardWidgetProps,record:{type:Object,optional:1},path:{type:String},};get url(){if(LINK_REGEX.test(this.props.path)){return this.props.path;}else{const serverVersion=session.server_version_info.includes("final")?`${session.server_version_info[0]}.${session.server_version_info[1]}`.replace("~","-"):"master";return"https://www.odoo.com/documentation/"+serverVersion+this.props.path;}}}
const documentationLink=__exports.documentationLink={component:DocumentationLink,extractProps:({attrs})=>{const{path}=attrs;return{path,};},additionalClasses:["d-inline"],};registry.category("view_widgets").add("documentation_link",documentationLink);return __exports;});;

/* /web/static/src/views/widgets/notification_alert/notification_alert.js */
odoo.define('@web/views/widgets/notification_alert/notification_alert',['@web/core/browser/browser','@web/core/registry','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const NotificationAlert=__exports.NotificationAlert=class NotificationAlert extends Component{static props=standardWidgetProps;static template="web.NotificationAlert";get isNotificationBlocked(){return browser.Notification&&browser.Notification.permission==="denied";}}
const notificationAlert=__exports.notificationAlert={component:NotificationAlert,};registry.category("view_widgets").add("notification_alert",notificationAlert);return __exports;});;

/* /web/static/src/views/widgets/ribbon/ribbon.js */
odoo.define('@web/views/widgets/ribbon/ribbon',['@web/core/registry','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");class RibbonWidget extends Component{static template="web.Ribbon";static props={...standardWidgetProps,text:{type:String},title:{type:String,optional:true},bgClass:{type:String,optional:true},};static defaultProps={title:"",bgClass:"text-bg-success",};get classes(){let classes=this.props.bgClass;if(this.props.text.length>15){classes+=" o_small";}else if(this.props.text.length>10){classes+=" o_medium";}
return classes;}}
const ribbonWidget=__exports.ribbonWidget={component:RibbonWidget,extractProps:({attrs})=>{return{text:attrs.title||attrs.text,title:attrs.tooltip,bgClass:attrs.bg_color,};},};registry.category("view_widgets").add("web_ribbon",ribbonWidget);return __exports;});;

/* /web/static/src/views/widgets/signature/signature.js */
odoo.define('@web/views/widgets/signature/signature',['@web/core/registry','@web/core/signature/signature_dialog','@web/core/utils/hooks','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{SignatureDialog}=require("@web/core/signature/signature_dialog");const{useService}=require("@web/core/utils/hooks");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");const SignatureWidget=__exports.SignatureWidget=class SignatureWidget extends Component{static template="web.SignatureWidget";static props={...standardWidgetProps,fullName:{type:String,optional:true},highlight:{type:Boolean,optional:true},string:{type:String},signatureField:{type:String,optional:true},};setup(){this.dialogService=useService("dialog");this.orm=useService("orm");}
onClickSignature(){const nameAndSignatureProps={mode:"draw",displaySignatureRatio:3,signatureType:"signature",noInputName:true,};const{fullName,record}=this.props;let defaultName="";if(fullName){let signName;const fullNameData=record.data[fullName];if(record.fields[fullName].type==="many2one"){signName=fullNameData&&fullNameData[1];}else{signName=fullNameData;}
defaultName=signName===""?undefined:signName;}
nameAndSignatureProps.defaultFont=this.props.defaultFont;const dialogProps={defaultName,nameAndSignatureProps,uploadSignature:(data)=>this.uploadSignature(data),};this.dialogService.add(SignatureDialog,dialogProps);}
async uploadSignature({signatureImage}){const file=signatureImage[1];const{model,resModel,resId}=this.props.record;await this.env.services.orm.write(resModel,[resId],{[this.props.signatureField]:file,});await this.props.record.load();model.notify();}}
const signatureWidget=__exports.signatureWidget={component:SignatureWidget,extractProps:({attrs})=>{const{full_name:fullName,highlight,signature_field,string}=attrs;return{fullName,highlight:!!highlight,string,signatureField:signature_field||"signature",};},};registry.category("view_widgets").add("signature",signatureWidget);return __exports;});;

/* /web/static/src/views/widgets/standard_widget_props.js */
odoo.define('@web/views/widgets/standard_widget_props',[],function(require){'use strict';let __exports={};const standardWidgetProps=__exports.standardWidgetProps={readonly:{type:Boolean,optional:true},record:{type:Object},};return __exports;});;

/* /web/static/src/views/widgets/week_days/week_days.js */
odoo.define('@web/views/widgets/week_days/week_days',['@web/core/registry','@web/core/checkbox/checkbox','@web/core/l10n/localization','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CheckBox}=require("@web/core/checkbox/checkbox");const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const WEEKDAYS=["sun","mon","tue","wed","thu","fri","sat"];const WeekDays=__exports.WeekDays=class WeekDays extends Component{static template="web.WeekDays";static components={CheckBox};get weekdays(){return[...WEEKDAYS.slice(localization.weekStart%WEEKDAYS.length,WEEKDAYS.length),...WEEKDAYS.slice(0,localization.weekStart%WEEKDAYS.length),];}
get data(){return Object.fromEntries(this.weekdays.map((day)=>[day,this.props.record.data[day]]));}
onChange(day,checked){this.props.record.update({[day]:checked});}}
const weekDays=__exports.weekDays={component:WeekDays,fieldDependencies:[{name:"sun",type:"boolean",string:_t("Sun"),readonly:false},{name:"mon",type:"boolean",string:_t("Mon"),readonly:false},{name:"tue",type:"boolean",string:_t("Tue"),readonly:false},{name:"wed",type:"boolean",string:_t("Wed"),readonly:false},{name:"thu",type:"boolean",string:_t("Thu"),readonly:false},{name:"fri",type:"boolean",string:_t("Fri"),readonly:false},{name:"sat",type:"boolean",string:_t("Sat"),readonly:false},],};registry.category("view_widgets").add("week_days",weekDays);return __exports;});;

/* /web/static/src/views/widgets/widget.js */
odoo.define('@web/views/widgets/widget',['@web/core/py_js/py','@web/core/registry','@odoo/owl'],function(require){'use strict';let __exports={};const{evaluateExpr,evaluateBooleanExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{Component,xml}=require("@odoo/owl");const viewWidgetRegistry=registry.category("view_widgets");const Widget=__exports.Widget=class Widget extends Component{setup(){if(this.props.widgetInfo){this.widget=this.props.widgetInfo.widget;}else{this.widget=viewWidgetRegistry.get(this.props.name);}}
get classNames(){const classNames={o_widget:true,[`o_widget_${this.props.name}`]:true,[this.props.className]:Boolean(this.props.className),};if(this.widget.additionalClasses){for(const cls of this.widget.additionalClasses){classNames[cls]=true;}}
return classNames;}
get widgetProps(){const record=this.props.record;let readonlyFromModifiers=false;let propsFromNode={};if(this.props.widgetInfo){const widgetInfo=this.props.widgetInfo;readonlyFromModifiers=evaluateBooleanExpr(widgetInfo.attrs.readonly,record.evalContextWithVirtualIds);const dynamicInfo={readonly:readonlyFromModifiers,};propsFromNode=this.widget.extractProps?this.widget.extractProps(widgetInfo,dynamicInfo):{};}
return{record,readonly:!record.isInEdition||readonlyFromModifiers||false,...propsFromNode,};}}
Widget.template=xml`
    <div t-att-class="classNames" t-att-style="props.style">
        <t t-component="widget.component" t-props="widgetProps" />
    </div>`;Widget.parseWidgetNode=function(node){const name=node.getAttribute("name");const widget=viewWidgetRegistry.get(name);const widgetInfo={name,widget,options:{},attrs:{},};for(const{name,value}of node.attributes){if(["name","widget"].includes(name)){continue;}
if(name==="options"){widgetInfo.options=evaluateExpr(value);}else if(!name.startsWith("t-att")){widgetInfo.attrs[name]=value;}}
return widgetInfo;};Widget.props={"*":true,};return __exports;});;

/* /web/static/src/webclient/actions/action_container.js */
odoo.define('@web/webclient/actions/action_container',['@web/webclient/actions/action_dialog','@odoo/owl'],function(require){'use strict';let __exports={};const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{Component,xml,onWillDestroy}=require("@odoo/owl");const ActionContainer=__exports.ActionContainer=class ActionContainer extends Component{setup(){this.info={};this.onActionManagerUpdate=({detail:info})=>{this.info=info;this.render();};this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);onWillDestroy(()=>{this.env.bus.removeEventListener("ACTION_MANAGER:UPDATE",this.onActionManagerUpdate);});}}
ActionContainer.components={ActionDialog};ActionContainer.template=xml`
    <t t-name="web.ActionContainer">
      <div class="o_action_manager">
        <t t-if="info.Component" t-component="info.Component" className="'o_action'" t-props="info.componentProps" t-key="info.id"/>
      </div>
    </t>`;ActionContainer.props={};return __exports;});;

/* /web/static/src/webclient/actions/action_dialog.js */
odoo.define('@web/webclient/actions/action_dialog',['@web/core/dialog/dialog','@web/core/debug/debug_menu','@web/core/debug/debug_context','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{DebugMenu}=require("@web/core/debug/debug_menu");const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{useEffect}=require("@odoo/owl");const ActionDialog=__exports.ActionDialog=class ActionDialog extends Dialog{setup(){super.setup();useOwnDebugContext();useEffect(()=>{if(this.modalRef.el.querySelector(".modal-footer").childElementCount>1){const defaultButton=this.modalRef.el.querySelector(".modal-footer button.o-default-button");defaultButton.classList.add("d-none");}},()=>[]);}}
ActionDialog.components={...Dialog.components,DebugMenu};ActionDialog.template="web.ActionDialog";ActionDialog.props={...Dialog.props,close:Function,slots:{optional:true},ActionComponent:{optional:true},actionProps:{optional:true},actionType:{optional:true},title:{optional:true},};ActionDialog.defaultProps={...Dialog.defaultProps,withBodyPadding:false,};return __exports;});;

/* /web/static/src/webclient/actions/action_hook.js */
odoo.define('@web/webclient/actions/action_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{onMounted,useComponent,useEffect,useExternalListener}=require("@odoo/owl");const scrollSymbol=__exports.scrollSymbol=Symbol("scroll");const CallbackRecorder=__exports.CallbackRecorder=class CallbackRecorder{constructor(){this.setup();}
setup(){this._callbacks=[];}
get callbacks(){return this._callbacks.map(({callback})=>callback);}
add(owner,callback){if(!callback){throw new Error("Missing callback");}
this._callbacks.push({owner,callback});}
remove(owner){this._callbacks=this._callbacks.filter((s)=>s.owner!==owner);}}
__exports.useCallbackRecorder=useCallbackRecorder;function useCallbackRecorder(callbackRecorder,callback){const component=useComponent();useEffect(()=>{callbackRecorder.add(component,callback);return()=>callbackRecorder.remove(component);},()=>[]);}
__exports.useSetupAction=useSetupAction;function useSetupAction(params={}){const component=useComponent();const{__beforeLeave__,__getGlobalState__,__getLocalState__,__getContext__,__getOrderBy__,}=component.env;const{beforeUnload,beforeLeave,getGlobalState,getLocalState,rootRef}=params;if(beforeUnload){useExternalListener(window,"beforeunload",beforeUnload);}
if(__beforeLeave__&&beforeLeave){useCallbackRecorder(__beforeLeave__,beforeLeave);}
if(__getGlobalState__&&(getGlobalState||rootRef)){useCallbackRecorder(__getGlobalState__,()=>{const state={};if(getGlobalState){Object.assign(state,getGlobalState());}
if(rootRef){const searchPanelEl=rootRef.el.querySelector(".o_content .o_search_panel");if(searchPanelEl){state[scrollSymbol]={searchPanel:{left:searchPanelEl.scrollLeft,top:searchPanelEl.scrollTop,},};}}
return state;});if(rootRef){onMounted(()=>{const{globalState}=component.props;const scrolling=globalState&&globalState[scrollSymbol];if(scrolling){const searchPanelEl=rootRef.el.querySelector(".o_content .o_search_panel");if(searchPanelEl){searchPanelEl.scrollLeft=(scrolling.searchPanel&&scrolling.searchPanel.left)||0;searchPanelEl.scrollTop=(scrolling.searchPanel&&scrolling.searchPanel.top)||0;}}});}}
if(__getLocalState__&&(getLocalState||rootRef)){useCallbackRecorder(__getLocalState__,()=>{const state={};if(getLocalState){Object.assign(state,getLocalState());}
if(rootRef){if(component.env.isSmall){state[scrollSymbol]={root:{left:rootRef.el.scrollLeft,top:rootRef.el.scrollTop},};}else{const contentEl=rootRef.el.querySelector(".o_component_with_search_panel > .o_renderer_with_searchpanel,"
+".o_component_with_search_panel > .o_renderer")||rootRef.el.querySelector(".o_content");if(contentEl){state[scrollSymbol]={content:{left:contentEl.scrollLeft,top:contentEl.scrollTop},};}}}
return state;});if(rootRef){onMounted(()=>{const{state}=component.props;const scrolling=state&&state[scrollSymbol];if(scrolling){if(component.env.isSmall){rootRef.el.scrollTop=(scrolling.root&&scrolling.root.top)||0;rootRef.el.scrollLeft=(scrolling.root&&scrolling.root.left)||0;}else if(scrolling.content){const contentEl=rootRef.el.querySelector(".o_component_with_search_panel > .o_renderer_with_searchpanel,"
+".o_component_with_search_panel > .o_renderer")||rootRef.el.querySelector(".o_content");if(contentEl){contentEl.scrollTop=scrolling.content.top||0;contentEl.scrollLeft=scrolling.content.left||0;}}}});}}
if(__getContext__&&params.getContext){useCallbackRecorder(__getContext__,params.getContext);}
if(__getOrderBy__&&params.getOrderBy){useCallbackRecorder(__getOrderBy__,params.getOrderBy);}}
return __exports;});;

/* /web/static/src/webclient/actions/action_service.js */
odoo.define('@web/webclient/actions/action_service',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/context','@web/core/debug/debug_context','@web/core/py_js/py','@web/core/registry','@web/core/utils/concurrency','@web/core/utils/hooks','@web/views/view','@web/webclient/actions/action_dialog','@web/webclient/actions/action_hook','@web/webclient/actions/reports/report_action','@web/core/orm_service','@web/search/control_panel/control_panel','@odoo/owl','@web/webclient/actions/reports/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{makeContext}=require("@web/core/context");const{useDebugCategory}=require("@web/core/debug/debug_context");const{evaluateExpr}=require("@web/core/py_js/py");const{registry}=require("@web/core/registry");const{Deferred,KeepLast}=require("@web/core/utils/concurrency");const{useBus,useService}=require("@web/core/utils/hooks");const{View,ViewNotFoundError}=require("@web/views/view");const{ActionDialog}=require("@web/webclient/actions/action_dialog");const{CallbackRecorder}=require("@web/webclient/actions/action_hook");const{ReportAction}=require("@web/webclient/actions/reports/report_action");const{UPDATE_METHODS}=require("@web/core/orm_service");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{Component,markup,onMounted,onWillUnmount,onError,useChildSubEnv,xml,reactive,}=require("@odoo/owl");const{downloadReport,getReportUrl}=require("@web/webclient/actions/reports/utils");class BlankComponent extends Component{static props=["onMounted","withControlPanel","*"];static template=xml`
        <ControlPanel display="{disableDropdown: true}" t-if="props.withControlPanel and !env.isSmall">
            <t t-set-slot="layout-buttons">
                <button class="btn btn-primary invisible"> empty </button>
            </t>
        </ControlPanel>`;static components={ControlPanel};setup(){useChildSubEnv({config:{breadcrumbs:[],noBreadcrumbs:true}});onMounted(()=>this.props.onMounted());}}
const actionHandlersRegistry=registry.category("action_handlers");const actionRegistry=registry.category("actions");const viewRegistry=registry.category("views");__exports.clearUncommittedChanges=clearUncommittedChanges;async function clearUncommittedChanges(env){const callbacks=[];env.bus.trigger("CLEAR-UNCOMMITTED-CHANGES",callbacks);const res=await Promise.all(callbacks.map((fn)=>fn()));return!res.includes(false);}
const standardActionServiceProps=__exports.standardActionServiceProps={action:Object,actionId:{type:Number,optional:true},className:String,globalState:{type:Object,optional:true},state:{type:Object,optional:true},};function parseActiveIds(ids){const activeIds=[];if(typeof ids==="string"){activeIds.push(...ids.split(",").map(Number));}else if(typeof ids==="number"){activeIds.push(ids);}
return activeIds;}
const DIALOG_SIZES={"extra-large":"xl",large:"lg",medium:"md",small:"sm",};const ControllerNotFoundError=__exports.ControllerNotFoundError=class ControllerNotFoundError extends Error{}
const InvalidButtonParamsError=__exports.InvalidButtonParamsError=class InvalidButtonParamsError extends Error{}
const CTX_KEY_REGEX=/^(?:(?:default_|search_default_|show_).+|.+_view_ref|group_by|group_by_no_leaf|active_id|active_ids|orderedBy)$/;const ControllerComponentTemplate=xml`<t t-component="Component" t-props="componentProps"/>`;function makeActionManager(env){const keepLast=new KeepLast();let id=0;let controllerStack=[];let dialogCloseProm;let actionCache={};let dialog=null;let nextDialog=null;const actionParams=_getActionParams();if(actionParams&&typeof actionParams.actionRequest==="number"){const{actionRequest,options}=actionParams;_loadAction(actionRequest,options.additionalContext);}
env.bus.addEventListener("CLEAR-CACHES",()=>{actionCache={};});env.bus.addEventListener("RPC:RESPONSE",(ev)=>{const{model,method}=ev.detail.data.params;if(model==="ir.actions.act_window"&&UPDATE_METHODS.includes(method)){actionCache={};}});function _removeDialog(){if(dialog){const{onClose,remove}=dialog;dialog=null;remove();return onClose;}}
function _getCurrentController(){const stack=controllerStack;return stack.length?stack[stack.length-1]:null;}
async function _loadAction(actionRequest,context={}){if(typeof actionRequest==="string"&&actionRegistry.contains(actionRequest)){return{target:"current",tag:actionRequest,type:"ir.actions.client",};}
if(typeof actionRequest==="string"||typeof actionRequest==="number"){const additional_context={active_id:context.active_id,active_ids:context.active_ids,active_model:context.active_model,};const key=`${JSON.stringify(actionRequest)},${JSON.stringify(additional_context)}`;let action;if(!actionCache[key]){actionCache[key]=env.services.rpc("/web/action/load",{action_id:actionRequest,additional_context,});action=await actionCache[key];if(action.help){action.help=markup(action.help);}}else{action=await actionCache[key];}
if(!action){return{type:"ir.actions.client",tag:"invalid_action",id:actionRequest,};}
return Object.assign({},action);}
return actionRequest;}
function _preprocessAction(action,context={}){try{action._originalAction=JSON.stringify(action);}catch{}
action.context=makeContext([context,action.context],env.services.user.context);const domain=action.domain||[];action.domain=typeof domain==="string"?evaluateExpr(domain,Object.assign({},env.services.user.context,action.context)):domain;if(action.help){const htmlHelp=document.createElement("div");htmlHelp.innerHTML=action.help;if(!htmlHelp.innerText.trim()){delete action.help;}}
action={...action};action.jsId=`action_${++id}`;if(action.type==="ir.actions.act_window"||action.type==="ir.actions.client"){action.target=action.target||"current";}
if(action.type==="ir.actions.act_window"){action.views=[...action.views.map((v)=>[v[0],v[1]==="tree"?"list":v[1]])];action.controllers={};const target=action.target;if(target!=="inline"&&!(target==="new"&&action.views[0][1]==="form")){const searchViewId=action.search_view_id?action.search_view_id[0]:false;action.views.push([searchViewId,"search"]);}}
return action;}
function _getView(viewType){const currentController=controllerStack[controllerStack.length-1];if(currentController.action.type!=="ir.actions.act_window"){throw new Error(`switchView called but the current controller isn't a view`);}
const view=currentController.views.find((view)=>view.type===viewType);return view||null;}
function _getBreadcrumbs(stack){return stack.filter((controller)=>controller.action.tag!=="menu").map((controller)=>{return{jsId:controller.jsId,get name(){return controller.displayName;},};});}
function _getActionParams(){const state=env.services.router.current.hash;const options={clearBreadcrumbs:true};let actionRequest=null;if(state.action){const context={};if(state.active_id){context.active_id=state.active_id;}
if(state.active_ids){context.active_ids=parseActiveIds(state.active_ids);}else if(state.active_id){context.active_ids=[state.active_id];}
if(actionRegistry.contains(state.action)){actionRequest={context,params:state,tag:state.action,type:"ir.actions.client",};}else{actionRequest=state.action;context.params=state;Object.assign(options,{additionalContext:context,viewType:state.view_type,});if(state.id){options.props={resId:state.id};}}}else if(state.model){if(state.id){actionRequest={res_model:state.model,res_id:state.id,type:"ir.actions.act_window",views:[[state.view_id?state.view_id:false,"form"]],};}else if(state.view_type){const storedAction=browser.sessionStorage.getItem("current_action");const lastAction=JSON.parse(storedAction||"{}");if(lastAction.help){lastAction.help=markup(lastAction.help);}
if(lastAction.res_model===state.model){if(lastAction.context){delete lastAction.context.allowed_company_ids;}
actionRequest=lastAction;options.viewType=state.view_type;}}}
if(!actionRequest&&env.services.user.home_action_id){actionRequest=env.services.user.home_action_id;}
return actionRequest?{actionRequest,options}:null;}
function _getActionInfo(action,props){return{props:Object.assign({},props,{action,actionId:action.id}),config:{actionId:action.id,actionType:"ir.actions.client",actionFlags:action.flags,},displayName:action.display_name||action.name||"",};}
function _getActionMode(action){if(action.target==="new"){return"new";}
if(action.type==="ir.actions.client"){const clientAction=actionRegistry.get(action.tag);if(clientAction.target){return clientAction.target;}}
if(controllerStack.some((c)=>c.action.target==="fullscreen")){return"fullscreen";}
return"current";}
function _getSwitchViewParams(){const state=env.services.router.current.hash;if(state.action&&!actionRegistry.contains(state.action)){const currentController=controllerStack[controllerStack.length-1];const currentActionId=currentController&&currentController.action&&currentController.action.id;if(currentController&&currentController.action.type==="ir.actions.act_window"&&currentActionId===state.action){const props={resId:state.id||false,};const viewType=state.view_type||currentController.view.type;return{viewType,props};}}
return null;}
function _getViewInfo(view,action,views,props={}){const target=action.target;const viewSwitcherEntries=views.filter((v)=>v.multiRecord===view.multiRecord).map((v)=>{const viewSwitcherEntry={icon:v.icon,name:v.display_name.toString(),type:v.type,multiRecord:v.multiRecord,};if(view.type===v.type){viewSwitcherEntry.active=true;}
return viewSwitcherEntry;});const context=action.context||{};let groupBy=context.group_by||[];if(typeof groupBy==="string"){groupBy=[groupBy];}
const viewProps=Object.assign({},props,{context,display:{mode:target==="new"?"inDialog":target},domain:action.domain||[],groupBy,loadActionMenus:target!=="new"&&target!=="inline",loadIrFilters:action.views.some((v)=>v[1]==="search"),resModel:action.res_model,type:view.type,selectRecord:async(resId,{activeIds,mode})=>{if(target!=="new"&&_getView("form")){await switchView("form",{mode,resId,resIds:activeIds});}},createRecord:async()=>{if(target!=="new"&&_getView("form")){await switchView("form",{resId:false});}},});if(view.type==="form"){if(action.target==="new"){viewProps.mode="edit";if(!viewProps.onSave){viewProps.onSave=(record,params)=>{if(params&&params.closable){doAction({type:"ir.actions.act_window_close"});}};}}
if(action.flags&&"mode"in action.flags){viewProps.mode=action.flags.mode;}}
if(target==="inline"){viewProps.searchMenuTypes=[];}
const specialKeys=["help","useSampleModel","limit","count"];for(const key of specialKeys){if(key in action){if(key==="help"){viewProps.noContentHelp=action.help;}else{viewProps[key]=action[key];}}}
if(context.search_disable_custom_filters){viewProps.activateFavorite=false;}
if(action.res_id&&!viewProps.resId){viewProps.resId=action.res_id;}
viewProps.noBreadcrumbs="no_breadcrumbs"in action.context?action.context.no_breadcrumbs:target==="new";delete action.context.no_breadcrumbs;return{props:viewProps,config:{actionId:action.id,actionType:"ir.actions.act_window",actionFlags:action.flags,views:action.views,viewSwitcherEntries,},displayName:action.display_name||action.name||"",};}
function _computeStackIndex(options){let index=null;if(options.clearBreadcrumbs){index=0;}else if(options.stackPosition==="replaceCurrentAction"){const currentController=controllerStack[controllerStack.length-1];if(currentController){index=controllerStack.findIndex((ct)=>ct.action.jsId===currentController.action.jsId);}}else if(options.stackPosition==="replacePreviousAction"){let last;for(let i=controllerStack.length-1;i>=0;i--){const action=controllerStack[i].action.jsId;if(!last){last=action;}
if(action!==last){last=action;break;}}
if(last){index=controllerStack.findIndex((ct)=>ct.action.jsId===last);}}else if("index"in options){index=options.index;}else{index=controllerStack.length;}
return index;}
async function _updateUI(controller,options={}){let resolve;let reject;let dialogCloseResolve;let removeDialogFn;const currentActionProm=new Promise((_res,_rej)=>{resolve=_res;reject=_rej;});const action=controller.action;const index=_computeStackIndex(options);const controllerArray=[controller];if(options.lazyController){controllerArray.unshift(options.lazyController);}
const nextStack=controllerStack.slice(0,index).concat(controllerArray);controller.config.breadcrumbs=reactive(action.target==="new"?[]:_getBreadcrumbs(nextStack));controller.config.getDisplayName=()=>controller.displayName;controller.config.setDisplayName=(displayName)=>{controller.displayName=displayName;if(controller===_getCurrentController()){env.services.title.setParts({action:controller.displayName});}
if(action.target!=="new"){controller.config.breadcrumbs.push(undefined);controller.config.breadcrumbs.pop();}};controller.config.historyBack=()=>{const previousController=controllerStack[controllerStack.length-2];if(previousController&&!dialog){restore(previousController.jsId);}else{_executeCloseAction();}};class ControllerComponent extends Component{setup(){this.Component=controller.Component;this.titleService=useService("title");useDebugCategory("action",{action});useChildSubEnv({config:controller.config,});if(action.target!=="new"){this.__beforeLeave__=new CallbackRecorder();this.__getGlobalState__=new CallbackRecorder();this.__getLocalState__=new CallbackRecorder();useBus(env.bus,"CLEAR-UNCOMMITTED-CHANGES",(ev)=>{const callbacks=ev.detail;const beforeLeaveFns=this.__beforeLeave__.callbacks;callbacks.push(...beforeLeaveFns);});if(this.constructor.Component!==View){useChildSubEnv({__beforeLeave__:this.__beforeLeave__,__getGlobalState__:this.__getGlobalState__,__getLocalState__:this.__getLocalState__,});}}
this.isMounted=false;onMounted(this.onMounted);onWillUnmount(this.onWillUnmount);onError(this.onError);}
onError(error){if(this.isMounted){Promise.resolve().then(()=>{throw error;});}else{reject(error);if(action.target==="new"){removeDialogFn?.();}else{const lastCt=controllerStack[controllerStack.length-1];if(lastCt){if(lastCt.jsId!==controller.jsId){restore(lastCt.jsId);}}else{env.bus.trigger("ACTION_MANAGER:UPDATE",{});}}}}
onMounted(){if(action.target==="new"){dialogCloseProm=new Promise((_r)=>{dialogCloseResolve=_r;}).then(()=>{dialogCloseProm=undefined;});dialog=nextDialog;}else{controller.getGlobalState=()=>{const exportFns=this.__getGlobalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};controller.getLocalState=()=>{const exportFns=this.__getLocalState__.callbacks;if(exportFns.length){return Object.assign({},...exportFns.map((fn)=>fn()));}};const nextStackActionIds=nextStack.map((c)=>c.action.jsId);const toDestroy=new Set();for(const c of controllerStack){if(!nextStackActionIds.includes(c.action.jsId)){toDestroy.add(c);}}
for(const c of toDestroy){if(c.exportedState&&c.exportedState.__legacy_widget__){c.exportedState.__legacy_widget__.destroy();}}
controllerStack=nextStack;pushState(controller);this.titleService.setParts({action:controller.displayName});browser.sessionStorage.setItem("current_action",action._originalAction||"{}");}
resolve();env.bus.trigger("ACTION_MANAGER:UI-UPDATED",_getActionMode(action));this.isMounted=true;}
onWillUnmount(){if(action.target==="new"&&dialogCloseResolve){dialogCloseResolve();}}
get componentProps(){const componentProps={...this.props};if(this.constructor.Component===View){componentProps.__beforeLeave__=this.__beforeLeave__;componentProps.__getGlobalState__=this.__getGlobalState__;componentProps.__getLocalState__=this.__getLocalState__;}
return componentProps;}}
ControllerComponent.template=ControllerComponentTemplate;ControllerComponent.Component=controller.Component;ControllerComponent.props={"*":true,};if(action.target==="new"){const actionDialogProps={ActionComponent:ControllerComponent,actionProps:controller.props,actionType:action.type,};if(action.name){actionDialogProps.title=action.name;}
const size=DIALOG_SIZES[action.context.dialog_size];if(size){actionDialogProps.size=size;}
const onClose=_removeDialog();removeDialogFn=env.services.dialog.add(ActionDialog,actionDialogProps,{onClose:()=>{const onClose=_removeDialog();if(onClose){onClose();}},});if(nextDialog){nextDialog.remove();}
nextDialog={remove:removeDialogFn,onClose:onClose||options.onClose,};return currentActionProm;}
const currentController=_getCurrentController();if(currentController&&currentController.getLocalState){currentController.exportedState=currentController.getLocalState();}
if(controller.exportedState){controller.props.state=controller.exportedState;}
if(currentController&&currentController.getGlobalState){currentController.action.globalState=Object.assign({},currentController.action.globalState,currentController.getGlobalState());}
if(controller.action.globalState){controller.props.globalState=controller.action.globalState;}
const closingProm=_executeCloseAction();if(options.clearBreadcrumbs&&!options.noEmptyTransition){const def=new Deferred();env.bus.trigger("ACTION_MANAGER:UPDATE",{id:++id,Component:BlankComponent,componentProps:{onMounted:()=>def.resolve(),withControlPanel:action.type==="ir.actions.act_window",},});await def;}
if(options.onActionReady){options.onActionReady(action);}
controller.__info__={id:++id,Component:ControllerComponent,componentProps:controller.props,};env.services.dialog.closeAll();env.bus.trigger("ACTION_MANAGER:UPDATE",controller.__info__);return Promise.all([currentActionProm,closingProm]).then((r)=>r[0]);}
function _executeActURLAction(action,options){let url=action.url;if(url&&!(url.startsWith("http")||url.startsWith("/"))){url="/"+url;}
if(action.target==="download"||action.target==="self"){browser.location.assign(url);}else{const w=browser.open(url,"_blank");if(!w||w.closed||typeof w.closed==="undefined"){const msg=_t("A popup window has been blocked. You may need to change your "+"browser settings to allow popup windows for this page.");env.services.notification.add(msg,{sticky:true,type:"warning",});}
if(action.close){return doAction({type:"ir.actions.act_window_close"},{onClose:options.onClose});}else if(options.onClose){options.onClose();}}}
async function _executeActWindowAction(action,options){const views=[];for(const[,type]of action.views){if(type!=="search"&&viewRegistry.contains(type)){views.push(viewRegistry.get(type));}}
if(!views.length){throw new Error(`No view found for act_window action ${action.id}`);}
let view=options.viewType&&views.find((v)=>v.type===options.viewType);let lazyView;if(view&&!view.multiRecord){lazyView=views[0].multiRecord?views[0]:undefined;}else if(!view){view=views[0];}
if(env.isSmall){view=_findView(views,view.multiRecord,action.mobile_view_mode)||view;if(lazyView){lazyView=_findView(views,lazyView.multiRecord,action.mobile_view_mode)||lazyView;}}
const controller={jsId:`controller_${++id}`,Component:View,action,view,views,..._getViewInfo(view,action,views,options.props),};action.controllers[view.type]=controller;const updateUIOptions={clearBreadcrumbs:options.clearBreadcrumbs,onClose:options.onClose,stackPosition:options.stackPosition,onActionReady:options.onActionReady,noEmptyTransition:options.noEmptyTransition,};if(lazyView){updateUIOptions.lazyController={jsId:`controller_${++id}`,Component:View,action,view:lazyView,views,..._getViewInfo(lazyView,action,views),};}
return _updateUI(controller,updateUIOptions);}
function _findView(views,multiRecord,viewType){return views.find((v)=>v.type===viewType&&v.multiRecord==multiRecord);}
async function _executeClientAction(action,options){const clientAction=actionRegistry.get(action.tag);if(clientAction.prototype instanceof Component){if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
if(clientAction.target){action.target=clientAction.target;}}
const controller={jsId:`controller_${++id}`,Component:clientAction,action,..._getActionInfo(action,options.props),};return _updateUI(controller,{clearBreadcrumbs:options.clearBreadcrumbs,stackPosition:options.stackPosition,onClose:options.onClose,onActionReady:options.onActionReady,noEmptyTransition:options.noEmptyTransition,});}else{const next=await clientAction(env,action);if(next){return doAction(next,options);}}}
function _executeReportClientAction(action,options){const props=Object.assign({},options.props,{data:action.data,display_name:action.display_name,name:action.name,report_file:action.report_file,report_name:action.report_name,report_url:getReportUrl(action,"html",env.services.user.context),context:Object.assign({},action.context),});const controller={jsId:`controller_${++id}`,Component:ReportAction,action,..._getActionInfo(action,props),};return _updateUI(controller,{clearBreadcrumbs:options.clearBreadcrumbs,stackPosition:options.stackPosition,onClose:options.onClose,});}
async function _executeReportAction(action,options){const handlers=registry.category("ir.actions.report handlers").getAll();for(const handler of handlers){const result=await handler(action,options,env);if(result){return result;}}
if(action.report_type==="qweb-html"){return _executeReportClientAction(action,options);}else if(action.report_type==="qweb-pdf"||action.report_type==="qweb-text"){const type=action.report_type.slice(5);let success,message;env.services.ui.block();try{const downloadContext={...env.services.user.context};if(action.context){Object.assign(downloadContext,action.context);}
({success,message}=await downloadReport(env.services.rpc,action,type,downloadContext));}finally{env.services.ui.unblock();}
if(message){env.services.notification.add(message,{sticky:true,title:_t("Report"),});}
if(!success){return _executeReportClientAction(action,options);}
const{onClose}=options;if(action.close_on_report_download){return doAction({type:"ir.actions.act_window_close"},{onClose});}else if(onClose){onClose();}}else{console.error(`The ActionManager can't handle reports of type ${action.report_type}`,action);}}
async function _executeServerAction(action,options){const runProm=env.services.rpc("/web/action/run",{action_id:action.id,context:makeContext([env.services.user.context,action.context]),});let nextAction=await keepLast.add(runProm);if(nextAction.help){nextAction.help=markup(nextAction.help);}
nextAction=nextAction||{type:"ir.actions.act_window_close"};return doAction(nextAction,options);}
async function _executeCloseAction(params={}){let onClose;if(dialog){onClose=_removeDialog();}else{onClose=params.onClose;}
if(onClose){await onClose(params.onCloseInfo);}
return dialogCloseProm;}
async function doAction(actionRequest,options={}){const actionProm=_loadAction(actionRequest,options.additionalContext);let action=await keepLast.add(actionProm);action=_preprocessAction(action,options.additionalContext);options.clearBreadcrumbs=action.target==="main"||options.clearBreadcrumbs;switch(action.type){case"ir.actions.act_url":return _executeActURLAction(action,options);case"ir.actions.act_window":if(action.target!=="new"){const canProceed=await clearUncommittedChanges(env);if(!canProceed){return new Promise(()=>{});}}
return _executeActWindowAction(action,options);case"ir.actions.act_window_close":return _executeCloseAction({onClose:options.onClose,onCloseInfo:action.infos});case"ir.actions.client":return _executeClientAction(action,options);case"ir.actions.report":return _executeReportAction(action,options);case"ir.actions.server":return _executeServerAction(action,options);default:{const handler=actionHandlersRegistry.get(action.type,null);if(handler!==null){return handler({env,action,options});}
throw new Error(`The ActionManager service can't handle actions of type ${action.type}`);}}}
async function doActionButton(params){let action;const context=makeContext([params.context,params.buttonContext]);if(params.special){action={type:"ir.actions.act_window_close",infos:{special:true}};}else if(params.type==="object"){let args=params.resId?[[params.resId]]:[params.resIds];if(params.args){let additionalArgs;try{additionalArgs=JSON.parse(params.args.replace(/'/g,'"'));}catch{browser.console.error("Could not JSON.parse arguments",params.args);}
args=args.concat(additionalArgs);}
const callProm=env.services.rpc("/web/dataset/call_button",{args,kwargs:{context},method:params.name,model:params.resModel,});action=await keepLast.add(callProm);action=action&&typeof action==="object"?action:{type:"ir.actions.act_window_close"};if(action.help){action.help=markup(action.help);}}else if(params.type==="action"){context.active_id=params.resId||null;context.active_ids=params.resIds;context.active_model=params.resModel;action=await keepLast.add(_loadAction(params.name,context));}else{throw new InvalidButtonParamsError("Missing type for doActionButton request");}
const currentCtx={};for(const key in params.context){if(key.match(CTX_KEY_REGEX)===null){currentCtx[key]=params.context[key];}}
const activeCtx={active_model:params.resModel};if(params.resId){activeCtx.active_id=params.resId;activeCtx.active_ids=[params.resId];}
action.context=makeContext([currentCtx,params.buttonContext,activeCtx,action.context]);const effect=params.effect?evaluateExpr(params.effect):action.effect;const options={onClose:params.onClose};await doAction(action,options);if(params.close){await _executeCloseAction();}
if(effect){env.services.effect.add(effect);}}
async function switchView(viewType,props={}){await keepLast.add(Promise.resolve());if(dialog){return;}
const controller=controllerStack[controllerStack.length-1];const view=_getView(viewType);if(!view){throw new ViewNotFoundError(_t("No view of type '%s' could be found in the current action.",viewType));}
const newController=controller.action.controllers[viewType]||{jsId:`controller_${++id}`,Component:View,action:controller.action,views:controller.views,view,};const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
Object.assign(newController,_getViewInfo(view,controller.action,controller.views,props));controller.action.controllers[viewType]=newController;let index;if(view.multiRecord){index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId);index=index>-1?index:controllerStack.length-1;}else{index=controllerStack.findIndex((ct)=>ct.action.jsId===controller.action.jsId&&!ct.view.multiRecord);index=index>-1?index:controllerStack.length;}
return _updateUI(newController,{index});}
async function restore(jsId){await keepLast.add(Promise.resolve());let index;if(!jsId){index=controllerStack.length-2;}else{index=controllerStack.findIndex((controller)=>controller.jsId===jsId);}
if(index<0){const msg=jsId?"Invalid controller to restore":"No controller to restore";throw new ControllerNotFoundError(msg);}
const canProceed=await clearUncommittedChanges(env);if(!canProceed){return;}
const controller=controllerStack[index];if(controller.action.type==="ir.actions.act_window"){const{action,exportedState,view,views}=controller;const props={...controller.props};if(exportedState&&"resId"in exportedState){props.resId=exportedState.resId;}
Object.assign(controller,_getViewInfo(view,action,views,props));}
return _updateUI(controller,{index});}
async function loadState(){const switchViewParams=_getSwitchViewParams();if(switchViewParams){const{viewType,props}=switchViewParams;const view=_getView(viewType);if(view){await switchView(viewType,props);return true;}}else{const actionParams=_getActionParams();if(actionParams){const{actionRequest,options}=actionParams;await doAction(actionRequest,options);return true;}}
return false;}
function pushState(controller){const newState={};const action=controller.action;if(action.id){newState.action=action.id;}else if(action.type==="ir.actions.client"){newState.action=action.tag;}
if(action.context){const activeId=action.context.active_id;if(activeId){newState.active_id=activeId;}
const activeIds=action.context.active_ids;if(activeIds&&!(activeIds.length===1&&activeIds[0]===activeId)){newState.active_ids=activeIds.join(",");}}
if(action.type==="ir.actions.act_window"){const props=controller.props;newState.model=props.resModel;newState.view_type=props.type;newState.id=props.resId||(props.state&&props.state.resId)||undefined;}
env.services.router.pushState(newState,{replace:true});}
return{doAction,doActionButton,switchView,restore,loadState,async loadAction(actionRequest,context){const action=await _loadAction(actionRequest,context);return _preprocessAction(action,context);},get currentController(){return _getCurrentController();},};}
const actionService=__exports.actionService={dependencies:["effect","localization","notification","router","rpc","title","ui","user","dialog",],start(env){return makeActionManager(env);},};registry.category("services").add("action",actionService);return __exports;});;

/* /web/static/src/webclient/actions/client_actions.js */
odoo.define('@web/webclient/actions/client_actions',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/browser/router_service','@web/core/registry','@web/core/utils/hooks','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{routeToUrl}=require("@web/core/browser/router_service");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{escape,sprintf}=require("@web/core/utils/strings");const{Component,markup,onMounted,xml}=require("@odoo/owl");__exports.displayNotificationAction=displayNotificationAction;function displayNotificationAction(env,action){const params=action.params||{};const options={className:params.className||"",sticky:params.sticky||false,title:params.title,type:params.type||"info",};const links=(params.links||[]).map((link)=>{return`<a href="${escape(link.url)}" target="_blank">${escape(link.label)}</a>`;});const message=markup(sprintf(escape(params.message),...links));env.services.notification.add(message,options);return params.next;}
registry.category("actions").add("display_notification",displayNotificationAction);class InvalidAction extends Component{setup(){this.notification=useService("notification");onMounted(this.onMounted);}
onMounted(){const message=_t("No action with id '%s' could be found",this.props.actionId);this.notification.add(message,{type:"danger"});}}
InvalidAction.template=xml`<div class="o_invalid_action"></div>`;registry.category("actions").add("invalid_action",InvalidAction);function reload(env,action){const{menu_id,action_id}=action.params||{};const{router}=env.services;const route={...router.current};if(menu_id||action_id){route.hash={};if(menu_id){route.hash.menu_id=menu_id;}
if(action_id){route.hash.action=action_id;}}
route.search={...route.search};if("reload"in route.search){delete route.search.reload;}else{route.search.reload=true;}
const url=browser.location.origin+routeToUrl(route);env.bus.trigger("CLEAR-CACHES");browser.location.assign(url);}
registry.category("actions").add("reload",reload);async function home(env){await new Promise((resolve)=>{const waitForServer=(delay)=>{browser.setTimeout(async()=>{env.services.rpc("/web/webclient/version_info",{}).then(resolve).catch(()=>waitForServer(250));},delay);};waitForServer(1000);});const url="/"+(browser.location.search||"");browser.location.assign(url);}
registry.category("actions").add("home",home);async function reloadContext(env,action){await env.services.rpc("/web/session/get_session_info");reload(env,action);}
registry.category("actions").add("reload_context",reloadContext);async function softReload(env,action){const controller=env.services.action.currentController;if(controller){await env.services.action.restore(controller.jsId);}}
registry.category("actions").add("soft_reload",softReload);return __exports;});;

/* /web/static/src/webclient/actions/debug_items.js */
odoo.define('@web/webclient/actions/debug_items',['@web/core/l10n/translation','@web/core/debug/debug_utils','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{editModelDebug}=require("@web/core/debug/debug_utils");const{registry}=require("@web/core/registry");const debugRegistry=registry.category("debug");function actionSeparator({action}){if(!action.id||!action.res_model){return null;}
return{type:"separator",sequence:100,};}
function accessSeparator({accessRights,action}){const{canSeeModelAccess,canSeeRecordRules}=accessRights;if(!action.res_model||(!canSeeModelAccess&&!canSeeRecordRules)){return null;}
return{type:"separator",sequence:200,};}
function editAction({action,env}){if(!action.id){return null;}
const description=_t("Edit Action");return{type:"item",description,callback:()=>{editModelDebug(env,description,action.type,action.id);},sequence:110,};}
function viewFields({action,env}){if(!action.res_model){return null;}
const description=_t("View Fields");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.fields",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:120,};}
function manageFilters({action,env}){if(!action.res_model){return null;}
const description=_t("Manage Filters");return{type:"item",description,callback:()=>{env.services.action.doAction({res_model:"ir.filters",name:description,views:[[false,"list"],[false,"form"],],type:"ir.actions.act_window",context:{search_default_my_filters:true,search_default_model_id:action.res_model,},});},sequence:130,};}
function viewAccessRights({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeModelAccess){return null;}
const description=_t("View Access Rights");return{type:"item",description,callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.model.access",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:210,};}
function viewRecordRules({accessRights,action,env}){if(!action.res_model||!accessRights.canSeeRecordRules){return null;}
const description=_t("Model Record Rules");return{type:"item",description:_t("View Record Rules"),callback:async()=>{const modelId=(await env.services.orm.search("ir.model",[["model","=",action.res_model]],{limit:1,}))[0];env.services.action.doAction({res_model:"ir.rule",name:description,views:[[false,"list"],[false,"form"],],domain:[["model_id","=",modelId]],type:"ir.actions.act_window",context:{default_model_id:modelId,},});},sequence:220,};}
debugRegistry.category("action").add("actionSeparator",actionSeparator).add("editAction",editAction).add("viewFields",viewFields).add("manageFilters",manageFilters).add("accessSeparator",accessSeparator).add("viewAccessRights",viewAccessRights).add("viewRecordRules",viewRecordRules);return __exports;});;

/* /web/static/src/webclient/barcode/ZXingBarcodeDetector.js */
odoo.define('@web/webclient/barcode/ZXingBarcodeDetector',[],function(require){'use strict';let __exports={};__exports.buildZXingBarcodeDetector=buildZXingBarcodeDetector;function buildZXingBarcodeDetector(ZXing){const ZXingFormats=new Map([["aztec",ZXing.BarcodeFormat.AZTEC],["code_39",ZXing.BarcodeFormat.CODE_39],["code_128",ZXing.BarcodeFormat.CODE_128],["data_matrix",ZXing.BarcodeFormat.DATA_MATRIX],["ean_8",ZXing.BarcodeFormat.EAN_8],["ean_13",ZXing.BarcodeFormat.EAN_13],["itf",ZXing.BarcodeFormat.ITF],["pdf417",ZXing.BarcodeFormat.PDF_417],["qr_code",ZXing.BarcodeFormat.QR_CODE],["upc_a",ZXing.BarcodeFormat.UPC_A],["upc_e",ZXing.BarcodeFormat.UPC_E],]);const allSupportedFormats=Array.from(ZXingFormats.keys());class ZXingBarcodeDetector{constructor(opts={}){const formats=opts.formats||allSupportedFormats;const hints=new Map([[ZXing.DecodeHintType.POSSIBLE_FORMATS,formats.map((format)=>ZXingFormats.get(format)),],[ZXing.DecodeHintType.TRY_HARDER,true],]);this.reader=new ZXing.MultiFormatReader();this.reader.setHints(hints);}
async detect(video){if(!(video instanceof HTMLVideoElement)){throw new DOMException("imageDataFrom() requires an HTMLVideoElement","InvalidArgumentError");}
if(!isVideoElementReady(video)){throw new DOMException("HTMLVideoElement is not ready","InvalidStateError");}
const canvas=document.createElement("canvas");let barcodeArea;if(this.cropArea&&(this.cropArea.x||this.cropArea.y)){barcodeArea=this.cropArea;}else{barcodeArea={x:0,y:0,width:video.videoWidth,height:video.videoHeight,};}
canvas.width=barcodeArea.width;canvas.height=barcodeArea.height;const ctx=canvas.getContext("2d");ctx.drawImage(video,barcodeArea.x,barcodeArea.y,barcodeArea.width,barcodeArea.height,0,0,barcodeArea.width,barcodeArea.height);const luminanceSource=new ZXing.HTMLCanvasElementLuminanceSource(canvas);const binaryBitmap=new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));try{const result=this.reader.decode(binaryBitmap);const{resultPoints}=result;const boundingBox=DOMRectReadOnly.fromRect({x:resultPoints[0].x,y:resultPoints[0].y,height:Math.max(1,Math.abs(resultPoints[1].y-resultPoints[0].y)),width:Math.max(1,Math.abs(resultPoints[1].x-resultPoints[0].x)),});const cornerPoints=resultPoints;const format=Array.from(ZXingFormats).find(([k,val])=>val===result.getBarcodeFormat());const rawValue=result.getText();return[{boundingBox,cornerPoints,format,rawValue,},];}catch(err){if(err.name==="NotFoundException"){return[];}
throw err;}}
setCropArea(cropArea){this.cropArea=cropArea;}}
ZXingBarcodeDetector.getSupportedFormats=async()=>allSupportedFormats;return ZXingBarcodeDetector;}
const HAVE_NOTHING=0;const HAVE_METADATA=1;__exports.isVideoElementReady=isVideoElementReady;function isVideoElementReady(video){return![HAVE_NOTHING,HAVE_METADATA].includes(video.readyState);}
return __exports;});;

/* /web/static/src/webclient/barcode/barcode_scanner.js */
odoo.define('@web/webclient/barcode/barcode_scanner',['@web/core/browser/browser','@web/core/dialog/dialog','@web/core/utils/concurrency','@web/core/assets','@web/webclient/barcode/ZXingBarcodeDetector','@web/webclient/barcode/crop_overlay','@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Dialog}=require("@web/core/dialog/dialog");const{delay}=require("@web/core/utils/concurrency");const{loadJS}=require("@web/core/assets");const{isVideoElementReady,buildZXingBarcodeDetector}=require("@web/webclient/barcode/ZXingBarcodeDetector");const{CropOverlay}=require("@web/webclient/barcode/crop_overlay");const{Component,onMounted,onWillStart,onWillUnmount,useRef,useState}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const BarcodeDialog=__exports.BarcodeDialog=class BarcodeDialog extends Component{setup(){this.videoPreviewRef=useRef("videoPreview");this.interval=null;this.stream=null;this.detector=null;this.overlayInfo={};this.zoomRatio=1;this.state=useState({isReady:false,});onWillStart(async()=>{let DetectorClass;if("BarcodeDetector"in window){DetectorClass=BarcodeDetector;}else{await loadJS("/web/static/lib/zxing-library/zxing-library.js");DetectorClass=buildZXingBarcodeDetector(window.ZXing);}
const formats=await DetectorClass.getSupportedFormats();this.detector=new DetectorClass({formats});});onMounted(async()=>{const constraints={video:{facingMode:this.props.facingMode},audio:false,};try{this.stream=await browser.navigator.mediaDevices.getUserMedia(constraints);}catch(err){const errors={NotFoundError:_t("No device can be found."),NotAllowedError:_t("Odoo needs your authorization first."),};const errorMessage=_t("Could not start scanning. ")+(errors[err.name]||err.message);this.onError(new Error(errorMessage));return;}
this.videoPreviewRef.el.srcObject=this.stream;await this.isVideoReady();const{height,width}=getComputedStyle(this.videoPreviewRef.el);const divWidth=width.slice(0,-2);const divHeight=height.slice(0,-2);const tracks=this.stream.getVideoTracks();if(tracks.length){const[track]=tracks;const settings=track.getSettings();this.zoomRatio=Math.min(divWidth/settings.width,divHeight/settings.height);}
this.interval=setInterval(this.detectCode.bind(this),100);});onWillUnmount(()=>{clearInterval(this.interval);this.interval=null;if(this.stream){this.stream.getTracks().forEach((track)=>track.stop());this.stream=null;}});}
isZXingBarcodeDetector(){return this.detector&&this.detector.__proto__.constructor.name==="ZXingBarcodeDetector";}
async isVideoReady(){while(!isVideoElementReady(this.videoPreviewRef.el)){await delay(10);}
this.state.isReady=true;}
onResize(overlayInfo){this.overlayInfo=overlayInfo;if(this.isZXingBarcodeDetector()){this.detector.setCropArea(this.adaptValuesWithRatio(this.overlayInfo,true));}}
onResult(result){this.props.close();this.props.onResult(result);}
onError(error){this.props.close();this.props.onError(error);}
async detectCode(){try{const codes=await this.detector.detect(this.videoPreviewRef.el);for(const code of codes){if(!this.isZXingBarcodeDetector()&&this.overlayInfo.x&&this.overlayInfo.y){const{x,y,width,height}=this.adaptValuesWithRatio(code.boundingBox);if(x<this.overlayInfo.x||x+width>this.overlayInfo.x+this.overlayInfo.width||y<this.overlayInfo.y||y+height>this.overlayInfo.y+this.overlayInfo.height){continue;}}
this.onResult(code.rawValue);break;}}catch(err){this.onError(err);}}
adaptValuesWithRatio(object,dividerRatio=false){const newObject=Object.assign({},object);for(const key of Object.keys(newObject)){if(dividerRatio){newObject[key]/=this.zoomRatio;}else{newObject[key]*=this.zoomRatio;}}
return newObject;}}
Object.assign(BarcodeDialog,{components:{Dialog,CropOverlay,},template:"web.BarcodeDialog",});__exports.isBarcodeScannerSupported=isBarcodeScannerSupported;function isBarcodeScannerSupported(){return browser.navigator.mediaDevices&&browser.navigator.mediaDevices.getUserMedia;}
__exports.scanBarcode=scanBarcode;async function scanBarcode(env,facingMode="environment"){let res;let rej;const promise=new Promise((resolve,reject)=>{res=resolve;rej=reject;});env.services.dialog.add(BarcodeDialog,{facingMode,onResult:(result)=>res(result),onError:(error)=>rej(error),});return promise;}
return __exports;});;

/* /web/static/src/webclient/barcode/crop_overlay.js */
odoo.define('@web/webclient/barcode/crop_overlay',['@odoo/owl','@web/core/browser/browser','@web/core/utils/numbers'],function(require){'use strict';let __exports={};const{Component,useRef,onPatched}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{clamp}=require("@web/core/utils/numbers");const CropOverlay=__exports.CropOverlay=class CropOverlay extends Component{setup(){this.localStorageKey="o-barcode-scanner-overlay";this.cropContainerRef=useRef("crop-container");this.isMoving=false;this.boundaryOverlay={};this.relativePosition={x:0,y:0,};onPatched(()=>{this.setupCropRect();});}
setupCropRect(){if(!this.props.isReady){return;}
this.computeDefaultPoint();this.computeOverlayPosition();this.calculateAndSetTransparentRect();this.executeOnResizeCallback();}
boundPoint(pointValue,boundaryRect){return{x:clamp(pointValue.x,boundaryRect.left,boundaryRect.left+boundaryRect.width),y:clamp(pointValue.y,boundaryRect.top,boundaryRect.top+boundaryRect.height),};}
calculateAndSetTransparentRect(){const cropTransparentRect=this.getTransparentRec(this.relativePosition,this.boundaryOverlay);this.setCropValue(cropTransparentRect,this.relativePosition);}
computeOverlayPosition(){const cropOverlayElement=this.cropContainerRef.el.querySelector(".o_crop_overlay");this.boundaryOverlay=cropOverlayElement.getBoundingClientRect();}
executeOnResizeCallback(){const transparentRec=this.getTransparentRec(this.relativePosition,this.boundaryOverlay);browser.localStorage.setItem(this.localStorageKey,JSON.stringify(transparentRec));this.props.onResize({...transparentRec,width:this.boundaryOverlay.width-2*transparentRec.x,height:this.boundaryOverlay.height-2*transparentRec.y,});}
computeDefaultPoint(){const firstChildComputedStyle=getComputedStyle(this.cropContainerRef.el.firstChild);const elementWidth=firstChildComputedStyle.width.slice(0,-2);const elementHeight=firstChildComputedStyle.height.slice(0,-2);const stringSavedPoint=browser.localStorage.getItem(this.localStorageKey);if(stringSavedPoint){const savedPoint=JSON.parse(stringSavedPoint);this.relativePosition={x:clamp(savedPoint.x,0,elementWidth),y:clamp(savedPoint.y,0,elementHeight),};}else{const stepWidth=elementWidth/10;const width=stepWidth*8;const height=width/4;const startY=elementHeight/2-height/2;this.relativePosition={x:stepWidth+width,y:startY+height,};}}
getTransparentRec(point,rect){const middleX=rect.width/2;const middleY=rect.height/2;const newDeltaX=Math.abs(point.x-middleX);const newDeltaY=Math.abs(point.y-middleY);return{x:middleX-newDeltaX,y:middleY-newDeltaY,};}
setCropValue(point,iconPoint){if(!iconPoint){iconPoint=point;}
this.cropContainerRef.el.style.setProperty("--o-crop-x",`${point.x}px`);this.cropContainerRef.el.style.setProperty("--o-crop-y",`${point.y}px`);this.cropContainerRef.el.style.setProperty("--o-crop-icon-x",`${iconPoint.x}px`);this.cropContainerRef.el.style.setProperty("--o-crop-icon-y",`${iconPoint.y}px`);}
pointerDown(event){event.preventDefault();if(event.target.matches(".o_crop_icon")){this.computeOverlayPosition();this.isMoving=true;}}
pointerMove(event){if(!this.isMoving){return;}
let eventPosition;if(event.touches&&event.touches.length){eventPosition=event.touches[0];}else{eventPosition=event;}
const{clientX,clientY}=eventPosition;const restrictedPosition=this.boundPoint({x:clientX,y:clientY,},this.boundaryOverlay);this.relativePosition={x:restrictedPosition.x-this.boundaryOverlay.left,y:restrictedPosition.y-this.boundaryOverlay.top,};this.calculateAndSetTransparentRect(this.relativePosition);}
pointerUp(event){this.isMoving=false;this.executeOnResizeCallback();}}
CropOverlay.template="web.CropOverlay";CropOverlay.props={onResize:Function,isReady:Boolean,slots:{type:Object,shape:{default:{},},},};return __exports;});;

/* /web/static/src/webclient/burger_menu/burger_menu.js */
odoo.define('@web/webclient/burger_menu/burger_menu',['@web/core/registry','@web/core/transition','@web/core/utils/hooks','@web/webclient/burger_menu/burger_user_menu/burger_user_menu','@web/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Transition}=require("@web/core/transition");const{useService}=require("@web/core/utils/hooks");const{BurgerUserMenu}=require("@web/webclient/burger_menu/burger_user_menu/burger_user_menu");const{MobileSwitchCompanyMenu}=require("@web/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu");const{Component,onMounted,useState}=require("@odoo/owl");const SWIPE_ACTIVATION_THRESHOLD=100;const BurgerMenu=__exports.BurgerMenu=class BurgerMenu extends Component{setup(){this.company=useService("company");this.user=useService("user");this.menuRepo=useService("menu");this.state=useState({isUserMenuOpened:false,isBurgerOpened:false,});this.swipeStartX=null;onMounted(()=>{this.env.bus.addEventListener("HOME-MENU:TOGGLED",()=>{this._closeBurger();});this.env.bus.addEventListener("ACTION_MANAGER:UPDATE",({detail:req})=>{if(req.id){this._closeBurger();}});});}
get currentApp(){return this.menuRepo.getCurrentApp();}
get currentAppSections(){return((this.currentApp&&this.menuRepo.getMenuAsTree(this.currentApp.id).childrenTree)||[]);}
get isUserMenuUnfolded(){return!this.isUserMenuTogglable||this.state.isUserMenuOpened;}
get isUserMenuTogglable(){return this.currentApp&&this.currentAppSections.length>0;}
_closeBurger(){this.state.isUserMenuOpened=false;this.state.isBurgerOpened=false;}
_openBurger(){this.state.isBurgerOpened=true;}
_toggleUserMenu(){this.state.isUserMenuOpened=!this.state.isUserMenuOpened;}
async _onMenuClicked(menu){await this.menuRepo.selectMenu(menu);this._closeBurger();}
_onSwipeStart(ev){this.swipeStartX=ev.changedTouches[0].clientX;}
_onSwipeEnd(ev){if(!this.swipeStartX){return;}
const deltaX=ev.changedTouches[0].clientX-this.swipeStartX;if(deltaX<SWIPE_ACTIVATION_THRESHOLD){return;}
this._closeBurger();this.swipeStartX=null;}}
BurgerMenu.template="web.BurgerMenu";BurgerMenu.components={BurgerUserMenu,MobileSwitchCompanyMenu,Transition,};BurgerMenu.props={};const systrayItem={Component:BurgerMenu,};registry.category("systray").add("burger_menu",systrayItem,{sequence:0});return __exports;});;

/* /web/static/src/webclient/burger_menu/burger_user_menu/burger_user_menu.js */
odoo.define('@web/webclient/burger_menu/burger_user_menu/burger_user_menu',['@web/webclient/user_menu/user_menu'],function(require){'use strict';let __exports={};const{UserMenu}=require("@web/webclient/user_menu/user_menu");const BurgerUserMenu=__exports.BurgerUserMenu=class BurgerUserMenu extends UserMenu{_onItemClicked(callback){callback();}}
BurgerUserMenu.template="web.BurgerUserMenu";return __exports;});;

/* /web/static/src/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu.js */
odoo.define('@web/webclient/burger_menu/mobile_switch_company_menu/mobile_switch_company_menu',['@web/webclient/switch_company_menu/switch_company_menu'],function(require){'use strict';let __exports={};const{SwitchCompanyMenu,SwitchCompanyItem}=require("@web/webclient/switch_company_menu/switch_company_menu");const MobileSwitchCompanyItem=__exports.MobileSwitchCompanyItem=class MobileSwitchCompanyItem extends SwitchCompanyItem{}
MobileSwitchCompanyItem.components={...SwitchCompanyItem,MobileSwitchCompanyItem}
MobileSwitchCompanyItem.template="web.MobileSwitchCompanyItem";const MobileSwitchCompanyMenu=__exports.MobileSwitchCompanyMenu=class MobileSwitchCompanyMenu extends SwitchCompanyMenu{}
MobileSwitchCompanyMenu.template="web.MobileSwitchCompanyMenu";MobileSwitchCompanyMenu.components={...SwitchCompanyMenu,MobileSwitchCompanyItem}
return __exports;});;

/* /web/static/src/webclient/clickbot/clickbot_loader.js */
odoo.define('@web/webclient/clickbot/clickbot_loader',['@web/core/l10n/translation','@web/core/assets','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{loadBundle}=require("@web/core/assets");const{registry}=require("@web/core/registry");__exports.startClickEverywhere=startClickEverywhere;async function startClickEverywhere(xmlId,appsMenusOnly){await loadBundle("web.assets_clickbot");window.clickEverywhere(xmlId,appsMenusOnly);}
__exports.runClickTestItem=runClickTestItem;function runClickTestItem({env}){return{type:"item",description:_t("Run Click Everywhere Test"),callback:()=>{startClickEverywhere();},sequence:30,};}
__exports[Symbol.for("default")]={startClickEverywhere,runClickTestItem,};registry.category("debug").category("default").add("runClickTestItem",runClickTestItem);return __exports;});;

/* /web/static/src/webclient/company_service.js */
odoo.define('@web/webclient/company_service',['@web/core/browser/browser','@web/core/registry','@web/session','@web/core/orm_service','@web/core/browser/cookie'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{UPDATE_METHODS}=require("@web/core/orm_service");const{cookie}=require("@web/core/browser/cookie");const CIDS_HASH_SEPARATOR="-";function parseCompanyIds(cids,separator=","){if(typeof cids==="string"){return cids.split(separator).map(Number);}else if(typeof cids==="number"){return[cids];}
return[];}
function formatCompanyIds(cids,separator=","){return cids.join(separator);}
function computeActiveCompanyIds(cids){const{user_companies}=session;let activeCompanyIds=cids||[];const availableCompaniesFromSession=user_companies.allowed_companies;const notAllowedCompanies=activeCompanyIds.filter((id)=>!(id in availableCompaniesFromSession));if(!activeCompanyIds.length||notAllowedCompanies.length){activeCompanyIds=[user_companies.current_company];}
return activeCompanyIds;}
function getCompanyIdsFromBrowser(hash){let cids;if("cids"in hash){let separator=CIDS_HASH_SEPARATOR;if(typeof hash.cids==="string"&&!hash.cids.includes(CIDS_HASH_SEPARATOR)){separator=",";}
cids=parseCompanyIds(hash.cids,separator);}else if(cookie.get("cids")){cids=parseCompanyIds(cookie.get("cids"));}
return cids||[];}
const errorHandlerRegistry=registry.category("error_handlers");function accessErrorHandler(env,error,originalError){const router=env.services.router;const hash=router.current.hash;if(!hash._company_switching){return false;}
if(originalError?.exceptionName==="odoo.exceptions.AccessError"){const{model,id,view_type}=hash;if(!model||!id||view_type!=="form"){return false;}
router.pushState({view_type:undefined});browser.setTimeout(()=>{env.bus.trigger("ROUTE_CHANGE");});if(error.event){error.event.preventDefault();}
return true;}
return false;}
const companyService=__exports.companyService={dependencies:["user","router","action"],start(env,{user,router,action}){errorHandlerRegistry.add("accessErrorHandlerCompanies",accessErrorHandler);const allowedCompanies=session.user_companies.allowed_companies;const disallowedAncestorCompanies=session.user_companies.disallowed_ancestor_companies;const allowedCompaniesWithAncestors={...allowedCompanies,...disallowedAncestorCompanies,};const activeCompanyIds=computeActiveCompanyIds(getCompanyIdsFromBrowser(router.current.hash));const cidsHash=formatCompanyIds(activeCompanyIds,CIDS_HASH_SEPARATOR);router.replaceState({cids:cidsHash},{lock:true});cookie.set("cids",formatCompanyIds(activeCompanyIds));user.updateContext({allowed_company_ids:activeCompanyIds});env.bus.addEventListener("RPC:RESPONSE",(ev)=>{const{data,error}=ev.detail;const{model,method}=data.params;if(!error&&model==="res.company"&&UPDATE_METHODS.includes(method)){if(!browser.localStorage.getItem("running_tour")){action.doAction("reload_context");}}});return{allowedCompanies,allowedCompaniesWithAncestors,disallowedAncestorCompanies,get activeCompanyIds(){return activeCompanyIds.slice();},get currentCompany(){return allowedCompanies[activeCompanyIds[0]];},getCompany(companyId){return allowedCompaniesWithAncestors[companyId];},setCompanies(companyIds,includeChildCompanies=true){const newCompanyIds=companyIds.length?companyIds:[activeCompanyIds[0]];function addCompanies(companyIds){for(const companyId of companyIds){if(!newCompanyIds.includes(companyId)){newCompanyIds.push(companyId);addCompanies(allowedCompanies[companyId].child_ids);}}}
if(includeChildCompanies){addCompanies(companyIds.flatMap((companyId)=>allowedCompanies[companyId].child_ids));}
const cidsHash=formatCompanyIds(newCompanyIds,CIDS_HASH_SEPARATOR);router.pushState({cids:cidsHash},{lock:true});router.pushState({_company_switching:true});cookie.set("cids",formatCompanyIds(newCompanyIds));browser.setTimeout(()=>browser.location.reload());},};},};registry.category("services").add("company",companyService);return __exports;});;

/* /web/static/src/webclient/currency_service.js */
odoo.define('@web/webclient/currency_service',['@web/core/registry','@web/core/currency','@web/core/orm_service'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{currencies}=require("@web/core/currency");const{UPDATE_METHODS}=require("@web/core/orm_service");const currencyService=__exports.currencyService={dependencies:["rpc"],start(env,{rpc}){async function reloadCurrencies(){const result=await rpc("/web/session/get_session_info");for(const k in currencies){delete currencies[k];}
Object.assign(currencies,result?.currencies);}
env.bus.addEventListener("RPC:RESPONSE",(ev)=>{const{data,error}=ev.detail;const{model,method}=data.params;if(!error&&model==="res.currency"&&UPDATE_METHODS.includes(method)){reloadCurrencies();}});},};registry.category("services").add("currency",currencyService);return __exports;});;

/* /web/static/src/webclient/debug_items.js */
odoo.define('@web/webclient/debug_items',['@web/core/l10n/translation','@web/core/registry','@web/core/browser/browser','@web/views/view_dialogs/select_create_dialog'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{SelectCreateDialog}=require("@web/views/view_dialogs/select_create_dialog");function runJSTestsItem({env}){const runTestsURL=browser.location.origin+"/web/tests?debug=assets";return{type:"item",description:_t("Run JS Tests"),href:runTestsURL,callback:()=>{browser.open(runTestsURL);},sequence:10,};}
function runJSTestsMobileItem({env}){const runTestsMobileURL=browser.location.origin+"/web/tests/mobile?debug=assets";return{type:"item",description:_t("Run JS Mobile Tests"),href:runTestsMobileURL,callback:()=>{browser.open(runTestsMobileURL);},sequence:20,};}
__exports.openViewItem=openViewItem;function openViewItem({env}){async function onSelected(records){const views=await env.services.orm.searchRead("ir.ui.view",[["id","=",records[0]]],["name","model","type"],{limit:1});const view=views[0];view.type=view.type==="tree"?"list":view.type;env.services.action.doAction({type:"ir.actions.act_window",name:view.name,res_model:view.model,views:[[view.id,view.type]],});}
return{type:"item",description:_t("Open View"),callback:()=>{env.services.dialog.add(SelectCreateDialog,{resModel:"ir.ui.view",title:_t("Select a view"),multiSelect:false,domain:[["type","!=","qweb"],["type","!=","search"],],onSelected,});},sequence:40,};}
function globalSeparator(){return{type:"separator",sequence:400,};}
registry.category("debug").category("default").add("runJSTestsItem",runJSTestsItem).add("runJSTestsMobileItem",runJSTestsMobileItem).add("globalSeparator",globalSeparator).add("openViewItem",openViewItem);return __exports;});;

/* /web/static/src/webclient/loading_indicator/loading_indicator.js */
odoo.define('@web/webclient/loading_indicator/loading_indicator',['@web/core/browser/browser','@web/core/registry','@web/core/utils/hooks','@web/core/transition','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{Transition}=require("@web/core/transition");const{Component,useState}=require("@odoo/owl");const LoadingIndicator=__exports.LoadingIndicator=class LoadingIndicator extends Component{setup(){this.uiService=useService("ui");this.state=useState({count:0,show:false,});this.rpcIds=new Set();this.shouldUnblock=false;this.startShowTimer=null;this.blockUITimer=null;useBus(this.env.bus,"RPC:REQUEST",this.requestCall);useBus(this.env.bus,"RPC:RESPONSE",this.responseCall);}
requestCall({detail}){if(detail.settings.silent){return;}
if(this.state.count===0){browser.clearTimeout(this.startShowTimer);this.startShowTimer=browser.setTimeout(()=>{if(this.state.count){this.state.show=true;}},250);}
this.rpcIds.add(detail.data.id);this.state.count++;}
responseCall({detail}){if(detail.settings.silent){return;}
this.rpcIds.delete(detail.data.id);this.state.count=this.rpcIds.size;if(this.state.count===0){browser.clearTimeout(this.startShowTimer);browser.clearTimeout(this.blockUITimer);this.state.show=false;if(this.shouldUnblock){this.uiService.unblock();this.shouldUnblock=false;}}}}
LoadingIndicator.template="web.LoadingIndicator";LoadingIndicator.components={Transition};LoadingIndicator.props={};registry.category("main_components").add("LoadingIndicator",{Component:LoadingIndicator,});return __exports;});;

/* /web/static/src/webclient/menus/menu_helpers.js */
odoo.define('@web/webclient/menus/menu_helpers',[],function(require){'use strict';let __exports={};function traverseMenuTree(tree,cb,parents=[]){cb(tree,parents);tree.childrenTree.forEach((c)=>traverseMenuTree(c,cb,parents.concat([tree])));}
__exports.computeAppsAndMenuItems=computeAppsAndMenuItems;function computeAppsAndMenuItems(menuTree){const apps=[];const menuItems=[];traverseMenuTree(menuTree,(menuItem,parents)=>{if(!menuItem.id||!menuItem.actionID){return;}
const isApp=menuItem.id===menuItem.appID;const item={parents:parents.slice(1).map((p)=>p.name).join(" / "),label:menuItem.name,id:menuItem.id,xmlid:menuItem.xmlid,actionID:menuItem.actionID,appID:menuItem.appID,};if(isApp){if(menuItem.webIconData){item.webIconData=menuItem.webIconData;}else{const[iconClass,color,backgroundColor]=(menuItem.webIcon||"").split(",");if(backgroundColor!==undefined){item.webIcon={iconClass,color,backgroundColor};}else{item.webIconData="/web_enterprise/static/img/default_icon_app.png";}}}else{item.menuID=parents[1].id;}
if(isApp){apps.push(item);}else{menuItems.push(item);}});return{apps,menuItems};}
__exports.reorderApps=reorderApps;function reorderApps(apps,order){apps.sort((a,b)=>{const aIndex=order.indexOf(a.xmlid);const bIndex=order.indexOf(b.xmlid);if(aIndex===-1&&bIndex===-1){return apps.indexOf(a)-apps.indexOf(b);}
if(aIndex===-1){return-1;}
if(bIndex===-1){return 1;}
return aIndex-bIndex;});}
return __exports;});;

/* /web/static/src/webclient/menus/menu_providers.js */
odoo.define('@web/webclient/menus/menu_providers',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/search','@web/webclient/menus/menu_helpers','@web/core/commands/command_palette','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{fuzzyLookup}=require("@web/core/utils/search");const{computeAppsAndMenuItems}=require("@web/webclient/menus/menu_helpers");const{DefaultCommandItem}=require("@web/core/commands/command_palette");const{Component}=require("@odoo/owl");class AppIconCommand extends Component{}
AppIconCommand.template="web.AppIconCommand";AppIconCommand.props={webIconData:{type:String,optional:true},webIcon:{type:Object,optional:true},...DefaultCommandItem.props,};const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("apps",{namespace:"/"},{sequence:10});commandCategoryRegistry.add("menu_items",{namespace:"/"},{sequence:20});const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("/",{emptyMessage:_t("No menu found"),name:_t("menus"),placeholder:_t("Search for a menu..."),});const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("menu",{namespace:"/",async provide(env,options){const result=[];const menuService=env.services.menu;let{apps,menuItems}=computeAppsAndMenuItems(menuService.getMenuAsTree("root"));if(options.searchValue!==""){apps=fuzzyLookup(options.searchValue,apps,(menu)=>menu.label);fuzzyLookup(options.searchValue,menuItems,(menu)=>(menu.parents+" / "+menu.label).split("/").reverse().join("/")).forEach((menu)=>{result.push({action(){menuService.selectMenu(menu);},category:"menu_items",name:menu.parents+" / "+menu.label,href:menu.href||`#menu_id=${menu.id}&amp;action_id=${menu.actionID}`,});});}
apps.forEach((menu)=>{const props={};if(menu.webIconData){const prefix=menu.webIconData.startsWith("P")?"data:image/svg+xml;base64,":"data:image/png;base64,";props.webIconData=menu.webIconData.startsWith("data:image")?menu.webIconData:prefix+menu.webIconData.replace(/\s/g,"");}else{props.webIcon=menu.webIcon;}
result.push({Component:AppIconCommand,action(){menuService.selectMenu(menu);},category:"apps",name:menu.label,href:menu.href||`#menu_id=${menu.id}&amp;action_id=${menu.actionID}`,props,});});return result;},});return __exports;});;

/* /web/static/src/webclient/menus/menu_service.js */
odoo.define('@web/webclient/menus/menu_service',['@web/core/browser/browser','@web/core/registry','@web/session'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const loadMenusUrl=`/web/webclient/load_menus`;function makeFetchLoadMenus(){const cacheHashes=session.cache_hashes;let loadMenusHash=cacheHashes.load_menus||new Date().getTime().toString();return async function fetchLoadMenus(reload){if(reload){loadMenusHash=new Date().getTime().toString();}else if(odoo.loadMenusPromise){return odoo.loadMenusPromise;}
const res=await browser.fetch(`${loadMenusUrl}/${loadMenusHash}`);if(!res.ok){throw new Error("Error while fetching menus");}
return res.json();};}
function makeMenus(env,menusData,fetchLoadMenus){let currentAppId;function _getMenu(menuId){return menusData[menuId];}
function _updateURL(menuId){env.services.router.pushState({menu_id:menuId},{lock:true});}
function _setCurrentMenu(menu,updateURL=true){menu=typeof menu==="number"?_getMenu(menu):menu;if(menu&&menu.appID!==currentAppId){currentAppId=menu.appID;env.bus.trigger("MENUS:APP-CHANGED");if(updateURL){_updateURL(menu.id);}}}
return{getAll(){return Object.values(menusData);},getApps(){return this.getMenu("root").children.map((mid)=>this.getMenu(mid));},getMenu:_getMenu,getCurrentApp(){if(!currentAppId){return;}
return this.getMenu(currentAppId);},getMenuAsTree(menuID){const menu=this.getMenu(menuID);if(!menu.childrenTree){menu.childrenTree=menu.children.map((mid)=>this.getMenuAsTree(mid));}
return menu;},async selectMenu(menu){menu=typeof menu==="number"?this.getMenu(menu):menu;if(!menu.actionID){return;}
await env.services.action.doAction(menu.actionID,{clearBreadcrumbs:true,onActionReady:()=>{_setCurrentMenu(menu,false);},});_updateURL(menu.id);},setCurrentMenu:(menu)=>_setCurrentMenu(menu),async reload(){if(fetchLoadMenus){menusData=await fetchLoadMenus(true);env.bus.trigger("MENUS:APP-CHANGED");}},};}
const menuService=__exports.menuService={dependencies:["action","router"],async start(env){const fetchLoadMenus=makeFetchLoadMenus();const menusData=await fetchLoadMenus();return makeMenus(env,menusData,fetchLoadMenus);},};registry.category("services").add("menu",menuService);return __exports;});;

/* /web/static/src/webclient/navbar/navbar.js */
odoo.define('@web/webclient/navbar/navbar',['@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/utils/hooks','@web/core/registry','@web/core/utils/timing','@web/core/utils/components','@odoo/owl'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{debounce}=require("@web/core/utils/timing");const{ErrorHandler}=require("@web/core/utils/components");const{Component,onWillDestroy,useExternalListener,useEffect,useRef,onWillUnmount,}=require("@odoo/owl");const systrayRegistry=registry.category("systray");const getBoundingClientRect=Element.prototype.getBoundingClientRect;class NavBarDropdownItem extends DropdownItem{}
NavBarDropdownItem.template="web.NavBar.DropdownItem";NavBarDropdownItem.props={...DropdownItem.props,style:{type:String,optional:true},};const MenuDropdown=__exports.MenuDropdown=class MenuDropdown extends Dropdown{setup(){super.setup();useEffect(()=>{if(this.props.xmlid){this.togglerRef.el.dataset.menuXmlid=this.props.xmlid;}},()=>[]);}}
MenuDropdown.props.xmlid={type:String,optional:true,};const NavBar=__exports.NavBar=class NavBar extends Component{setup(){this.currentAppSectionsExtra=[];this.actionService=useService("action");this.menuService=useService("menu");this.root=useRef("root");this.appSubMenus=useRef("appSubMenus");const debouncedAdapt=debounce(this.adapt.bind(this),250);onWillDestroy(()=>debouncedAdapt.cancel());useExternalListener(window,"resize",debouncedAdapt);let adaptCounter=0;const renderAndAdapt=()=>{adaptCounter++;this.render();};systrayRegistry.addEventListener("UPDATE",renderAndAdapt);this.env.bus.addEventListener("MENUS:APP-CHANGED",renderAndAdapt);onWillUnmount(()=>{systrayRegistry.removeEventListener("UPDATE",renderAndAdapt);this.env.bus.removeEventListener("MENUS:APP-CHANGED",renderAndAdapt);});useEffect(()=>{this.adapt();},()=>[adaptCounter]);}
handleItemError(error,item){item.isDisplayed=()=>false;Promise.resolve().then(()=>{throw error;});}
get currentApp(){return this.menuService.getCurrentApp();}
get currentAppSections(){return((this.currentApp&&this.menuService.getMenuAsTree(this.currentApp.id).childrenTree)||[]);}
set currentAppSections(_){}
get systrayItems(){return systrayRegistry.getEntries().map(([key,value])=>({key,...value})).filter((item)=>("isDisplayed"in item?item.isDisplayed(this.env):true)).reverse();}
set systrayItems(_){}
async adapt(){if(!this.root.el){return;}
const sectionsMenu=this.appSubMenus.el;if(!sectionsMenu){return;}
const initialAppSectionsExtra=this.currentAppSectionsExtra;const firstInitialAppSectionExtra=[...initialAppSectionsExtra].shift();const initialAppId=firstInitialAppSectionExtra&&firstInitialAppSectionExtra.appID;const sections=[...sectionsMenu.querySelectorAll(":scope > *:not(.o_menu_sections_more)"),];for(const section of sections){section.classList.remove("d-none");}
this.currentAppSectionsExtra=[];const sectionsAvailableWidth=getBoundingClientRect.call(sectionsMenu).width;const sectionsTotalWidth=sections.reduce((sum,s)=>sum+getBoundingClientRect.call(s).width,0);if(sectionsAvailableWidth<sectionsTotalWidth){let width=46;for(const section of sections){if(sectionsAvailableWidth<width+section.offsetWidth){const overflowingSections=sections.slice(sections.indexOf(section));overflowingSections.forEach((s)=>{s.classList.add("d-none");const sectionId=s.dataset.section||s.querySelector("[data-section]").getAttribute("data-section");const currentAppSection=this.currentAppSections.find((appSection)=>appSection.id.toString()===sectionId);this.currentAppSectionsExtra.push(currentAppSection);});break;}
width+=section.offsetWidth;}}
const firstCurrentAppSectionExtra=[...this.currentAppSectionsExtra].shift();const currentAppId=firstCurrentAppSectionExtra&&firstCurrentAppSectionExtra.appID;if(initialAppSectionsExtra.length===this.currentAppSectionsExtra.length&&initialAppId===currentAppId){return;}
return this.render();}
onNavBarDropdownItemSelection(menu){if(menu){this.menuService.selectMenu(menu);}}
getMenuItemHref(payload){const parts=[`menu_id=${payload.id}`];if(payload.actionID){parts.push(`action=${payload.actionID}`);}
return"#"+parts.join("&");}}
NavBar.template="web.NavBar";NavBar.components={Dropdown,DropdownItem:NavBarDropdownItem,MenuDropdown,ErrorHandler};NavBar.props={};return __exports;});;

/* /web/static/src/webclient/settings_form_view/fields/settings_binary_field/settings_binary_field.js */
odoo.define('@web/webclient/settings_form_view/fields/settings_binary_field/settings_binary_field',['@web/core/registry','@web/views/fields/binary/binary_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{BinaryField,binaryField}=require("@web/views/fields/binary/binary_field");const SettingsBinaryField=__exports.SettingsBinaryField=class SettingsBinaryField extends BinaryField{static template="web.SettingsBinaryField";getDownloadData(){const related=this.props.record.fields[this.props.name].related;return{...super.getDownloadData(),model:this.props.record.fields[related.split(".")[0]].relation,field:related.split(".")[1]??related.split(".")[0],id:this.props.record.data[related.split(".")[0]][0],}}}
const settingsBinaryField={...binaryField,component:SettingsBinaryField,};registry.category("fields").add("base_settings.binary",settingsBinaryField);return __exports;});;

/* /web/static/src/webclient/settings_form_view/fields/upgrade_boolean_field.js */
odoo.define('@web/webclient/settings_form_view/fields/upgrade_boolean_field',['@web/core/registry','@web/views/fields/boolean/boolean_field','@web/core/utils/hooks','@web/webclient/settings_form_view/fields/upgrade_dialog'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{booleanField,BooleanField}=require("@web/views/fields/boolean/boolean_field");const{useService}=require("@web/core/utils/hooks");const{UpgradeDialog}=require("@web/webclient/settings_form_view/fields/upgrade_dialog");const UpgradeBooleanField=__exports.UpgradeBooleanField=class UpgradeBooleanField extends BooleanField{setup(){super.setup();this.dialogService=useService("dialog");this.isEnterprise=odoo.info&&odoo.info.isEnterprise;}
async onChange(newValue){if(!this.isEnterprise){this.dialogService.add(UpgradeDialog,{},{onClose:()=>{this.props.record.update({[this.props.name]:false});},});}else{super.onChange(...arguments);}}}
const upgradeBooleanField=__exports.upgradeBooleanField={...booleanField,component:UpgradeBooleanField,isUpgradeField:true,additionalClasses:[...(booleanField.additionalClasses||[]),"o_field_boolean"],};registry.category("fields").add("upgrade_boolean",upgradeBooleanField);return __exports;});;

/* /web/static/src/webclient/settings_form_view/fields/upgrade_dialog.js */
odoo.define('@web/webclient/settings_form_view/fields/upgrade_dialog',['@web/core/dialog/dialog','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const UpgradeDialog=__exports.UpgradeDialog=class UpgradeDialog extends Component{setup(){this.orm=useService("orm");this.router=useService("router");}
async _confirmUpgrade(){const usersCount=await this.orm.call("res.users","search_count",[[["share","=",false]],]);window.open("https://www.odoo.com/odoo-enterprise/upgrade?num_users="+usersCount,"_blank");this.props.close();}}
UpgradeDialog.template="web.UpgradeDialog";UpgradeDialog.components={Dialog};return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/form_label_highlight_text.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/form_label_highlight_text',['@web/views/form/form_label','@web/webclient/settings_form_view/highlight_text/highlight_text'],function(require){'use strict';let __exports={};const{FormLabel}=require("@web/views/form/form_label");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const FormLabelHighlightText=__exports.FormLabelHighlightText=class FormLabelHighlightText extends FormLabel{setup(){super.setup();const isEnterprise=odoo.info&&odoo.info.isEnterprise;if(this.props.fieldInfo&&this.props.fieldInfo.field&&this.props.fieldInfo.field.isUpgradeField&&!isEnterprise){this.upgradeEnterprise=true;}}}
FormLabelHighlightText.template="web.FormLabelHighlightText";FormLabelHighlightText.components={HighlightText};return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/highlight_text.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/highlight_text',['@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{escapeRegExp}=require("@web/core/utils/strings");const{Component,useState,onWillRender}=require("@odoo/owl");const HighlightText=__exports.HighlightText=class HighlightText extends Component{setup(){this.searchState=useState(this.env.searchState);onWillRender(()=>{const splitText=this.props.originalText.split(new RegExp(`(${escapeRegExp(this.searchState.value)})`,"ig"));this.splitText=this.searchState.value.length&&splitText.length>1?splitText:[this.props.originalText];});}}
HighlightText.template="web.HighlightText";HighlightText.props={originalText:String,};HighlightText.highlightClass="highlighter";return __exports;});;

/* /web/static/src/webclient/settings_form_view/highlight_text/settings_radio_field.js */
odoo.define('@web/webclient/settings_form_view/highlight_text/settings_radio_field',['@web/core/registry','@web/views/fields/radio/radio_field','@web/webclient/settings_form_view/highlight_text/highlight_text'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{radioField,RadioField}=require("@web/views/fields/radio/radio_field");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const SettingsRadioField=__exports.SettingsRadioField=class SettingsRadioField extends RadioField{static template="web.SettingsRadioField";static components={...super.components,HighlightText};}
const settingsRadioField=__exports.settingsRadioField={...radioField,component:SettingsRadioField,};registry.category("fields").add("base_settings.radio",settingsRadioField);return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/searchable_setting.js */
odoo.define('@web/webclient/settings_form_view/settings/searchable_setting',['@web/core/utils/strings','@web/views/form/setting/setting','@odoo/owl','@web/webclient/settings_form_view/highlight_text/form_label_highlight_text','@web/webclient/settings_form_view/highlight_text/highlight_text'],function(require){'use strict';let __exports={};const{escapeRegExp}=require("@web/core/utils/strings");const{Setting}=require("@web/views/form/setting/setting");const{onMounted,useRef,useState}=require("@odoo/owl");const{FormLabelHighlightText}=require("@web/webclient/settings_form_view/highlight_text/form_label_highlight_text");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const SearchableSetting=__exports.SearchableSetting=class SearchableSetting extends Setting{setup(){this.settingRef=useRef("setting");this.state=useState({search:this.env.searchState,showAllContainer:this.env.showAllContainer,});this.labels=[];this.labels.push(this.labelString,this.props.help);super.setup();onMounted(()=>{if(this.settingRef.el){const searchableTexts=this.settingRef.el.querySelectorAll("span[searchableText]");searchableTexts.forEach((st)=>{this.labels.push(st.getAttribute("searchableText"));});}});}
get classNames(){const classNames=super.classNames;classNames.o_searchable_setting=Boolean(this.labels.length);return classNames;}
visible(){if(!this.state.search.value){return true;}
if(this.state.showAllContainer.showAllContainer){return true;}
const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");if(regexp.test(this.labels.join())){return true;}
return false;}}
SearchableSetting.template="web.SearchableSetting";SearchableSetting.components={...Setting.components,FormLabel:FormLabelHighlightText,HighlightText,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/setting_header.js */
odoo.define('@web/webclient/settings_form_view/settings/setting_header',['@web/views/form/setting/setting'],function(require){'use strict';let __exports={};const{Setting}=require("@web/views/form/setting/setting");const SettingHeader=__exports.SettingHeader=class SettingHeader extends Setting{get labelString(){return this.props.string||this.props.record.fields[this.props.name].string;}}
SettingHeader.template="web.HeaderSetting";return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_app.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_app',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useState,useEffect,useRef}=require("@odoo/owl");const SettingsApp=__exports.SettingsApp=class SettingsApp extends Component{setup(){this.state=useState({search:this.env.searchState,});this.settingsAppRef=useRef("settingsApp");useEffect(()=>{if(this.settingsAppRef.el){const force=this.state.search.value&&!this.settingsAppRef.el.querySelector(".o_settings_container:not(.d-none)")&&!this.settingsAppRef.el.querySelector(".o_setting_box.o_searchable_setting");this.settingsAppRef.el.classList.toggle("d-none",force);}},()=>[this.state.search.value]);}}
SettingsApp.template="web.SettingsApp";SettingsApp.props={string:String,imgurl:String,key:String,selectedTab:{type:String,optional:1},slots:Object,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_block.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_block',['@web/webclient/settings_form_view/highlight_text/highlight_text','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,useState,useRef,useEffect,onWillRender,useChildSubEnv}=require("@odoo/owl");const SettingsBlock=__exports.SettingsBlock=class SettingsBlock extends Component{setup(){this.state=useState({search:this.env.searchState,});this.showAllContainerState=useState({showAllContainer:false,});useChildSubEnv({showAllContainer:this.showAllContainerState,});this.settingsContainerRef=useRef("settingsContainer");this.settingsContainerTitleRef=useRef("settingsContainerTitle");this.settingsContainerTipRef=useRef("settingsContainerTip");useEffect(()=>{const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");const force=this.state.search.value&&!regexp.test([this.props.title,this.props.tip].join())&&!this.settingsContainerRef.el.querySelector(".o_setting_box.o_searchable_setting");this.toggleContainer(force);},()=>[this.state.search.value]);onWillRender(()=>{const regexp=new RegExp(escapeRegExp(this.state.search.value),"i");if(regexp.test([this.props.title,this.props.tip].join())){this.showAllContainerState.showAllContainer=true;}else{this.showAllContainerState.showAllContainer=false;}});}
toggleContainer(force){if(this.settingsContainerTitleRef.el){this.settingsContainerTitleRef.el.classList.toggle("d-none",force);}
if(this.settingsContainerTipRef.el){this.settingsContainerTipRef.el.classList.toggle("d-none",force);}
this.settingsContainerRef.el.classList.toggle("d-none",force);}}
SettingsBlock.template="web.SettingsBlock";SettingsBlock.components={HighlightText,};SettingsBlock.props={title:{type:String,optional:1},tip:{type:String,optional:1},slots:Object,class:{type:String,optional:1},};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings/settings_page.js */
odoo.define('@web/webclient/settings_form_view/settings/settings_page',['@web/core/action_swiper/action_swiper','@odoo/owl'],function(require){'use strict';let __exports={};const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const SettingsPage=__exports.SettingsPage=class SettingsPage extends Component{setup(){this.state=useState({selectedTab:"",search:this.env.searchState,});if(this.props.modules){this.state.selectedTab=this.props.initialTab||this.props.modules[0].key;}
this.settingsRef=useRef("settings");this.settingsTabRef=useRef("settings_tab");this.scrollMap=Object.create(null);useEffect((settingsEl,currentTab)=>{if(!settingsEl){return;}
const{scrollTop}=this.scrollMap[currentTab]||0;settingsEl.scrollTop=scrollTop;},()=>[this.settingsRef.el,this.state.selectedTab]);}
getCurrentIndex(){return this.props.modules.findIndex((object)=>{return object.key===this.state.selectedTab;});}
hasRightSwipe(){return(this.env.isSmall&&this.state.search.value.length===0&&this.getCurrentIndex()!==0);}
hasLeftSwipe(){return(this.env.isSmall&&this.state.search.value.length===0&&this.getCurrentIndex()!==this.props.modules.length-1);}
async onRightSwipe(prom){this.state.selectedTab=this.props.modules[this.getCurrentIndex()-1].key;await prom;this.scrollToSelectedTab();}
async onLeftSwipe(prom){this.state.selectedTab=this.props.modules[this.getCurrentIndex()+1].key;await prom;this.scrollToSelectedTab();}
scrollToSelectedTab(){const key=this.state.selectedTab;this.settingsTabRef.el.querySelector(`[data-key='${key}']`).scrollIntoView({behavior:"smooth",inline:"center",block:"nearest"});}
onSettingTabClick(key){if(this.settingsRef.el){const{scrollTop}=this.settingsRef.el;this.scrollMap[this.state.selectedTab]={scrollTop};}
this.state.selectedTab=key;this.env.searchState.value="";}}
SettingsPage.template="web.SettingsPage";SettingsPage.components={ActionSwiper};SettingsPage.props={modules:Array,initialTab:{type:String,optional:1},slots:Object,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_confirmation_dialog.js */
odoo.define('@web/webclient/settings_form_view/settings_confirmation_dialog',['@web/core/confirmation_dialog/confirmation_dialog','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{_t}=require("@web/core/l10n/translation");const SettingsConfirmationDialog=__exports.SettingsConfirmationDialog=class SettingsConfirmationDialog extends ConfirmationDialog{_stayHere(){if(this.props.stayHere){this.props.stayHere();}
this.props.close();}}
SettingsConfirmationDialog.defaultProps={title:_t("Unsaved changes"),};SettingsConfirmationDialog.template="web.SettingsConfirmationDialog";SettingsConfirmationDialog.props={...ConfirmationDialog.props,stayHere:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_compiler.js */
odoo.define('@web/webclient/settings_form_view/settings_form_compiler',['@web/core/utils/xml','@web/views/form/form_compiler','@web/views/utils','@web/views/view_compiler'],function(require){'use strict';let __exports={};const{append,createElement}=require("@web/core/utils/xml");const{FormCompiler}=require("@web/views/form/form_compiler");const{toStringExpression}=require("@web/views/utils");const{isTextNode}=require("@web/views/view_compiler");const SettingsFormCompiler=__exports.SettingsFormCompiler=class SettingsFormCompiler extends FormCompiler{setup(){super.setup();this.compilers.push({selector:"app",fn:this.compileApp},{selector:"block",fn:this.compileBlock});}
compileForm(el,params){const settingsPage=createElement("SettingsPage");settingsPage.setAttribute("slots","{NoContentHelper:__comp__.props.slots.NoContentHelper}");settingsPage.setAttribute("initialTab","__comp__.props.initialApp");settingsPage.setAttribute("t-slot-scope","settings");params.modules=[];const res=super.compileForm(...arguments);res.classList.remove("o_form_nosheet");settingsPage.setAttribute("modules",JSON.stringify(params.modules));while(res.firstChild){append(settingsPage,res.firstChild);}
append(res,settingsPage);return res;}
compileApp(el,params){if(el.getAttribute("notApp")==="1"){return;}
const module={key:el.getAttribute("name"),string:el.getAttribute("string"),imgurl:el.getAttribute("logo")||"/"+el.getAttribute("name")+"/static/description/icon.png",};params.modules.push(module);const settingsApp=createElement("SettingsApp",{key:toStringExpression(module.key),string:toStringExpression(module.string||""),imgurl:toStringExpression(module.imgurl),selectedTab:"settings.selectedTab",});for(const child of el.children){append(settingsApp,this.compileNode(child,params));}
return settingsApp;}
compileBlock(el,params){const settingsContainer=createElement("SettingsBlock",{title:toStringExpression(el.getAttribute("title")||""),tip:toStringExpression(el.getAttribute("help")||""),});for(const child of el.children){append(settingsContainer,this.compileNode(child,params));}
return settingsContainer;}
compileSetting(el,params){params.componentName=el.getAttribute("type")==="header"?"SettingHeader":"SearchableSetting";const res=super.compileSetting(el,params);return res;}
compileNode(node,params,evalInvisible){if(isTextNode(node)){if(node.textContent.trim()){return createElement("HighlightText",{originalText:toStringExpression(node.textContent),});}}
return super.compileNode(node,params,evalInvisible);}
compileButton(el,params){const res=super.compileButton(el,params);if(res.hasAttribute("string")&&res.children.length===0){const contentSlot=createElement("t");contentSlot.setAttribute("t-set-slot","contents");const content=createElement("HighlightText",{originalText:res.getAttribute("string"),});append(contentSlot,content);append(res,contentSlot);}
return res;}}
return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_controller.js */
odoo.define('@web/webclient/settings_form_view/settings_form_controller',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/utils/objects','@web/views/form/form_view','@web/webclient/settings_form_view/settings_confirmation_dialog','@web/webclient/settings_form_view/settings_form_renderer','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useAutofocus}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{formView}=require("@web/views/form/form_view");const{SettingsConfirmationDialog}=require("@web/webclient/settings_form_view/settings_confirmation_dialog");const{SettingsFormRenderer}=require("@web/webclient/settings_form_view/settings_form_renderer");const{useSubEnv,useState,useRef,useEffect}=require("@odoo/owl");const SettingsFormController=__exports.SettingsFormController=class SettingsFormController extends formView.Controller{setup(){super.setup();useAutofocus();this.state=useState({displayNoContent:false});if("default_search_setting"in this.props.context){this.searchState=useState({value:this.props.context.default_search_setting});}else{this.searchState=useState({value:""});}
this.rootRef=useRef("root");this.canCreate=false;useSubEnv({searchState:this.searchState});useEffect(()=>{if(this.searchState.value){if(this.rootRef.el.querySelector(".o_settings_container:not(.d-none)")||this.rootRef.el.querySelector(".settings .o_settings_container:not(.d-none) .o_setting_box.o_searchable_setting")){this.state.displayNoContent=false;}else{this.state.displayNoContent=true;}}else{this.state.displayNoContent=false;}},()=>[this.searchState.value]);useEffect(()=>{if(this.env.__getLocalState__){this.env.__getLocalState__.remove(this);}});this.initialApp="module"in this.props.context?this.props.context.module:"";}
get modelParams(){const headerFields=Object.values(this.archInfo.fieldNodes).filter((fieldNode)=>fieldNode.options.isHeaderField).map((fieldNode)=>fieldNode.name);return{...super.modelParams,headerFields,};}
async beforeExecuteActionButton(clickParams){if(clickParams.name==="cancel"){return true;}
if((await this.model.root.isDirty())&&!["execute"].includes(clickParams.name)&&!clickParams.noSaveDialog){return this._confirmSave();}else{return this.model.root.save();}}
displayName(){return _t("Settings");}
async beforeLeave(){const dirty=await this.model.root.isDirty();if(dirty){return this._confirmSave();}}
beforeUnload(){}
updateURL(){}
async save(){await this.env.onClickViewButton({clickParams:{name:"execute",type:"object",},getResParams:()=>pick(this.model.root,"context","evalContext","resModel","resId","resIds"),});}
discard(){this.env.onClickViewButton({clickParams:{name:"cancel",type:"object",special:"cancel",},getResParams:()=>pick(this.model.root,"context","evalContext","resModel","resId","resIds"),});}
async _confirmSave(){let _continue=true;await new Promise((resolve)=>{this.dialogService.add(SettingsConfirmationDialog,{body:_t("Would you like to save your changes?"),confirm:async()=>{await this.save();_continue=false;resolve();},cancel:async()=>{await this.model.root.discard();await this.model.root.save();_continue=true;resolve();},stayHere:()=>{_continue=false;resolve();},});});return _continue;}}
SettingsFormController.components={...formView.Controller.components,Renderer:SettingsFormRenderer,};SettingsFormController.template="web.SettingsFormView";return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_renderer.js */
odoo.define('@web/webclient/settings_form_view/settings_form_renderer',['@web/views/form/form_renderer','@web/webclient/settings_form_view/highlight_text/form_label_highlight_text','@web/webclient/settings_form_view/highlight_text/highlight_text','@web/webclient/settings_form_view/settings/searchable_setting','@web/webclient/settings_form_view/settings/setting_header','@web/webclient/settings_form_view/settings/settings_block','@web/webclient/settings_form_view/settings/settings_app','@web/webclient/settings_form_view/settings/settings_page','@odoo/owl'],function(require){'use strict';let __exports={};const{FormRenderer}=require("@web/views/form/form_renderer");const{FormLabelHighlightText}=require("@web/webclient/settings_form_view/highlight_text/form_label_highlight_text");const{HighlightText}=require("@web/webclient/settings_form_view/highlight_text/highlight_text");const{SearchableSetting}=require("@web/webclient/settings_form_view/settings/searchable_setting");const{SettingHeader}=require("@web/webclient/settings_form_view/settings/setting_header");const{SettingsBlock}=require("@web/webclient/settings_form_view/settings/settings_block");const{SettingsApp}=require("@web/webclient/settings_form_view/settings/settings_app");const{SettingsPage}=require("@web/webclient/settings_form_view/settings/settings_page");const{useState}=require("@odoo/owl");const SettingsFormRenderer=__exports.SettingsFormRenderer=class SettingsFormRenderer extends FormRenderer{setup(){super.setup();this.searchState=useState(this.env.searchState);}
get shouldAutoFocus(){return false;}}
SettingsFormRenderer.components={...FormRenderer.components,SearchableSetting,SettingHeader,SettingsBlock,SettingsPage,SettingsApp,HighlightText,FormLabel:FormLabelHighlightText,};SettingsFormRenderer.props={...FormRenderer.props,initialApp:String,slots:Object,};return __exports;});;

/* /web/static/src/webclient/settings_form_view/settings_form_view.js */
odoo.define('@web/webclient/settings_form_view/settings_form_view',['@web/core/registry','@web/core/py_js/py','@web/core/utils/arrays','@web/search/control_panel/control_panel','@web/views/form/form_view','@web/webclient/settings_form_view/settings_form_controller','@web/webclient/settings_form_view/settings_form_renderer','@web/webclient/settings_form_view/settings_form_compiler'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{evaluateExpr}=require("@web/core/py_js/py");const{intersection}=require("@web/core/utils/arrays");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{formView}=require("@web/views/form/form_view");const{SettingsFormController}=require("@web/webclient/settings_form_view/settings_form_controller");const{SettingsFormRenderer}=require("@web/webclient/settings_form_view/settings_form_renderer");const{SettingsFormCompiler}=require("@web/webclient/settings_form_view/settings_form_compiler");class SettingRecord extends formView.Model.Record{_update(changes){const changedFields=Object.keys(changes);let dirty=true;if(intersection(changedFields,this.model._headerFields).length===changedFields.length){dirty=this.dirty;}
const prom=super._update(...arguments);this.dirty=dirty;return prom;}}
class SettingModel extends formView.Model{setup(params){super.setup(...arguments);this._headerFields=params.headerFields;}
_getNextConfig(){const nextConfig=super._getNextConfig(...arguments);nextConfig.resId=false;return nextConfig;}}
SettingModel.Record=SettingRecord;const settingsFormView=__exports.settingsFormView={...formView,display:{},buttonTemplate:"web.SettingsFormView.Buttons",Model:SettingModel,ControlPanel:ControlPanel,Controller:SettingsFormController,Compiler:SettingsFormCompiler,Renderer:SettingsFormRenderer,props:(genericProps,view)=>{[...genericProps.arch.querySelectorAll("setting[type='header'] field")].forEach((el)=>{const options=evaluateExpr(el.getAttribute("options")||"{}");options.isHeaderField=true;el.setAttribute("options",JSON.stringify(options));});return formView.props(genericProps,view);},};registry.category("views").add("base_settings",settingsFormView);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/demo_data_service.js */
odoo.define('@web/webclient/settings_form_view/widgets/demo_data_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const demoDataService=__exports.demoDataService={dependencies:["rpc"],async start(env,{rpc}){let isDemoDataActiveProm;return{isDemoDataActive(){if(!isDemoDataActiveProm){isDemoDataActiveProm=rpc("/base_setup/demo_active");}
return isDemoDataActiveProm;},};},};registry.category("services").add("demo_data",demoDataService);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_dev_tool.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_dev_tool',['@web/core/registry','@web/core/utils/hooks','@web/webclient/settings_form_view/settings/settings_block','@web/views/form/setting/setting','@odoo/owl','@web/views/widgets/standard_widget_props'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{SettingsBlock}=require("@web/webclient/settings_form_view/settings/settings_block");const{Setting}=require("@web/views/form/setting/setting");const{Component,onWillStart}=require("@odoo/owl");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const ResConfigDevTool=__exports.ResConfigDevTool=class ResConfigDevTool extends Component{static template="res_config_dev_tool";static components={SettingsBlock,Setting,};static props={...standardWidgetProps,};setup(){this.isDebug=Boolean(odoo.debug);this.isAssets=odoo.debug.includes("assets");this.isTests=odoo.debug.includes("tests");this.action=useService("action");this.demo=useService("demo_data");onWillStart(async()=>{this.isDemoDataActive=await this.demo.isDemoDataActive();});}
onClickForceDemo(){this.action.doAction("base.demo_force_install_action");}}
const resConfigDevTool=__exports.resConfigDevTool={component:ResConfigDevTool,};registry.category("view_widgets").add("res_config_dev_tool",resConfigDevTool);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_edition.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_edition',['@web/core/registry','@web/session','@web/views/form/setting/setting','@odoo/owl','@web/views/widgets/standard_widget_props'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{Setting}=require("@web/views/form/setting/setting");const{Component}=require("@odoo/owl");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{DateTime}=luxon;class ResConfigEdition extends Component{static template="res_config_edition";static components={Setting};static props={...standardWidgetProps,};setup(){this.serverVersion=session.server_version;this.expirationDate=session.expiration_date?DateTime.fromSQL(session.expiration_date).toLocaleString(DateTime.DATE_FULL):DateTime.now().plus({days:30}).toLocaleString(DateTime.DATE_FULL);}}
const resConfigEdition=__exports.resConfigEdition={component:ResConfigEdition,};registry.category("view_widgets").add("res_config_edition",resConfigEdition);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/res_config_invite_users.js */
odoo.define('@web/webclient/settings_form_view/widgets/res_config_invite_users',['@web/core/registry','@web/core/l10n/translation','@web/core/l10n/utils','@web/core/utils/arrays','@web/core/utils/hooks','@odoo/owl','@web/views/widgets/standard_widget_props'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{pyToJsLocale}=require("@web/core/l10n/utils");const{unique}=require("@web/core/utils/arrays");const{useService}=require("@web/core/utils/hooks");const{Component,useState,onWillStart}=require("@odoo/owl");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");class ResConfigInviteUsers extends Component{static template="res_config_invite_users";static props={...standardWidgetProps,};setup(){this.orm=useService("orm");this.invite=useService("user_invite");this.action=useService("action");this.notification=useService("notification");this.user=useService("user");this.state=useState({status:"idle",emails:"",invite:null,});onWillStart(async()=>{this.state.invite=await this.invite.fetchData();});}
validateEmail(email){const re=/^([a-z0-9][-a-z0-9_+.]*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,63}(?:\.[a-z]{2})?)$/i;return re.test(email);}
get emails(){return unique(this.state.emails.split(/[ ,;\n]+/).map((email)=>email.trim()).filter((email)=>email.length));}
validate(){if(!this.emails.length){throw new Error(_t("Empty email address"));}
const invalidEmails=[];for(const email of this.emails){if(!this.validateEmail(email)){invalidEmails.push(email);}}
if(invalidEmails.length){const errorMessage=(()=>{const listFormatter=new Intl.ListFormat(pyToJsLocale(this.user.lang),{type:"conjunction",style:"long",});switch(invalidEmails.length){case 1:return _t("Invalid email address: %(address)s",{address:invalidEmails[0],});case 2:return _t("Invalid email addresses: %(2 addresses)s",{"2 addresses":listFormatter.format(invalidEmails),});default:return _t("Invalid email addresses: %(addresses)s",{addresses:listFormatter.format(invalidEmails),});}})();throw new Error(errorMessage);}}
get inviteButtonText(){if(this.state.status==="inviting"){return _t("Inviting...");}
return _t("Invite");}
onClickMore(ev){this.action.doAction(this.state.invite.action_pending_users);}
onClickUser(ev,user){const action=Object.assign({},this.state.invite.action_pending_users,{res_id:user[0],});this.action.doAction(action);}
onKeydownUserEmails(ev){const keys=["Enter","Tab",","];if(keys.includes(ev.key)){if(ev.key==="Tab"&&!this.emails.length){return;}
ev.preventDefault();this.sendInvite();}}
async sendInvite(){try{this.validate();}catch(e){this.notification.add(e.message,{type:"danger"});return;}
this.state.status="inviting";const pendingUserEmails=this.state.invite.pending_users.map((user)=>user[1]);const emailsLeftToProcess=this.emails.filter((email)=>!pendingUserEmails.includes(email));try{if(emailsLeftToProcess){await this.orm.call("res.users","web_create_users",[emailsLeftToProcess]);this.state.invite=await this.invite.fetchData(true);}}finally{this.state.emails="";this.state.status="idle";}}}
const resConfigInviteUsers=__exports.resConfigInviteUsers={component:ResConfigInviteUsers,};registry.category("view_widgets").add("res_config_invite_users",resConfigInviteUsers);return __exports;});;

/* /web/static/src/webclient/settings_form_view/widgets/user_invite_service.js */
odoo.define('@web/webclient/settings_form_view/widgets/user_invite_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const userInviteService=__exports.userInviteService={dependencies:["rpc"],async start(env,{rpc}){let dataProm;return{fetchData(reload=false){if(!dataProm||reload){dataProm=rpc("/base_setup/data");}
return dataProm;},};},};registry.category("services").add("user_invite",userInviteService);return __exports;});;

/* /web/static/src/webclient/switch_company_menu/switch_company_menu.js */
odoo.define('@web/webclient/switch_company_menu/switch_company_menu',['@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/registry','@odoo/owl','@web/core/utils/timing','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{Component,useChildSubEnv,useState}=require("@odoo/owl");const{debounce}=require("@web/core/utils/timing");const{useService}=require("@web/core/utils/hooks");const CompanySelector=__exports.CompanySelector=class CompanySelector{constructor(companyService,toggleDelay){this.companyService=companyService;this.selectedCompaniesIds=companyService.activeCompanyIds.slice();this._debouncedApply=debounce(()=>this._apply(),toggleDelay);}
isCompanySelected(companyId){return this.selectedCompaniesIds.includes(companyId);}
switchCompany(mode,companyId){if(mode==="toggle"){if(this.selectedCompaniesIds.includes(companyId)){this._deselectCompany(companyId);}else{this._selectCompany(companyId);}
this._debouncedApply();}else if(mode==="loginto"){if(this._isSingleCompanyMode()){this.selectedCompaniesIds.splice(0,this.selectedCompaniesIds.length);}
this._selectCompany(companyId,true);this._apply();}}
_selectCompany(companyId,unshift=false){if(!this.selectedCompaniesIds.includes(companyId)){if(unshift){this.selectedCompaniesIds.unshift(companyId);}else{this.selectedCompaniesIds.push(companyId);}}else if(unshift){const index=this.selectedCompaniesIds.findIndex((c)=>c===companyId);this.selectedCompaniesIds.splice(index,1);this.selectedCompaniesIds.unshift(companyId);}
this._getBranches(companyId).forEach((companyId)=>this._selectCompany(companyId));}
_deselectCompany(companyId){if(this.selectedCompaniesIds.includes(companyId)){this.selectedCompaniesIds.splice(this.selectedCompaniesIds.indexOf(companyId),1);this._getBranches(companyId).forEach((companyId)=>this._deselectCompany(companyId));}}
_getBranches(companyId){return this.companyService.getCompany(companyId).child_ids;}
_apply(){this.companyService.setCompanies(this.selectedCompaniesIds,false);}
_isSingleCompanyMode(){if(this.selectedCompaniesIds.length===1){return true;}
const getActiveCompany=(companyId)=>{const isActive=this.selectedCompaniesIds.includes(companyId);return isActive?this.companyService.getCompany(companyId):null;};let rootCompany=undefined;for(const companyId of this.selectedCompaniesIds){let company=getActiveCompany(companyId);while(getActiveCompany(company.parent_id)){company=getActiveCompany(company.parent_id);}
if(rootCompany===undefined){rootCompany=company;}else if(rootCompany!==company){return false;}}
if(rootCompany){const queue=[...rootCompany.child_ids];while(queue.length>0){const company=getActiveCompany(queue.pop());if(company&&company.child_ids){queue.push(...company.child_ids);}else if(!company){return false;}}}
return true;}}
const SwitchCompanyItem=__exports.SwitchCompanyItem=class SwitchCompanyItem extends Component{static template="web.SwitchCompanyItem";static components={DropdownItem,SwitchCompanyItem};static props={company:{},level:{type:Number},};setup(){this.companyService=useService("company");this.companySelector=useState(this.env.companySelector);}
get isCompanySelected(){return this.companySelector.isCompanySelected(this.props.company.id);}
get isCompanyAllowed(){return this.props.company.id in this.companyService.allowedCompanies;}
get isCurrent(){return this.props.company.id===this.companyService.currentCompany.id;}
logIntoCompany(){if(this.isCompanyAllowed){this.companySelector.switchCompany("loginto",this.props.company.id);}}
toggleCompany(){if(this.isCompanyAllowed){this.companySelector.switchCompany("toggle",this.props.company.id);}}}
const SwitchCompanyMenu=__exports.SwitchCompanyMenu=class SwitchCompanyMenu extends Component{static template="web.SwitchCompanyMenu";static components={Dropdown,DropdownItem,SwitchCompanyItem};static props={};static toggleDelay=1000;static CompanySelector=CompanySelector;setup(){this.companyService=useService("company");this.companySelector=useState(new this.constructor.CompanySelector(this.companyService,this.constructor.toggleDelay));useChildSubEnv({companySelector:this.companySelector});}}
const systrayItem=__exports.systrayItem={Component:SwitchCompanyMenu,isDisplayed(env){const{allowedCompanies}=env.services.company;return Object.keys(allowedCompanies).length>1;},};registry.category("systray").add("SwitchCompanyMenu",systrayItem,{sequence:1});return __exports;});;

/* /web/static/src/webclient/user_menu/user_menu.js */
odoo.define('@web/webclient/user_menu/user_menu',['@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/checkbox/checkbox','@web/core/browser/browser','@web/core/registry','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{CheckBox}=require("@web/core/checkbox/checkbox");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const userMenuRegistry=registry.category("user_menuitems");const UserMenu=__exports.UserMenu=class UserMenu extends Component{setup(){this.user=useService("user");const{origin}=browser.location;const{userId}=this.user;this.source=`${origin}/web/image?model=res.users&field=avatar_128&id=${userId}`;}
getElements(){const sortedItems=userMenuRegistry.getAll().map((element)=>element(this.env)).sort((x,y)=>{const xSeq=x.sequence?x.sequence:100;const ySeq=y.sequence?y.sequence:100;return xSeq-ySeq;});return sortedItems;}}
UserMenu.template="web.UserMenu";UserMenu.components={Dropdown,DropdownItem,CheckBox};UserMenu.props={};const systrayItem=__exports.systrayItem={Component:UserMenu,};registry.category("systray").add("web.user_menu",systrayItem,{sequence:0});return __exports;});;

/* /web/static/src/webclient/user_menu/user_menu_items.js */
odoo.define('@web/webclient/user_menu/user_menu_items',['@odoo/owl','@web/core/browser/feature_detection','@web/core/l10n/translation','@web/core/utils/strings','@web/session','@web/core/browser/browser','@web/core/registry'],function(require){'use strict';let __exports={};const{Component,markup}=require("@odoo/owl");const{isMacOS}=require("@web/core/browser/feature_detection");const{_t}=require("@web/core/l10n/translation");const{escape}=require("@web/core/utils/strings");const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");function documentationItem(env){const documentationURL="https://www.odoo.com/documentation/17.0";return{type:"item",id:"documentation",description:_t("Documentation"),href:documentationURL,callback:()=>{browser.open(documentationURL,"_blank");},sequence:10,};}
function supportItem(env){const url=session.support_url;return{type:"item",id:"support",description:_t("Support"),href:url,callback:()=>{browser.open(url,"_blank");},sequence:20,};}
class ShortcutsFooterComponent extends Component{setup(){this.runShortcutKey=isMacOS()?"CONTROL":"ALT";}}
ShortcutsFooterComponent.template="web.UserMenu.ShortcutsFooterComponent";function shortCutsItem(env){const translatedText=_t("Shortcuts");return{type:"item",id:"shortcuts",hide:env.isSmall,description:markup(`<div class="d-flex align-items-center justify-content-between">
                <span>${escape(translatedText)}</span>
                <span class="fw-bold">${isMacOS() ? "CMD" : "CTRL"}+K</span>
            </div>`),callback:()=>{env.services.command.openMainPalette({FooterComponent:ShortcutsFooterComponent});},sequence:30,};}
function separator(){return{type:"separator",sequence:40,};}
__exports.preferencesItem=preferencesItem;function preferencesItem(env){return{type:"item",id:"settings",description:_t("Preferences"),callback:async function(){const actionDescription=await env.services.orm.call("res.users","action_get");actionDescription.res_id=env.services.user.userId;env.services.action.doAction(actionDescription);},sequence:50,};}
function odooAccountItem(env){return{type:"item",id:"account",description:_t("My Odoo.com account"),callback:()=>{env.services.rpc("/web/session/account").then((url)=>{browser.open(url,"_blank");}).catch(()=>{browser.open("https://accounts.odoo.com/account","_blank");});},sequence:60,};}
function logOutItem(env){const route="/web/session/logout";return{type:"item",id:"logout",description:_t("Log out"),href:`${browser.location.origin}${route}`,callback:()=>{browser.location.href=route;},sequence:70,};}
registry.category("user_menuitems").add("documentation",documentationItem).add("support",supportItem).add("shortcuts",shortCutsItem).add("separator",separator).add("profile",preferencesItem).add("odoo_account",odooAccountItem).add("log_out",logOutItem);return __exports;});;

/* /web/static/src/webclient/webclient.js */
odoo.define('@web/webclient/webclient',['@web/core/debug/debug_context','@web/core/debug/debug_menu','@web/core/l10n/localization','@web/core/main_components_container','@web/core/registry','@web/core/utils/hooks','@web/webclient/actions/action_container','@web/webclient/navbar/navbar','@odoo/owl'],function(require){'use strict';let __exports={};const{useOwnDebugContext}=require("@web/core/debug/debug_context");const{DebugMenu}=require("@web/core/debug/debug_menu");const{localization}=require("@web/core/l10n/localization");const{MainComponentsContainer}=require("@web/core/main_components_container");const{registry}=require("@web/core/registry");const{useBus,useService}=require("@web/core/utils/hooks");const{ActionContainer}=require("@web/webclient/actions/action_container");const{NavBar}=require("@web/webclient/navbar/navbar");const{Component,onMounted,onWillStart,useExternalListener,useState}=require("@odoo/owl");const WebClient=__exports.WebClient=class WebClient extends Component{setup(){this.menuService=useService("menu");this.actionService=useService("action");this.title=useService("title");this.router=useService("router");this.user=useService("user");useOwnDebugContext({categories:["default"]});if(this.env.debug){registry.category("systray").add("web.debug_mode_menu",{Component:DebugMenu,},{sequence:100});}
this.localization=localization;this.state=useState({fullscreen:false,});this.title.setParts({zopenerp:"Odoo"});useBus(this.env.bus,"ROUTE_CHANGE",this.loadRouterState);useBus(this.env.bus,"ACTION_MANAGER:UI-UPDATED",({detail:mode})=>{if(mode!=="new"){this.state.fullscreen=mode==="fullscreen";}});onMounted(()=>{this.loadRouterState();this.env.bus.trigger("WEB_CLIENT_READY");});useExternalListener(window,"click",this.onGlobalClick,{capture:true});onWillStart(this.registerServiceWorker);}
async loadRouterState(){let stateLoaded=await this.actionService.loadState();let menuId=Number(this.router.current.hash.menu_id||0);if(!stateLoaded&&menuId){const menu=this.menuService.getAll().find((m)=>menuId===m.id);const actionId=menu&&menu.actionID;if(actionId){await this.actionService.doAction(actionId,{clearBreadcrumbs:true});stateLoaded=true;}}
if(stateLoaded&&!menuId){const currentController=this.actionService.currentController;const actionId=currentController&&currentController.action.id;const menu=this.menuService.getAll().find((m)=>m.actionID===actionId);menuId=menu&&menu.appID;}
if(menuId){this.menuService.setCurrentMenu(menuId);}
if(!stateLoaded){await this._loadDefaultApp();}}
_loadDefaultApp(){const root=this.menuService.getMenu("root");const firstApp=root.children[0];if(firstApp){return this.menuService.selectMenu(firstApp);}}
onGlobalClick(ev){if((ev.ctrlKey||ev.metaKey)&&!ev.target.isContentEditable&&((ev.target instanceof HTMLAnchorElement&&ev.target.href)||(ev.target instanceof HTMLElement&&ev.target.closest("a[href]:not([href=''])")))){ev.stopImmediatePropagation();return;}}
registerServiceWorker(){if("serviceWorker"in navigator){navigator.serviceWorker.register("/web/service-worker.js",{scope:"/web"}).catch((error)=>{console.error("Service worker registration failed, error:",error);});}}}
WebClient.components={ActionContainer,NavBar,MainComponentsContainer,};WebClient.template="web.WebClient";WebClient.props={};return __exports;});;

/* /web/static/src/webclient/actions/reports/report_action.js */
odoo.define('@web/webclient/actions/reports/report_action',['@web/core/utils/hooks','@web/search/layout','@web/views/view','@web/webclient/actions/action_hook','@web/webclient/actions/reports/report_hook','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Layout}=require("@web/search/layout");const{getDefaultConfig}=require("@web/views/view");const{useSetupAction}=require("@web/webclient/actions/action_hook");const{useEnrichWithActionLinks}=require("@web/webclient/actions/reports/report_hook");const{Component,useRef,useSubEnv}=require("@odoo/owl");const ReportAction=__exports.ReportAction=class ReportAction extends Component{setup(){useSubEnv({config:{...getDefaultConfig(),...this.env.config,},});useSetupAction();this.action=useService("action");this.title=this.props.display_name||this.props.name;this.reportUrl=this.props.report_url;this.iframe=useRef("iframe");useEnrichWithActionLinks(this.iframe);}
onIframeLoaded(ev){const iframeDocument=ev.target.contentWindow.document;iframeDocument.body.classList.add("o_in_iframe","container-fluid");iframeDocument.body.classList.remove("container");}
print(){this.action.doAction({type:"ir.actions.report",report_type:"qweb-pdf",report_name:this.props.report_name,report_file:this.props.report_file,data:this.props.data||{},context:this.props.context||{},display_name:this.title,});}}
ReportAction.components={Layout};ReportAction.template="web.ReportAction";return __exports;});;

/* /web/static/src/webclient/actions/reports/report_hook.js */
odoo.define('@web/webclient/actions/reports/report_hook',['@odoo/owl'],function(require){'use strict';let __exports={};const{useComponent,useEffect}=require("@odoo/owl");__exports.useEnrichWithActionLinks=useEnrichWithActionLinks;function useEnrichWithActionLinks(ref,selector=null){const comp=useComponent();useEffect((element)=>{if(element.matches("iframe")){element.onload=()=>enrich(comp,element,selector,true);}else{enrich(comp,element,selector);}},()=>[ref.el]);}
function enrich(component,targetElement,selector,isIFrame=false){let doc=window.document;if(isIFrame){targetElement=targetElement.contentDocument;doc=targetElement;}
const targets=[];if(selector){targets.push(...targetElement.querySelectorAll(selector));}else{targets.push(targetElement);}
for(const currentTarget of targets){const elementsToWrap=currentTarget.querySelectorAll("[res-id][res-model][view-type]");for(const element of elementsToWrap.values()){const wrapper=doc.createElement("a");wrapper.setAttribute("href","#");wrapper.addEventListener("click",(ev)=>{ev.preventDefault();component.env.services.action.doAction({type:"ir.actions.act_window",view_mode:element.getAttribute("view-type"),res_id:Number(element.getAttribute("res-id")),res_model:element.getAttribute("res-model"),views:[[element.getAttribute("view-id"),element.getAttribute("view-type")]],});});element.parentNode.insertBefore(wrapper,element);wrapper.appendChild(element);}}}
return __exports;});;

/* /web/static/src/webclient/actions/reports/utils.js */
odoo.define('@web/webclient/actions/reports/utils',['@web/core/l10n/translation','@web/core/network/download'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{download}=require("@web/core/network/download");__exports.getReportUrl=getReportUrl;function getReportUrl(action,type,userContext){let url=`/report/${type}/${action.report_name}`;const actionContext=action.context||{};if(action.data&&JSON.stringify(action.data)!=="{}"){const options=encodeURIComponent(JSON.stringify(action.data));const context=encodeURIComponent(JSON.stringify(actionContext));url+=`?options=${options}&context=${context}`;}else{if(actionContext.active_ids){url+=`/${actionContext.active_ids.join(",")}`;}
if(type==="html"){const context=encodeURIComponent(JSON.stringify(userContext));url+=`?context=${context}`;}}
return url;}
function getWKHTMLTOPDF_MESSAGES(status){const link='<br><br><a href="http://wkhtmltopdf.org/" target="_blank">wkhtmltopdf.org</a>';const _status={broken:_t("Your installation of Wkhtmltopdf seems to be broken. The report will be shown in html.")+link,install:_t("Unable to find Wkhtmltopdf on this system. The report will be shown in html.")+
link,upgrade:_t("You should upgrade your version of Wkhtmltopdf to at least 0.12.0 in order to get a correct display of headers and footers as well as support for table-breaking between pages.")+link,workers:_t("You need to start Odoo with at least two workers to print a pdf version of the reports."),};return _status[status];}
__exports.downloadReport=downloadReport;async function downloadReport(rpc,action,type,userContext){let message;if(type==="pdf"){downloadReport.wkhtmltopdfStatusProm||=rpc("/report/check_wkhtmltopdf");const status=await downloadReport.wkhtmltopdfStatusProm;message=getWKHTMLTOPDF_MESSAGES(status);if(!["upgrade","ok"].includes(status)){return{success:false,message};}}
const url=getReportUrl(action,type);await download({url:"/report/download",data:{data:JSON.stringify([url,action.report_type]),context:JSON.stringify(userContext),},});return{success:true,message};}
return __exports;});;

/* /web/static/src/libs/pdfjs.js */
odoo.define('@web/libs/pdfjs',['@web/core/browser/feature_detection'],function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");__exports.hidePDFJSButtons=hidePDFJSButtons;function hidePDFJSButtons(rootElement){const cssStyle=document.createElement("style");cssStyle.rel="stylesheet";cssStyle.textContent=`button#secondaryOpenFile.secondaryToolbarButton, button#openFile.toolbarButton,
a#secondaryViewBookmark.secondaryToolbarButton, a#viewBookmark.toolbarButton {
display: none !important;
}`;if(isMobileOS()){cssStyle.textContent=`${cssStyle.innerHTML}
button#secondaryDownload.secondaryToolbarButton, button#download.toolbarButton,
button#secondaryPrint.secondaryToolbarButton, button#print.toolbarButton{
display: none !important;
}`;}
const iframe=rootElement.tagName==="IFRAME"?rootElement:rootElement.querySelector("iframe");if(iframe){if(!iframe.dataset.hideButtons){iframe.dataset.hideButtons="true";iframe.addEventListener("load",(event)=>{if(iframe.contentDocument&&iframe.contentDocument.head){iframe.contentDocument.head.appendChild(cssStyle);}});}}else{console.warn("No IFRAME found");}}
return __exports;});;

/* /base_import/static/src/import_action/import_action.js */
odoo.define('@base_import/import_action/import_action',['@web/core/l10n/translation','@odoo/owl','@web/core/registry','@web/core/utils/hooks','@web/core/file_input/file_input','@base_import/import_model','@base_import/import_data_content/import_data_content','@base_import/import_data_progress/import_data_progress','@base_import/import_data_sidepanel/import_data_sidepanel','@web/search/layout'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart,onMounted,useState}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{FileInput}=require("@web/core/file_input/file_input");const{useImportModel}=require("@base_import/import_model");const{ImportDataContent}=require("@base_import/import_data_content/import_data_content");const{ImportDataProgress}=require("@base_import/import_data_progress/import_data_progress");const{ImportDataSidepanel}=require("@base_import/import_data_sidepanel/import_data_sidepanel");const{Layout}=require("@web/search/layout");const ImportAction=__exports.ImportAction=class ImportAction extends Component{static template="ImportAction";static nextId=1;static components={FileInput,ImportDataContent,ImportDataSidepanel,Layout,};setup(){this.notification=useService("notification");this.orm=useService("orm");this.router=useService("router");this.user=useService("user");this.env.config.setDisplayName(this.props.action.name||_t("Import a File"));this.resModel=this.props.action.params.model;this.model=useImportModel({env:this.env,resModel:this.resModel,context:this.props.action.params.context||{},orm:this.orm,});this.state=useState({filename:undefined,fileLength:0,importMessages:[],importProgress:{value:0,step:1,},isPaused:false,previewError:"",});onWillStart(()=>this.model.init());onMounted(()=>this.enter());}
enter(){const newState={action:"import",model:this.resModel};this.router.pushState(newState,{replace:true});}
exit(resIds){this.env.config.historyBack();}
get display(){return{controlPanel:{},};}
get importTemplates(){return this.model.importTemplates;}
get formattingOptions(){return this.model.formattingOptions;}
get totalToImport(){return this.state.fileLength-parseInt(this.importOptions.skip);}
get totalSteps(){return this.isBatched?Math.ceil(this.totalToImport/this.importOptions.limit):1;}
get importOptions(){return this.model.importOptions;}
get isPreviewing(){return this.state.filename!==undefined;}
get isBatched(){return this.state.fileLength>100;}
async onOptionChanged(name,value,fieldName=null){this.model.block();const result=await this.model.setOption(name,value,fieldName);if(result){const{res,error}=result;if(!error&&res.file_length){this.state.fileLength=res.file_length;}}
this.model.unblock();}
async reload(){this.model.block();await this.model.updateData();this.model.unblock();}
async handleFilesUpload(files){if(!files||files.length<=0){return;}
this.state.filename=files[0].name;this.state.importMessages=[];this.model.block(_t("Loading file..."));const{res,error}=await this.model.updateData(true);if(error){this.state.previewError=error;}else{this.state.fileLength=res.file_length;this.state.previewError=undefined;}
this.model.unblock();}
async handleImport(isTest=true){const message=isTest?_t("Testing"):_t("Importing");let blockComponent;if(this.isBatched){blockComponent={class:ImportDataProgress,props:{stopImport:()=>this.stopImport(),totalSteps:this.totalSteps,importProgress:this.state.importProgress,},};}
this.model.block(message,blockComponent);let res={ids:[]};try{const data=await this.model.executeImport(isTest,this.totalSteps,this.state.importProgress);res=data.res;}finally{this.model.unblock();}
if(!isTest&&res.nextrow){this.state.isPaused=true;}
if(!isTest&&res.ids.length){this.notification.add(_t("%s records successfully imported",res.ids.length),{type:"success",});this.exit(res.ids);}}
stopImport(){this.model.stopImport();}
onFieldChanged(column,fieldInfo){this.model.setColumnField(column,fieldInfo);}
isFieldSet(column){return column.fieldInfo!=null;}}
registry.category("actions").add("import",ImportAction);return __exports;});;

/* /base_import/static/src/import_block_ui.js */
odoo.define('@base_import/import_block_ui',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const ImportBlockUI=__exports.ImportBlockUI=class ImportBlockUI extends Component{static props={message:{type:String,optional:true},blockComponent:{type:Object,optional:true},};static template="base_import.BlockUI";}
return __exports;});;

/* /base_import/static/src/import_data_column_error/import_data_column_error.js */
odoo.define('@base_import/import_data_column_error/import_data_column_error',['@odoo/owl','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{useService}=require("@web/core/utils/hooks");const ImportDataColumnError=__exports.ImportDataColumnError=class ImportDataColumnError extends Component{static template="ImportDataColumnError";static props={errors:{type:Array},fieldInfo:{type:Object},resultNames:{type:Array},};setup(){this.action=useService("action");this.orm=useService("orm");this.state=useState({isExpanded:false,moreInfoContent:undefined,});}
get moreInfo(){const moreInfoObjects=this.props.errors.map((error)=>error.moreinfo);return moreInfoObjects.length&&moreInfoObjects[0];}
isErrorVisible(index){return this.state.isExpanded||index<3;}
onMoreInfoClicked(){const moreInfo=this.moreInfo;if(this.state.moreInfoContent){this.state.moreInfoContent=undefined;}else if(moreInfo instanceof Array){this.state.moreInfoContent=moreInfo;}else{this.action.doAction(moreInfo);}}}
return __exports;});;

/* /base_import/static/src/import_data_content/import_data_content.js */
odoo.define('@base_import/import_data_content/import_data_content',['@odoo/owl','@web/core/select_menu/select_menu','@base_import/import_data_column_error/import_data_column_error','@base_import/import_data_options/import_data_options','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{SelectMenu}=require("@web/core/select_menu/select_menu");const{ImportDataColumnError}=require("@base_import/import_data_column_error/import_data_column_error");const{ImportDataOptions}=require("@base_import/import_data_options/import_data_options");const{_t}=require("@web/core/l10n/translation");const ImportDataContent=__exports.ImportDataContent=class ImportDataContent extends Component{static template="ImportDataContent";static components={ImportDataColumnError,ImportDataOptions,SelectMenu,};static props={columns:{type:Array},isFieldSet:{type:Function},onOptionChanged:{type:Function},onFieldChanged:{type:Function},options:{type:Object},importMessages:{type:Object},previewError:{type:String,optional:true},};setup(){this.searchPlaceholder=_t("Search a field...");}
getGroups(column){const groups=[{choices:this.makeChoices(column.fields.basic)},{choices:this.makeChoices(column.fields.suggested),label:_t("Suggested Fields")},{choices:this.makeChoices(column.fields.additional),label:column.fields.suggested.length>0?_t("Additional Fields"):_t("Standard Fields"),},{choices:this.makeChoices(column.fields.relational),label:_t("Relation Fields")},];return groups;}
makeChoices(fields){return fields.map((field)=>({label:field.label,value:field.fieldPath,}));}
getTooltipDetails(field){return JSON.stringify({resModel:field.model_name,debug:true,field:{name:field.name,label:field.string,type:field.type,},});}
getTooltip(column){const displayCount=5;if(column.previews.length>displayCount){return JSON.stringify({lines:[...column.previews.slice(0,displayCount-1),`(+${column.previews.length - displayCount + 1})`,],});}else{return JSON.stringify({lines:column.previews.slice(0,displayCount)});}}
getErrorMessageClass(messages,type,index){return`alert alert-${type} m-0 p-2 ${index === messages.length - 1 ? "" : "mb-2"}`;}
getCommentClass(column,comment,index){return`alert-${comment.type} ${index < column.comments.length - 1 ? "mb-2" : "mb-0"}`;}
onFieldChanged(column,fieldPath){const fields=[...column.fields.basic,...column.fields.suggested,...column.fields.additional,...column.fields.relational,];const fieldInfo=fields.find((f)=>f.fieldPath===fieldPath);this.props.onFieldChanged(column,fieldInfo);}}
return __exports;});;

/* /base_import/static/src/import_data_options/import_data_options.js */
odoo.define('@base_import/import_data_options/import_data_options',['@odoo/owl','@web/core/l10n/translation','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,useState,onWillStart}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const ImportDataOptions=__exports.ImportDataOptions=class ImportDataOptions extends Component{static template="ImportDataOptions";static props={importOptions:{type:Object,optional:true},fieldInfo:{type:Object},onOptionChanged:{type:Function},};setup(){this.orm=useService("orm");this.state=useState({options:[],});this.currentModel=this.props.fieldInfo.comodel_name||this.props.fieldInfo.model_name;onWillStart(async()=>{this.state.options=await this.loadOptions();});}
get isVisible(){return["many2one","many2many","selection","boolean"].includes(this.props.fieldInfo.type);}
async loadOptions(){const options=[["prevent",_t("Prevent import")]];if(this.props.fieldInfo.type==="boolean"){options.push(["false",_t("Set to: False")]);options.push(["true",_t("Set to: True")]);!this.props.fieldInfo.required&&options.push(["import_skip_records",_t("Skip record")]);}
if(["many2one","many2many","selection"].includes(this.props.fieldInfo.type)){if(!this.props.fieldInfo.required){options.push(["import_set_empty_fields",_t("Set value as empty")]);options.push(["import_skip_records",_t("Skip record")]);}
if(this.props.fieldInfo.type==="selection"){const fields=await this.orm.call(this.currentModel,"fields_get");const selection=fields[this.props.fieldInfo.name].selection.map((opt)=>[opt[0],_t("Set to: %s",opt[1]),]);options.push(...selection);}else{options.push(["name_create_enabled_fields",_t("Create new values")]);}}
return options;}
onSelectionChanged(ev){if(["name_create_enabled_fields","import_set_empty_fields","import_skip_records",].includes(ev.target.value)){this.props.onOptionChanged(ev.target.value,ev.target.value,this.props.fieldInfo.fieldPath);}else{const value={fallback_value:ev.target.value,field_model:this.currentModel,field_type:this.props.fieldInfo.type,};this.props.onOptionChanged("fallback_values",value,this.props.fieldInfo.fieldPath);}}}
return __exports;});;

/* /base_import/static/src/import_data_progress/import_data_progress.js */
odoo.define('@base_import/import_data_progress/import_data_progress',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component,useEffect,useState}=require("@odoo/owl");const ImportDataProgress=__exports.ImportDataProgress=class ImportDataProgress extends Component{static template="ImportDataProgress";static props={importProgress:{type:Object},stopImport:{type:Function},totalSteps:{type:Number},};setup(){this.timer=undefined;this.timeStart=Date.now();this.state=useState({isInterrupted:false,timeLeft:null,});useEffect(()=>{this.updateTimer();return()=>{clearInterval(this.timer);};},()=>[]);}
get minutesLeft(){return this.state.timeLeft.toFixed(2);}
get secondsLeft(){return Math.round(this.state.timeLeft*60);}
interrupt(){this.state.isInterrupted=true;this.props.stopImport();}
updateTimer(){if(this.timer){clearInterval(this.timer);}
this.state.timeLeft=((Date.now()-this.timeStart)*((100-this.props.importProgress.value)/this.props.importProgress.value))/60000;this.timer=setInterval(()=>this.updateTimer(),1000);}}
return __exports;});;

/* /base_import/static/src/import_data_sidepanel/import_data_sidepanel.js */
odoo.define('@base_import/import_data_sidepanel/import_data_sidepanel',['@odoo/owl','@web/core/checkbox/checkbox'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{CheckBox}=require("@web/core/checkbox/checkbox");const ImportDataSidepanel=__exports.ImportDataSidepanel=class ImportDataSidepanel extends Component{static template="ImportDataSidepanel";static components={CheckBox};static props={filename:{type:String},formattingOptions:{type:Object,optional:true},options:{type:Object},importTemplates:{type:Array,optional:true},isBatched:{type:Boolean,optional:true},onOptionChanged:{type:Function},onReload:{type:Function},};get fileName(){return this.props.filename.split(".")[0];}
get fileExtension(){return"."+this.props.filename.split(".").pop();}
getOptionValue(name){if(name==="skip"){return(this.props.options.skip+1).toString();}
return this.props.options[name].toString();}
setOptionValue(name,value){this.props.onOptionChanged(name,isNaN(parseFloat(value))?value:Number(value));}
onLimitChange(ev){this.props.onOptionChanged("skip",ev.target.value?ev.target.value-1:0);}}
return __exports;});;

/* /base_import/static/src/import_model.js */
odoo.define('@base_import/import_model',['@web/core/l10n/translation','@web/core/registry','@web/core/utils/objects','@web/core/utils/arrays','@web/core/utils/functions','@odoo/owl','@base_import/import_block_ui'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{pick}=require("@web/core/utils/objects");const{groupBy,sortBy}=require("@web/core/utils/arrays");const{memoize}=require("@web/core/utils/functions");const{useState}=require("@odoo/owl");const{ImportBlockUI}=require("@base_import/import_block_ui");const mainComponentRegistry=registry.category("main_components");const strftimeFormatTable={d:"w",DD:"d",ddd:"a",dddd:"A",DDDD:"j",ww:"U",WW:"W",mm:"M",MM:"m",MMM:"b",MMMM:"B",YYYY:"Y",YY:"y",ss:"S",hh:"h",HH:"H",A:"p",};const humanToStrftimeFormat=memoize(function humanToStrftimeFormat(value){const regex=/(dddd|ddd|dd|d|mmmm|mmm|mm|ww|yyyy|yy|hh|ss|a)/gi;return value.replace(regex,(value)=>{if(strftimeFormatTable[value]){return"%"+strftimeFormatTable[value];}
return("%"+
(strftimeFormatTable[value.toLowerCase()]||strftimeFormatTable[value.toUpperCase()]));});});const strftimeToHumanFormat=memoize(function strftimeToHumanFormat(value){Object.entries(strftimeFormatTable).forEach(([k,v])=>{value=value.replace(`%${v}`,k);});return value;});const BaseImportModel=__exports.BaseImportModel=class BaseImportModel{constructor({env,resModel,context,orm}){this.id=1;this.env=env;this.orm=orm;this.handleInterruption=false;this.resModel=resModel;this.context=context||{};this.fields=[];this.columns=[];this.importMessages=[];this._importOptions={};this.importTemplates=[];this.formattingOptionsValues=this._getCSVFormattingOptions();this.importOptionsValues={...this.formattingOptionsValues,advanced:{reloadParse:true,value:true,},has_headers:{reloadParse:true,value:true,},keep_matches:{value:false,},limit:{value:2000,},sheets:{value:[],},sheet:{label:_t("Selected Sheet:"),reloadParse:true,value:"",},skip:{value:0,},tracking_disable:{value:true,},};this.fieldsToHandle={};}
get formattingOptions(){return pick(this.importOptionsValues,...Object.keys(this.formattingOptionsValues));}
get formattedImportOptions(){const options=this.importOptions;options.date_format=humanToStrftimeFormat(options.date_format);options.datetime_format=humanToStrftimeFormat(options.datetime_format);return options;}
get importOptions(){const tempImportOptions={import_skip_records:[],import_set_empty_fields:[],fallback_values:{},name_create_enabled_fields:{},};for(const[name,option]of Object.entries(this.importOptionsValues)){tempImportOptions[name]=option.value;}
for(const key in this.fieldsToHandle){const value=this.fieldsToHandle[key];if(value){if(value.optionName==="import_skip_records"){tempImportOptions.import_skip_records.push(key);}else if(value.optionName==="import_set_empty_fields"){tempImportOptions.import_set_empty_fields.push(key);}else if(value.optionName==="name_create_enabled_fields"){tempImportOptions.name_create_enabled_fields[key]=true;}else if(value.optionName==="fallback_values"){tempImportOptions.fallback_values[key]=value.value;}}}
this._importOptions=tempImportOptions;return tempImportOptions;}
set importOptions(options){for(const key in options){this.importOptionsValues[key].value=options[key];}}
block(message,blockComponent){mainComponentRegistry.add("ImportBlockUI",{Component:ImportBlockUI,props:{blockComponent,message,},},{force:true});}
unblock(){mainComponentRegistry.remove("ImportBlockUI");}
async init(){[this.importTemplates,this.id]=await Promise.all([this.orm.call(this.resModel,"get_import_templates",[],{context:this.context,}),this.orm.call("base_import.import","create",[{res_model:this.resModel}]),]);}
async executeImport(isTest=false,totalSteps,importProgress){this.handleInterruption=false;this._updateComments();this.importMessages=[];const startRow=this.importOptions.skip;const importRes={ids:[],fields:this.columns.map((e)=>Boolean(e.fieldInfo)&&e.fieldInfo.fieldPath),columns:this.columns.map((e)=>e.name.trim().toLowerCase()),hasError:false,};for(let i=1;i<=totalSteps;i++){if(this.handleInterruption){if(importRes.hasError||isTest){importRes.nextrow=startRow;this.setOption("skip",startRow);}
break;}
const error=await this._executeImportStep(isTest,importRes);if(error){const errorData=error.data||{};const message=errorData.arguments&&(errorData.arguments[1]||errorData.arguments[0])||_t("An unknown issue occurred during import (possibly lost connection, data limit exceeded or memory limits exceeded). Please retry in case the issue is transient. If the issue still occurs, try to split the file rather than import it at once.");if(error.message){this._addMessage("danger",[error.message,message]);}else{this._addMessage("danger",[message]);}
importRes.hasError=true;break;}
if(importProgress){importProgress.step=i;importProgress.value=Math.round((100*(i-1))/totalSteps);}}
if(!importRes.hasError){if(importRes.nextrow){this._addMessage("warning",[_t("Click 'Resume' to proceed with the import, resuming at line %s.",importRes.nextrow+1),_t("You can test or reload your file before resuming the import."),]);}
if(isTest){this._addMessage("info",[_t("Everything seems valid.")]);}}else{importRes.nextrow=startRow;}
return{res:importRes};}
async updateData(fileChanged=false){if(fileChanged){this.importOptionsValues.sheet.value="";}
this.importMessages=[];const res=await this.orm.call("base_import.import","parse_preview",[this.id,this.formattedImportOptions,]);if(!res.error){res.options.date_format=strftimeToHumanFormat(res.options.date_format);res.options.datetime_format=strftimeToHumanFormat(res.options.datetime_format);this._onLoadSuccess(res);}else{this._onLoadError();}
return{res,error:res.error};}
async setOption(optionName,value,fieldName){if(fieldName){this.fieldsToHandle[fieldName]={optionName,value,};return;}
this.importOptionsValues[optionName].value=value;if(this.importOptionsValues[optionName].reloadParse){return this.updateData();}}
setColumnField(column,fieldInfo){column.fieldInfo=fieldInfo;this._updateComments(column);}
isColumnFieldSet(column){return column.fieldInfo!=null;}
stopImport(){this.handleInterruption=true;}
_addMessage(type,lines){const importMsgs=this.importMessages;importMsgs.push({type:type.replace("error","danger"),lines,});this.importMessages=importMsgs;}
async _executeImportStep(isTest,importRes){const importArgs=[this.id,importRes.fields,importRes.columns,this.formattedImportOptions,];const{ids,messages,nextrow,name,error}=await this._callImport(isTest,importArgs);if(error){return error;}
if(ids){importRes.ids=importRes.ids.concat(ids);}
if(messages&&messages.length){importRes.hasError=true;this.stopImport();if(this._handleImportErrors(messages,name)){return false;}}
this.setOption("skip",nextrow||0);importRes.nextrow=nextrow;return false;}
async _callImport(dryrun,args){try{const res=await this.orm.silent.call("base_import.import","execute_import",args,{dryrun,context:{...this.context,tracking_disable:this.importOptions.tracking_disable,},});return res;}catch(error){return{error};}}
_handleImportErrors(messages,name){if(messages[0].not_matching_error){this._addMessage(messages[0].type,[messages[0].message]);return true;}
const sortedMessages=this._groupErrorsByField(messages);if(sortedMessages[0]){this._addMessage(sortedMessages[0].type,[sortedMessages[0].message]);delete sortedMessages[0];}else{this._addMessage("danger",[_t("The file contains blocking errors (see below)")]);}
for(const[columnFieldId,errors]of Object.entries(sortedMessages)){const column=this.columns.find((e)=>e.fieldInfo&&e.fieldInfo.fieldPath===columnFieldId);if(column){column.resultNames=name;column.errors=errors;}else{for(const error of errors){if(error.record!==undefined){this._addMessage("danger",[error.rows.from===error.rows.to?_t('Error at row %s: "%s"',error.record,error.message):_t("%s at multiple rows",error.message),]);}
else{this._addMessage("danger",[error.message]);}}}}}
_groupErrorsByField(messages){const groupedErrors={};const errorsByMessage=groupBy(this._sortErrors(messages),(f)=>f.message||"0");for(const[message,errors]of Object.entries(errorsByMessage)){if(!message.record){const foundError=errors.find((e)=>e.record===undefined);if(foundError){groupedErrors[0]=foundError;continue;}}
errors[0].rows.to=errors[errors.length-1].rows.to;const fieldId=errors[0].field_path?errors[0].field_path.join("/"):errors[0].field;if(groupedErrors[fieldId]){groupedErrors[fieldId].push(errors[0]);}else{groupedErrors[fieldId]=[errors[0]];}}
return groupedErrors;}
_sortErrors(messages){return sortBy(messages,(e)=>["error","warning","info"].indexOf(e.priority));}
_onLoadSuccess(res){for(const key in res.options){if(this.importOptionsValues[key]){this.importOptionsValues[key].value=res.options[key];}}
if(!res.fields.length){this.importOptionsValues.advanced.value=res.advanced_mode;}
this.fields=res.fields;this.columns=this._getColumns(res);if(res.headers.length===1){this._addMessage("warning",[_t("A single column was found in the file, this often means the file separator is incorrect."),]);}
this._updateComments();}
_onLoadError(){this.columns=[];this.importMessages=[];}
_getColumns(res){function getId(res,index){return res.matches&&index in res.matches&&res.matches[index].length>0?res.matches[index].join("/"):undefined;}
if(this.importOptions.has_headers&&res.headers&&res.preview.length>0){return res.headers.flatMap((header,index)=>{return this._createColumn(res,getId(res,index),header,index,res.preview[index],res.preview[index][0]);});}else if(res.preview&&res.preview.length>=2){return res.preview.flatMap((preview,index)=>this._createColumn(res,preview[0],this.importOptions.has_headers?preview[0]:preview.join(", "),index,preview,preview[1]));}
return[];}
_createColumn(res,id,name,index,previews,preview){const fields=this._getFields(res,index);return{id,name,preview,previews,fields,fieldInfo:this._findField(fields,id),comments:[],errors:[],};}
_findField(fields,id){return Object.entries(fields).flatMap((e)=>e[1]).find((field)=>field.fieldPath===id);}
_getFields(res,index){const advanced=this.importOptionsValues.advanced.value;const fields={basic:[],suggested:[],additional:[],relational:[],};function isRegular(subfields){return(!subfields||subfields.length===0||(subfields.length===2&&subfields[0].name==="id"&&subfields[1].name===".id"));}
function hasType(types,field){return types&&types.indexOf(field.type)!==-1;}
const sortSingleField=(field,ancestors,collection,types)=>{ancestors.push(field);field.fieldPath=ancestors.map((f)=>f.name).join("/");field.label=ancestors.map((f)=>f.string).join(" / ");if(!collection){if(field.name==="id"){collection=fields.basic;}else if(isRegular(field.fields)){collection=hasType(types,field)?fields.suggested:fields.additional;}else{collection=fields.relational;}}
collection.push(field);if(advanced){for(const subfield of field.fields){sortSingleField(subfield,[...ancestors],collection,types);}}};for(const field of this.fields){if(!field.isRelation){if(advanced){sortSingleField(field,[],undefined,["all"]);}else{const acceptedTypes=res.header_types[index];sortSingleField(field,[],undefined,acceptedTypes);}}}
return fields;}
_updateComments(updatedColumn){for(const column of this.columns){column.comments=[];column.errors=[];column.resultNames=[];column.importOptions=column.fieldInfo&&this.fieldsToHandle[column.fieldInfo.fieldPath];if(!column.fieldInfo){continue;}
if(["char","text","many2many"].includes(column.fieldInfo.type)){if(column.fieldInfo.type==="many2many"){column.comments.push({type:"info",content:_t("To import multiple values, separate them by a comma."),});}
const samefieldColumns=this.columns.filter((col)=>col.fieldInfo&&col.fieldInfo.fieldPath===column.fieldInfo.fieldPath);if(samefieldColumns.length>=2){column.comments.push({type:"info",content:_t("This column will be concatenated in field"),fieldName:column.fieldInfo.string,});}}else if(updatedColumn&&column.id!==updatedColumn.id&&updatedColumn.fieldInfo){if(updatedColumn.fieldInfo.fieldPath===column.fieldInfo.fieldPath){column.fieldInfo=null;}}}}
_getCSVFormattingOptions(){return{encoding:{label:_t("Encoding:"),type:"select",value:"",options:["utf-8","utf-16","windows-1252","latin1","latin2","big5","gb18030","shift_jis","windows-1251","koi8_r",],},separator:{label:_t("Separator:"),type:"select",value:"",options:[{value:",",label:_t("Comma")},{value:";",label:_t("Semicolon")},{value:"\t",label:_t("Tab")},{value:" ",label:_t("Space")},],},quoting:{label:_t("Text Delimiter:"),type:"input",value:'"',},date_format:{help:_t("Use YYYY to represent the year, MM for the month and DD for the day. Include separators such as a dot, forward slash or dash. You can use a custom format in addition to the suggestions provided. Leave empty to let Odoo guess the format (recommended)"),label:_t("Date Format:"),type:"input",value:"",options:["YYYY-MM-DD","YYYY/MM/DD","DD/MM/YYYY","DDMMYYYY","MM/DD/YYYY","MMDDYYYY",],},datetime_format:{help:_t("Use HH for hours in a 24h system, use II in conjonction with 'p' for a 12h system. You can use a custom format in addition to the suggestions provided. Leave empty to let Odoo guess the format (recommended)"),label:_t("Datetime Format:"),type:"input",value:"",options:["YYYY-MM-DD HH:mm:SS","YYYY/MM/DD HH:mm:SS","DD/MM/YYYY HH:mm:SS","DDMMYYYY HH:mm:SS","MM/DD/YYYY II:mm:SS p","MMDDYYYY II:mm:SS p",],},float_thousand_separator:{label:_t("Thousands Separator:"),type:"select",value:",",options:[{value:",",label:_t("Comma")},{value:".",label:_t("Dot")},{value:"",label:_t("No Separator")},],},float_decimal_separator:{label:_t("Decimals Separator:"),type:"select",value:".",options:[{value:",",label:_t("Comma")},{value:".",label:_t("Dot")},],},};}}
__exports.useImportModel=useImportModel;function useImportModel({env,resModel,context,orm}){return useState(new BaseImportModel({env,resModel,context,orm}));}
return __exports;});;

/* /base_import/static/src/import_records/import_records.js */
odoo.define('@base_import/import_records/import_records',['@web/core/dropdown/dropdown_item','@web/core/registry','@web/core/utils/hooks','@web/views/utils','@odoo/owl','@web/search/action_menus/action_menus'],function(require){'use strict';let __exports={};const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{archParseBoolean}=require("@web/views/utils");const{Component}=require("@odoo/owl");const{STATIC_ACTIONS_GROUP_NUMBER}=require("@web/search/action_menus/action_menus");const cogMenuRegistry=registry.category("cogMenu");const ImportRecords=__exports.ImportRecords=class ImportRecords extends Component{static template="base_import.ImportRecords";static components={DropdownItem};setup(){this.action=useService("action");}
importRecords(){const{context,resModel}=this.env.searchModel;this.action.doAction({type:"ir.actions.client",tag:"import",params:{model:resModel,context},});}}
const importRecordsItem=__exports.importRecordsItem={Component:ImportRecords,groupNumber:STATIC_ACTIONS_GROUP_NUMBER,isDisplayed:({config,isSmall})=>!isSmall&&config.actionType==="ir.actions.act_window"&&["kanban","list"].includes(config.viewType)&&archParseBoolean(config.viewArch.getAttribute("import"),true)&&archParseBoolean(config.viewArch.getAttribute("create"),true),};cogMenuRegistry.add("import-menu",importRecordsItem,{sequence:1});return __exports;});;

/* /base_import_module/static/src/base_import_list_renderer.js */
odoo.define('@base_import_module/base_import_list_renderer',['@web/views/list/list_renderer'],function(require){'use strict';let __exports={};const{ListRenderer}=require("@web/views/list/list_renderer");const ImportModuleListRenderer=__exports.ImportModuleListRenderer=class ImportModuleListRenderer extends ListRenderer{get hasSelectors(){return super.hasSelectors&&this.props.list.records.every(record=>record._values.module_type!='industries');}
async onCellClicked(record,column,ev){if(record._values.module_type&&record._values.module_type!=='official'){const re_action={name:"more_info",res_model:"ir.module.module",res_id:-1,type:"ir.actions.act_window",views:[[false,"form"]],context:{'module_name':record._values.name,'module_type':record._values.module_type,}}
this.env.services.action.doAction(re_action);}
else{super.onCellClicked(record,column,ev);}}}
return __exports;});;

/* /base_import_module/static/src/base_import_list_view.js */
odoo.define('@base_import_module/base_import_list_view',['@web/core/registry','@web/views/list/list_view','@base_import_module/base_import_list_renderer'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{listView}=require("@web/views/list/list_view");const{ImportModuleListRenderer}=require("@base_import_module/base_import_list_renderer");const ImportModuleListView=__exports.ImportModuleListView={...listView,Renderer:ImportModuleListRenderer,}
registry.category("views").add("ir_module_module_tree_view",ImportModuleListView);return __exports;});;

/* /bus/static/src/bus_parameters_service.js */
odoo.define('@bus/bus_parameters_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const busParametersService=__exports.busParametersService={start(){return{serverURL:window.origin,};},};registry.category("services").add("bus.parameters",busParametersService);return __exports;});;

/* /bus/static/src/im_status_service.js */
odoo.define('@bus/im_status_service',['@web/core/browser/browser','@web/core/registry','@web/session'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const AWAY_DELAY=__exports.AWAY_DELAY=30*60*1000;const FIRST_UPDATE_DELAY=__exports.FIRST_UPDATE_DELAY=500;const UPDATE_BUS_PRESENCE_DELAY=__exports.UPDATE_BUS_PRESENCE_DELAY=60000;const imStatusService=__exports.imStatusService={dependencies:["bus_service","presence","user"],start(env,{bus_service,presence,user}){let lastSentInactivity;let becomeAwayTimeout;const updateBusPresence=()=>{lastSentInactivity=presence.getInactivityPeriod();startAwayTimeout();bus_service.send("update_presence",{inactivity_period:lastSentInactivity,im_status_ids_by_model:{},});};this.updateBusPresence=updateBusPresence;const startAwayTimeout=()=>{clearTimeout(becomeAwayTimeout);const awayTime=AWAY_DELAY-lastSentInactivity;if(awayTime>0){becomeAwayTimeout=browser.setTimeout(()=>updateBusPresence(),awayTime);}};bus_service.addEventListener("connect",()=>updateBusPresence(),{once:true});bus_service.subscribe("bus.bus/im_status_updated",async({partner_id,im_status})=>{if(session.is_public||!partner_id||partner_id!==user.partnerId){return;}
const isOnline=presence.getInactivityPeriod()<AWAY_DELAY;if(im_status==="offline"||(im_status==="away"&&isOnline)){this.updateBusPresence();}});presence.bus.addEventListener("presence",()=>{if(lastSentInactivity>=AWAY_DELAY){this.updateBusPresence();}
startAwayTimeout();});return{registerToImStatus(model,ids){},unregisterFromImStatus(model){},};},};registry.category("services").add("im_status",imStatusService);return __exports;});;

/* /bus/static/src/misc.js */
odoo.define('@bus/misc',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");function throttle(func,wait,options){let timeout,context,args,result;let previous=0;if(!options){options={};}
const later=function(){previous=options.leading===false?0:Date.now();timeout=null;result=func.apply(context,args);if(!timeout){context=args=null;}};const throttled=function(){const _now=Date.now();if(!previous&&options.leading===false){previous=_now;}
const remaining=wait-(_now-previous);context=this;args=arguments;if(remaining<=0||remaining>wait){if(timeout){browser.clearTimeout(timeout);timeout=null;}
previous=_now;result=func.apply(context,args);if(!timeout){context=args=null;}}else if(!timeout&&options.trailing!==false){timeout=browser.setTimeout(later,remaining);}
return result;};throttled.cancel=function(){browser.clearTimeout(timeout);previous=0;timeout=context=args=null;};return throttled;}
const timings=__exports.timings={throttle,};return __exports;});;

/* /bus/static/src/multi_tab_service.js */
odoo.define('@bus/multi_tab_service',['@web/core/registry','@web/core/browser/browser','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{EventBus}=require("@odoo/owl");let multiTabId=0;const multiTabService=__exports.multiTabService={start(){const bus=new EventBus();const TAB_HEARTBEAT_PERIOD=10000;const MAIN_TAB_HEARTBEAT_PERIOD=1500;const HEARTBEAT_OUT_OF_DATE_PERIOD=5000;const HEARTBEAT_KILL_OLD_PERIOD=15000;const PRIVATE_LOCAL_STORAGE_KEYS=["main","heartbeat"];let _isOnMainTab=false;let lastHeartbeat=0;let heartbeatTimeout;const sanitizedOrigin=location.origin.replace(/:\/{0,2}/g,"_");const localStoragePrefix=`${this.name}.${sanitizedOrigin}.`;const now=new Date().getTime();const tabId=`${this.name}${multiTabId++}:${now}`;function generateLocalStorageKey(baseKey){return localStoragePrefix+baseKey;}
function getItemFromStorage(key,defaultValue){const item=browser.localStorage.getItem(generateLocalStorageKey(key));try{return item?JSON.parse(item):defaultValue;}catch{return item;}}
function setItemInStorage(key,value){browser.localStorage.setItem(generateLocalStorageKey(key),JSON.stringify(value));}
function startElection(){if(_isOnMainTab){return;}
const now=new Date().getTime();const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});const heartbeatKillOld=now-HEARTBEAT_KILL_OLD_PERIOD;let newMain;for(const[tab,lastPresence]of Object.entries(lastPresenceByTab)){if(lastPresence<heartbeatKillOld){continue;}
newMain=tab;break;}
if(newMain===tabId){lastHeartbeat=now;setItemInStorage("heartbeat",lastHeartbeat);setItemInStorage("main",true);_isOnMainTab=true;bus.trigger("become_main_tab");delete lastPresenceByTab[newMain];setItemInStorage("lastPresenceByTab",lastPresenceByTab);}}
function heartbeat(){const now=new Date().getTime();let heartbeatValue=getItemFromStorage("heartbeat",0);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});if(heartbeatValue+HEARTBEAT_OUT_OF_DATE_PERIOD<now){startElection();heartbeatValue=getItemFromStorage("heartbeat",0);}
if(_isOnMainTab){const cleanedTabs={};for(const[tabId,lastPresence]of Object.entries(lastPresenceByTab)){if(lastPresence+HEARTBEAT_KILL_OLD_PERIOD>now){cleanedTabs[tabId]=lastPresence;}}
if(heartbeatValue!==lastHeartbeat){_isOnMainTab=false;lastHeartbeat=0;lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);bus.trigger("no_longer_main_tab");}else{lastHeartbeat=now;setItemInStorage("heartbeat",now);setItemInStorage("lastPresenceByTab",cleanedTabs);}}else{lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);}
const hbPeriod=_isOnMainTab?MAIN_TAB_HEARTBEAT_PERIOD:TAB_HEARTBEAT_PERIOD;heartbeatTimeout=browser.setTimeout(heartbeat,hbPeriod);}
function onStorage({key,newValue}){if(key===generateLocalStorageKey("main")&&!newValue){startElection();}
if(PRIVATE_LOCAL_STORAGE_KEYS.includes(key)){return;}
if(key&&key.includes(localStoragePrefix)){const baseKey=key.replace(localStoragePrefix,"");bus.trigger("shared_value_updated",{key:baseKey,newValue});}}
function unregister(){clearTimeout(heartbeatTimeout);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});delete lastPresenceByTab[tabId];setItemInStorage("lastPresenceByTab",lastPresenceByTab);if(_isOnMainTab){_isOnMainTab=false;bus.trigger("no_longer_main_tab");browser.localStorage.removeItem(generateLocalStorageKey("main"));}}
browser.addEventListener("pagehide",unregister);browser.addEventListener("storage",onStorage);const lastPresenceByTab=getItemFromStorage("lastPresenceByTab",{});lastPresenceByTab[tabId]=now;setItemInStorage("lastPresenceByTab",lastPresenceByTab);if(!getItemFromStorage("main")){startElection();}
heartbeat();return{bus,get currentTabId(){return tabId;},isOnMainTab(){return _isOnMainTab;},getSharedValue(key,defaultValue){return getItemFromStorage(key,defaultValue);},setSharedValue(key,value){if(value===undefined){return this.removeSharedValue(key);}
setItemInStorage(key,value);},removeSharedValue(key){browser.localStorage.removeItem(generateLocalStorageKey(key));},unregister:unregister,};},};registry.category("services").add("multi_tab",multiTabService);return __exports;});;

/* /bus/static/src/simple_notification_service.js */
odoo.define('@bus/simple_notification_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const simpleNotificationService=__exports.simpleNotificationService={dependencies:["bus_service","notification"],start(env,{bus_service,notification:notificationService}){bus_service.subscribe("simple_notification",({message,sticky,title,type})=>{notificationService.add(message,{sticky,title,type});});bus_service.start();},};registry.category("services").add("simple_notification",simpleNotificationService);return __exports;});;

/* /bus/static/src/services/assets_watchdog_service.js */
odoo.define('@bus/services/assets_watchdog_service',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/registry','@web/session'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const assetsWatchdogService=__exports.assetsWatchdogService={dependencies:["bus_service","notification"],start(env,{bus_service,notification}){let isNotificationDisplayed=false;let bundleNotifTimerID=null;bus_service.subscribe("bundle_changed",({server_version})=>{if(server_version!==session.server_version){displayBundleChangedNotification();}});bus_service.start();function displayBundleChangedNotification(){if(!isNotificationDisplayed){browser.clearTimeout(bundleNotifTimerID);bundleNotifTimerID=browser.setTimeout(()=>{notification.add(_t("The page appears to be out of date."),{title:_t("Refresh"),type:"warning",sticky:true,buttons:[{name:_t("Refresh"),primary:true,onClick:()=>{browser.location.reload();},},],onClose:()=>{isNotificationDisplayed=false;},});isNotificationDisplayed=true;},getBundleNotificationDelay());}}
function getBundleNotificationDelay(){return 10000+Math.floor(Math.random()*50)*1000;}},};registry.category("services").add("assetsWatchdog",assetsWatchdogService);return __exports;});;

/* /bus/static/src/services/bus_service.js */
odoo.define('@bus/services/bus_service',['@web/core/browser/browser','@web/core/l10n/translation','@web/core/utils/concurrency','@web/core/registry','@web/session','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{Deferred}=require("@web/core/utils/concurrency");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const{isIosApp}=require("@web/core/browser/feature_detection");const{EventBus}=require("@odoo/owl");const INTERNAL_EVENTS=new Set(["initialized","outdated"]);const busService=__exports.busService={dependencies:["bus.parameters","localization","multi_tab","notification"],async:true,start(env,{multi_tab:multiTab,notification,"bus.parameters":params}){const bus=new EventBus();const notificationBus=new EventBus();let worker;let isActive=false;let isInitialized=false;let isUsingSharedWorker=browser.SharedWorker&&!isIosApp();const startedAt=luxon.DateTime.now().set({milliseconds:0});const connectionInitializedDeferred=new Deferred();function send(action,data){if(!worker){return;}
const message={action,data};if(isUsingSharedWorker){worker.port.postMessage(message);}else{worker.postMessage(message);}}
function handleMessage(messageEv){const{type}=messageEv.data;let{data}=messageEv.data;switch(type){case"notification":{data.forEach((d)=>(d.message.id=d.id));multiTab.setSharedValue("last_notification_id",data[data.length-1].id);data=data.map((notification)=>notification.message);for(const{type,payload}of data){notificationBus.trigger(type,payload);}
break;}
case"initialized":{isInitialized=true;connectionInitializedDeferred.resolve();break;}
case"outdated":{multiTab.unregister();notification.add(_t("Save your work and refresh to get the latest updates and avoid potential issues."),{title:_t("The page is out of date"),type:"warning",sticky:true,buttons:[{name:_t("Refresh"),primary:true,onClick:()=>{browser.location.reload();},},],});break;}}
if(!INTERNAL_EVENTS.has(type)){bus.trigger(type,data);}}
function initializeWorkerConnection(){let uid=Array.isArray(session.user_id)?session.user_id[0]:session.user_id;if(!uid&&uid!==undefined){uid=false;}
send("initialize_connection",{websocketURL:`${params.serverURL.replace("http", "ws")}/websocket?version=${
                    session.websocket_worker_version
                }`,db:session.db,debug:odoo.debug,lastNotificationId:multiTab.getSharedValue("last_notification_id",0),uid,startTs:startedAt.valueOf(),});}
function startWorker(){let workerURL=`${params.serverURL}/bus/websocket_worker_bundle?v=${session.websocket_worker_version}`;if(params.serverURL!==window.origin){const source=`importScripts("${workerURL}");`;workerURL="data:application/javascript;base64,"+window.btoa(source);}
const workerClass=isUsingSharedWorker?browser.SharedWorker:browser.Worker;worker=new workerClass(workerURL,{name:isUsingSharedWorker?"odoo:websocket_shared_worker":"odoo:websocket_worker",});worker.addEventListener("error",(e)=>{if(!isInitialized&&workerClass===browser.SharedWorker){console.warn('Error while loading "bus_service" SharedWorker, fallback on Worker.');isUsingSharedWorker=false;startWorker();}else if(!isInitialized){isInitialized=true;connectionInitializedDeferred.resolve();console.warn("Bus service failed to initialized.");}});if(isUsingSharedWorker){worker.port.start();worker.port.addEventListener("message",handleMessage);}else{worker.addEventListener("message",handleMessage);}
initializeWorkerConnection();}
browser.addEventListener("pagehide",({persisted})=>{if(!persisted){send("leave");}});browser.addEventListener("online",()=>{if(isActive){send("start");}});browser.addEventListener("offline",()=>send("stop"));return{addEventListener:bus.addEventListener.bind(bus),addChannel:async(channel)=>{if(!worker){startWorker();await connectionInitializedDeferred;}
send("add_channel",channel);send("start");isActive=true;},deleteChannel:(channel)=>send("delete_channel",channel),forceUpdateChannels:()=>send("force_update_channels"),trigger:bus.trigger.bind(bus),removeEventListener:bus.removeEventListener.bind(bus),send:(eventName,data)=>send("send",{event_name:eventName,data}),start:async()=>{if(!worker){startWorker();await connectionInitializedDeferred;}
send("start");isActive=true;},stop:()=>{send("leave");isActive=false;},get isActive(){return isActive;},subscribe(notificationType,callback){notificationBus.addEventListener(notificationType,({detail})=>callback(detail));},startedAt,};},};registry.category("services").add("bus_service",busService);return __exports;});;

/* /bus/static/src/services/presence_service.js */
odoo.define('@bus/services/presence_service',['@odoo/owl','@web/core/browser/browser','@web/core/registry'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const presenceService=__exports.presenceService={start(env){const LOCAL_STORAGE_PREFIX="presence";const bus=new EventBus();let isOdooFocused=true;let lastPresenceTime=browser.localStorage.getItem(`${LOCAL_STORAGE_PREFIX}.lastPresence`)||new Date().getTime();function onPresence(){lastPresenceTime=new Date().getTime();browser.localStorage.setItem(`${LOCAL_STORAGE_PREFIX}.lastPresence`,lastPresenceTime);bus.trigger("presence");}
function onFocusChange(isFocused){try{isFocused=parent.document.hasFocus();}catch{}
isOdooFocused=isFocused;browser.localStorage.setItem(`${LOCAL_STORAGE_PREFIX}.focus`,isOdooFocused);if(isOdooFocused){lastPresenceTime=new Date().getTime();env.bus.trigger("window_focus",isOdooFocused);}}
function onStorage({key,newValue}){if(key===`${LOCAL_STORAGE_PREFIX}.focus`){isOdooFocused=JSON.parse(newValue);env.bus.trigger("window_focus",newValue);}
if(key===`${LOCAL_STORAGE_PREFIX}.lastPresence`){lastPresenceTime=JSON.parse(newValue);bus.trigger("presence");}}
browser.addEventListener("storage",onStorage);browser.addEventListener("focus",()=>onFocusChange(true));browser.addEventListener("blur",()=>onFocusChange(false));browser.addEventListener("pagehide",()=>onFocusChange(false));browser.addEventListener("click",onPresence);browser.addEventListener("keydown",onPresence);return{bus,getLastPresence(){return lastPresenceTime;},isOdooFocused(){return isOdooFocused;},getInactivityPeriod(){return new Date().getTime()-this.getLastPresence();},};},};registry.category("services").add("presence",presenceService);return __exports;});;

/* /bus/static/src/workers/websocket_worker.js */
odoo.define('@bus/workers/websocket_worker',['@bus/workers/websocket_worker_utils'],function(require){'use strict';let __exports={};const{debounce,Deferred}=require("@bus/workers/websocket_worker_utils");const WEBSOCKET_CLOSE_CODES=__exports.WEBSOCKET_CLOSE_CODES=Object.freeze({CLEAN:1000,GOING_AWAY:1001,PROTOCOL_ERROR:1002,INCORRECT_DATA:1003,ABNORMAL_CLOSURE:1006,INCONSISTENT_DATA:1007,MESSAGE_VIOLATING_POLICY:1008,MESSAGE_TOO_BIG:1009,EXTENSION_NEGOTIATION_FAILED:1010,SERVER_ERROR:1011,RESTART:1012,TRY_LATER:1013,BAD_GATEWAY:1014,SESSION_EXPIRED:4001,KEEP_ALIVE_TIMEOUT:4002,RECONNECTING:4003,});const WORKER_VERSION=__exports.WORKER_VERSION="17.0-1";const MAXIMUM_RECONNECT_DELAY=60000;const WebsocketWorker=__exports.WebsocketWorker=class WebsocketWorker{INITIAL_RECONNECT_DELAY=1000;RECONNECT_JITTER=1000;constructor(){this.newestStartTs=undefined;this.websocketURL="";this.currentUID=null;this.currentDB=null;this.isWaitingForNewUID=true;this.channelsByClient=new Map();this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.connectTimeout=null;this.debugModeByClient=new Map();this.isDebug=false;this.active=true;this.isReconnecting=false;this.lastChannelSubscription=null;this.firstSubscribeDeferred=new Deferred();this.lastNotificationId=0;this.messageWaitQueue=[];this._forceUpdateChannels=debounce(this._forceUpdateChannels,300);this._debouncedUpdateChannels=debounce(this._updateChannels,300);this._debouncedSendToServer=debounce(this._sendToServer,300);this._onWebsocketClose=this._onWebsocketClose.bind(this);this._onWebsocketError=this._onWebsocketError.bind(this);this._onWebsocketMessage=this._onWebsocketMessage.bind(this);this._onWebsocketOpen=this._onWebsocketOpen.bind(this);}
broadcast(type,data){for(const client of this.channelsByClient.keys()){client.postMessage({type,data});}}
registerClient(messagePort){messagePort.onmessage=(ev)=>{this._onClientMessage(messagePort,ev.data);};this.channelsByClient.set(messagePort,[]);}
sendToClient(client,type,data){client.postMessage({type,data});}
_onClientMessage(client,{action,data}){switch(action){case"send":{if(data["event_name"]==="update_presence"){this._debouncedSendToServer(data);}else{this._sendToServer(data);}
return;}
case"start":return this._start();case"stop":return this._stop();case"leave":return this._unregisterClient(client);case"add_channel":return this._addChannel(client,data);case"delete_channel":return this._deleteChannel(client,data);case"force_update_channels":return this._forceUpdateChannels();case"initialize_connection":return this._initializeConnection(client,data);}}
_addChannel(client,channel){const clientChannels=this.channelsByClient.get(client);if(!clientChannels.includes(channel)){clientChannels.push(channel);this.channelsByClient.set(client,clientChannels);this._debouncedUpdateChannels();}}
_deleteChannel(client,channel){const clientChannels=this.channelsByClient.get(client);if(!clientChannels){return;}
const channelIndex=clientChannels.indexOf(channel);if(channelIndex!==-1){clientChannels.splice(channelIndex,1);this._debouncedUpdateChannels();}}
_forceUpdateChannels(){this._updateChannels({force:true});}
_unregisterClient(client){this.channelsByClient.delete(client);this.debugModeByClient.delete(client);this.isDebug=Object.values(this.debugModeByClient).some((debugValue)=>debugValue!=="");this._debouncedUpdateChannels();}
_initializeConnection(client,{db,debug,lastNotificationId,uid,websocketURL,startTs}){if(this.newestStartTs&&this.newestStartTs>startTs){this.debugModeByClient[client]=debug;this.isDebug=Object.values(this.debugModeByClient).some((debugValue)=>debugValue!=="");this.sendToClient(client,"initialized");return;}
this.newestStartTs=startTs;this.websocketURL=websocketURL;this.lastNotificationId=lastNotificationId;this.debugModeByClient[client]=debug;this.isDebug=Object.values(this.debugModeByClient).some((debugValue)=>debugValue!=="");const isCurrentUserKnown=uid!==undefined;if(this.isWaitingForNewUID&&isCurrentUserKnown){this.isWaitingForNewUID=false;this.currentUID=uid;}
if((this.currentUID!==uid&&isCurrentUserKnown)||this.currentDB!==db){this.currentUID=uid;this.currentDB=db;if(this.websocket){this.websocket.close(WEBSOCKET_CLOSE_CODES.CLEAN);}
this.channelsByClient.forEach((_,key)=>this.channelsByClient.set(key,[]));}
this.sendToClient(client,"initialized");if(!this.active){this.sendToClient(client,"outdated");}}
_isWebsocketConnected(){return this.websocket&&this.websocket.readyState===1;}
_isWebsocketConnecting(){return this.websocket&&this.websocket.readyState===0;}
_isWebsocketClosing(){return this.websocket&&this.websocket.readyState===2;}
_onWebsocketClose({code,reason}){if(this.isDebug){console.debug(`%c${new Date().toLocaleString()} - [onClose]`,"color: #c6e; font-weight: bold;",code,reason);}
this.lastChannelSubscription=null;this.firstSubscribeDeferred=new Deferred();if(this.isReconnecting){return;}
this.broadcast("disconnect",{code,reason});if(code===WEBSOCKET_CLOSE_CODES.CLEAN){if(reason==="OUTDATED_VERSION"){console.warn("Worker deactivated due to an outdated version.");this.active=false;this.broadcast("outdated");}
return;}
this.broadcast("reconnecting",{closeCode:code});this.isReconnecting=true;if(code===WEBSOCKET_CLOSE_CODES.KEEP_ALIVE_TIMEOUT){this.connectRetryDelay=0;}
if(code===WEBSOCKET_CLOSE_CODES.SESSION_EXPIRED){this.isWaitingForNewUID=true;}
this._retryConnectionWithDelay();}
_onWebsocketError(){if(this.isDebug){console.debug(`%c${new Date().toLocaleString()} - [onError]`,"color: #c6e; font-weight: bold;");}
this._retryConnectionWithDelay();}
_onWebsocketMessage(messageEv){const notifications=JSON.parse(messageEv.data);if(this.isDebug){console.debug(`%c${new Date().toLocaleString()} - [onMessage]`,"color: #c6e; font-weight: bold;",notifications);}
this.lastNotificationId=notifications[notifications.length-1].id;this.broadcast("notification",notifications);}
_onWebsocketOpen(){if(this.isDebug){console.debug(`%c${new Date().toLocaleString()} - [onOpen]`,"color: #c6e; font-weight: bold;");}
this.broadcast(this.isReconnecting?"reconnect":"connect");this._debouncedUpdateChannels();this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.connectTimeout=null;this.isReconnecting=false;this.firstSubscribeDeferred.then(()=>{this.messageWaitQueue.forEach((msg)=>this.websocket.send(msg));this.messageWaitQueue=[];});}
_retryConnectionWithDelay(){this.connectRetryDelay=Math.min(this.connectRetryDelay*1.5,MAXIMUM_RECONNECT_DELAY)+
this.RECONNECT_JITTER*Math.random();this.connectTimeout=setTimeout(this._start.bind(this),this.connectRetryDelay);}
_sendToServer(message){const payload=JSON.stringify(message);if(!this._isWebsocketConnected()){if(message["event_name"]==="subscribe"){this.messageWaitQueue=this.messageWaitQueue.filter((msg)=>JSON.parse(msg).event_name!=="subscribe");this.messageWaitQueue.unshift(payload);}else{this.messageWaitQueue.push(payload);}}else{if(message["event_name"]==="subscribe"){this.websocket.send(payload);}else{this.firstSubscribeDeferred.then(()=>this.websocket.send(payload));}}}
_start(){if(!this.active||this._isWebsocketConnected()||this._isWebsocketConnecting()){return;}
if(this.websocket){this.websocket.removeEventListener("open",this._onWebsocketOpen);this.websocket.removeEventListener("message",this._onWebsocketMessage);this.websocket.removeEventListener("error",this._onWebsocketError);this.websocket.removeEventListener("close",this._onWebsocketClose);}
if(this._isWebsocketClosing()){this.lastChannelSubscription=null;this.broadcast("disconnect",{code:WEBSOCKET_CLOSE_CODES.ABNORMAL_CLOSURE});}
this.websocket=new WebSocket(this.websocketURL);this.websocket.addEventListener("open",this._onWebsocketOpen);this.websocket.addEventListener("error",this._onWebsocketError);this.websocket.addEventListener("message",this._onWebsocketMessage);this.websocket.addEventListener("close",this._onWebsocketClose);}
_stop(){clearTimeout(this.connectTimeout);this.connectRetryDelay=this.INITIAL_RECONNECT_DELAY;this.isReconnecting=false;this.lastChannelSubscription=null;if(this.websocket){this.websocket.close();}}
_updateChannels({force=false}={}){const allTabsChannels=[...new Set([].concat.apply([],[...this.channelsByClient.values()])),].sort();const allTabsChannelsString=JSON.stringify(allTabsChannels);const shouldUpdateChannelSubscription=allTabsChannelsString!==this.lastChannelSubscription;if(force||shouldUpdateChannelSubscription){this.lastChannelSubscription=allTabsChannelsString;this._sendToServer({event_name:"subscribe",data:{channels:allTabsChannels,last:this.lastNotificationId},});this.firstSubscribeDeferred.resolve();}}}
return __exports;});;

/* /bus/static/src/workers/websocket_worker_utils.js */
odoo.define('@bus/workers/websocket_worker_utils',[],function(require){'use strict';let __exports={};__exports.debounce=debounce;function debounce(func,wait,immediate){let timeout;return function(){const context=this;const args=arguments;function later(){timeout=null;if(!immediate){func.apply(context,args);}}
const callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow){func.apply(context,args);}};}
const Deferred=__exports.Deferred=class Deferred extends Promise{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /iap/static/src/action_buttons_widget/action_buttons_widget.js */
odoo.define('@iap/action_buttons_widget/action_buttons_widget',['@web/core/registry','@web/core/utils/hooks','@web/views/widgets/standard_widget_props','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{standardWidgetProps}=require("@web/views/widgets/standard_widget_props");const{Component}=require("@odoo/owl");class IAPActionButtonsWidget extends Component{setup(){this.orm=useService("orm");this.action=useService("action");}
async onViewServicesClicked(){this.action.doAction("iap.iap_account_action");}
async onBuyLinkClicked(){const url=await this.orm.silent.call("iap.account","get_credits_url",[this.props.serviceName]);this.action.doAction({type:"ir.actions.act_url",url:url,});}}
IAPActionButtonsWidget.template="iap.ActionButtonsWidget";IAPActionButtonsWidget.props={...standardWidgetProps,serviceName:String,showServiceButtons:Boolean,};const iapActionButtonsWidget=__exports.iapActionButtonsWidget={component:IAPActionButtonsWidget,extractProps:({attrs})=>{return{serviceName:attrs.service_name,showServiceButtons:!Boolean(attrs.hide_service),};},};registry.category("view_widgets").add("iap_buy_more_credits",iapActionButtonsWidget);return __exports;});;

/* /iap/static/src/js/insufficient_credit_error_handler.js */
odoo.define('@iap/js/insufficient_credit_error_handler',['@web/core/dialog/dialog','@web/core/registry','@web/core/utils/hooks','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");class InsufficientCreditDialog extends Component{setup(){this.orm=useService("orm");onWillStart(this.onWillStart);}
async onWillStart(){const{errorData}=this.props;this.url=await this.orm.call("iap.account","get_credits_url",[],{base_url:errorData.base_url,service_name:errorData.service_name,credit:errorData.credit,trial:errorData.trial,});this.style=errorData.body?"padding:0;":"";const{isEnterprise}=odoo.info;if(errorData.trial&&isEnterprise){this.buttonMessage=_t("Start a Trial at Odoo");}else{this.buttonMessage=_t("Buy credits");}}
buyCredits(){window.open(this.url,"_blank");this.props.close();}}
InsufficientCreditDialog.components={Dialog};InsufficientCreditDialog.template="iap.InsufficientCreditDialog";function insufficientCreditHandler(env,error,originalError){if(!originalError){return false;}
const{data}=originalError;if(data&&data.name==="odoo.addons.iap.tools.iap_tools.InsufficientCreditError"){env.services.dialog.add(InsufficientCreditDialog,{errorData:JSON.parse(data.message),});return true;}
return false;}
registry.category("error_handlers").add("insufficientCreditHandler",insufficientCreditHandler,{sequence:0});return __exports;});;

/* /web_editor/static/lib/vkbeautify/vkbeautify.0.99.00.beta.js */
(function(){function createShiftArr(step){var space='    ';if(isNaN(parseInt(step))){space=step;}else{switch(step){case 1:space=' ';break;case 2:space='  ';break;case 3:space='   ';break;case 4:space='    ';break;case 5:space='     ';break;case 6:space='      ';break;case 7:space='       ';break;case 8:space='        ';break;case 9:space='         ';break;case 10:space='          ';break;case 11:space='           ';break;case 12:space='            ';break;}}
var shift=['\n'];for(ix=0;ix<100;ix++){shift.push(shift[ix]+space);}
return shift;}
function vkbeautify(){this.step='    ';this.shift=createShiftArr(this.step);};vkbeautify.prototype.xml=function(text,step){var ar=text.replace(/>\s{0,}</g,"><").replace(/</g,"~::~<").replace(/\s*xmlns\:/g,"~::~xmlns:").replace(/\s*xmlns\=/g,"~::~xmlns=").split('~::~'),len=ar.length,inComment=false,deep=0,str='',ix=0,shift=step?createShiftArr(step):this.shift;for(ix=0;ix<len;ix++){if(ar[ix].search(/<!/)>-1){str+=shift[deep]+ar[ix];inComment=true;if(ar[ix].search(/-->/)>-1||ar[ix].search(/\]>/)>-1||ar[ix].search(/!DOCTYPE/)>-1){inComment=false;}}else
if(ar[ix].search(/-->/)>-1||ar[ix].search(/\]>/)>-1){str+=ar[ix];inComment=false;}else
if(/^<\w/.exec(ar[ix-1])&&/^<\/\w/.exec(ar[ix])&&/^<[\w:\-\.\,]+/.exec(ar[ix-1])==/^<\/[\w:\-\.\,]+/.exec(ar[ix])[0].replace('/','')){str+=ar[ix];if(!inComment)deep--;}else
if(ar[ix].search(/<\w/)>-1&&ar[ix].search(/<\//)==-1&&ar[ix].search(/\/>/)==-1){str=!inComment?str+=shift[deep++]+ar[ix]:str+=ar[ix];}else
if(ar[ix].search(/<\w/)>-1&&ar[ix].search(/<\//)>-1){str=!inComment?str+=shift[deep]+ar[ix]:str+=ar[ix];}else
if(ar[ix].search(/<\//)>-1){str=!inComment?str+=shift[--deep]+ar[ix]:str+=ar[ix];}else
if(ar[ix].search(/\/>/)>-1){str=!inComment?str+=shift[deep]+ar[ix]:str+=ar[ix];}else
if(ar[ix].search(/<\?/)>-1){str+=shift[deep]+ar[ix];}else
if(ar[ix].search(/xmlns\:/)>-1||ar[ix].search(/xmlns\=/)>-1){str+=shift[deep]+ar[ix];}
else{str+=ar[ix];}}
return(str[0]=='\n')?str.slice(1):str;}
vkbeautify.prototype.json=function(text,step){var step=step?step:this.step;if(typeof JSON==='undefined')return text;if(typeof text==="string")return JSON.stringify(JSON.parse(text),null,step);if(typeof text==="object")return JSON.stringify(text,null,step);return text;}
vkbeautify.prototype.css=function(text,step){var ar=text.replace(/\s{1,}/g,' ').replace(/\{/g,"{~::~").replace(/\}/g,"~::~}~::~").replace(/\;/g,";~::~").replace(/\/\*/g,"~::~/*").replace(/\*\//g,"*/~::~").replace(/~::~\s{0,}~::~/g,"~::~").split('~::~'),len=ar.length,deep=0,str='',ix=0,shift=step?createShiftArr(step):this.shift;for(ix=0;ix<len;ix++){if(/\{/.exec(ar[ix])){str+=shift[deep++]+ar[ix];}else
if(/\}/.exec(ar[ix])){str+=shift[--deep]+ar[ix];}else
if(/\*\\/.exec(ar[ix])){str+=shift[deep]+ar[ix];}
else{str+=shift[deep]+ar[ix];}}
return str.replace(/^\n{1,}/,'');}
function isSubquery(str,parenthesisLevel){return parenthesisLevel-(str.replace(/\(/g,'').length-str.replace(/\)/g,'').length)}
function split_sql(str,tab){return str.replace(/\s{1,}/g," ").replace(/ AND /ig,"~::~"+tab+tab+"AND ").replace(/ BETWEEN /ig,"~::~"+tab+"BETWEEN ").replace(/ CASE /ig,"~::~"+tab+"CASE ").replace(/ ELSE /ig,"~::~"+tab+"ELSE ").replace(/ END /ig,"~::~"+tab+"END ").replace(/ FROM /ig,"~::~FROM ").replace(/ GROUP\s{1,}BY/ig,"~::~GROUP BY ").replace(/ HAVING /ig,"~::~HAVING ").replace(/ IN /ig," IN ").replace(/ JOIN /ig,"~::~JOIN ").replace(/ CROSS~::~{1,}JOIN /ig,"~::~CROSS JOIN ").replace(/ INNER~::~{1,}JOIN /ig,"~::~INNER JOIN ").replace(/ LEFT~::~{1,}JOIN /ig,"~::~LEFT JOIN ").replace(/ RIGHT~::~{1,}JOIN /ig,"~::~RIGHT JOIN ").replace(/ ON /ig,"~::~"+tab+"ON ").replace(/ OR /ig,"~::~"+tab+tab+"OR ").replace(/ ORDER\s{1,}BY/ig,"~::~ORDER BY ").replace(/ OVER /ig,"~::~"+tab+"OVER ").replace(/\(\s{0,}SELECT /ig,"~::~(SELECT ").replace(/\)\s{0,}SELECT /ig,")~::~SELECT ").replace(/ THEN /ig," THEN~::~"+tab+"").replace(/ UNION /ig,"~::~UNION~::~").replace(/ USING /ig,"~::~USING ").replace(/ WHEN /ig,"~::~"+tab+"WHEN ").replace(/ WHERE /ig,"~::~WHERE ").replace(/ WITH /ig,"~::~WITH ").replace(/ ALL /ig," ALL ").replace(/ AS /ig," AS ").replace(/ ASC /ig," ASC ").replace(/ DESC /ig," DESC ").replace(/ DISTINCT /ig," DISTINCT ").replace(/ EXISTS /ig," EXISTS ").replace(/ NOT /ig," NOT ").replace(/ NULL /ig," NULL ").replace(/ LIKE /ig," LIKE ").replace(/\s{0,}SELECT /ig,"SELECT ").replace(/\s{0,}UPDATE /ig,"UPDATE ").replace(/ SET /ig," SET ").replace(/~::~{1,}/g,"~::~").split('~::~');}
vkbeautify.prototype.sql=function(text,step){var ar_by_quote=text.replace(/\s{1,}/g," ").replace(/\'/ig,"~::~\'").split('~::~'),len=ar_by_quote.length,ar=[],deep=0,tab=this.step,inComment=true,inQuote=false,parenthesisLevel=0,str='',ix=0,shift=step?createShiftArr(step):this.shift;;for(ix=0;ix<len;ix++){if(ix%2){ar=ar.concat(ar_by_quote[ix]);}else{ar=ar.concat(split_sql(ar_by_quote[ix],tab));}}
len=ar.length;for(ix=0;ix<len;ix++){parenthesisLevel=isSubquery(ar[ix],parenthesisLevel);if(/\s{0,}\s{0,}SELECT\s{0,}/.exec(ar[ix])){ar[ix]=ar[ix].replace(/\,/g,",\n"+tab+tab+"")}
if(/\s{0,}\s{0,}SET\s{0,}/.exec(ar[ix])){ar[ix]=ar[ix].replace(/\,/g,",\n"+tab+tab+"")}
if(/\s{0,}\(\s{0,}SELECT\s{0,}/.exec(ar[ix])){deep++;str+=shift[deep]+ar[ix];}else
if(/\'/.exec(ar[ix])){if(parenthesisLevel<1&&deep){deep--;}
str+=ar[ix];}
else{str+=shift[deep]+ar[ix];if(parenthesisLevel<1&&deep){deep--;}}
var junk=0;}
str=str.replace(/^\n{1,}/,'').replace(/\n{1,}/g,"\n");return str;}
vkbeautify.prototype.xmlmin=function(text,preserveComments){var str=preserveComments?text:text.replace(/\<![ \r\n\t]*(--([^\-]|[\r\n]|-[^\-])*--[ \r\n\t]*)\>/g,"").replace(/[ \r\n\t]{1,}xmlns/g,' xmlns');return str.replace(/>\s{0,}</g,"><");}
vkbeautify.prototype.jsonmin=function(text){if(typeof JSON==='undefined')return text;return JSON.stringify(JSON.parse(text),null,0);}
vkbeautify.prototype.cssmin=function(text,preserveComments){var str=preserveComments?text:text.replace(/\/\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+\//g,"");return str.replace(/\s{1,}/g,' ').replace(/\{\s{1,}/g,"{").replace(/\}\s{1,}/g,"}").replace(/\;\s{1,}/g,";").replace(/\/\*\s{1,}/g,"/*").replace(/\*\/\s{1,}/g,"*/");}
vkbeautify.prototype.sqlmin=function(text){return text.replace(/\s{1,}/g," ").replace(/\s{1,}\(/,"(").replace(/\s{1,}\)/,")");}
window.vkbeautify=new vkbeautify();})();;

/* /web_editor/static/src/js/common/browser_extensions.js */
odoo.define('@web_editor/js/common/browser_extensions',[],function(require){'use strict';let __exports={};const originalGetRangeAt=Selection.prototype.getRangeAt;Selection.prototype.getRangeAt=function(){let range=originalGetRangeAt.apply(this,arguments);if(range.startContainer&&!Object.getPrototypeOf(range.startContainer)){range=document.createRange();range.setStart(this.anchorNode,0);range.setEnd(this.focusNode,0);}
return range;};return __exports;});;

/* /web_editor/static/src/js/common/column_layout_mixin.js */
odoo.define('@web_editor/js/common/column_layout_mixin',[],function(require){'use strict';let __exports={};const ColumnLayoutMixin=__exports.ColumnLayoutMixin={_getNbColumns(columnEls,isMobile){if(!columnEls){return 0;}
if(this._areColsCustomized(columnEls,isMobile)){return"custom";}
const resolutionModifier=isMobile?"":"lg-";const colRegex=new RegExp(`(?:^|\\s+)col-${resolutionModifier}(\\d{1,2})(?!\\S)`);const colSize=parseInt(columnEls[0].className.match(colRegex)?.[1]||12);const offsetSize=this._getFirstItem(columnEls,isMobile).classList.contains(`offset-${resolutionModifier}1`)?1:0;return Math.floor((12-offsetSize)/colSize);},_getItemMobileOrder(el){const order=el.style.order;return order?[`order-${order}`,order.toString()]:null;},_getFirstItem(columnEls,isMobile){return isMobile&&[...columnEls].find(el=>el.style.order==="0")||columnEls[0];},_addMobileOrders(columnEls){for(let i=0;i<columnEls.length;i++){columnEls[i].style.order=i;columnEls[i].classList.add("order-lg-0");}},_removeMobileOrders(columnEls){for(const el of columnEls){el.style.order="";el.classList.remove("order-lg-0");}},_areColsCustomized(columnEls,isMobile){const resolutionModifier=isMobile?"":"lg-";const colRegex=new RegExp(`(?:^|\\s+)col-${resolutionModifier}(\\d{1,2})(?!\\S)`);const colSize=parseInt(columnEls[0].className.match(colRegex)?.[1]||12);const allColsSizesEqual=[...columnEls].every((columnEl)=>parseInt(columnEl.className.match(colRegex)?.[1]||12)===colSize);if(!allColsSizesEqual){return true;}
const offsetRegex=new RegExp(`(?:^|\\s+)offset-${resolutionModifier}[1-9][0-1]?(?!\\S)`);const nbOffsets=[...columnEls].filter((columnEl)=>columnEl.className.match(offsetRegex)).length;if(nbOffsets===0){return false;}
if(nbOffsets===1&&colSize===2&&this._getFirstItem(columnEls,isMobile).className.match(`offset-${resolutionModifier}1`)){return false;}
return true;},_fillRemovedItemGap(parentEl,itemOrder){[...parentEl.children].forEach(el=>{const elOrder=parseInt(el.style.order);if(elOrder>itemOrder){el.style.order=elOrder-1;}});},};return __exports;});;

/* /web_editor/static/src/js/common/grid_layout_utils.js */
odoo.define('@web_editor/js/common/grid_layout_utils',['@web/core/utils/render','@web_editor/js/editor/odoo-editor/src/utils/utils'],function(require){'use strict';let __exports={};const{renderToElement}=require("@web/core/utils/render");const{descendants,preserveCursor}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");const rowSize=__exports.rowSize=50;const additionalRowLimit=__exports.additionalRowLimit=10;const defaultGridPadding=10;__exports._getGridProperties=_getGridProperties;function _getGridProperties(rowEl){const style=window.getComputedStyle(rowEl);const rowGap=parseFloat(style.rowGap);const columnGap=parseFloat(style.columnGap);const columnSize=(rowEl.clientWidth-11*columnGap)/12;return{rowGap:rowGap,rowSize:rowSize,columnGap:columnGap,columnSize:columnSize};}
__exports._setElementToMaxZindex=_setElementToMaxZindex;function _setElementToMaxZindex(element,rowEl){const childrenEls=[...rowEl.children].filter(el=>el!==element&&!el.classList.contains("o_we_grid_preview"));element.style.zIndex=Math.max(...childrenEls.map(el=>el.style.zIndex))+1;}
__exports._addBackgroundGrid=_addBackgroundGrid;function _addBackgroundGrid(rowEl,gridHeight){const gridProp=_getGridProperties(rowEl);const rowCount=Math.max(rowEl.dataset.rowCount,gridHeight);const backgroundGrid=renderToElement('web_editor.background_grid',{rowCount:rowCount+1,rowGap:gridProp.rowGap,rowSize:gridProp.rowSize,columnGap:gridProp.columnGap,columnSize:gridProp.columnSize,});rowEl.prepend(backgroundGrid);return rowEl.firstElementChild;}
__exports._resizeGrid=_resizeGrid;function _resizeGrid(rowEl){const columnEls=[...rowEl.children].filter(c=>c.classList.contains('o_grid_item'));rowEl.dataset.rowCount=Math.max(...columnEls.map(el=>el.style.gridRowEnd))-1;}
__exports._gridCleanUp=_gridCleanUp;function _gridCleanUp(rowEl,columnEl){columnEl.style.removeProperty('position');columnEl.style.removeProperty('top');columnEl.style.removeProperty('left');columnEl.style.removeProperty('height');columnEl.style.removeProperty('width');rowEl.style.removeProperty('position');}
__exports._toggleGridMode=_toggleGridMode;function _toggleGridMode(containerEl){let rowEl=containerEl.querySelector(':scope > .row');const outOfRowEls=[...containerEl.children].filter(el=>!el.classList.contains('row'));const avoidRollback=(el)=>{for(const node of descendants(el)){node.ouid=undefined;}};const restoreCursor=!rowEl||outOfRowEls.length>0?preserveCursor(containerEl.ownerDocument):()=>{};if(rowEl&&outOfRowEls.length>0){const columnEl=document.createElement('div');columnEl.classList.add('col-lg-12');for(let i=outOfRowEls.length-1;i>=0;i--){columnEl.prepend(outOfRowEls[i]);}
avoidRollback(columnEl);rowEl.prepend(columnEl);}
if(!rowEl){rowEl=document.createElement('div');rowEl.classList.add('row');const columnEl=document.createElement('div');columnEl.classList.add('col-lg-12');const containerChildren=containerEl.children;for(let i=containerChildren.length-1;i>=0;i--){columnEl.prepend(containerChildren[i]);}
avoidRollback(columnEl);rowEl.appendChild(columnEl);containerEl.appendChild(rowEl);}
restoreCursor();const columnEls=rowEl.children;const columnSize=(rowEl.clientWidth)/12;rowEl.style.position='relative';const rowCount=_placeColumns(columnEls,rowSize,0,columnSize,0)-1;rowEl.style.removeProperty('position');rowEl.dataset.rowCount=rowCount;const classesToRemove=[...rowEl.classList].filter(c=>{return/^align-items/.test(c);});rowEl.classList.remove(...classesToRemove);rowEl.classList.add('o_grid_mode');}
function _placeColumns(columnEls,rowSize,rowGap,columnSize,columnGap){let maxRowEnd=0;const columnSpans=[];let zIndex=1;const imageColumns=[];for(const columnEl of columnEls){let isImageColumn=_checkIfImageColumn(columnEl);const imageEl=columnEl.querySelector('img');const hasBackgroundColor=columnEl.classList.contains("o_cc");const isImageWithoutPadding=isImageColumn&&!hasBackgroundColor;const style=window.getComputedStyle(columnEl);const borderLeft=parseFloat(style.borderLeft);const columnLeft=isImageWithoutPadding&&!borderLeft?imageEl.offsetLeft:columnEl.offsetLeft;const paddingLeft=parseFloat(style.paddingLeft);let width=isImageWithoutPadding?parseFloat(imageEl.scrollWidth):parseFloat(columnEl.scrollWidth)-(hasBackgroundColor?0:2*paddingLeft);const borderX=borderLeft+parseFloat(style.borderRight);width+=borderX+(hasBackgroundColor||isImageColumn?0:2*defaultGridPadding);let columnSpan=Math.round((width+columnGap)/(columnSize+columnGap));if(columnSpan<1){columnSpan=1;}
const columnStart=Math.round(columnLeft/(columnSize+columnGap))+1;const columnEnd=columnStart+columnSpan;const borderTop=parseFloat(style.borderTop);const columnTop=isImageWithoutPadding&&!borderTop?imageEl.offsetTop:columnEl.offsetTop;const paddingTop=parseFloat(style.paddingTop);const paddingBottom=parseFloat(style.paddingBottom);const rowOffsetTop=Math.floor((paddingTop+rowGap)/(rowSize+rowGap));let height=isImageWithoutPadding?parseFloat(imageEl.scrollHeight):parseFloat(columnEl.scrollHeight)-(hasBackgroundColor?0:paddingTop+paddingBottom);const borderY=borderTop+parseFloat(style.borderBottom);height+=borderY+(hasBackgroundColor||isImageColumn?0:2*defaultGridPadding);const rowSpan=Math.ceil((height+rowGap)/(rowSize+rowGap));const rowStart=Math.round(columnTop/(rowSize+rowGap))+1+(hasBackgroundColor||isImageWithoutPadding?0:rowOffsetTop);const rowEnd=rowStart+rowSpan;columnEl.style.gridArea=`${rowStart} / ${columnStart} / ${rowEnd} / ${columnEnd}`;columnEl.classList.add('o_grid_item');columnEl.classList.add('g-col-lg-'+columnSpan,'g-height-'+rowSpan);columnEl.style.zIndex=zIndex++;if(hasBackgroundColor){columnEl.style.setProperty("--grid-item-padding-y",`${paddingTop}px`);columnEl.style.setProperty("--grid-item-padding-x",`${paddingLeft}px`);}
_reloadLazyImages(columnEl);maxRowEnd=Math.max(rowEnd,maxRowEnd);columnSpans.push(columnSpan);imageColumns.push(isImageColumn);}
for(const[i,columnEl]of[...columnEls].entries()){const regex=/^(((pt|pb)\d{1,3}$)|col-lg-|offset-lg-)/;const toRemove=[...columnEl.classList].filter(c=>{return regex.test(c);});columnEl.classList.remove(...toRemove);columnEl.classList.add('col-lg-'+columnSpans[i]);if(imageColumns[i]){_convertImageColumn(columnEl);}}
return maxRowEnd;}
__exports._reloadLazyImages=_reloadLazyImages;function _reloadLazyImages(columnEl){const imageEls=columnEl.querySelectorAll('img');for(const imageEl of imageEls){const src=imageEl.getAttribute("src");imageEl.src='';imageEl.src=src;}}
__exports._convertColumnToGrid=_convertColumnToGrid;function _convertColumnToGrid(rowEl,columnEl,columnWidth,columnHeight){if(_checkIfImageColumn(columnEl)){_convertImageColumn(columnEl);}
const paddingX=parseFloat(rowEl.style.getPropertyValue("--grid-item-padding-x"))||defaultGridPadding;const paddingY=parseFloat(rowEl.style.getPropertyValue("--grid-item-padding-y"))||defaultGridPadding;columnWidth+=2*paddingX;columnHeight+=2*paddingY;const gridProp=_getGridProperties(rowEl);const columnColCount=Math.round((columnWidth+gridProp.columnGap)/(gridProp.columnSize+gridProp.columnGap));const columnRowCount=Math.ceil((columnHeight+gridProp.rowGap)/(gridProp.rowSize+gridProp.rowGap));const regex=/^(pt|pb|col-|offset-)/;const toRemove=[...columnEl.classList].filter(c=>regex.test(c));columnEl.classList.remove(...toRemove);columnEl.classList.add('g-col-lg-'+columnColCount,'g-height-'+columnRowCount,'col-lg-'+columnColCount);columnEl.classList.add('o_grid_item');return{columnColCount:columnColCount,columnRowCount:columnRowCount};}
__exports._convertToNormalColumn=_convertToNormalColumn;function _convertToNormalColumn(columnEl){const gridSizeClasses=columnEl.className.match(/(g-col-lg|g-height)-[0-9]+/g);columnEl.classList.remove("o_grid_item","o_grid_item_image","o_grid_item_image_contain",...gridSizeClasses);columnEl.style.removeProperty("z-index");columnEl.style.removeProperty("--grid-item-padding-x");columnEl.style.removeProperty("--grid-item-padding-y");columnEl.style.removeProperty("grid-area");}
__exports._checkIfImageColumn=_checkIfImageColumn;function _checkIfImageColumn(columnEl){let isImageColumn=false;const imageEls=columnEl.querySelectorAll(":scope > img, :scope > a > img");const columnChildrenEls=[...columnEl.children].filter(el=>el.nodeName!=='BR');if(imageEls.length===1&&columnChildrenEls.length===1){const textNodeEls=[...columnEl.childNodes].filter(el=>el.nodeType===Node.TEXT_NODE);const areTextNodesEmpty=[...textNodeEls].every(textNodeEl=>textNodeEl.nodeValue.trim()==='');isImageColumn=areTextNodesEmpty;}
return isImageColumn;}
function _convertImageColumn(columnEl){columnEl.querySelectorAll('br').forEach(el=>el.remove());const textNodeEls=[...columnEl.childNodes].filter(el=>el.nodeType===Node.TEXT_NODE);textNodeEls.forEach(el=>el.remove());const imageEl=columnEl.querySelector('img');columnEl.classList.add('o_grid_item_image');imageEl.style.removeProperty('width');}
return __exports;});;

/* /web_editor/static/src/js/common/utils.js */
odoo.define('@web_editor/js/common/utils',['@web/core/ui/ui_service','@web/core/utils/colors'],function(require){'use strict';let __exports={};const{SIZES,MEDIAS_BREAKPOINTS}=require("@web/core/ui/ui_service");const{normalizeCSSColor,isCSSColor,}=require('@web/core/utils/colors');let editableWindow=window;const _setEditableWindow=(ew)=>editableWindow=ew;let editableDocument=document;const _setEditableDocument=(ed)=>editableDocument=ed;const COLOR_PALETTE_COMPATIBILITY_COLOR_NAMES=['primary','secondary','alpha','beta','gamma','delta','epsilon','success','info','warning','danger'];const EDITOR_COLOR_CSS_VARIABLES=[...COLOR_PALETTE_COMPATIBILITY_COLOR_NAMES];for(let i=1;i<=5;i++){EDITOR_COLOR_CSS_VARIABLES.push(`o-color-${i}`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-bg`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-headings`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-text`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-primary`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-primary-text`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-secondary`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-secondary-text`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-primary-border`);EDITOR_COLOR_CSS_VARIABLES.push(`o-cc${i}-btn-secondary-border`);}
for(let i=100;i<=900;i+=100){EDITOR_COLOR_CSS_VARIABLES.push(`${i}`);}
const CSS_SHORTHANDS={'border-width':['border-top-width','border-right-width','border-bottom-width','border-left-width'],'border-radius':['border-top-left-radius','border-top-right-radius','border-bottom-right-radius','border-bottom-left-radius'],'border-color':['border-top-color','border-right-color','border-bottom-color','border-left-color'],'border-style':['border-top-style','border-right-style','border-bottom-style','border-left-style'],'padding':['padding-top','padding-right','padding-bottom','padding-left'],};const CSS_UNITS_CONVERSION={'s-ms':()=>1000,'ms-s':()=>0.001,'rem-px':()=>_computePxByRem(),'px-rem':()=>_computePxByRem(true),'%-px':()=>-1,'px-%':()=>-1,};const DEFAULT_PALETTE={'1':'#3AADAA','2':'#7C6576','3':'#F6F6F6','4':'#FFFFFF','5':'#383E45',};const BACKGROUND_IMAGE_ATTRIBUTES=new Set(["originalId","originalSrc","mimetype","resizeWidth","glFilter","quality","bgSrc","filterOptions","mimetypeBeforeConversion",]);function _computePxByRem(toRem){if(editableDocument.PX_BY_REM===undefined){const htmlStyle=editableWindow.getComputedStyle(editableDocument.documentElement);editableDocument.PX_BY_REM=parseFloat(htmlStyle['font-size']);}
return toRem?(1/editableDocument.PX_BY_REM):editableDocument.PX_BY_REM;}
function _convertValueToUnit(value,unitTo,cssProp,$target){const m=_getNumericAndUnit(value);if(!m){return NaN;}
const numValue=parseFloat(m[0]);const valueUnit=m[1];return _convertNumericToUnit(numValue,valueUnit,unitTo,cssProp,$target);}
function _convertNumericToUnit(value,unitFrom,unitTo,cssProp,$target){if(Math.abs(value)<Number.EPSILON||unitFrom===unitTo){return value;}
const converter=CSS_UNITS_CONVERSION[`${unitFrom}-${unitTo}`];if(converter===undefined){throw new Error(`Cannot convert '${unitFrom}' units into '${unitTo}' units !`);}
return value*converter(cssProp,$target);}
function _getNumericAndUnit(value){const m=value.trim().match(/^(-?[0-9.]+(?:e[+|-]?[0-9]+)?)\s*([A-Za-z%-]*)$/);if(!m){return null;}
return[m[1].trim(),m[2].trim()];}
function _areCssValuesEqual(value1,value2,cssProp,$target){if(value1===value2){return true;}
if(cssProp&&cssProp.endsWith('-size')){const pseudoPartProp=cssProp+'-part';const re=/-?[0-9.]+(?:e[+|-]?[0-9]+)?\s*[A-Za-z%-]+|auto/g;const parts1=value1.match(re);const parts2=value2.match(re);for(const index of[0,1]){const part1=parts1&&parts1.length>index?parts1[index]:'auto';const part2=parts2&&parts2.length>index?parts2[index]:'auto';if(!_areCssValuesEqual(part1,part2,pseudoPartProp,$target)){return false;}}
return true;}
if(value1.startsWith('var(--')){value1=_getCSSVariableValue(value1.substring(6,value1.length-1));}
if(value2.startsWith('var(--')){value2=_getCSSVariableValue(value2.substring(6,value2.length-1));}
if(value1===value2){return true;}
const color1=normalizeCSSColor(value1);const color2=normalizeCSSColor(value2);if(color1===color2){return true;}
const value1IsGradient=_isColorGradient(value1);const value2IsGradient=_isColorGradient(value2);if(value1IsGradient!==value2IsGradient){return false;}
if(value1IsGradient){const temp1El=document.createElement('div');temp1El.style.backgroundImage=value1;document.body.appendChild(temp1El);value1=getComputedStyle(temp1El).backgroundImage;document.body.removeChild(temp1El);const temp2El=document.createElement('div');temp2El.style.backgroundImage=value2;document.body.appendChild(temp2El);value2=getComputedStyle(temp2El).backgroundImage;document.body.removeChild(temp2El);return value1===value2;}
if(cssProp==='box-shadow'){const temp1El=document.createElement('div');temp1El.style.boxShadow=value1;document.body.appendChild(temp1El);value1=getComputedStyle(temp1El).boxShadow;document.body.removeChild(temp1El);const temp2El=document.createElement('div');temp2El.style.boxShadow=value2;document.body.appendChild(temp2El);value2=getComputedStyle(temp2El).boxShadow;document.body.removeChild(temp2El);return value1===value2;}
const data=_getNumericAndUnit(value1);if(!data){return false;}
const numValue1=data[0];const numValue2=_convertValueToUnit(value2,data[1],cssProp,$target);return(Math.abs(numValue1-numValue2)<Number.EPSILON);}
function _isColorCombinationName(name){const number=parseInt(name);return(!isNaN(number)&&number%100!==0);}
function _computeColorClasses(colorNames,prefix='bg-'){let hasCCClasses=false;const isBgPrefix=(prefix==='bg-');const classes=colorNames.map(c=>{if(isBgPrefix&&_isColorCombinationName(c)){hasCCClasses=true;return`o_cc${c}`;}
return(prefix+c);});if(hasCCClasses){classes.push('o_cc');}
return classes;}
function _getCSSVariableValue(key,htmlStyle){if(htmlStyle===undefined){htmlStyle=editableWindow.getComputedStyle(editableWindow.document.documentElement);}
let value=htmlStyle.getPropertyValue(`--${key}`).trim();value=normalizeCSSColor(value);return value.replace(/"/g,"'");}
function _normalizeColor(color){if(isCSSColor(color)){return color;}
return _getCSSVariableValue(color);}
function _getBgImageURL(el){const parts=_backgroundImageCssToParts($(el).css('background-image'));const string=parts.url||'';const match=string.match(/^url\((['"])(.*?)\1\)$/);if(!match){return'';}
const matchedURL=match[2];const fullURL=new URL(matchedURL,window.location.origin);if(fullURL.origin===window.location.origin){return fullURL.href.slice(fullURL.origin.length);}
return matchedURL;}
function _backgroundImageCssToParts(css){const parts={};css=css||'';if(css.startsWith('url(')){const urlEnd=css.indexOf(')')+1;parts.url=css.substring(0,urlEnd).trim();const commaPos=css.indexOf(',',urlEnd);css=commaPos>0?css.substring(commaPos+1):'';}
if(_isColorGradient(css)){parts.gradient=css.trim();}
return parts;}
function _backgroundImagePartsToCss(parts){let css=parts.url||'';if(parts.gradient){css+=(css?', ':'')+parts.gradient;}
return css||'none';}
function _isColorGradient(value){return value&&value.includes('-gradient(');}
function _generateHTMLId(){return`o${Math.random().toString(36).substring(2, 15)}`;}
function _getColorClass(el,colorNames,prefix){const prefixedColorNames=_computeColorClasses(colorNames,prefix);return el.classList.value.split(' ').filter(cl=>prefixedColorNames.includes(cl)).join(' ');}
function _addBackgroundImageAttributes(...newAttributes){BACKGROUND_IMAGE_ATTRIBUTES.add(...newAttributes);}
function _isBackgroundImageAttribute(attribute){return BACKGROUND_IMAGE_ATTRIBUTES.has(attribute);}
function _shouldEditableMediaBeEditable(mediaEl){const parentEl=mediaEl.parentElement;const nonEditableAncestorRootEl=parentEl&&parentEl.closest('[contenteditable="false"]');return nonEditableAncestorRootEl&&nonEditableAncestorRootEl.parentElement&&nonEditableAncestorRootEl.parentElement.isContentEditable;}
function _isMobileView(targetEl){const mobileViewThreshold=MEDIAS_BREAKPOINTS[SIZES.LG].minWidth;const clientWidth=targetEl.ownerDocument.defaultView?.frameElement?.clientWidth||targetEl.ownerDocument.documentElement.clientWidth;return clientWidth&&clientWidth<mobileViewThreshold;}
function _getLinkLabel(linkEl){return linkEl.textContent.replaceAll("\u200B","").replaceAll("\uFEFF","");}
function _forwardToThumbnail(imgEl){const carouselEl=imgEl.closest(".carousel");if(carouselEl){const carouselInnerEl=imgEl.closest(".carousel-inner");const carouselItemEl=imgEl.closest(".carousel-item");if(carouselInnerEl&&carouselItemEl){const imageIndex=[...carouselInnerEl.children].indexOf(carouselItemEl);const miniatureEl=carouselEl.querySelector(`.carousel-indicators [data-bs-slide-to="${imageIndex}"]`);if(miniatureEl&&miniatureEl.style.backgroundImage){miniatureEl.style.backgroundImage=`url(${imgEl.getAttribute("src")})`;}}}}
__exports[Symbol.for("default")]={COLOR_PALETTE_COMPATIBILITY_COLOR_NAMES:COLOR_PALETTE_COMPATIBILITY_COLOR_NAMES,CSS_SHORTHANDS:CSS_SHORTHANDS,CSS_UNITS_CONVERSION:CSS_UNITS_CONVERSION,DEFAULT_PALETTE:DEFAULT_PALETTE,EDITOR_COLOR_CSS_VARIABLES:EDITOR_COLOR_CSS_VARIABLES,computePxByRem:_computePxByRem,convertValueToUnit:_convertValueToUnit,convertNumericToUnit:_convertNumericToUnit,getNumericAndUnit:_getNumericAndUnit,areCssValuesEqual:_areCssValuesEqual,isColorCombinationName:_isColorCombinationName,isColorGradient:_isColorGradient,computeColorClasses:_computeColorClasses,getCSSVariableValue:_getCSSVariableValue,normalizeColor:_normalizeColor,getBgImageURL:_getBgImageURL,backgroundImageCssToParts:_backgroundImageCssToParts,backgroundImagePartsToCss:_backgroundImagePartsToCss,generateHTMLId:_generateHTMLId,getColorClass:_getColorClass,setEditableWindow:_setEditableWindow,setEditableDocument:_setEditableDocument,addBackgroundImageAttributes:_addBackgroundImageAttributes,isBackgroundImageAttribute:_isBackgroundImageAttribute,shouldEditableMediaBeEditable:_shouldEditableMediaBeEditable,isMobileView:_isMobileView,getLinkLabel:_getLinkLabel,forwardToThumbnail:_forwardToThumbnail,};return __exports;});;

/* /web_editor/static/src/js/common/wysiwyg_utils.js */
odoo.define('@web_editor/js/common/wysiwyg_utils',[],function(require){'use strict';let __exports={};__exports.isImg=isImg;function isImg(node){return(node&&(node.nodeName==="IMG"||(node.className&&node.className.match(/(^|\s)(media_iframe_video|o_image|fa)(\s|$)/i))));}
__exports.ancestors=ancestors;function ancestors(node,stopElement){if(!node||!node.parentElement||node===stopElement)return[];return[node.parentElement,...ancestors(node.parentElement,stopElement)];}
return __exports;});;

/* /web_editor/static/src/js/editor/odoo-editor/src/utils/utils.js */
odoo.define('@web_editor/js/editor/odoo-editor/src/utils/utils',[],function(require){'use strict';let __exports={};const DIRECTIONS=__exports.DIRECTIONS={LEFT:false,RIGHT:true,};const CTYPES=__exports.CTYPES={CONTENT:1,SPACE:2,BLOCK_OUTSIDE:4,BLOCK_INSIDE:8,BR:16,};__exports.ctypeToString=ctypeToString;function ctypeToString(ctype){return Object.keys(CTYPES).find((key)=>CTYPES[key]===ctype);}
const CTGROUPS=__exports.CTGROUPS={INLINE:CTYPES.CONTENT|CTYPES.SPACE,BLOCK:CTYPES.BLOCK_OUTSIDE|CTYPES.BLOCK_INSIDE,BR:CTYPES.BR,};const tldWhitelist=['com','net','org','ac','ad','ae','af','ag','ai','al','am','an','ao','aq','ar','as','at','au','aw','ax','az','ba','bb','bd','be','bf','bg','bh','bi','bj','bl','bm','bn','bo','br','bq','bs','bt','bv','bw','by','bz','ca','cc','cd','cf','cg','ch','ci','ck','cl','cm','cn','co','cr','cs','cu','cv','cw','cx','cy','cz','dd','de','dj','dk','dm','do','dz','ec','ee','eg','eh','er','es','et','eu','fi','fj','fk','fm','fo','fr','ga','gb','gd','ge','gf','gg','gh','gi','gl','gm','gn','gp','gq','gr','gs','gt','gu','gw','gy','hk','hm','hn','hr','ht','hu','id','ie','il','im','in','io','iq','ir','is','it','je','jm','jo','jp','ke','kg','kh','ki','km','kn','kp','kr','kw','ky','kz','la','lb','lc','li','lk','lr','ls','lt','lu','lv','ly','ma','mc','md','me','mf','mg','mh','mk','ml','mm','mn','mo','mp','mq','mr','ms','mt','mu','mv','mw','mx','my','mz','na','nc','ne','nf','ng','ni','nl','no','np','nr','nu','nz','om','pa','pe','pf','pg','ph','pk','pl','pm','pn','pr','ps','pt','pw','py','qa','re','ro','rs','ru','rw','sa','sb','sc','sd','se','sg','sh','si','sj','sk','sl','sm','sn','so','sr','ss','st','su','sv','sx','sy','sz','tc','td','tf','tg','th','tj','tk','tl','tm','tn','to','tp','tr','tt','tv','tw','tz','ua','ug','uk','um','us','uy','uz','va','vc','ve','vg','vi','vn','vu','wf','ws','ye','yt','yu','za','zm','zr','zw','co\\.uk'];const urlRegexBase=`|(?:www.))[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-zA-Z][a-zA-Z0-9]{1,62}|(?:[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.(?:${tldWhitelist.join('|')})\\b))(?:(?:[/?#])[^\\s]*[^!.,})\\]'"\\s]|(?:[^!(){}.,[\\]'"\\s]+))?`;const httpCapturedRegex=`(https?:\\/\\/)`;const URL_REGEX=__exports.URL_REGEX=new RegExp(`((?:(?:${httpCapturedRegex}${urlRegexBase})`,'i');const YOUTUBE_URL_GET_VIDEO_ID=__exports.YOUTUBE_URL_GET_VIDEO_ID=/^(?:(?:https?:)?\/\/)?(?:(?:www|m)\.)?(?:youtube\.com|youtu\.be)(?:\/(?:[\w-]+\?v=|embed\/|v\/)?)([^\s?&#]+)(?:\S+)?$/i;const EMAIL_REGEX=__exports.EMAIL_REGEX=/^(mailto:)?[\w-.]+@(?:[\w-]+\.)+[\w-]{2,4}$/i;const PHONE_REGEX=__exports.PHONE_REGEX=/^(tel:(?:\/\/)?)?\+?[\d\s.\-()\/]{3,25}$/;const PROTECTED_BLOCK_TAG=__exports.PROTECTED_BLOCK_TAG=['TR','TD','TABLE','TBODY','UL','OL','LI'];const FONT_SIZE_CLASSES=__exports.FONT_SIZE_CLASSES=["display-1-fs","display-2-fs","display-3-fs","display-4-fs","h1-fs","h2-fs","h3-fs","h4-fs","h5-fs","h6-fs","base-fs","o_small-fs","small"];const TEXT_STYLE_CLASSES=__exports.TEXT_STYLE_CLASSES=["display-1","display-2","display-3","display-4","lead","o_small","small"];const ZERO_WIDTH_CHARS=__exports.ZERO_WIDTH_CHARS=['\u200b','\ufeff'];const ZERO_WIDTH_CHARS_REGEX=__exports.ZERO_WIDTH_CHARS_REGEX=new RegExp(`[${ZERO_WIDTH_CHARS.join('')}]`,'g');__exports.leftPos=leftPos;function leftPos(node){return[node.parentNode,childNodeIndex(node)];}
__exports.rightPos=rightPos;function rightPos(node){return[node.parentNode,childNodeIndex(node)+1];}
__exports.boundariesOut=boundariesOut;function boundariesOut(node){const index=childNodeIndex(node);return[node.parentNode,index,node.parentNode,index+1];}
__exports.startPos=startPos;function startPos(node){return[node,0];}
__exports.endPos=endPos;function endPos(node){return[node,nodeSize(node)];}
__exports.boundariesIn=boundariesIn;function boundariesIn(node){return[node,0,node,nodeSize(node)];}
__exports.childNodeIndex=childNodeIndex;function childNodeIndex(node){let i=0;while(node.previousSibling){i++;node=node.previousSibling;}
return i;}
__exports.nodeSize=nodeSize;function nodeSize(node){const isTextNode=node.nodeType===Node.TEXT_NODE;return isTextNode?node.length:node.childNodes.length;}
const closestPath=__exports.closestPath=function*(node){while(node){yield node;node=node.parentNode;}};const PATH_END_REASONS={NO_NODE:0,BLOCK_OUT:1,BLOCK_HIT:2,OUT_OF_SCOPE:3,};__exports.createDOMPathGenerator=createDOMPathGenerator;function createDOMPathGenerator(direction,{leafOnly=false,inScope=false,stopTraverseFunction,stopFunction}={},){const nextDeepest=direction===DIRECTIONS.LEFT?node=>lastLeaf(node.previousSibling,stopTraverseFunction):node=>firstLeaf(node.nextSibling,stopTraverseFunction);const firstNode=direction===DIRECTIONS.LEFT?(node,offset)=>lastLeaf(node.childNodes[offset-1],stopTraverseFunction):(node,offset)=>firstLeaf(node.childNodes[offset],stopTraverseFunction);return function*(node,offset,reasons=[]){let movedUp=false;let currentNode=firstNode(node,offset);if(!currentNode){movedUp=true;currentNode=node;}
while(currentNode){if(stopFunction&&stopFunction(currentNode)){reasons.push(movedUp?PATH_END_REASONS.BLOCK_OUT:PATH_END_REASONS.BLOCK_HIT);break;}
if(inScope&&currentNode===node){reasons.push(PATH_END_REASONS.OUT_OF_SCOPE);break;}
if(!(leafOnly&&movedUp)){yield currentNode;}
movedUp=false;let nextNode=nextDeepest(currentNode);if(!nextNode){movedUp=true;nextNode=currentNode.parentNode;}
currentNode=nextNode;}
reasons.push(PATH_END_REASONS.NO_NODE);};}
__exports.findNode=findNode;function findNode(domPath,findCallback=()=>true,stopCallback=()=>false){for(const node of domPath){if(findCallback(node)){return node;}
if(stopCallback(node)){break;}}
return null;}
__exports.getFurthestUneditableParent=getFurthestUneditableParent;function getFurthestUneditableParent(node,parentLimit){if(node===parentLimit||(parentLimit&&!parentLimit.contains(node))){return undefined;}
let parent=node&&node.parentElement;let nonEditableElement;while(parent&&(!parentLimit||parent!==parentLimit)){if(!parent.isContentEditable){nonEditableElement=parent;}
if(parent.oid==="root"){break;}
parent=parent.parentElement;}
return nonEditableElement;}
__exports.closestElement=closestElement;function closestElement(node,predicate="*"){if(!node)return null;let element=node.nodeType===Node.ELEMENT_NODE?node:node.parentElement;if(typeof predicate==='function'){while(element&&!predicate(element)){element=element.parentElement;}}else{element=element?.closest(predicate);}
return element?.closest('.odoo-editor-editable')&&element;}
__exports.ancestors=ancestors;function ancestors(node,editable){if(!node||!node.parentElement||node===editable)return[];return[node.parentElement,...ancestors(node.parentElement,editable)];}
__exports.descendants=descendants;function descendants(node){const posterity=[];for(const child of(node.childNodes||[])){posterity.push(child,...descendants(child));}
return posterity;}
__exports.closestBlock=closestBlock;function closestBlock(node){return findNode(closestPath(node),node=>isBlock(node));}
__exports.lastLeaf=lastLeaf;function lastLeaf(node,stopTraverseFunction){while(node&&node.lastChild&&!(stopTraverseFunction&&stopTraverseFunction(node))){node=node.lastChild;}
return node;}
__exports.firstLeaf=firstLeaf;function firstLeaf(node,stopTraverseFunction){while(node&&node.firstChild&&!(stopTraverseFunction&&stopTraverseFunction(node))){node=node.firstChild;}
return node;}
__exports.previousLeaf=previousLeaf;function previousLeaf(node,editable,skipInvisible=false){let ancestor=node;while(ancestor&&!ancestor.previousSibling&&ancestor!==editable){ancestor=ancestor.parentElement;}
if(ancestor&&ancestor!==editable){if(skipInvisible&&!isVisible(ancestor.previousSibling)){return previousLeaf(ancestor.previousSibling,editable,skipInvisible);}else{const last=lastLeaf(ancestor.previousSibling);if(skipInvisible&&!isVisible(last)){return previousLeaf(last,editable,skipInvisible);}else{return last;}}}}
__exports.nextLeaf=nextLeaf;function nextLeaf(node,editable,skipInvisible=false){let ancestor=node;while(ancestor&&!ancestor.nextSibling&&ancestor!==editable){ancestor=ancestor.parentElement;}
if(ancestor&&ancestor!==editable){if(skipInvisible&&ancestor.nextSibling&&!isVisible(ancestor.nextSibling)){return nextLeaf(ancestor.nextSibling,editable,skipInvisible);}else{const first=firstLeaf(ancestor.nextSibling);if(skipInvisible&&!isVisible(first)){return nextLeaf(first,editable,skipInvisible);}else{return first;}}}}
__exports.getAdjacentPreviousSiblings=getAdjacentPreviousSiblings;function getAdjacentPreviousSiblings(node,predicate=n=>!!n){let previous=node.previousSibling;const list=[];while(previous&&predicate(previous)){list.push(previous);previous=previous.previousSibling;}
return list;}
__exports.getAdjacentNextSiblings=getAdjacentNextSiblings;function getAdjacentNextSiblings(node,predicate=n=>!!n){let next=node.nextSibling;const list=[];while(next&&predicate(next)){list.push(next);next=next.nextSibling;}
return list;}
__exports.getAdjacents=getAdjacents;function getAdjacents(node,predicate=n=>!!n){const previous=getAdjacentPreviousSiblings(node,predicate);const next=getAdjacentNextSiblings(node,predicate);return predicate(node)?[...previous.reverse(),node,...next]:[];}
__exports.hasTableSelection=hasTableSelection;function hasTableSelection(editable){return!!editable.querySelector('.o_selected_table');}
__exports.hasValidSelection=hasValidSelection;function hasValidSelection(editable){return hasTableSelection(editable)||editable.ownerDocument.getSelection().rangeCount>0;}
__exports.getNormalizedCursorPosition=getNormalizedCursorPosition;function getNormalizedCursorPosition(node,offset,full=true){const editable=closestElement(node,'.odoo-editor-editable');let closest=closestElement(node);while(closest&&closest!==editable&&(isSelfClosingElement(node)||!closest.isContentEditable)){[node,offset]=offset||!nodeSize(node)?rightPos(node):leftPos(node);closest=closestElement(node);}
offset=Math.min(Math.max(offset,0),nodeSize(node));if(full){let el;let elOffset;if(node.nodeType===Node.ELEMENT_NODE){el=node;elOffset=offset;}else if(node.nodeType===Node.TEXT_NODE){if(offset===0){el=node.parentNode;elOffset=childNodeIndex(node);}else if(offset===node.length){el=node.parentNode;elOffset=childNodeIndex(node)+1;}}
if(el){const leftInlineNode=leftLeafOnlyInScopeNotBlockEditablePath(el,elOffset).next().value;let leftVisibleEmpty=false;if(leftInlineNode){leftVisibleEmpty=isSelfClosingElement(leftInlineNode)||!closestElement(leftInlineNode).isContentEditable;[node,offset]=leftVisibleEmpty?rightPos(leftInlineNode):endPos(leftInlineNode);}
if(!leftInlineNode||leftVisibleEmpty){const rightInlineNode=rightLeafOnlyInScopeNotBlockEditablePath(el,elOffset).next().value;if(rightInlineNode){const closest=closestElement(rightInlineNode);const rightVisibleEmpty=isSelfClosingElement(rightInlineNode)||!closest||!closest.isContentEditable;if(!(leftVisibleEmpty&&rightVisibleEmpty)){[node,offset]=rightVisibleEmpty?leftPos(rightInlineNode):startPos(rightInlineNode);}}}}}
const prevNode=node.nodeType===Node.ELEMENT_NODE&&node.childNodes[offset-1];if(prevNode&&prevNode.nodeName==='BR'&&isFakeLineBreak(prevNode)){offset--;}
return[node,offset];}
__exports.insertSelectionChars=insertSelectionChars;function insertSelectionChars(anchorNode,anchorOffset,focusNode,focusOffset,startChar='[',endChar=']'){if(anchorNode===focusNode&&anchorOffset<=focusOffset){focusOffset+=(focusNode.nodeType===Node.TEXT_NODE?startChar.length:1);}
insertCharsAt(startChar,anchorNode,anchorOffset);insertCharsAt(endChar,focusNode,focusOffset);}
__exports.logSelection=logSelection;function logSelection(root,options={}){const sel=options.selection||root.ownerDocument.getSelection();if(!root.contains(sel.anchorNode)||!root.contains(sel.focusNode)){console.warn('The selection is not contained in the root.');return;}
let anchorClone,focusClone;const cloneTree=node=>{const clone=node.cloneNode();if(options.includeOids){clone.oid=node.oid;}
anchorClone=anchorClone||(node===sel.anchorNode&&clone);focusClone=focusClone||(node===sel.focusNode&&clone);for(const child of node.childNodes||[]){clone.append(cloneTree(child));}
return clone;}
const rootClone=cloneTree(root);insertSelectionChars(anchorClone,sel.anchorOffset,focusClone,sel.focusOffset,'%c[%c','%c]%c');rootClone.removeAttribute('data-last-history-steps');if(options.doFormat){const formatHtml=(node,spaces=0)=>{node.before(document.createTextNode('\n'+' '.repeat(spaces)));for(const child of[...node.childNodes]){formatHtml(child,spaces+4);}
if(node.nodeType!==Node.TEXT_NODE){node.appendChild(document.createTextNode('\n'+' '.repeat(spaces)));}
if(options.includeOids){if(node.nodeType===Node.TEXT_NODE){node.textContent+=` (${node.oid})`;}else{node.setAttribute('oid',node.oid);}}}
formatHtml(rootClone);}
const selectionCharacterStyle='color: #75bfff; font-weight: 700;';const defaultStyle='color: inherit; font-weight: inherit;';console.log(makeZeroWidthCharactersVisible(rootClone.outerHTML),selectionCharacterStyle,defaultStyle,selectionCharacterStyle,defaultStyle,);}
__exports.ensureFocus=ensureFocus;function ensureFocus(element){const activeElement=element.ownerDocument.activeElement;if(activeElement!==element&&(!element.contains(activeElement)||!activeElement.isContentEditable)){element.focus();}}
__exports.setSelection=setSelection;function setSelection(anchorNode,anchorOffset,focusNode=anchorNode,focusOffset=anchorOffset,normalize=true,){if(!anchorNode||!anchorNode.parentElement||!anchorNode.parentElement.closest('body')||!focusNode||!focusNode.parentElement||!focusNode.parentElement.closest('body')){return null;}
const document=anchorNode.ownerDocument;const seemsCollapsed=anchorNode===focusNode&&anchorOffset===focusOffset;[anchorNode,anchorOffset]=getNormalizedCursorPosition(anchorNode,anchorOffset,normalize);[focusNode,focusOffset]=seemsCollapsed?[anchorNode,anchorOffset]:getNormalizedCursorPosition(focusNode,focusOffset,normalize);const direction=getCursorDirection(anchorNode,anchorOffset,focusNode,focusOffset);const sel=document.getSelection();if(!sel){return null;}
try{const range=new Range();if(direction===DIRECTIONS.RIGHT){range.setStart(anchorNode,anchorOffset);range.collapse(true);}else{range.setEnd(anchorNode,anchorOffset);range.collapse(false);}
sel.removeAllRanges();sel.addRange(range);sel.extend(focusNode,focusOffset);}catch(e){if(e.name!=='NS_ERROR_FAILURE'){throw e;}}
return[anchorNode,anchorOffset,focusNode,focusOffset];}
__exports.setCursorStart=setCursorStart;function setCursorStart(node,normalize=true){const pos=startPos(node);return setSelection(...pos,...pos,normalize);}
__exports.setCursorEnd=setCursorEnd;function setCursorEnd(node,normalize=true){const pos=endPos(node);return setSelection(...pos,...pos,normalize);}
__exports.getCursorDirection=getCursorDirection;function getCursorDirection(anchorNode,anchorOffset,focusNode,focusOffset){if(anchorNode===focusNode){if(anchorOffset===focusOffset)return false;return anchorOffset<focusOffset?DIRECTIONS.RIGHT:DIRECTIONS.LEFT;}
return anchorNode.compareDocumentPosition(focusNode)&Node.DOCUMENT_POSITION_FOLLOWING?DIRECTIONS.RIGHT:DIRECTIONS.LEFT;}
__exports.getTraversedNodes=getTraversedNodes;function getTraversedNodes(editable,range=getDeepRange(editable)){const selectedTableCells=editable.querySelectorAll('.o_selected_td');const document=editable.ownerDocument;if(!range)return[];const iterator=document.createNodeIterator(range.commonAncestorContainer);let node;do{node=iterator.nextNode();}while(node&&node!==range.startContainer&&!(selectedTableCells.length&&node===selectedTableCells[0]));if(node&&!(selectedTableCells.length&&node===selectedTableCells[0])&&!range.collapsed&&node.nodeType===Node.ELEMENT_NODE&&node.childNodes.length&&range.startOffset&&node.childNodes[range.startOffset-1].nodeName==="BR"){const targetBr=node.childNodes[range.startOffset-1];while(node!=targetBr){node=iterator.nextNode();}
node=iterator.nextNode();}
if(node&&!range.collapsed&&node===range.startContainer&&range.startOffset===nodeSize(node)&&node.nextSibling&&node.nextSibling.nodeName==="BR"){node=iterator.nextNode();}
const traversedNodes=new Set([node,...descendants(node)]);while(node&&node!==range.endContainer){node=iterator.nextNode();if(node){const selectedTable=closestElement(node,'.o_selected_table');if(selectedTable){for(const selectedTd of selectedTable.querySelectorAll('.o_selected_td')){traversedNodes.add(selectedTd);descendants(selectedTd).forEach(descendant=>traversedNodes.add(descendant));}}else if(!(node===range.endContainer&&range.endOffset===0&&!range.collapsed&&node.previousSibling&&node.previousSibling.nodeName==="BR")){traversedNodes.add(node);}}}
if(node){for(const descendant of descendants(node)){if(descendant.parentElement===node&&childNodeIndex(descendant)>=range.endOffset){break;}
traversedNodes.add(descendant);}}
return[...traversedNodes];}
__exports.getSelectedNodes=getSelectedNodes;function getSelectedNodes(editable){const selectedTableCells=editable.querySelectorAll('.o_selected_td');const document=editable.ownerDocument;const sel=document.getSelection();if(!sel.rangeCount&&!selectedTableCells.length){return[];}
const range=sel.getRangeAt(0);return[...new Set(getTraversedNodes(editable).flatMap(node=>{const td=closestElement(node,'.o_selected_td');if(td){return descendants(td);}else if(range.isPointInRange(node,0)&&range.isPointInRange(node,nodeSize(node))){return node;}else{return[];}},))];}
__exports.getDeepRange=getDeepRange;function getDeepRange(editable,{range,sel,splitText,select,correctTripleClick}={}){sel=sel||editable.parentElement&&editable.ownerDocument.getSelection();if(sel&&sel.isCollapsed&&sel.anchorNode&&(sel.anchorNode.nodeName==="BR"||(sel.anchorNode.nodeType===Node.TEXT_NODE&&sel.anchorNode.textContent===''))){setSelection(sel.anchorNode.parentElement,childNodeIndex(sel.anchorNode));}
range=range?range.cloneRange():sel&&sel.rangeCount&&sel.getRangeAt(0).cloneRange();if(!range)return;let start=range.startContainer;let startOffset=range.startOffset;let end=range.endContainer;let endOffset=range.endOffset;const isBackwards=!range.collapsed&&start===sel.focusNode&&startOffset===sel.focusOffset;[start,startOffset]=getDeepestPosition(start,startOffset);[end,endOffset]=getDeepestPosition(end,endOffset);if(splitText){const isInSingleContainer=start===end;if(end.nodeType===Node.TEXT_NODE&&endOffset!==0&&endOffset!==end.textContent.length){const endParent=end.parentNode;const splitOffset=splitTextNode(end,endOffset);end=endParent.childNodes[splitOffset-1]||endParent.firstChild;if(isInSingleContainer){start=end;}
endOffset=end.textContent.length;}
if(start.nodeType===Node.TEXT_NODE&&startOffset!==0&&startOffset!==start.textContent.length){splitTextNode(start,startOffset);startOffset=0;if(isInSingleContainer){endOffset=start.textContent.length;}}}
const endLeaf=firstLeaf(end);const beforeEnd=endLeaf.previousSibling;if(correctTripleClick&&!endOffset&&(start!==end||startOffset!==endOffset)&&(!beforeEnd||(beforeEnd.nodeType===Node.TEXT_NODE&&!isVisibleTextNode(beforeEnd)&&!isZWS(beforeEnd)))&&!closestElement(endLeaf,'table')){const previous=previousLeaf(endLeaf,editable,true);if(previous&&closestElement(previous).isContentEditable){[end,endOffset]=[previous,nodeSize(previous)];}}
if(select){if(isBackwards){[start,end,startOffset,endOffset]=[end,start,endOffset,startOffset];range.setEnd(start,startOffset);range.collapse(false);}else{range.setStart(start,startOffset);range.collapse(true);}
sel.removeAllRanges();sel.addRange(range);try{sel.extend(end,endOffset);}catch{}
range=sel.getRangeAt(0);}else{range.setStart(start,startOffset);range.setEnd(end,endOffset);}
return range;}
__exports.getAdjacentCharacter=getAdjacentCharacter;function getAdjacentCharacter(editable,side){let{focusNode,focusOffset}=editable.ownerDocument.getSelection();const originalBlock=closestBlock(focusNode);let adjacentCharacter;while(!adjacentCharacter&&focusNode){if(side==='previous'){adjacentCharacter=focusOffset>0&&focusNode.textContent[focusOffset-1];}else{adjacentCharacter=focusNode.textContent[focusOffset];}
if(!adjacentCharacter){if(side==='previous'){focusNode=previousLeaf(focusNode,editable);focusOffset=focusNode&&nodeSize(focusNode);}else{focusNode=nextLeaf(focusNode,editable);focusOffset=0;}
const characterIndex=side==='previous'?focusOffset-1:focusOffset;adjacentCharacter=focusNode&&focusNode.textContent[characterIndex];}}
return closestBlock(focusNode)===originalBlock?adjacentCharacter:undefined;}
function isZwnbsp(node){return node.nodeType===Node.TEXT_NODE&&node.textContent==='\ufeff';}
function isTangible(node){return isVisible(node)||isZwnbsp(node)||hasTangibleContent(node);}
function hasTangibleContent(node){return[...(node?.childNodes||[])].some(n=>isTangible(n));}
__exports.getDeepestPosition=getDeepestPosition;function getDeepestPosition(node,offset){let direction=DIRECTIONS.RIGHT;let next=node;while(next){if(isTangible(next)||isZWS(next)){if(next!==node){[node,offset]=[next,direction?0:nodeSize(next)];}
direction=offset<node.childNodes.length;next=node.childNodes[direction?offset:offset-1];}else if(direction&&next.nextSibling&&closestBlock(node).contains(next.nextSibling)){next=next.nextSibling;}else{direction=DIRECTIONS.LEFT;next=closestBlock(node).contains(next.previousSibling)&&next.previousSibling;}
next=!isSelfClosingElement(next)&&next;}
return[node,offset];}
__exports.getCursors=getCursors;function getCursors(document){const sel=document.getSelection();if(getCursorDirection(sel.anchorNode,sel.anchorOffset,sel.focusNode,sel.focusOffset)===DIRECTIONS.LEFT)
return[[sel.focusNode,sel.focusOffset],[sel.anchorNode,sel.anchorOffset],];return[[sel.anchorNode,sel.anchorOffset],[sel.focusNode,sel.focusOffset],];}
__exports.preserveCursor=preserveCursor;function preserveCursor(document){const sel=document.getSelection();const cursorPos=[sel.anchorNode,sel.anchorOffset,sel.focusNode,sel.focusOffset];return replace=>{replace=replace||new Map();cursorPos[0]=replace.get(cursorPos[0])||cursorPos[0];cursorPos[2]=replace.get(cursorPos[2])||cursorPos[2];return setSelection(...cursorPos,false);};}
__exports.isSelectionInSelectors=isSelectionInSelectors;function isSelectionInSelectors(selector){let anchor=document.getSelection().anchorNode;if(anchor&&anchor.nodeType&&anchor.nodeType!==Node.ELEMENT_NODE){anchor=anchor.parentElement;}
if(anchor&&closestElement(anchor,selector)){return true;}
return false;}
__exports.getOffsetAndCharSize=getOffsetAndCharSize;function getOffsetAndCharSize(nodeValue,offset,direction){const splittedNodeValue=[...nodeValue];let charSize=1;let newOffset=offset;let currentSize=0;for(const item of splittedNodeValue){currentSize+=item.length;if(currentSize>=offset){newOffset=direction==DIRECTIONS.LEFT?currentSize:currentSize-item.length;charSize=item.length;break;}}
return[newOffset,charSize];}
const formatsSpecs=__exports.formatsSpecs={italic:{tagName:'em',isFormatted:isItalic,isTag:(node)=>['EM','I'].includes(node.tagName),hasStyle:(node)=>Boolean(node.style&&node.style['font-style']),addStyle:(node)=>node.style['font-style']='italic',addNeutralStyle:(node)=>node.style['font-style']='normal',removeStyle:(node)=>removeStyle(node,'font-style'),},bold:{tagName:'strong',isFormatted:isBold,isTag:(node)=>['STRONG','B'].includes(node.tagName),hasStyle:(node)=>Boolean(node.style&&node.style['font-weight']),addStyle:(node)=>node.style['font-weight']='bolder',addNeutralStyle:(node)=>{node.style['font-weight']='normal'},removeStyle:(node)=>removeStyle(node,'font-weight'),},underline:{tagName:'u',isFormatted:isUnderline,isTag:(node)=>node.tagName==='U',hasStyle:(node)=>node.style&&node.style['text-decoration-line'].includes('underline'),addStyle:(node)=>node.style['text-decoration-line']+=' underline',removeStyle:(node)=>removeStyle(node,'text-decoration-line','underline'),},strikeThrough:{tagName:'s',isFormatted:isStrikeThrough,isTag:(node)=>node.tagName==='S',hasStyle:(node)=>node.style&&node.style['text-decoration-line'].includes('line-through'),addStyle:(node)=>node.style['text-decoration-line']+=' line-through',removeStyle:(node)=>removeStyle(node,'text-decoration-line','line-through'),},fontSize:{isFormatted:isFontSize,hasStyle:(node)=>node.style&&node.style['font-size'],addStyle:(node,props)=>{node.style['font-size']=props.size;node.classList.remove(...FONT_SIZE_CLASSES);},removeStyle:(node)=>removeStyle(node,'font-size'),},setFontSizeClassName:{isFormatted:hasClass,hasStyle:(node,props)=>FONT_SIZE_CLASSES.find(cls=>node.classList.contains(cls)),addStyle:(node,props)=>node.classList.add(props.className),removeStyle:(node)=>{node.classList.remove(...FONT_SIZE_CLASSES,...TEXT_STYLE_CLASSES);if(node.classList.length===0){node.removeAttribute("class");}},},switchDirection:{isFormatted:isDirectionSwitched,}}
const removeStyle=(node,styleName,item)=>{if(item){const newStyle=node.style[styleName].split(' ').filter(x=>x!==item).join(' ');node.style[styleName]=newStyle||null;}else{node.style[styleName]=null;}
if(node.getAttribute('style')===''){node.removeAttribute('style');}};const getOrCreateSpan=(node,ancestors)=>{const span=ancestors.find((element)=>element.tagName==='SPAN'&&element.isConnected);if(span){return span;}else{const span=document.createElement('span');node.after(span);span.append(node);return span;}}
const removeFormat=(node,formatSpec)=>{node=closestElement(node);if(formatSpec.hasStyle(node)){formatSpec.removeStyle(node);if(['SPAN','FONT'].includes(node.tagName)&&!node.getAttributeNames().length){return unwrapContents(node);}}
if(formatSpec.isTag&&formatSpec.isTag(node)){const attributesNames=node.getAttributeNames().filter((name)=>{return name!=='data-oe-zws-empty-inline';});if(attributesNames.length){const newNode=document.createElement('span');while(node.firstChild){newNode.appendChild(node.firstChild);}
for(let index=node.attributes.length-1;index>=0;--index){newNode.attributes.setNamedItem(node.attributes[index].cloneNode());}
node.parentNode.replaceChild(newNode,node);}else{unwrapContents(node);}}}
const formatSelection=__exports.formatSelection=(editor,formatName,{applyStyle,formatProps}={})=>{const selection=editor.document.getSelection();let direction
let wasCollapsed;if(editor.editable.querySelector('.o_selected_td')){direction=DIRECTIONS.RIGHT;}else{if(!selection.rangeCount)return;wasCollapsed=selection.getRangeAt(0).collapsed;direction=getCursorDirection(selection.anchorNode,selection.anchorOffset,selection.focusNode,selection.focusOffset);}
getDeepRange(editor.editable,{splitText:true,select:true,correctTripleClick:true});if(typeof applyStyle==='undefined'){applyStyle=!isSelectionFormat(editor.editable,formatName);}
let zws;if(wasCollapsed){if(selection.anchorNode.nodeType===Node.TEXT_NODE&&selection.anchorNode.textContent==='\u200b'){zws=selection.anchorNode;selection.getRangeAt(0).selectNode(zws);}else{zws=insertAndSelectZws(selection);}
getDeepRange(editor.editable,{splitText:true,select:true,correctTripleClick:true});}
const selectedNodesInTds=[...editor.editable.querySelectorAll('.o_selected_td')].map(node=>closestElement(node).querySelector('br'));const selectedNodes=getSelectedNodes(editor.editable).filter(n=>n.nodeType===Node.TEXT_NODE&&closestElement(n).isContentEditable&&(isVisibleTextNode(n)||isZWS(n)));const selectedTextNodes=selectedNodes.length?selectedNodes:selectedNodesInTds;const selectedFieldNodes=new Set(getSelectedNodes(editor.editable).map(n=>closestElement(n,"*[t-field],*[t-out],*[t-esc]")).filter(Boolean));const formatSpec=formatsSpecs[formatName];for(const selectedTextNode of selectedTextNodes){const inlineAncestors=[];let currentNode=selectedTextNode;let parentNode=selectedTextNode.parentElement;while(parentNode&&!isBlock(parentNode)&&!isUnbreakable(parentNode)&&!isUnbreakable(currentNode)&&(parentNode.classList.length===0||[...parentNode.classList].every(cls=>FONT_SIZE_CLASSES.includes(cls)))){const isUselessZws=parentNode.tagName==='SPAN'&&parentNode.hasAttribute('data-oe-zws-empty-inline')&&parentNode.getAttributeNames().length===1;if(isUselessZws){unwrapContents(parentNode);}else{const newLastAncestorInlineFormat=splitAroundUntil(currentNode,parentNode);removeFormat(newLastAncestorInlineFormat,formatSpec);if(newLastAncestorInlineFormat.isConnected){inlineAncestors.push(newLastAncestorInlineFormat);currentNode=newLastAncestorInlineFormat;}}
parentNode=currentNode.parentElement;}
const firstBlockOrClassHasFormat=formatSpec.isFormatted(parentNode,formatProps);if(firstBlockOrClassHasFormat&&!applyStyle){formatSpec.addNeutralStyle&&formatSpec.addNeutralStyle(getOrCreateSpan(selectedTextNode,inlineAncestors));}else if(!firstBlockOrClassHasFormat&&applyStyle){const tag=formatSpec.tagName&&document.createElement(formatSpec.tagName);if(tag){selectedTextNode.after(tag);tag.append(selectedTextNode);if(!formatSpec.isFormatted(tag,formatProps)){tag.after(selectedTextNode);tag.remove();formatSpec.addStyle(getOrCreateSpan(selectedTextNode,inlineAncestors),formatProps);}}else if(formatName!=='fontSize'||formatProps.size!==undefined){formatSpec.addStyle(getOrCreateSpan(selectedTextNode,inlineAncestors),formatProps);}}}
for(const selectedFieldNode of selectedFieldNodes){if(applyStyle){formatSpec.addStyle(selectedFieldNode,formatProps);}else{formatSpec.removeStyle(selectedFieldNode);}}
if(zws){const siblings=[...zws.parentElement.childNodes];if(!isBlock(zws.parentElement)&&selectedTextNodes.includes(siblings[0])&&selectedTextNodes.includes(siblings[siblings.length-1])){zws.parentElement.setAttribute('data-oe-zws-empty-inline','');}else{const span=document.createElement('span');span.setAttribute('data-oe-zws-empty-inline','');zws.before(span);span.append(zws);}}
if(selectedTextNodes[0]&&selectedTextNodes[0].textContent==='\u200B'){setSelection(selectedTextNodes[0],0);}else if(selectedTextNodes.length){const firstNode=selectedTextNodes[0];const lastNode=selectedTextNodes[selectedTextNodes.length-1];if(direction===DIRECTIONS.RIGHT){setSelection(firstNode,0,lastNode,lastNode.length,false);}else{setSelection(lastNode,lastNode.length,firstNode,0,false);}}}
const isLinkEligibleForZwnbsp=__exports.isLinkEligibleForZwnbsp=(editable,link)=>{return link.isContentEditable&&editable.contains(link)&&!([link,...link.querySelectorAll('*')].some(el=>el.nodeName==='IMG'||isBlock(el))||link.matches('nav a, a.nav-link'));}
const padLinkWithZws=__exports.padLinkWithZws=(editable,link)=>{if(!isLinkEligibleForZwnbsp(editable,link)){return;}
const selection=editable.ownerDocument.getSelection()||{};const{anchorOffset,focusOffset}=selection;let extraAnchorOffset=0;let extraFocusOffset=0;if(!link.textContent.startsWith('\uFEFF')){if(selection.anchorNode===link&&anchorOffset){extraAnchorOffset+=1;}
if(selection.focusNode===link&&focusOffset){extraFocusOffset+=1;}
link.prepend(document.createTextNode('\uFEFF'));}
if(!link.textContent.endsWith('\uFEFF')){if(selection.anchorNode===link&&anchorOffset+extraAnchorOffset===nodeSize(link)){extraAnchorOffset+=1;}
if(selection.focusNode===link&&focusOffset+extraFocusOffset===nodeSize(link)){extraFocusOffset+=1;}
link.append(document.createTextNode('\uFEFF'));}
const linkIndex=childNodeIndex(link);if(!(link.previousSibling&&link.previousSibling.textContent.endsWith('\uFEFF'))){if(selection.anchorNode===link.parentElement&&anchorOffset+extraAnchorOffset>linkIndex){extraAnchorOffset+=1;}
if(selection.focusNode===link.parentElement&&focusOffset+extraFocusOffset>linkIndex){extraFocusOffset+=1;}
link.before(document.createTextNode('\uFEFF'));}
if(!(link.nextSibling&&link.nextSibling.textContent.startsWith('\uFEFF'))){if(selection.anchorNode===link.parentElement&&anchorOffset+extraAnchorOffset>linkIndex+1){extraAnchorOffset+=1;}
if(selection.focusNode===link.parentElement&&focusOffset+extraFocusOffset>linkIndex+1){extraFocusOffset+=1;}
link.after(document.createTextNode('\uFEFF'));}
if(extraAnchorOffset||extraFocusOffset){setSelection(selection.anchorNode,anchorOffset+extraAnchorOffset,selection.focusNode,focusOffset+extraFocusOffset,);}}
const blockTagNames=['ADDRESS','ARTICLE','ASIDE','BLOCKQUOTE','DETAILS','DIALOG','DD','DIV','DL','DT','FIELDSET','FIGCAPTION','FIGURE','FOOTER','FORM','H1','H2','H3','H4','H5','H6','HEADER','HGROUP','HR','LI','MAIN','NAV','OL','P','PRE','SECTION','TABLE','UL','SELECT','OPTION','TR','TD','TBODY','THEAD','TH',];const computedStyles=new WeakMap();__exports.isBlock=isBlock;function isBlock(node){if(!node||node.nodeType!==Node.ELEMENT_NODE){return false;}
const tagName=node.nodeName.toUpperCase();if(tagName.startsWith('JW-')||(tagName==='T'&&node.getAttribute('t-esc')===null&&node.getAttribute('t-out')===null&&node.getAttribute('t-raw')===null)){return true;}
if(tagName==='BR'){return false;}
if(!node.isConnected){return blockTagNames.includes(tagName);}
let style=computedStyles.get(node);if(!style){style=node.ownerDocument.defaultView?.getComputedStyle(node);computedStyles.set(node,style);}
if(style?.display){return!style.display.includes('inline')&&style.display!=='contents';}
return blockTagNames.includes(tagName);}
__exports.isBold=isBold;function isBold(node){const fontWeight=+getComputedStyle(closestElement(node)).fontWeight;return fontWeight>500||fontWeight>+getComputedStyle(closestBlock(node)).fontWeight;}
__exports.isItalic=isItalic;function isItalic(node){return getComputedStyle(closestElement(node)).fontStyle==='italic';}
__exports.isUnderline=isUnderline;function isUnderline(node){let parent=closestElement(node);while(parent){if(getComputedStyle(parent).textDecorationLine.includes('underline')){return true;}
parent=parent.parentElement;}
return false;}
__exports.isStrikeThrough=isStrikeThrough;function isStrikeThrough(node){let parent=closestElement(node);while(parent){if(getComputedStyle(parent).textDecorationLine.includes('line-through')){return true;}
parent=parent.parentElement;}
return false;}
__exports.isFontSize=isFontSize;function isFontSize(node,props){const element=closestElement(node);return getComputedStyle(element)['font-size']===props.size;}
__exports.hasClass=hasClass;function hasClass(node,props){const element=closestElement(node);return element.classList.contains(props.className);}
__exports.isDirectionSwitched=isDirectionSwitched;function isDirectionSwitched(node,editable){const defaultDirection=editable.getAttribute('dir');return getComputedStyle(closestElement(node)).direction!==defaultDirection;}
__exports.isSelectionFormat=isSelectionFormat;function isSelectionFormat(editable,format){const selectedNodes=getTraversedNodes(editable).filter(n=>n.nodeType===Node.TEXT_NODE);const isFormatted=formatsSpecs[format].isFormatted;return selectedNodes.length&&selectedNodes.every(n=>isFormatted(n,editable));}
__exports.isUnbreakable=isUnbreakable;function isUnbreakable(node){if(!node||node.nodeType===Node.TEXT_NODE){return false;}
if(node.nodeType!==Node.ELEMENT_NODE){return true;}
return(isUnremovable(node)||['TABLE','THEAD','TBODY','TFOOT','TR','TH','TD','SECTION','DIV'].includes(node.tagName)||node.hasAttribute('t')||(node.nodeType===Node.ELEMENT_NODE&&(node.nodeName==='T'||node.getAttribute('t-if')||node.getAttribute('t-esc')||node.getAttribute('t-elif')||node.getAttribute('t-else')||node.getAttribute('t-foreach')||node.getAttribute('t-value')||node.getAttribute('t-out')||node.getAttribute('t-raw'))||node.getAttribute('t-field'))||node.classList.contains('oe_unbreakable'));}
__exports.isUnremovable=isUnremovable;function isUnremovable(node){return((node.nodeType!==Node.ELEMENT_NODE&&node.nodeType!==Node.TEXT_NODE)||node.oid==='root'||(node.nodeType===Node.ELEMENT_NODE&&(node.classList.contains('o_editable')||node.getAttribute('t-set')||node.getAttribute('t-call')))||(node.classList&&node.classList.contains('oe_unremovable'))||(node.nodeName==='SPAN'&&node.parentElement&&node.parentElement.getAttribute('data-oe-type')==='monetary')||(node.ownerDocument&&node.ownerDocument.defaultWindow&&!ancestors(node).find(ancestor=>ancestor.oid==='root')));}
__exports.containsUnbreakable=containsUnbreakable;function containsUnbreakable(node){if(!node){return false;}
return isUnbreakable(node)||containsUnbreakable(node.firstChild);}
const iconTags=['I','SPAN'];const iconClasses=['fa','fab','fad','far','oi'];__exports.isFontAwesome=isFontAwesome;function isFontAwesome(node){return(node&&iconTags.includes(node.nodeName)&&iconClasses.some(cls=>node.classList.contains(cls)));}
const ICON_SELECTOR=__exports.ICON_SELECTOR=iconTags.map(tag=>{return iconClasses.map(cls=>{return`${tag}.${cls}`;}).join(', ');}).join(', ');__exports.isZWS=isZWS;function isZWS(node){return(node&&node.textContent==='\u200B');}
__exports.isEditorTab=isEditorTab;function isEditorTab(node){return(node&&(node.nodeName==='SPAN')&&node.classList.contains('oe-tabs'));}
__exports.isMediaElement=isMediaElement;function isMediaElement(node){return(isFontAwesome(node)||(node.classList&&(node.classList.contains('o_image')||node.classList.contains('media_iframe_video'))));}
__exports.isProtected=isProtected;function isProtected(node){const closestProtectedElement=closestElement(node,'[data-oe-protected]');if(closestProtectedElement){return["","true"].includes(closestProtectedElement.dataset.oeProtected);}
return false;}
const VOID_ELEMENT_NAMES=['AREA','BASE','BR','COL','EMBED','HR','IMG','INPUT','KEYGEN','LINK','META','PARAM','SOURCE','TRACK','WBR'];__exports.isArtificialVoidElement=isArtificialVoidElement;function isArtificialVoidElement(node){return isMediaElement(node)||node.nodeName==='HR';}
__exports.isNotAllowedContent=isNotAllowedContent;function isNotAllowedContent(node){return isArtificialVoidElement(node)||VOID_ELEMENT_NAMES.includes(node.nodeName);}
__exports.containsUnremovable=containsUnremovable;function containsUnremovable(node){if(!node){return false;}
return isUnremovable(node)||containsUnremovable(node.firstChild);}
__exports.getInSelection=getInSelection;function getInSelection(document,selector){const selection=document.getSelection();const range=selection&&!!selection.rangeCount&&selection.getRangeAt(0);if(range){const selectorInStartAncestors=closestElement(range.startContainer,selector);if(selectorInStartAncestors){return selectorInStartAncestors;}else{const commonElementAncestor=closestElement(range.commonAncestorContainer);return commonElementAncestor&&[...commonElementAncestor.querySelectorAll(selector)].find(node=>range.intersectsNode(node),);}}}
__exports.getRowIndex=getRowIndex;function getRowIndex(trOrTd){const tr=closestElement(trOrTd,'tr');const trParent=tr&&tr.parentElement;if(!trParent){return-1;}
const trSiblings=[...trParent.children].filter(child=>child.nodeName==='TR');return trSiblings.findIndex(child=>child===tr);}
__exports.getColumnIndex=getColumnIndex;function getColumnIndex(td){const tdParent=td.parentElement;if(!tdParent){return-1;}
const tdSiblings=[...tdParent.children].filter(child=>child.nodeName==='TD'||child.nodeName==='TH');return tdSiblings.findIndex(child=>child===td);}
const paragraphRelatedElements=__exports.paragraphRelatedElements=['P','H1','H2','H3','H4','H5','H6','PRE','BLOCKQUOTE',];__exports.allowsParagraphRelatedElements=allowsParagraphRelatedElements;function allowsParagraphRelatedElements(node){return isBlock(node)&&!paragraphRelatedElements.includes(node.nodeName);}
__exports.makeContentsInline=makeContentsInline;function makeContentsInline(node){let childIndex=0;for(const child of node.childNodes){if(isBlock(child)){if(childIndex&&paragraphRelatedElements.includes(child.nodeName)){child.before(document.createElement('br'));}
for(const grandChild of child.childNodes){child.before(grandChild);makeContentsInline(grandChild);}
child.remove();}
childIndex+=1;}}
__exports.getOuid=getOuid;function getOuid(node,optimize=false){while(node&&!isUnbreakable(node)){if(node.ouid&&optimize)return node.ouid;node=node.parentNode;}
return node&&node.oid;}
__exports.isHtmlContentSupported=isHtmlContentSupported;function isHtmlContentSupported(node){return!closestElement(node,'[data-oe-model]:not([data-oe-field="arch"]):not([data-oe-type="html"]),[data-oe-translation-id]',true);}
const selfClosingElementTags=['BR','IMG','INPUT'];__exports.isSelfClosingElement=isSelfClosingElement;function isSelfClosingElement(node){return node&&selfClosingElementTags.includes(node.nodeName);}
__exports.isInPre=isInPre;function isInPre(node){const element=node.nodeType===Node.TEXT_NODE?node.parentElement:node;return(!!element&&(!!element.closest('pre')||getComputedStyle(element).getPropertyValue('white-space')==='pre'));}
const whitespace=`[^\\S\\u00A0\\u0009\\ufeff]`;const whitespaceRegex=new RegExp(`^${whitespace}*$`);__exports.isWhitespace=isWhitespace;function isWhitespace(value){const str=typeof value==='string'?value:value.nodeValue;return whitespaceRegex.test(str);}
__exports.isVisible=isVisible;function isVisible(node){return!!node&&((node.nodeType===Node.TEXT_NODE&&isVisibleTextNode(node))||(node.nodeType===Node.ELEMENT_NODE&&(node.getAttribute("t-esc")||node.getAttribute("t-out")))||isSelfClosingElement(node)||isFontAwesome(node)||hasVisibleContent(node));}
__exports.hasVisibleContent=hasVisibleContent;function hasVisibleContent(node){return[...(node?.childNodes||[])].some(n=>isVisible(n));}
const visibleCharRegex=/[^\s\u200b]|[\u00A0\u0009]$/;__exports.isVisibleTextNode=isVisibleTextNode;function isVisibleTextNode(testedNode){if(!testedNode||!testedNode.length||testedNode.nodeType!==Node.TEXT_NODE){return false;}
if(visibleCharRegex.test(testedNode.textContent)||(isInPre(testedNode)&&isWhitespace(testedNode))){return true;}
if(ZERO_WIDTH_CHARS.includes(testedNode.textContent)){return false;}
let preceding;let following;let foundTestedNode;const currentNodeParentBlock=closestBlock(testedNode);if(!currentNodeParentBlock){return false;}
const nodeIterator=document.createNodeIterator(currentNodeParentBlock);for(let node=nodeIterator.nextNode();node;node=nodeIterator.nextNode()){if(node.nodeType===Node.TEXT_NODE){if(foundTestedNode){following=node;break;}else if(testedNode===node){foundTestedNode=true;}else{preceding=node;}}else if(isBlock(node)){if(foundTestedNode){break;}else{preceding=null;}}else if(foundTestedNode&&!isWhitespace(node)){following=node;break;}}
while(following&&!visibleCharRegex.test(following.textContent)){following=following.nextSibling;}
if(!(preceding&&following)||currentNodeParentBlock!==closestBlock(preceding)||currentNodeParentBlock!==closestBlock(following)){return false;}
return visibleCharRegex.test(preceding.textContent);}
__exports.parentsGet=parentsGet;function parentsGet(node,root=undefined){const parents=[];while(node){parents.unshift(node);if(node===root){break;}
node=node.parentNode;}
return parents;}
__exports.commonParentGet=commonParentGet;function commonParentGet(node1,node2,root=undefined){if(!node1||!node2){return null;}
const n1p=parentsGet(node1,root);const n2p=parentsGet(node2,root);while(n1p.length>1&&n1p[1]===n2p[1]){n1p.shift();n2p.shift();}
return n1p[0]===n2p[0]?n1p[0]:null;}
__exports.getListMode=getListMode;function getListMode(pnode){if(!["UL","OL"].includes(pnode.tagName))return;if(pnode.tagName=='OL')return'OL';return pnode.classList.contains('o_checklist')?'CL':'UL';}
__exports.createList=createList;function createList(mode){const node=document.createElement(mode=='OL'?'OL':'UL');if(mode=='CL'){node.classList.add('o_checklist');}
return node;}
__exports.insertListAfter=insertListAfter;function insertListAfter(afterNode,mode,content=[]){const list=createList(mode);afterNode.after(list);list.append(...content.map(c=>{const li=document.createElement('LI');li.append(...[].concat(c));return li;}),);return list;}
__exports.toggleList=toggleList;function toggleList(node,mode,offset=0){let pnode=node.closest('ul, ol');if(!pnode)return;const listMode=getListMode(pnode)+mode;if(['OLCL','ULCL'].includes(listMode)){pnode.classList.add('o_checklist');for(let li=pnode.firstElementChild;li!==null;li=li.nextElementSibling){if(li.style.listStyle!=='none'){li.style.listStyle=null;if(!li.style.all)li.removeAttribute('style');}}
pnode=setTagName(pnode,'UL');}else if(['CLOL','CLUL'].includes(listMode)){toggleClass(pnode,'o_checklist');pnode=setTagName(pnode,mode);}else if(['OLUL','ULOL'].includes(listMode)){pnode=setTagName(pnode,mode);}else{let currNode=node;while(currNode){currNode=currNode.oShiftTab(offset);}
return;}
return pnode;}
__exports.convertList=convertList;function convertList(node,toMode){if(!["UL","OL","LI"].includes(node.nodeName))return;const listMode=getListMode(node);if(listMode&&toMode!==listMode){node=toggleList(node,toMode);}
for(const child of node.childNodes){convertList(child,toMode);}
return node;}
__exports.toggleClass=toggleClass;function toggleClass(node,className){node.classList.toggle(className);if(!node.className){node.removeAttribute('class');}}
__exports.makeZeroWidthCharactersVisible=makeZeroWidthCharactersVisible;function makeZeroWidthCharactersVisible(text){return text.replaceAll('\u200B','//ZWSP//').replaceAll('\uFEFF','//ZWNBSP//');}
__exports.isFakeLineBreak=isFakeLineBreak;function isFakeLineBreak(brEl){return!(getState(...rightPos(brEl),DIRECTIONS.RIGHT).cType&(CTYPES.CONTENT|CTGROUPS.BR));}
__exports.isEmptyBlock=isEmptyBlock;function isEmptyBlock(blockEl){if(!blockEl||blockEl.nodeType!==Node.ELEMENT_NODE){return false;}
if(isFontAwesome(blockEl)||visibleCharRegex.test(blockEl.textContent)){return false;}
if(blockEl.querySelectorAll('br').length>=2){return false;}
const nodes=blockEl.querySelectorAll('*');for(const node of nodes){if(node.nodeName!='BR'&&(isSelfClosingElement(node)||isFontAwesome(node))){return false;}}
return true;}
__exports.isShrunkBlock=isShrunkBlock;function isShrunkBlock(blockEl){return(isEmptyBlock(blockEl)&&!blockEl.querySelector('br')&&blockEl.nodeName!=="IMG");}
__exports.isColorGradient=isColorGradient;function isColorGradient(value){return value&&value.includes('-gradient(');}
__exports.getFontSizeDisplayValue=getFontSizeDisplayValue;function getFontSizeDisplayValue(sel,getCSSVariableValue,convertNumericToUnit){const tagNameRelatedToFontSize=["h1","h2","h3","h4","h5","h6"];const styleClassesRelatedToFontSize=["display-1","display-2","display-3","display-4"];const closestStartContainerEl=closestElement(sel.getRangeAt(0).startContainer);const closestFontSizedEl=closestStartContainerEl.closest(`
        [style*='font-size'],
        ${FONT_SIZE_CLASSES.map(className => `.${className}`)},
        ${styleClassesRelatedToFontSize.map(className => `.${className}`)},
        ${tagNameRelatedToFontSize}
    `);let remValue;if(closestFontSizedEl){const useFontSizeInput=closestFontSizedEl.style.fontSize;if(useFontSizeInput){return parseFloat(getComputedStyle(closestStartContainerEl).fontSize);}
const fontSizeClass=FONT_SIZE_CLASSES.find(className=>closestFontSizedEl.classList.contains(className));let fsName;if(fontSizeClass){fsName=fontSizeClass.substring(0,fontSizeClass.length-3);}else{fsName=styleClassesRelatedToFontSize.find(className=>closestFontSizedEl.classList.contains(className))||closestFontSizedEl.tagName.toLowerCase();}
remValue=parseFloat(getCSSVariableValue(`${fsName}-font-size`));}
if(remValue===undefined){remValue=parseFloat(getCSSVariableValue("font-size-base"));}
const pxValue=convertNumericToUnit(remValue,"rem","px");return pxValue||parseFloat(getComputedStyle(closestStartContainerEl).fontSize);}
__exports.splitTextNode=splitTextNode;function splitTextNode(textNode,offset,originalNodeSide=DIRECTIONS.RIGHT){let parentOffset=childNodeIndex(textNode);if(offset>0){parentOffset++;if(offset<textNode.length){const left=textNode.nodeValue.substring(0,offset);const right=textNode.nodeValue.substring(offset);if(originalNodeSide===DIRECTIONS.LEFT){const newTextNode=document.createTextNode(right);textNode.after(newTextNode);textNode.nodeValue=left;}else{const newTextNode=document.createTextNode(left);textNode.before(newTextNode);textNode.nodeValue=right;}}}
return parentOffset;}
__exports.splitElement=splitElement;function splitElement(element,offset){const before=element.cloneNode();const after=element.cloneNode();let index=0;for(const child of[...element.childNodes]){index<offset?before.appendChild(child):after.appendChild(child);index++;}
const blockEl=closestBlock(after);if(blockEl){fillEmpty(blockEl);}
element.before(before);element.after(after);element.remove();return[before,after];}
__exports.splitAroundUntil=splitAroundUntil;function splitAroundUntil(elements,limitAncestor){elements=Array.isArray(elements)?elements:[elements];const firstNode=elements[0];const lastNode=elements[elements.length-1];if([firstNode,lastNode].includes(limitAncestor)){return limitAncestor;}
let before=firstNode.previousSibling;let after=lastNode.nextSibling;let beforeSplit,afterSplit;if(!before&&!after&&elements[0]!==limitAncestor){return splitAroundUntil(elements[0].parentElement,limitAncestor);}
while(after&&after.parentElement!==limitAncestor){afterSplit=splitElement(after.parentElement,childNodeIndex(after))[0];after=afterSplit.nextSibling;}
if(after){afterSplit=splitElement(limitAncestor,childNodeIndex(after))[0];limitAncestor=afterSplit;}
while(before&&before.parentElement!==limitAncestor){beforeSplit=splitElement(before.parentElement,childNodeIndex(before)+1)[1];before=beforeSplit.previousSibling;}
if(before){beforeSplit=splitElement(limitAncestor,childNodeIndex(before)+1)[1];}
return beforeSplit||afterSplit||limitAncestor;}
__exports.insertText=insertText;function insertText(sel,content){if(!content){return;}
if(sel.anchorNode.nodeType===Node.TEXT_NODE){const pos=[sel.anchorNode.parentElement,splitTextNode(sel.anchorNode,sel.anchorOffset)];setSelection(...pos,...pos,false);}
const txt=document.createTextNode(content||'#');const restore=prepareUpdate(sel.anchorNode,sel.anchorOffset);sel.getRangeAt(0).insertNode(txt);restore();setSelection(...boundariesOut(txt),false);return txt;}
__exports.insertCharsAt=insertCharsAt;function insertCharsAt(chars,node,offset){if(node.nodeType===Node.TEXT_NODE){const startValue=node.nodeValue;if(offset<0||offset>startValue.length){throw new Error(`Invalid ${chars} insertion in text node`);}
node.nodeValue=startValue.slice(0,offset)+chars+startValue.slice(offset);}else{if(offset<0||offset>node.childNodes.length){throw new Error(`Invalid ${chars} insertion in non-text node`);}
const textNode=document.createTextNode(chars);if(offset<node.childNodes.length){node.insertBefore(textNode,node.childNodes[offset]);}else{node.appendChild(textNode);}}}
__exports.unwrapContents=unwrapContents;function unwrapContents(node){const contents=[...node.childNodes];for(const child of contents){node.parentNode.insertBefore(child,node);}
node.parentNode.removeChild(node);return contents;}
__exports.fillEmpty=fillEmpty;function fillEmpty(el){const fillers={};const blockEl=closestBlock(el);if(isShrunkBlock(blockEl)){const br=document.createElement('br');blockEl.appendChild(br);fillers.br=br;}
if(!isTangible(el)&&!el.hasAttribute("data-oe-zws-empty-inline")&&!el.hasChildNodes()){const zws=document.createTextNode('\u200B');el.appendChild(zws);el.setAttribute("data-oe-zws-empty-inline","");fillers.zws=zws;const previousSibling=el.previousSibling;if(previousSibling&&previousSibling.nodeName==="BR"){previousSibling.remove();}
setSelection(zws,0,zws,0);}
if(!isVisible(el)&&el.nodeName!=='A'&&closestElement(el,'a')&&getComputedStyle(el).display==='inline'){el.style.display='inline-block';}
return fillers;}
__exports.insertAndSelectZws=insertAndSelectZws;function insertAndSelectZws(selection){const offset=selection.anchorOffset;const zws=insertText(selection,'\u200B');splitTextNode(zws,offset);selection.getRangeAt(0).selectNode(zws);return zws;}
__exports.setTagName=setTagName;function setTagName(el,newTagName){if(el.tagName===newTagName){return el;}
const n=document.createElement(newTagName);if(el.nodeName!=='LI'){const attributes=el.attributes;for(const attr of attributes){n.setAttribute(attr.name,attr.value);}}
while(el.firstChild){n.append(el.firstChild);}
if(el.tagName==='LI'){el.append(n);}else{el.parentNode.replaceChild(n,el);}
return n;}
__exports.moveNodes=moveNodes;function moveNodes(destinationEl,destinationOffset,sourceEl,startIndex=0,endIndex=sourceEl.childNodes.length,){if(selfClosingElementTags.includes(destinationEl.nodeName)){throw new Error(`moveNodes: Invalid destination element ${destinationEl.nodeName}`);}
const nodes=[];for(let i=startIndex;i<endIndex;i++){nodes.push(sourceEl.childNodes[i]);}
if(nodes.length){const restoreDestination=prepareUpdate(destinationEl,destinationOffset);const restoreMoved=prepareUpdate(...leftPos(sourceEl.childNodes[startIndex]),...rightPos(sourceEl.childNodes[endIndex-1]),);const fragment=document.createDocumentFragment();nodes.forEach(node=>fragment.appendChild(node));const posRightNode=destinationEl.childNodes[destinationOffset];if(posRightNode){destinationEl.insertBefore(fragment,posRightNode);}else{destinationEl.appendChild(fragment);}
restoreDestination();restoreMoved();}
if(!nodeSize(sourceEl)){const restoreOrigin=prepareUpdate(...boundariesOut(sourceEl));sourceEl.remove();restoreOrigin();}
const firstNode=nodes.find(node=>!!node.parentNode);return firstNode?leftPos(firstNode):[destinationEl,destinationOffset];}
__exports.resetOuids=resetOuids;function resetOuids(node){node.ouid=undefined;for(const descendant of descendants(node)){descendant.ouid=undefined;}}
const prepareUpdateLockedEditables=new Set();__exports.prepareUpdate=prepareUpdate;function prepareUpdate(...args){const closestRoot=args.length&&ancestors(args[0]).find(ancestor=>ancestor.oid==='root');const isPrepareUpdateLocked=closestRoot&&prepareUpdateLockedEditables.has(closestRoot);const hash=(Math.random()+1).toString(36).substring(7);const options={allowReenter:true,label:hash,debug:false,...(args.length&&args[args.length-1]instanceof Object?args.pop():{}),};if(options.debug){console.log('%cPreparing%c update: '+options.label+
(options.label===hash?'':` (${hash})`)+'%c'+(isPrepareUpdateLocked?' LOCKED':''),'color: cyan;','color: white;','color: red; font-weight: bold;',);}
if(isPrepareUpdateLocked){return()=>{if(options.debug){console.log('%cRestoring%c update: '+options.label+
(options.label===hash?'':` (${hash})`)+'%c LOCKED','color: lightgreen;','color: white;','color: red; font-weight: bold;',);}};}
if(!options.allowReenter&&closestRoot){prepareUpdateLockedEditables.add(closestRoot);}
const positions=[...args];const restoreData=[];let el,offset;while(positions.length){offset=positions.pop();el=positions.pop();const left=getState(el,offset,DIRECTIONS.LEFT);const right=getState(el,offset,DIRECTIONS.RIGHT,left.cType);if(options.debug){const editable=el&&closestElement(el,'.odoo-editor-editable');const oldEditableHTML=editable&&makeZeroWidthCharactersVisible(editable.innerHTML).replaceAll(' ','_')||'';left.oldEditableHTML=oldEditableHTML;right.oldEditableHTML=oldEditableHTML;}
restoreData.push(left,right);}
return function restoreStates(){if(options.debug){console.log('%cRestoring%c update: '+options.label+
(options.label===hash?'':` (${hash})`),'color: lightgreen;','color: white;',);}
for(const data of restoreData){restoreState(data,options.debug);}
if(!options.allowReenter&&closestRoot){prepareUpdateLockedEditables.delete(closestRoot);}};}
__exports.getState=getState;function getState(el,offset,direction,leftCType){const leftDOMPath=leftLeafOnlyNotBlockPath;const rightDOMPath=rightLeafOnlyNotBlockPath;let domPath;let inverseDOMPath;const whitespaceAtStartRegex=new RegExp('^'+whitespace+'+');const whitespaceAtEndRegex=new RegExp(whitespace+'+$');const reasons=[];if(direction===DIRECTIONS.LEFT){domPath=leftDOMPath(el,offset,reasons);inverseDOMPath=rightDOMPath(el,offset);}else{domPath=rightDOMPath(el,offset,reasons);inverseDOMPath=leftDOMPath(el,offset);}
const boundaryNode=inverseDOMPath.next().value;let cType=undefined;let lastSpace=null;for(const node of domPath){if(node.nodeType===Node.TEXT_NODE){const value=node.nodeValue.replaceAll('\ufeff','');if(direction===DIRECTIONS.LEFT){if(!isWhitespace(value)){if(lastSpace){cType=CTYPES.SPACE;}else{const rightLeaf=rightLeafOnlyNotBlockPath(node).next().value;const hasContentRight=rightLeaf&&!whitespaceAtStartRegex.test(rightLeaf.textContent);cType=!hasContentRight&&whitespaceAtEndRegex.test(node.textContent)?CTYPES.SPACE:CTYPES.CONTENT;}
break;}
if(value.length){lastSpace=node;}}else{leftCType=leftCType||getState(el,offset,DIRECTIONS.LEFT).cType;if(whitespaceAtStartRegex.test(value)){const leftLeaf=leftLeafOnlyNotBlockPath(node).next().value;const hasContentLeft=leftLeaf&&!whitespaceAtEndRegex.test(leftLeaf.textContent);const rct=!isWhitespace(value)?CTYPES.CONTENT:getState(...rightPos(node),DIRECTIONS.RIGHT).cType;cType=leftCType&CTYPES.CONTENT&&rct&(CTYPES.CONTENT|CTYPES.BR)&&!hasContentLeft?CTYPES.SPACE:rct;break;}
if(!isWhitespace(value)){cType=CTYPES.CONTENT;break;}}}else if(node.nodeName==='BR'){cType=CTYPES.BR;break;}else if(isVisible(node)){cType=CTYPES.CONTENT;break;}}
if(cType===undefined){cType=reasons.includes(PATH_END_REASONS.BLOCK_HIT)?CTYPES.BLOCK_OUTSIDE:CTYPES.BLOCK_INSIDE;}
return{node:boundaryNode,direction:direction,cType:cType,};}
const priorityRestoreStateRules=[[{cType1:CTYPES.CONTENT,cType2:CTYPES.SPACE|CTGROUPS.BLOCK},{spaceVisibility:true},],[{direction:DIRECTIONS.LEFT,cType1:CTGROUPS.INLINE,cType2:CTGROUPS.BR},{spaceVisibility:true},],[{direction:DIRECTIONS.RIGHT,cType1:CTGROUPS.CONTENT,cType2:CTGROUPS.BR},{spaceVisibility:true},],[{direction:DIRECTIONS.RIGHT,cType1:CTGROUPS.BR,cType2:CTYPES.SPACE|CTGROUPS.BLOCK},{spaceVisibility:true},],[{cType1:CTYPES.SPACE},{spaceVisibility:false},],[{direction:DIRECTIONS.LEFT,cType1:CTGROUPS.BR},{spaceVisibility:false},],[{cType1:CTGROUPS.BLOCK,cType2:CTGROUPS.INLINE|CTGROUPS.BR},{spaceVisibility:false},],[{direction:DIRECTIONS.RIGHT,cType1:CTGROUPS.INLINE,cType2:CTGROUPS.BLOCK},{brVisibility:true},],[{direction:DIRECTIONS.RIGHT,cType1:CTGROUPS.BLOCK,cType2:CTGROUPS.INLINE|CTGROUPS.BR,},{brVisibility:false},],[{direction:DIRECTIONS.LEFT,cType1:CTGROUPS.BR|CTGROUPS.BLOCK,cType2:CTGROUPS.INLINE,},{brVisibility:false,extraBRRemovalCondition:brNode=>isFakeLineBreak(brNode)},],];function restoreStateRuleHashCode(direction,cType1,cType2){return`${direction}-${cType1}-${cType2}`;}
const allRestoreStateRules=(function(){const map=new Map();const keys=['direction','cType1','cType2'];for(const direction of Object.values(DIRECTIONS)){for(const cType1 of Object.values(CTYPES)){for(const cType2 of Object.values(CTYPES)){const rule={direction:direction,cType1:cType1,cType2:cType2};const matchedRules=[];for(const entry of priorityRestoreStateRules){let priority=0;for(const key of keys){const entryKeyValue=entry[0][key];if(entryKeyValue!==undefined){if(typeof entryKeyValue==='boolean'?rule[key]===entryKeyValue:rule[key]&entryKeyValue){priority++;}else{priority=-1;break;}}}
if(priority>=0){matchedRules.push([priority,entry[1]]);}}
const finalRule={};for(let p=0;p<=keys.length;p++){for(const entry of matchedRules){if(entry[0]===p){Object.assign(finalRule,entry[1]);}}}
const hashCode=restoreStateRuleHashCode(direction,cType1,cType2);map.set(hashCode,finalRule);}}}
return map;})();__exports.restoreState=restoreState;function restoreState(prevStateData,debug=false){const{node,direction,cType:cType1,oldEditableHTML}=prevStateData;if(!node||!node.parentNode){return;}
const[el,offset]=direction===DIRECTIONS.LEFT?leftPos(node):rightPos(node);const{cType:cType2}=getState(el,offset,direction);const ruleHashCode=restoreStateRuleHashCode(direction,cType1,cType2);const rule=allRestoreStateRules.get(ruleHashCode);if(debug){const editable=closestElement(node,'.odoo-editor-editable');console.log('%c'+makeZeroWidthCharactersVisible(node.textContent).replaceAll(' ','_')+'\n'+'%c'+(direction===DIRECTIONS.LEFT?'left':'right')+'\n'+'%c'+ctypeToString(cType1)+'\n'+'%c'+ctypeToString(cType2)+'\n'+'%c'+'BEFORE: '+(oldEditableHTML||'(unavailable)')+'\n'+'%c'+'AFTER:  '+(editable?makeZeroWidthCharactersVisible(editable.innerHTML).replaceAll(' ','_'):'(unavailable)')+'\n','color: white; display: block; width: 100%;','color: '+(direction===DIRECTIONS.LEFT?'magenta':'lightgreen')+'; display: block; width: 100%;','color: pink; display: block; width: 100%;','color: lightblue; display: block; width: 100%;','color: white; display: block; width: 100%;','color: white; display: block; width: 100%;',rule,);}
if(Object.values(rule).filter(x=>x!==undefined).length){const inverseDirection=direction===DIRECTIONS.LEFT?DIRECTIONS.RIGHT:DIRECTIONS.LEFT;enforceWhitespace(el,offset,inverseDirection,rule);}
return rule;}
__exports.enforceWhitespace=enforceWhitespace;function enforceWhitespace(el,offset,direction,rule){let domPath,whitespaceAtEdgeRegex;if(direction===DIRECTIONS.LEFT){domPath=leftLeafOnlyNotBlockPath(el,offset);whitespaceAtEdgeRegex=new RegExp(whitespace+'+$');}else{domPath=rightLeafOnlyNotBlockPath(el,offset);whitespaceAtEdgeRegex=new RegExp('^'+whitespace+'+');}
const invisibleSpaceTextNodes=[];let foundVisibleSpaceTextNode=null;for(const node of domPath){if(node.nodeName==='BR'){if(rule.brVisibility===undefined){break;}
if(rule.brVisibility){node.before(document.createElement('br'));}else{if(!rule.extraBRRemovalCondition||rule.extraBRRemovalCondition(node)){node.remove();}}
break;}else if(node.nodeType===Node.TEXT_NODE&&!isInPre(node)){if(whitespaceAtEdgeRegex.test(node.nodeValue)){if(!isWhitespace(node)){foundVisibleSpaceTextNode=node;break;}else{invisibleSpaceTextNodes.push(node);}}else if(!isWhitespace(node)){break;}}else{break;}}
if(rule.spaceVisibility===undefined){return;}
if(!rule.spaceVisibility){for(const node of invisibleSpaceTextNodes){node.nodeValue='';const ancestorPath=closestPath(node.parentNode);let toRemove=null;for(const pNode of ancestorPath){if(toRemove){toRemove.remove();}
if(pNode.childNodes.length===1&&!isBlock(pNode)){pNode.after(node);toRemove=pNode;}else{break;}}}}
const spaceNode=foundVisibleSpaceTextNode||invisibleSpaceTextNodes[0];if(spaceNode){let spaceVisibility=rule.spaceVisibility;if(spaceVisibility&&!foundVisibleSpaceTextNode&&getState(...rightPos(spaceNode),DIRECTIONS.RIGHT).cType&CTGROUPS.BLOCK&&getState(...leftPos(spaceNode),DIRECTIONS.LEFT).cType!==CTYPES.CONTENT){spaceVisibility=false;}
spaceNode.nodeValue=spaceNode.nodeValue.replace(whitespaceAtEdgeRegex,spaceVisibility?'\u00A0':'');}}
__exports.rgbToHex=rgbToHex;function rgbToHex(rgb='',node=null){if(rgb.startsWith('#')){return rgb;}else if(rgb.startsWith('rgba')){const values=rgb.match(/[\d\.]{1,5}/g)||[];const alpha=parseFloat(values.pop());let bgRgbValues=[];if(node){let bgColor=getComputedStyle(node).backgroundColor;if(bgColor.startsWith('rgba')){bgColor=rgbToHex(bgColor,node.parentElement);}
if(bgColor&&bgColor.startsWith('#')){bgRgbValues=(bgColor.match(/[\da-f]{2}/gi)||[]).map(val=>parseInt(val,16));}else if(bgColor&&bgColor.startsWith('rgb')){bgRgbValues=(bgColor.match(/[\d\.]{1,5}/g)||[]).map(val=>parseInt(val));}}
bgRgbValues=bgRgbValues.length?bgRgbValues:[255,255,255];return('#'+
values.map((value,index)=>{const converted=Math.floor(alpha*parseInt(value)+(1-alpha)*bgRgbValues[index]);const hex=parseInt(converted).toString(16);return hex.length===1?'0'+hex:hex;}).join(''));}else{return('#'+
(rgb.match(/\d{1,3}/g)||[]).map(x=>{x=parseInt(x).toString(16);return x.length===1?'0'+x:x;}).join(''));}}
__exports.parseHTML=parseHTML;function parseHTML(document,html){const fragment=document.createDocumentFragment();const parser=new document.defaultView.DOMParser();const parsedDocument=parser.parseFromString(html,'text/html');fragment.replaceChildren(...parsedDocument.body.childNodes);return fragment;}
__exports.pxToFloat=pxToFloat;function pxToFloat(sizeString){return parseFloat(sizeString.replace('px',''));}
__exports.getRangePosition=getRangePosition;function getRangePosition(el,document,options={}){const selection=document.getSelection();if(!selection.rangeCount)return;const range=selection.getRangeAt(0);const isRtl=options.direction==='rtl';const marginRight=options.marginRight||20;const marginBottom=options.marginBottom||20;const marginTop=options.marginTop||10;const marginLeft=options.marginLeft||10;let offset;if(range.endOffset-1>0){const clonedRange=range.cloneRange();clonedRange.setStart(range.endContainer,range.endOffset-1);clonedRange.setEnd(range.endContainer,range.endOffset);const rect=clonedRange.getBoundingClientRect();offset={height:rect.height,left:rect.left+rect.width,top:rect.top};clonedRange.detach();}
if(!offset||offset.height===0){const clonedRange=range.cloneRange();const shadowCaret=document.createTextNode('|');clonedRange.insertNode(shadowCaret);clonedRange.selectNode(shadowCaret);const rect=clonedRange.getBoundingClientRect();offset={height:rect.height,left:rect.left,top:rect.top};shadowCaret.remove();clonedRange.detach();}
if(isRtl){offset.right=offset.left-el.offsetWidth;const leftMove=Math.max(0,offset.right+el.offsetWidth+marginLeft-window.innerWidth);if(leftMove&&offset.right-leftMove>marginRight){offset.right-=leftMove;}else if(offset.right-leftMove<marginRight){offset.right=marginRight;}}
const leftMove=Math.max(0,offset.left+el.offsetWidth+marginRight-window.innerWidth);if(leftMove&&offset.left-leftMove>marginLeft){offset.left-=leftMove;}else if(offset.left-leftMove<marginLeft){offset.left=marginLeft;}
if(options.parentContextRect){offset.left+=options.parentContextRect.left;offset.top+=options.parentContextRect.top;if(isRtl){offset.right+=options.parentContextRect.left;}}
if(offset.top-marginTop+offset.height+el.offsetHeight>window.innerHeight&&offset.top-el.offsetHeight-marginBottom>0){offset.top-=el.offsetHeight;}else{offset.top+=offset.height;}
if(offset){offset.top+=window.scrollY;offset.left+=window.scrollX;if(isRtl){offset.right+=window.scrollX;}}
if(isRtl){offset.right=window.innerWidth-offset.right-el.offsetWidth;}
return offset;}
const isNotEditableNode=__exports.isNotEditableNode=node=>node.getAttribute&&node.getAttribute('contenteditable')&&node.getAttribute('contenteditable').toLowerCase()==='false';const leftLeafFirstPath=__exports.leftLeafFirstPath=createDOMPathGenerator(DIRECTIONS.LEFT);const leftLeafOnlyNotBlockPath=__exports.leftLeafOnlyNotBlockPath=createDOMPathGenerator(DIRECTIONS.LEFT,{leafOnly:true,stopTraverseFunction:isBlock,stopFunction:isBlock,});const leftLeafOnlyInScopeNotBlockEditablePath=__exports.leftLeafOnlyInScopeNotBlockEditablePath=createDOMPathGenerator(DIRECTIONS.LEFT,{leafOnly:true,inScope:true,stopTraverseFunction:node=>isNotEditableNode(node)||isBlock(node),stopFunction:node=>isNotEditableNode(node)||isBlock(node),});const rightLeafOnlyNotBlockPath=__exports.rightLeafOnlyNotBlockPath=createDOMPathGenerator(DIRECTIONS.RIGHT,{leafOnly:true,stopTraverseFunction:isBlock,stopFunction:isBlock,});const rightLeafOnlyPathNotBlockNotEditablePath=__exports.rightLeafOnlyPathNotBlockNotEditablePath=createDOMPathGenerator(DIRECTIONS.RIGHT,{leafOnly:true,});const rightLeafOnlyInScopeNotBlockEditablePath=__exports.rightLeafOnlyInScopeNotBlockEditablePath=createDOMPathGenerator(DIRECTIONS.RIGHT,{leafOnly:true,inScope:true,stopTraverseFunction:node=>isNotEditableNode(node)||isBlock(node),stopFunction:node=>isNotEditableNode(node)||isBlock(node),});const rightLeafOnlyNotBlockNotEditablePath=__exports.rightLeafOnlyNotBlockNotEditablePath=createDOMPathGenerator(DIRECTIONS.RIGHT,{leafOnly:true,stopTraverseFunction:node=>isNotEditableNode(node)||isBlock(node),stopFunction:node=>isBlock(node)&&!isNotEditableNode(node),});__exports.peek=peek;function peek(arr){return arr[arr.length-1];}
__exports.isMacOS=isMacOS;function isMacOS(){return window.navigator.userAgent.includes('Mac');}
__exports.cleanZWS=cleanZWS;function cleanZWS(node){[node,...descendants(node)].filter(node=>node.nodeType===Node.TEXT_NODE&&node.nodeValue.includes('\u200B')).forEach(node=>node.nodeValue=node.nodeValue.replace(/\u200B/g,''));}
return __exports;});;

/* /web_editor/static/src/js/wysiwyg/fonts.js */
odoo.define('@web_editor/js/wysiwyg/fonts',[],function(require){'use strict';let __exports={};const fonts=__exports.fonts={cacheCssSelectors:{},getCssSelectors:function(filter){if(this.cacheCssSelectors[filter]){return this.cacheCssSelectors[filter];}
this.cacheCssSelectors[filter]=[];var sheets=document.styleSheets;for(var i=0;i<sheets.length;i++){var rules;try{rules=sheets[i].rules||sheets[i].cssRules;}catch{continue;}
if(!rules){continue;}
for(var r=0;r<rules.length;r++){var selectorText=rules[r].selectorText;if(!selectorText){continue;}
var selectors=selectorText.split(/\s*,\s*/);var data=null;for(var s=0;s<selectors.length;s++){var match=selectors[s].trim().match(filter);if(!match){continue;}
if(!data){data={selector:match[0],css:rules[r].cssText.replace(/(^.*\{\s*)|(\s*\}\s*$)/g,''),names:[match[1]]};}else{data.selector+=(', '+match[0]);data.names.push(match[1]);}}
if(data){this.cacheCssSelectors[filter].push(data);}}}
return this.cacheCssSelectors[filter];},fontIcons:[{base:'fa',parser:/\.(fa-(?:\w|-)+)::?before/i}],computedFonts:false,computeFonts:function(){if(!this.computedFonts){var self=this;this.fontIcons.forEach((data)=>{data.cssData=self.getCssSelectors(data.parser);data.alias=data.cssData.map((x)=>x.names).flat();});this.computedFonts=true;}},};__exports[Symbol.for("default")]=fonts;return __exports;});;

/* /web_editor/static/src/components/history_dialog/history_dialog.js */
odoo.define('@web_editor/components/history_dialog/history_dialog',['@web/core/dialog/dialog','@web/core/l10n/dates','@web/core/utils/hooks','@web/core/utils/functions','@odoo/owl','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Dialog}=require('@web/core/dialog/dialog');const{formatDateTime}=require('@web/core/l10n/dates');const{useService}=require('@web/core/utils/hooks');const{memoize}=require('@web/core/utils/functions');const{Component,onMounted,useState,markup}=require('@odoo/owl');const{_t}=require('@web/core/l10n/translation');const{DateTime}=luxon;class HistoryDialog extends Component{static template='web_editor.HistoryDialog';static components={Dialog};static props={recordId:Number,recordModel:String,close:Function,restoreRequested:Function,historyMetadata:Array,versionedFieldName:String};state=useState({revisionsData:[],revisionContent:null,revisionComparison:null,revisionId:null});setup(){this.size='xl';this.title=_t('History');this.orm=useService('orm');this.userService=useService('user');onMounted(()=>this.init());}
async init(){this.state.revisionsData=this.props.historyMetadata;await this.updateCurrentRevision(this.props.historyMetadata[0]['revision_id']);}
async updateCurrentRevision(revisionId){if(this.state.revisionId===revisionId){return;}
this.env.services.ui.block();this.state.revisionId=revisionId;this.state.revisionContent=await this.getRevisionContent(revisionId);this.state.revisionComparison=await this.getRevisionComparison(revisionId);this.env.services.ui.unblock();}
getRevisionComparison=memoize(async function getRevisionComparison(revisionId){const comparison=await this.orm.call(this.props.recordModel,'html_field_history_get_comparison_at_revision',[this.props.recordId,this.props.versionedFieldName,revisionId]);return markup(comparison);}.bind(this));getRevisionContent=memoize(async function getRevisionContent(revisionId){const content=await this.orm.call(this.props.recordModel,'html_field_history_get_content_at_revision',[this.props.recordId,this.props.versionedFieldName,revisionId]);return markup(content);}.bind(this));async _onRestoreRevisionClick(){this.env.services.ui.block();const restoredContent=await this.getRevisionContent(this.state.revisionId);this.props.restoreRequested(restoredContent);this.env.services.ui.unblock();this.props.close();}
getRevisionDate(revision){return formatDateTime(DateTime.fromISO(revision['create_date'],{zone:'utc'}).setZone(this.userService.tz));}}
__exports[Symbol.for("default")]=HistoryDialog;return __exports;});;

/* /web_editor/static/src/components/media_dialog/document_selector.js */
odoo.define('@web_editor/components/media_dialog/document_selector',['@web/core/l10n/translation','@web_editor/components/media_dialog/file_selector'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Attachment,FileSelector,IMAGE_MIMETYPES}=require("@web_editor/components/media_dialog/file_selector");const DocumentAttachment=__exports.DocumentAttachment=class DocumentAttachment extends Attachment{}
DocumentAttachment.template='web_editor.DocumentAttachment';const DocumentSelector=__exports.DocumentSelector=class DocumentSelector extends FileSelector{setup(){super.setup();this.uploadText=_t("Upload a document");this.urlPlaceholder="https://www.odoo.com/mydocument";this.addText=_t("Add URL");this.searchPlaceholder=_t("Search a document");this.allLoadedText=_t("All documents have been loaded");}
get attachmentsDomain(){const domain=super.attachmentsDomain;domain.push(['mimetype','not in',IMAGE_MIMETYPES]);domain.unshift('&','|',['url','=',null],'!',['url','=like','/web/assets/%']);return domain;}
async onClickDocument(document){this.selectAttachment(document);await this.props.save();}
async fetchAttachments(...args){const attachments=await super.fetchAttachments(...args);if(this.selectInitialMedia()){for(const attachment of attachments){if(`/web/content/${attachment.id}`===this.props.media.getAttribute('href').replace(/[?].*/,'')){this.selectAttachment(attachment);}}}
return attachments;}
static async createElements(selectedMedia,{orm}){return Promise.all(selectedMedia.map(async attachment=>{const linkEl=document.createElement('a');let href=`/web/content/${encodeURIComponent(attachment.id)}?unique=${encodeURIComponent(attachment.checksum)}&download=true`;if(!attachment.public){let accessToken=attachment.access_token;if(!accessToken){[accessToken]=await orm.call('ir.attachment','generate_access_token',[attachment.id],);}
href+=`&access_token=${encodeURIComponent(accessToken)}`;}
linkEl.href=href;linkEl.title=attachment.name;linkEl.dataset.mimetype=attachment.mimetype;return linkEl;}));}}
DocumentSelector.mediaSpecificClasses=['o_image'];DocumentSelector.mediaSpecificStyles=[];DocumentSelector.mediaExtraClasses=[];DocumentSelector.tagNames=['A'];DocumentSelector.attachmentsListTemplate='web_editor.DocumentsListTemplate';DocumentSelector.components={...FileSelector.components,DocumentAttachment,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/file_selector.js */
odoo.define('@web_editor/components/media_dialog/file_selector',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@web/core/dialog/dialog','@web/core/utils/concurrency','@web/core/utils/timing','@web_editor/components/media_dialog/search_media','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require('@web/core/utils/hooks');const{ConfirmationDialog}=require('@web/core/confirmation_dialog/confirmation_dialog');const{Dialog}=require('@web/core/dialog/dialog');const{KeepLast}=require("@web/core/utils/concurrency");const{useDebounced}=require("@web/core/utils/timing");const{SearchMedia}=require("@web_editor/components/media_dialog/search_media");const{Component,xml,useState,useRef,onWillStart,useEffect}=require("@odoo/owl");const IMAGE_MIMETYPES=__exports.IMAGE_MIMETYPES=['image/jpg','image/jpeg','image/jpe','image/png','image/svg+xml','image/gif','image/webp'];const IMAGE_EXTENSIONS=__exports.IMAGE_EXTENSIONS=['.jpg','.jpeg','.jpe','.png','.svg','.gif','.webp'];class RemoveButton extends Component{setup(){this.removeTitle=_t("This file is attached to the current record.");if(this.props.model==='ir.ui.view'){this.removeTitle=_t("This file is a public view attachment.");}}
remove(ev){ev.stopPropagation();this.props.remove();}}
RemoveButton.template=xml`<i class="fa fa-trash o_existing_attachment_remove position-absolute top-0 end-0 p-2 bg-white-25 cursor-pointer opacity-0 opacity-100-hover z-index-1 transition-base" t-att-title="removeTitle" role="img" t-att-aria-label="removeTitle" t-on-click="this.remove"/>`;const AttachmentError=__exports.AttachmentError=class AttachmentError extends Component{setup(){this.title=_t("Alert");}}
AttachmentError.components={Dialog};AttachmentError.template=xml`
<Dialog title="title">
    <div class="form-text">
        <p>The image could not be deleted because it is used in the
            following pages or views:</p>
        <ul t-foreach="props.views"  t-as="view" t-key="view.id">
            <li>
                <a t-att-href="'/web#model=ir.ui.view&amp;id=' + window.encodeURIComponent(view.id)">
                    <t t-esc="view.name"/>
                </a>
            </li>
        </ul>
    </div>
    <t t-set-slot="footer">
        <button class="btn btn-primary" t-on-click="() => this.props.close()">
            Ok
        </button>
    </t>
</Dialog>`;const Attachment=__exports.Attachment=class Attachment extends Component{setup(){this.dialogs=useService('dialog');this.rpc=useService('rpc');}
remove(){this.dialogs.add(ConfirmationDialog,{body:_t("Are you sure you want to delete this file?"),confirm:async()=>{const prevented=await this.rpc('/web_editor/attachment/remove',{ids:[this.props.id],});if(!Object.keys(prevented).length){this.props.onRemoved(this.props.id);}else{this.dialogs.add(AttachmentError,{views:prevented[this.props.id],});}},});}}
Attachment.components={RemoveButton,};const FileSelectorControlPanel=__exports.FileSelectorControlPanel=class FileSelectorControlPanel extends Component{setup(){this.state=useState({showUrlInput:false,urlInput:'',isValidUrl:false,isValidFileFormat:false});this.fileInput=useRef('file-input');}
get showSearchServiceSelect(){return this.props.searchService&&this.props.needle;}
get enableUrlUploadClick(){return!this.state.showUrlInput||(this.state.urlInput&&this.state.isValidUrl&&this.state.isValidFileFormat);}
async onUrlUploadClick(){if(!this.state.showUrlInput){this.state.showUrlInput=true;}else{await this.props.uploadUrl(this.state.urlInput);this.state.urlInput='';}}
onUrlInput(ev){const{isValidUrl,isValidFileFormat}=this.props.validateUrl(ev.target.value);this.state.isValidFileFormat=isValidFileFormat;this.state.isValidUrl=isValidUrl;}
onClickUpload(){this.fileInput.el.click();}
async onChangeFileInput(){const inputFiles=this.fileInput.el.files;if(!inputFiles.length){return;}
await this.props.uploadFiles(inputFiles);this.fileInput.el.value='';}}
FileSelectorControlPanel.template='web_editor.FileSelectorControlPanel';FileSelectorControlPanel.components={SearchMedia,};const FileSelector=__exports.FileSelector=class FileSelector extends Component{setup(){this.notificationService=useService("notification");this.orm=useService('orm');this.uploadService=useService('upload');this.keepLast=new KeepLast();this.loadMoreButtonRef=useRef('load-more-button');this.existingAttachmentsRef=useRef("existing-attachments");this.state=useState({attachments:[],canScrollAttachments:false,canLoadMoreAttachments:false,isFetchingAttachments:false,needle:'',});this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY=30;onWillStart(async()=>{this.state.attachments=await this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,0);});this.debouncedOnScroll=useDebounced(this.updateScroll,15);this.debouncedScrollUpdate=useDebounced(this.updateScroll,500);useEffect((modalEl)=>{if(modalEl){modalEl.addEventListener("scroll",this.debouncedOnScroll);return()=>{modalEl.removeEventListener("scroll",this.debouncedOnScroll);};}},()=>[this.props.modalRef.el?.querySelector("main.modal-body")]);useEffect(()=>{this.loadMoreButtonRef.el.classList.add("o_hide_loading");this.state.canScrollAttachments=false;this.debouncedScrollUpdate();},()=>[this.allAttachments.length]);}
get canLoadMore(){return this.state.canLoadMoreAttachments;}
get hasContent(){return this.state.attachments.length;}
get isFetching(){return this.state.isFetchingAttachments;}
get selectedAttachmentIds(){return this.props.selectedMedia[this.props.id].filter(media=>media.mediaType==='attachment').map(({id})=>id);}
get attachmentsDomain(){const domain=['&',['res_model','=',this.props.resModel],['res_id','=',this.props.resId||0]];domain.unshift('|',['public','=',true]);domain.push(['name','ilike',this.state.needle]);return domain;}
get allAttachments(){return this.state.attachments;}
validateUrl(url){const path=url.split('?')[0];const isValidUrl=/^.+\..+$/.test(path);const isValidFileFormat=true;return{isValidUrl,isValidFileFormat,path};}
async fetchAttachments(limit,offset){this.state.isFetchingAttachments=true;let attachments=[];try{attachments=await this.orm.call('ir.attachment','search_read',[],{domain:this.attachmentsDomain,fields:['name','mimetype','description','checksum','url','type','res_id','res_model','public','access_token','image_src','image_width','image_height','original_id'],order:'id desc',limit,offset,});attachments.forEach(attachment=>attachment.mediaType='attachment');}catch(e){if(e.exceptionName!=='odoo.exceptions.AccessError'){throw e;}}
this.state.canLoadMoreAttachments=attachments.length>=this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY;this.state.isFetchingAttachments=false;return attachments;}
async handleLoadMore(){await this.loadMore();}
async loadMore(){return this.keepLast.add(this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,this.state.attachments.length)).then((newAttachments)=>{this.state.attachments.push(...newAttachments);});}
async handleSearch(needle){await this.search(needle);}
async search(needle){this.state.attachments=[];this.state.needle=needle;return this.keepLast.add(this.fetchAttachments(this.NUMBER_OF_ATTACHMENTS_TO_DISPLAY,0)).then((attachments)=>{this.state.attachments=attachments;});}
async uploadFiles(files){await this.uploadService.uploadFiles(files,{resModel:this.props.resModel,resId:this.props.resId},attachment=>this.onUploaded(attachment));}
async uploadUrl(url){await this.uploadService.uploadUrl(url,{resModel:this.props.resModel,resId:this.props.resId,},attachment=>this.onUploaded(attachment));}
async onUploaded(attachment){this.state.attachments=[attachment,...this.state.attachments.filter(attach=>attach.id!==attachment.id)];this.selectAttachment(attachment);if(!this.props.multiSelect){await this.props.save();}
if(this.props.onAttachmentChange){this.props.onAttachmentChange(attachment);}}
onRemoved(attachmentId){this.state.attachments=this.state.attachments.filter(attachment=>attachment.id!==attachmentId);}
selectAttachment(attachment){this.props.selectMedia({...attachment,mediaType:'attachment'});}
selectInitialMedia(){return this.props.media&&this.constructor.tagNames.includes(this.props.media.tagName)&&!this.selectedAttachmentIds.length;}
updateScroll(){const loadMoreTop=this.loadMoreButtonRef.el.getBoundingClientRect().top;const modalEl=this.props.modalRef.el.querySelector("main.modal-body");const modalBottom=modalEl.getBoundingClientRect().bottom;this.state.canScrollAttachments=loadMoreTop>=modalBottom;this.loadMoreButtonRef.el.classList.remove("o_hide_loading");}
isAttachmentHidden(attachmentEl){const attachmentBottom=Math.round(attachmentEl.getBoundingClientRect().bottom);const modalEl=this.props.modalRef.el.querySelector("main.modal-body");const modalBottom=modalEl.getBoundingClientRect().bottom;return attachmentBottom>modalBottom;}
handleScrollAttachments(){let scrollToEl=this.loadMoreButtonRef.el;const attachmentEls=[...this.existingAttachmentsRef.el.querySelectorAll(".o_existing_attachment_cell")];const firstHiddenAttachmentEl=attachmentEls.find(el=>this.isAttachmentHidden(el));if(firstHiddenAttachmentEl){const attachmentBottom=firstHiddenAttachmentEl.getBoundingClientRect().bottom;const attachmentIndex=attachmentEls.indexOf(firstHiddenAttachmentEl);const firstNextRowAttachmentEl=attachmentEls.slice(attachmentIndex).find(el=>{return el.getBoundingClientRect().bottom>attachmentBottom;})
scrollToEl=firstNextRowAttachmentEl||scrollToEl;}
scrollToEl.scrollIntoView({block:"end",inline:"nearest",behavior:"smooth"});}}
FileSelector.template='web_editor.FileSelector';FileSelector.components={FileSelectorControlPanel,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/icon_selector.js */
odoo.define('@web_editor/components/media_dialog/icon_selector',['@web/core/l10n/translation','@web_editor/js/wysiwyg/fonts','@web_editor/components/media_dialog/search_media','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const fonts=require('@web_editor/js/wysiwyg/fonts')[Symbol.for("default")];const{SearchMedia}=require("@web_editor/components/media_dialog/search_media");const{Component,useState}=require("@odoo/owl");const IconSelector=__exports.IconSelector=class IconSelector extends Component{setup(){this.state=useState({fonts:this.props.fonts,needle:'',});this.searchPlaceholder=_t("Search a pictogram");}
get selectedMediaIds(){return this.props.selectedMedia[this.props.id].map(({id})=>id);}
search(needle){this.state.needle=needle;if(!this.state.needle){this.state.fonts=this.props.fonts;}else{this.state.fonts=this.props.fonts.map(font=>{const icons=font.icons.filter(icon=>icon.alias.indexOf(this.state.needle)>=0);return{...font,icons};});}}
async onClickIcon(font,icon){this.props.selectMedia({...icon,fontBase:font.base,initialIconChanged:this.props.media&&!icon.names.some(name=>this.props.media.classList.contains(name)),});await this.props.save();}
static createElements(selectedMedia){return selectedMedia.map(icon=>{const iconEl=document.createElement('span');iconEl.classList.add(icon.fontBase,icon.names[0]);return iconEl;});}
static initFonts(){fonts.computeFonts();const allFonts=fonts.fontIcons.map(({cssData,base})=>{const uniqueIcons=Array.from(new Map(cssData.map(icon=>{const alias=icon.names.join(',');const id=`${base}_${alias}`;return[id,{...icon,alias,id}];})).values());return{base,icons:uniqueIcons};});return allFonts;}}
IconSelector.mediaSpecificClasses=['fa'];IconSelector.mediaSpecificStyles=['color','background-color'];IconSelector.mediaExtraClasses=['rounded-circle','rounded','img-thumbnail','shadow',/^text-\S+$/,/^bg-\S+$/,/^fa-\S+$/,];IconSelector.tagNames=['SPAN','I'];IconSelector.template='web_editor.IconSelector';IconSelector.components={SearchMedia,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/image_selector.js */
odoo.define('@web_editor/components/media_dialog/image_selector',['@web/core/l10n/translation','@web/core/utils/hooks','@web_editor/js/common/utils','@web_editor/components/media_dialog/file_selector','@web/core/utils/concurrency','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require('@web/core/utils/hooks');const weUtils=require('@web_editor/js/common/utils')[Symbol.for("default")];const{Attachment,FileSelector,IMAGE_MIMETYPES,IMAGE_EXTENSIONS}=require("@web_editor/components/media_dialog/file_selector");const{KeepLast}=require("@web/core/utils/concurrency");const{useRef,useState,useEffect}=require("@odoo/owl");const AutoResizeImage=__exports.AutoResizeImage=class AutoResizeImage extends Attachment{setup(){super.setup();this.image=useRef('auto-resize-image');this.container=useRef('auto-resize-image-container');this.state=useState({loaded:false,});useEffect(()=>{this.image.el.addEventListener('load',()=>this.onImageLoaded());return this.image.el.removeEventListener('load',()=>this.onImageLoaded());},()=>[]);}
async onImageLoaded(){if(!this.image.el){return;}
if(this.props.onLoaded){await this.props.onLoaded(this.image.el);if(!this.image.el){return;}}
const aspectRatio=this.image.el.offsetWidth/this.image.el.offsetHeight;const width=aspectRatio*this.props.minRowHeight;this.container.el.style.flexGrow=width;this.container.el.style.flexBasis=`${width}px`;this.state.loaded=true;}}
AutoResizeImage.template='web_editor.AutoResizeImage';const ImageSelector=__exports.ImageSelector=class ImageSelector extends FileSelector{setup(){super.setup();this.rpc=useService('rpc');this.keepLastLibraryMedia=new KeepLast();this.state.libraryMedia=[];this.state.libraryResults=null;this.state.isFetchingLibrary=false;this.state.searchService='all';this.state.showOptimized=false;this.NUMBER_OF_MEDIA_TO_DISPLAY=10;this.uploadText=_t("Upload an image");this.urlPlaceholder="https://www.odoo.com/logo.png";this.addText=_t("Add URL");this.searchPlaceholder=_t("Search an image");this.urlWarningTitle=_t("Uploaded image's format is not supported. Try with: "+IMAGE_EXTENSIONS.join(', '));this.allLoadedText=_t("All images have been loaded");this.showOptimizedOption=this.env.debug;this.MIN_ROW_HEIGHT=128;this.fileMimetypes=IMAGE_MIMETYPES.join(',');}
get canLoadMore(){if(this.state.searchService==='media-library'){return this.state.libraryResults&&this.state.libraryMedia.length<this.state.libraryResults;}
return super.canLoadMore;}
get hasContent(){if(this.state.searchService==='all'){return super.hasContent||!!this.state.libraryMedia.length;}else if(this.state.searchService==='media-library'){return!!this.state.libraryMedia.length;}
return super.hasContent;}
get isFetching(){return super.isFetching||this.state.isFetchingLibrary;}
get selectedMediaIds(){return this.props.selectedMedia[this.props.id].filter(media=>media.mediaType==='libraryMedia').map(({id})=>id);}
get allAttachments(){return[...super.allAttachments,...this.state.libraryMedia];}
get attachmentsDomain(){const domain=super.attachmentsDomain;domain.push(['mimetype','in',IMAGE_MIMETYPES]);if(!this.props.useMediaLibrary){domain.push('|',['url','=',false],'!',['url','=ilike','/web_editor/shape/%']);}
domain.push('!',['name','=like','%.crop']);domain.push('|',['type','=','binary'],'!',['url','=like','/%/static/%']);if(!this.env.debug){const subDomain=[false];const originalId=this.props.media&&this.props.media.dataset.originalId;if(originalId){subDomain.push(originalId);}
domain.push(['original_id','in',subDomain]);}
return domain;}
async uploadFiles(files){await this.uploadService.uploadFiles(files,{resModel:this.props.resModel,resId:this.props.resId,isImage:true},(attachment)=>this.onUploaded(attachment));}
async uploadUrl(url){await fetch(url).then(async result=>{const blob=await result.blob();blob.id=new Date().getTime();blob.name=new URL(url,window.location.href).pathname.split("/").findLast(s=>s);await this.uploadFiles([blob]);}).catch(async()=>{await new Promise(resolve=>{const imageEl=document.createElement("img");imageEl.onerror=()=>{this.notificationService.add(_t("An error occurred while fetching the entered URL."),{title:_t("Error"),sticky:true,});resolve();};imageEl.onload=()=>{super.uploadUrl(url).then(resolve);};imageEl.src=url;});});}
validateUrl(...args){const{isValidUrl,path}=super.validateUrl(...args);const isValidFileFormat=IMAGE_EXTENSIONS.some(format=>path.endsWith(format));return{isValidFileFormat,isValidUrl};}
isInitialMedia(attachment){if(this.props.media.dataset.originalSrc){return this.props.media.dataset.originalSrc===attachment.image_src;}
return this.props.media.getAttribute('src')===attachment.image_src;}
async fetchAttachments(limit,offset){const attachments=await super.fetchAttachments(limit,offset);const primaryColors={};for(let color=1;color<=5;color++){primaryColors[color]=weUtils.getCSSVariableValue('o-color-'+color);}
return attachments.map(attachment=>{if(attachment.image_src.startsWith('/')){const newURL=new URL(attachment.image_src,window.location.origin);if(attachment.image_src.startsWith('/web_editor/shape/')){newURL.searchParams.forEach((value,key)=>{const match=key.match(/^c([1-5])$/);if(match){newURL.searchParams.set(key,primaryColors[match[1]]);}});}else{newURL.searchParams.set('height',2*this.MIN_ROW_HEIGHT);}
attachment.thumbnail_src=newURL.pathname+newURL.search;}
if(this.selectInitialMedia()&&this.isInitialMedia(attachment)){this.selectAttachment(attachment);}
return attachment;});}
async fetchLibraryMedia(offset){if(!this.state.needle){return{media:[],results:null};}
this.state.isFetchingLibrary=true;try{const response=await this.rpc('/web_editor/media_library_search',{'query':this.state.needle,'offset':offset,},{silent:true,});this.state.isFetchingLibrary=false;const media=(response.media||[]).slice(0,this.NUMBER_OF_MEDIA_TO_DISPLAY);media.forEach(record=>record.mediaType='libraryMedia');return{media,results:response.results};}catch{console.error(`Couldn't reach API endpoint.`);this.state.isFetchingLibrary=false;return{media:[],results:null};}}
async loadMore(...args){await super.loadMore(...args);if(!this.props.useMediaLibrary||this.state.searchService!=='media-library'){return;}
return this.keepLastLibraryMedia.add(this.fetchLibraryMedia(this.state.libraryMedia.length)).then(({media})=>{this.state.libraryMedia.push(...media);});}
async search(...args){await super.search(...args);if(!this.props.useMediaLibrary){return;}
if(!this.state.needle){this.state.searchService='all';}
this.state.libraryMedia=[];this.state.libraryResults=0;return this.keepLastLibraryMedia.add(this.fetchLibraryMedia(0)).then(({media,results})=>{this.state.libraryMedia=media;this.state.libraryResults=results;});}
async onClickAttachment(attachment){this.selectAttachment(attachment);if(!this.props.multiSelect){await this.props.save();}}
async onClickMedia(media){this.props.selectMedia({...media,mediaType:'libraryMedia'});if(!this.props.multiSelect){await this.props.save();}}
static async createElements(selectedMedia,{orm,rpc}){const toSave=Object.fromEntries(selectedMedia.filter(media=>media.mediaType==='libraryMedia').map(media=>[media.id,{query:media.query||'',is_dynamic_svg:!!media.isDynamicSVG,dynamic_colors:media.dynamicColors,}]));let savedMedia=[];if(Object.keys(toSave).length!==0){savedMedia=await rpc('/web_editor/save_library_media',{media:toSave});}
const selected=selectedMedia.filter(media=>media.mediaType==='attachment').concat(savedMedia).map(attachment=>{if(attachment.image_src&&attachment.image_src.startsWith('/web_editor/shape/')){const colorCustomizedURL=new URL(attachment.image_src,window.location.origin);colorCustomizedURL.searchParams.forEach((value,key)=>{const match=key.match(/^c([1-5])$/);if(match){colorCustomizedURL.searchParams.set(key,weUtils.getCSSVariableValue(`o-color-${match[1]}`));}});attachment.image_src=colorCustomizedURL.pathname+colorCustomizedURL.search;}
return attachment;});return Promise.all(selected.map(async(attachment)=>{const imageEl=document.createElement('img');let src=attachment.image_src;if(!attachment.public&&!attachment.url){let accessToken=attachment.access_token;if(!accessToken){[accessToken]=await orm.call('ir.attachment','generate_access_token',[attachment.id],);}
src+=`?access_token=${encodeURIComponent(accessToken)}`;}
imageEl.src=src;imageEl.alt=attachment.description||'';return imageEl;}));}
async onImageLoaded(imgEl,attachment){this.debouncedScrollUpdate();if(attachment.mediaType==='libraryMedia'&&!imgEl.src.startsWith('blob')){await this.onLibraryImageLoaded(imgEl,attachment);}}
async onLibraryImageLoaded(imgEl,media){const mediaUrl=imgEl.src;try{const response=await fetch(mediaUrl);if(response.headers.get('content-type')==='image/svg+xml'){let svg=await response.text();const dynamicColors={};const combinedColorsRegex=new RegExp(Object.values(weUtils.DEFAULT_PALETTE).join('|'),'gi');svg=svg.replace(combinedColorsRegex,match=>{const colorId=Object.keys(weUtils.DEFAULT_PALETTE).find(key=>weUtils.DEFAULT_PALETTE[key]===match.toUpperCase());const colorKey='c'+colorId
dynamicColors[colorKey]=weUtils.getCSSVariableValue('o-color-'+colorId);return dynamicColors[colorKey];});const fileName=mediaUrl.split('/').pop();const file=new File([svg],fileName,{type:"image/svg+xml",});imgEl.src=URL.createObjectURL(file);if(Object.keys(dynamicColors).length){media.isDynamicSVG=true;media.dynamicColors=dynamicColors;}}}catch{console.error('CORS is misconfigured on the API server, image will be treated as non-dynamic.');}}}
ImageSelector.mediaSpecificClasses=['img','img-fluid','o_we_custom_image'];ImageSelector.mediaSpecificStyles=[];ImageSelector.mediaExtraClasses=['rounded-circle','rounded','img-thumbnail','shadow','w-25','w-50','w-75','w-100',];ImageSelector.tagNames=['IMG'];ImageSelector.attachmentsListTemplate='web_editor.ImagesListTemplate';ImageSelector.components={...FileSelector.components,AutoResizeImage,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/media_dialog.js */
odoo.define('@web_editor/components/media_dialog/media_dialog',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/utils/concurrency','@web/core/dialog/dialog','@web/core/notebook/notebook','@web_editor/components/media_dialog/image_selector','@web_editor/components/media_dialog/document_selector','@web_editor/components/media_dialog/icon_selector','@web_editor/components/media_dialog/video_selector','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService,useChildRef}=require('@web/core/utils/hooks');const{Mutex}=require("@web/core/utils/concurrency");const{Dialog}=require('@web/core/dialog/dialog');const{Notebook}=require('@web/core/notebook/notebook');const{ImageSelector}=require("@web_editor/components/media_dialog/image_selector");const{DocumentSelector}=require("@web_editor/components/media_dialog/document_selector");const{IconSelector}=require("@web_editor/components/media_dialog/icon_selector");const{VideoSelector}=require("@web_editor/components/media_dialog/video_selector");const{Component,useState,useRef,useEffect}=require("@odoo/owl");const TABS=__exports.TABS={IMAGES:{id:'IMAGES',title:_t("Images"),Component:ImageSelector,},DOCUMENTS:{id:'DOCUMENTS',title:_t("Documents"),Component:DocumentSelector,},ICONS:{id:'ICONS',title:_t("Icons"),Component:IconSelector,},VIDEOS:{id:'VIDEOS',title:_t("Videos"),Component:VideoSelector,},};const MediaDialog=__exports.MediaDialog=class MediaDialog extends Component{setup(){this.size='xl';this.contentClass='o_select_media_dialog h-100';this.title=_t("Select a media");this.modalRef=useChildRef();this.rpc=useService('rpc');this.orm=useService('orm');this.notificationService=useService('notification');this.mutex=new Mutex();this.tabs=[];this.selectedMedia=useState({});this.addButtonRef=useRef('add-button');this.initialIconClasses=[];this.addTabs();this.errorMessages={};this.state=useState({activeTab:this.initialActiveTab,});useEffect((nbSelectedAttachments)=>{this.addButtonRef.el.toggleAttribute("disabled",!nbSelectedAttachments);},()=>[this.selectedMedia[this.state.activeTab].length]);}
get initialActiveTab(){if(this.props.activeTab){return this.props.activeTab;}
if(this.props.media){const correspondingTab=Object.keys(TABS).find(id=>TABS[id].Component.tagNames.includes(this.props.media.tagName));if(correspondingTab){return correspondingTab;}}
return this.tabs[0].id;}
addTab(tab,additionalProps={}){this.selectedMedia[tab.id]=[];this.tabs.push({...tab,props:{...tab.props,...additionalProps,id:tab.id,resModel:this.props.resModel,resId:this.props.resId,media:this.props.media,multiImages:this.props.multiImages,selectedMedia:this.selectedMedia,selectMedia:(...args)=>this.selectMedia(...args,tab.id,additionalProps.multiSelect),save:this.save.bind(this),onAttachmentChange:this.props.onAttachmentChange,errorMessages:(errorMessage)=>this.errorMessages[tab.id]=errorMessage,modalRef:this.modalRef,},});}
addTabs(){const onlyImages=this.props.onlyImages||this.props.multiImages||(this.props.media&&this.props.media.parentElement&&(this.props.media.parentElement.dataset.oeField==='image'||this.props.media.parentElement.dataset.oeType==='image'));const noDocuments=onlyImages||this.props.noDocuments;const noIcons=onlyImages||this.props.noIcons;const noVideos=onlyImages||this.props.noVideos;if(!this.props.noImages){this.addTab(TABS.IMAGES,{useMediaLibrary:this.props.useMediaLibrary,multiSelect:this.props.multiImages,});}
if(!noDocuments){this.addTab(TABS.DOCUMENTS);}
if(!noIcons){const fonts=TABS.ICONS.Component.initFonts();this.addTab(TABS.ICONS,{fonts,});if(this.props.media&&TABS.ICONS.Component.tagNames.includes(this.props.media.tagName)){const classes=this.props.media.className.split(/\s+/);const mediaFont=fonts.find(font=>classes.includes(font.base));if(mediaFont){const selectedIcon=mediaFont.icons.find(icon=>icon.names.some(name=>classes.includes(name)));if(selectedIcon){this.initialIconClasses.push(...selectedIcon.names);this.selectMedia(selectedIcon,TABS.ICONS.id);}}}}
if(!noVideos){this.addTab(TABS.VIDEOS,{vimeoPreviewIds:this.props.vimeoPreviewIds,isForBgVideo:this.props.isForBgVideo,});}}
async renderMedia(selectedMedia){const elements=await this.mutex.exec(async()=>await TABS[this.state.activeTab].Component.createElements(selectedMedia,{rpc:this.rpc,orm:this.orm}));elements.forEach(element=>{if(this.props.media){element.classList.add(...this.props.media.classList);const style=this.props.media.getAttribute('style');if(style){element.setAttribute('style',style);}
if(this.state.activeTab===TABS.IMAGES.id){if(this.props.media.dataset.shape){element.dataset.shape=this.props.media.dataset.shape;}
if(this.props.media.dataset.shapeColors){element.dataset.shapeColors=this.props.media.dataset.shapeColors;}
if(this.props.media.dataset.shapeFlip){element.dataset.shapeFlip=this.props.media.dataset.shapeFlip;}
if(this.props.media.dataset.shapeRotate){element.dataset.shapeRotate=this.props.media.dataset.shapeRotate;}
if(this.props.media.dataset.hoverEffect){element.dataset.hoverEffect=this.props.media.dataset.hoverEffect;}
if(this.props.media.dataset.hoverEffectColor){element.dataset.hoverEffectColor=this.props.media.dataset.hoverEffectColor;}
if(this.props.media.dataset.hoverEffectStrokeWidth){element.dataset.hoverEffectStrokeWidth=this.props.media.dataset.hoverEffectStrokeWidth;}
if(this.props.media.dataset.hoverEffectIntensity){element.dataset.hoverEffectIntensity=this.props.media.dataset.hoverEffectIntensity;}}}
for(const otherTab of Object.keys(TABS).filter(key=>key!==this.state.activeTab)){for(const property of TABS[otherTab].Component.mediaSpecificStyles){element.style.removeProperty(property);}
element.classList.remove(...TABS[otherTab].Component.mediaSpecificClasses);const extraClassesToRemove=[];for(const name of TABS[otherTab].Component.mediaExtraClasses){if(typeof(name)==='string'){extraClassesToRemove.push(name);}else{for(const className of element.classList){if(className.match(name)){extraClassesToRemove.push(className);}}}}
element.classList.remove(...extraClassesToRemove.filter(candidateName=>{for(const name of TABS[this.state.activeTab].Component.mediaExtraClasses){if(typeof(name)==='string'){if(candidateName===name){return false;}}else{for(const className of element.classList){if(className.match(candidateName)){return false;}}}}
return true;}));}
element.classList.remove(...this.initialIconClasses);element.classList.remove('o_modified_image_to_save');element.classList.remove('oe_edited_link');element.classList.add(...TABS[this.state.activeTab].Component.mediaSpecificClasses);});return elements;}
selectMedia(media,tabId,multiSelect){if(multiSelect){const isMediaSelected=this.selectedMedia[tabId].map(({id})=>id).includes(media.id);if(!isMediaSelected){this.selectedMedia[tabId].push(media);}else{this.selectedMedia[tabId]=this.selectedMedia[tabId].filter(m=>m.id!==media.id);}}else{this.selectedMedia[tabId]=[media];}}
async save(){if(this.errorMessages[this.state.activeTab]){this.notificationService.add(this.errorMessages[this.state.activeTab],{type:'danger',});return;}
const selectedMedia=this.selectedMedia[this.state.activeTab];const saveSelectedMedia=selectedMedia.length&&(this.state.activeTab!==TABS.ICONS.id||selectedMedia[0].initialIconChanged||!this.props.media);if(saveSelectedMedia){const elements=await this.renderMedia(selectedMedia);if(this.props.multiImages){this.props.save(elements);}else{this.props.save(elements[0]);}}
this.props.close();}
onTabChange(tab){this.state.activeTab=tab;}}
MediaDialog.template='web_editor.MediaDialog';MediaDialog.defaultProps={useMediaLibrary:true,};MediaDialog.components={...Object.keys(TABS).map(key=>TABS[key].Component),Dialog,Notebook,};return __exports;});;

/* /web_editor/static/src/components/media_dialog/search_media.js */
odoo.define('@web_editor/components/media_dialog/search_media',['@web/core/utils/timing','@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useDebounced}=require('@web/core/utils/timing');const{useAutofocus}=require('@web/core/utils/hooks');const{Component,xml,useEffect,useState}=require("@odoo/owl");const SearchMedia=__exports.SearchMedia=class SearchMedia extends Component{setup(){useAutofocus();this.debouncedSearch=useDebounced(this.props.search,1000);this.state=useState({input:this.props.needle||'',});useEffect((input)=>{if(this.hasRendered){this.debouncedSearch(input);}else{this.hasRendered=true;}},()=>[this.state.input]);}}
SearchMedia.template=xml`
<div class="position-relative mw-lg-25 flex-grow-1 me-auto">
    <input type="text" class="o_we_search o_input form-control" t-att-placeholder="props.searchPlaceholder.trim()" t-model="state.input" t-ref="autofocus"/>
    <i class="oi oi-search input-group-text position-absolute end-0 top-50 me-n3 px-2 py-1 translate-middle bg-transparent border-0" title="Search" role="img" aria-label="Search"/>
</div>`;return __exports;});;

/* /web_editor/static/src/components/media_dialog/video_selector.js */
odoo.define('@web_editor/components/media_dialog/video_selector',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/utils/timing','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useAutofocus,useService}=require('@web/core/utils/hooks');const{debounce}=require('@web/core/utils/timing');const{Component,useState,useRef,onMounted,onWillStart}=require("@odoo/owl");class VideoOption extends Component{}
VideoOption.template='web_editor.VideoOption';class VideoIframe extends Component{static template='web_editor.VideoIframe';static props={src:{type:String},};}
const VideoSelector=__exports.VideoSelector=class VideoSelector extends Component{setup(){this.rpc=useService('rpc');this.http=useService('http');this.PLATFORMS={youtube:'youtube',dailymotion:'dailymotion',vimeo:'vimeo',youku:'youku',};this.OPTIONS={autoplay:{label:_t("Autoplay"),description:_t("Videos are muted when autoplay is enabled"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.dailymotion,this.PLATFORMS.vimeo],urlParameter:'autoplay=1',},loop:{label:_t("Loop"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.vimeo],urlParameter:'loop=1',},hide_controls:{label:_t("Hide player controls"),platforms:[this.PLATFORMS.youtube,this.PLATFORMS.dailymotion,this.PLATFORMS.vimeo],urlParameter:'controls=0',},hide_fullscreen:{label:_t("Hide fullscreen button"),platforms:[this.PLATFORMS.youtube],urlParameter:'fs=0',isHidden:()=>this.state.options.filter(option=>option.id==='hide_controls')[0].value,},hide_dm_logo:{label:_t("Hide Dailymotion logo"),platforms:[this.PLATFORMS.dailymotion],urlParameter:'ui-logo=0',},hide_dm_share:{label:_t("Hide sharing button"),platforms:[this.PLATFORMS.dailymotion],urlParameter:'sharing-enable=0',},};this.state=useState({options:[],src:'',urlInput:'',platform:null,vimeoPreviews:[],errorMessage:'',});this.urlInputRef=useRef('url-input');onWillStart(async()=>{if(this.props.media){const src=this.props.media.dataset.oeExpression||this.props.media.dataset.src||(this.props.media.tagName==='IFRAME'&&this.props.media.getAttribute('src'))||'';if(src){this.state.urlInput=src;await this.updateVideo();this.state.options=this.state.options.map((option)=>{const{urlParameter}=this.OPTIONS[option.id];return{...option,value:src.indexOf(urlParameter)>=0};});}}});onMounted(async()=>{await Promise.all(this.props.vimeoPreviewIds.map(async(videoId)=>{const{thumbnail_url:thumbnailSrc}=await this.http.get(`https://vimeo.com/api/oembed.json?url=http%3A//vimeo.com/${encodeURIComponent(videoId)}`);this.state.vimeoPreviews.push({id:videoId,thumbnailSrc,src:`https://player.vimeo.com/video/${encodeURIComponent(videoId)}`});}));});useAutofocus();this.onChangeUrl=debounce((ev)=>this.updateVideo(ev.target.value),500);}
get shownOptions(){if(this.props.isForBgVideo){return[];}
return this.state.options.filter(option=>!this.OPTIONS[option.id].isHidden||!this.OPTIONS[option.id].isHidden());}
async onChangeOption(optionId){this.state.options=this.state.options.map(option=>{if(option.id===optionId){return{...option,value:!option.value};}
return option;});await this.updateVideo();}
async onClickSuggestion(src){this.state.urlInput=src;await this.updateVideo();}
async updateVideo(){if(!this.state.urlInput){this.state.src='';this.state.urlInput='';this.state.options=[];this.state.platform=null;this.state.errorMessage='';this.props.selectMedia({});return;}
const embedMatch=this.state.urlInput.match(/(src|href)=["']?([^"']+)?/);if(embedMatch&&embedMatch[2].length>0&&embedMatch[2].indexOf('instagram')){embedMatch[1]=embedMatch[2];}
const url=embedMatch?embedMatch[1]:this.state.urlInput;const options={};if(this.props.isForBgVideo){Object.keys(this.OPTIONS).forEach(key=>{options[key]=true;});}else{for(const option of this.shownOptions){options[option.id]=option.value;}}
const{embed_url:src,video_id:videoId,params,platform}=await this._getVideoURLData(url,options);if(!src){this.state.errorMessage=_t("The provided url is not valid");}else if(!platform){this.state.errorMessage=_t("The provided url does not reference any supported video");}else{this.state.errorMessage='';}
this.props.errorMessages(this.state.errorMessage);const newOptions=[];if(platform&&platform!==this.state.platform){Object.keys(this.OPTIONS).forEach(key=>{if(this.OPTIONS[key].platforms.includes(platform)){const{label,description}=this.OPTIONS[key];newOptions.push({id:key,label,description});}});}
this.state.src=src;this.props.selectMedia({id:src,src,platform,videoId,params});if(platform!==this.state.platform){this.state.platform=platform;this.state.options=newOptions;}}
async _getVideoURLData(url,options){return await this.rpc('/web_editor/video_url/data',{video_url:url,...options,});}
static createElements(selectedMedia){return selectedMedia.map(video=>{const div=document.createElement('div');div.dataset.oeExpression=video.src;div.innerHTML=`
                <div class="css_editable_mode_display"></div>
                <div class="media_iframe_video_size" contenteditable="false"></div>
                <iframe frameborder="0" contenteditable="false" allowfullscreen="allowfullscreen"></iframe>
            `;div.querySelector('iframe').src=video.src;return div;});}}
VideoSelector.mediaSpecificClasses=['media_iframe_video'];VideoSelector.mediaSpecificStyles=[];VideoSelector.mediaExtraClasses=[];VideoSelector.tagNames=['IFRAME','DIV'];VideoSelector.template='web_editor.VideoSelector';VideoSelector.components={VideoIframe,VideoOption,};VideoSelector.defaultProps={vimeoPreviewIds:[],isForBgVideo:false,};return __exports;});;

/* /web_editor/static/src/components/upload_progress_toast/upload_progress_toast.js */
odoo.define('@web_editor/components/upload_progress_toast/upload_progress_toast',['@web/core/utils/hooks','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require('@web/core/utils/hooks');const{Component,useState}=require("@odoo/owl");const ProgressBar=__exports.ProgressBar=class ProgressBar extends Component{get progress(){return Math.round(this.props.progress);}}
ProgressBar.template='web_editor.ProgressBar';ProgressBar.props={progress:{type:Number,optional:true},hasError:{type:Boolean,optional:true},uploaded:{type:Boolean,optional:true},name:String,size:{type:String,optional:true},errorMessage:{type:String,optional:true},};ProgressBar.defaultProps={progress:0,hasError:false,uploaded:false,size:"",errorMessage:"",};const UploadProgressToast=__exports.UploadProgressToast=class UploadProgressToast extends Component{setup(){this.uploadService=useService('upload');this.state=useState(this.uploadService.progressToast);}}
UploadProgressToast.template='web_editor.UploadProgressToast';UploadProgressToast.components={ProgressBar};UploadProgressToast.props={close:Function,};return __exports;});;

/* /web_editor/static/src/components/upload_progress_toast/upload_service.js */
odoo.define('@web_editor/components/upload_progress_toast/upload_service',['@web/core/registry','@web_editor/components/upload_progress_toast/upload_progress_toast','@web/core/l10n/translation','@web/core/utils/files','@web/core/utils/numbers','@web/core/utils/urls','@web/core/utils/strings','@odoo/owl'],function(require){'use strict';let __exports={};const{registry}=require('@web/core/registry');const{UploadProgressToast}=require("@web_editor/components/upload_progress_toast/upload_progress_toast");const{_t}=require("@web/core/l10n/translation");const{checkFileSize}=require("@web/core/utils/files");const{humanNumber}=require("@web/core/utils/numbers");const{getDataURLFromFile}=require("@web/core/utils/urls");const{sprintf}=require("@web/core/utils/strings");const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=__exports.AUTOCLOSE_DELAY=3000;const uploadService=__exports.uploadService={dependencies:['rpc','notification'],start(env,{rpc,notification}){let fileId=0;const progressToast=reactive({files:{},isVisible:false,});registry.category('main_components').add('UploadProgressToast',{Component:UploadProgressToast,props:{close:()=>progressToast.isVisible=false,}});const addFile=(file)=>{progressToast.files[file.id]=file;progressToast.isVisible=true;return progressToast.files[file.id];};const deleteFile=(fileId)=>{delete progressToast.files[fileId];if(!Object.keys(progressToast.files).length){progressToast.isVisible=false;}};return{get progressToast(){return progressToast;},get fileId(){return fileId;},addFile,deleteFile,incrementId(){fileId++;},uploadUrl:async(url,{resModel,resId},onUploaded)=>{const attachment=await rpc('/web_editor/attachment/add_url',{url,'res_model':resModel,'res_id':resId,});await onUploaded(attachment);},uploadFiles:async(files,{resModel,resId,isImage},onUploaded)=>{const sortedFiles=Array.from(files).sort((a,b)=>a.size-b.size);for(const file of sortedFiles){let fileSize=file.size;if(!checkFileSize(fileSize,notification)){return null;}
if(!fileSize){fileSize="";}else{fileSize=humanNumber(fileSize)+"B";}
const id=++fileId;file.progressToastId=id;addFile({id,name:file.name,size:fileSize,});}
for(const sortedFile of sortedFiles){const file=progressToast.files[sortedFile.progressToastId];let dataURL;try{dataURL=await getDataURLFromFile(sortedFile);}catch{deleteFile(file.id);env.services.notification.add(sprintf(_t('Could not load the file "%s".'),sortedFile.name),{type:'danger'});continue}
try{const xhr=new XMLHttpRequest();xhr.upload.addEventListener('progress',ev=>{const rpcComplete=ev.loaded/ev.total*100;file.progress=rpcComplete;});xhr.upload.addEventListener('load',function(){file.progress=100;});const attachment=await rpc('/web_editor/attachment/add_data',{'name':file.name,'data':dataURL.split(',')[1],'res_id':resId,'res_model':resModel,'is_image':!!isImage,'width':0,'quality':0,},{xhr});if(attachment.error){file.hasError=true;file.errorMessage=attachment.error;}else{if(attachment.mimetype==='image/webp'){const image=document.createElement('img');image.src=`data:image/webp;base64,${dataURL.split(',')[1]}`;await new Promise(resolve=>image.addEventListener('load',resolve));const canvas=document.createElement('canvas');canvas.width=image.width;canvas.height=image.height;const ctx=canvas.getContext('2d');ctx.fillStyle='rgb(255, 255, 255)';ctx.fillRect(0,0,canvas.width,canvas.height);ctx.drawImage(image,0,0);const altDataURL=canvas.toDataURL('image/jpeg',0.75);await rpc('/web_editor/attachment/add_data',{'name':file.name.replace(/\.webp$/,'.jpg'),'data':altDataURL.split(',')[1],'res_id':attachment.id,'res_model':'ir.attachment','is_image':true,'width':0,'quality':0,},{xhr});}
file.uploaded=true;await onUploaded(attachment);}
setTimeout(()=>deleteFile(file.id),AUTOCLOSE_DELAY);}catch(error){file.hasError=true;setTimeout(()=>deleteFile(file.id),AUTOCLOSE_DELAY);throw error;}}}};},};registry.category('services').add('upload',uploadService);return __exports;});;

/* /web_unsplash/static/src/components/media_dialog/image_selector.js */
odoo.define('@web_unsplash/components/media_dialog/image_selector',['@web/core/l10n/translation','@web/core/utils/patch','@web/core/utils/concurrency','@web_editor/components/media_dialog/media_dialog','@web_editor/components/media_dialog/image_selector','@web/core/utils/hooks','@web_editor/components/upload_progress_toast/upload_service','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{patch}=require("@web/core/utils/patch");const{KeepLast}=require("@web/core/utils/concurrency");const{MediaDialog,TABS}=require('@web_editor/components/media_dialog/media_dialog');const{ImageSelector}=require('@web_editor/components/media_dialog/image_selector');const{useService}=require('@web/core/utils/hooks');const{uploadService,AUTOCLOSE_DELAY}=require('@web_editor/components/upload_progress_toast/upload_service');const{useState,Component}=require("@odoo/owl");class UnsplashCredentials extends Component{setup(){this.state=useState({key:'',appId:'',hasKeyError:this.props.hasCredentialsError,hasAppIdError:this.props.hasCredentialsError,});}
submitCredentials(){if(this.state.key===''){this.state.hasKeyError=true;}else if(this.state.appId===''){this.state.hasAppIdError=true;}else{this.props.submitCredentials(this.state.key,this.state.appId);}}}
UnsplashCredentials.template='web_unsplash.UnsplashCredentials';const UnsplashError=__exports.UnsplashError=class UnsplashError extends Component{}
UnsplashError.template='web_unsplash.UnsplashError';UnsplashError.components={UnsplashCredentials,};patch(ImageSelector.prototype,{setup(){super.setup();this.unsplash=useService('unsplash');this.keepLastUnsplash=new KeepLast();this.state.unsplashRecords=[];this.state.isFetchingUnsplash=false;this.state.isMaxed=false;this.state.unsplashError=null;this.state.useUnsplash=true;this.NUMBER_OF_RECORDS_TO_DISPLAY=30;this.errorMessages={'key_not_found':{title:_t("Setup Unsplash to access royalty free photos."),subtitle:"",},401:{title:_t("Unauthorized Key"),subtitle:_t("Please check your Unsplash access key and application ID."),},403:{title:_t("Search is temporarily unavailable"),subtitle:_t("The max number of searches is exceeded. Please retry in an hour or extend to a better account."),},};},get canLoadMore(){if(this.state.searchService==='all'){return super.canLoadMore||this.state.needle&&!this.state.isMaxed&&!this.state.unsplashError;}else if(this.state.searchService==='unsplash'){return this.state.needle&&!this.state.isMaxed&&!this.state.unsplashError;}
return super.canLoadMore;},get hasContent(){if(this.state.searchService==='all'){return super.hasContent||!!this.state.unsplashRecords.length;}else if(this.state.searchService==='unsplash'){return!!this.state.unsplashRecords.length;}
return super.hasContent;},get errorTitle(){if(this.errorMessages[this.state.unsplashError]){return this.errorMessages[this.state.unsplashError].title;}
return _t("Something went wrong");},get errorSubtitle(){if(this.errorMessages[this.state.unsplashError]){return this.errorMessages[this.state.unsplashError].subtitle;}
return _t("Please check your internet connection or contact administrator.");},get selectedRecordIds(){return this.props.selectedMedia[this.props.id].filter(media=>media.mediaType==='unsplashRecord').map(({id})=>id);},get isFetching(){return super.isFetching||this.state.isFetchingUnsplash;},get combinedRecords(){function alternate(a,b){return[a.map((v,i)=>i<b.length?[v,b[i]]:v),b.slice(a.length),].flat(2);}
return alternate(this.state.unsplashRecords,this.state.libraryMedia);},get allAttachments(){return[...super.allAttachments,...this.state.unsplashRecords];},set canLoadMore(_){},set hasContent(_){},set isFetching(_){},set selectedMediaIds(_){},set attachmentsDomain(_){},set errorTitle(_){},set errorSubtitle(_){},set selectedRecordIds(_){},async fetchUnsplashRecords(offset){if(!this.state.needle){return{records:[],isMaxed:false};}
this.state.isFetchingUnsplash=true;try{const{isMaxed,images}=await this.unsplash.getImages(this.state.needle,offset,this.NUMBER_OF_RECORDS_TO_DISPLAY,this.props.orientation);this.state.isFetchingUnsplash=false;this.state.unsplashError=false;const existingIds=this.state.unsplashRecords.map(existing=>existing.id);const newImages=images.filter(record=>!existingIds.includes(record.id));const records=newImages.map(record=>{const url=new URL(record.urls.regular);url.searchParams.set('h',2*this.MIN_ROW_HEIGHT);url.searchParams.delete('w');return Object.assign({},record,{url:url.toString(),mediaType:'unsplashRecord',});});return{isMaxed,records};}catch(e){this.state.isFetchingUnsplash=false;if(e==='no_access'){this.state.useUnsplash=false;}else{this.state.unsplashError=e;}
return{records:[],isMaxed:true};}},async loadMore(...args){await super.loadMore(...args);return this.keepLastUnsplash.add(this.fetchUnsplashRecords(this.state.unsplashRecords.length)).then(({records,isMaxed})=>{this.state.unsplashRecords.push(...records);this.state.isMaxed=isMaxed;});},async search(...args){await super.search(...args);await this.searchUnsplash();},async searchUnsplash(){if(!this.state.needle){this.state.unsplashError=false;this.state.unsplashRecords=[];this.state.isMaxed=false;}
return this.keepLastUnsplash.add(this.fetchUnsplashRecords(0)).then(({records,isMaxed})=>{this.state.unsplashRecords=records;this.state.isMaxed=isMaxed;});},async onClickRecord(media){this.props.selectMedia({...media,mediaType:'unsplashRecord',query:this.state.needle});if(!this.props.multiSelect){await this.props.save();}},async submitCredentials(key,appId){this.state.unsplashError=null;await this.rpc('/web_unsplash/save_unsplash',{key,appId});await this.searchUnsplash();},});ImageSelector.components={...ImageSelector.components,UnsplashError,};patch(MediaDialog.prototype,{setup(){super.setup();this.uploadService=useService('upload');},async save(){const selectedImages=this.selectedMedia[TABS.IMAGES.id];if(selectedImages){const unsplashRecords=selectedImages.filter(media=>media.mediaType==='unsplashRecord');if(unsplashRecords.length){await this.uploadService.uploadUnsplashRecords(unsplashRecords,{resModel:this.props.resModel,resId:this.props.resId},(attachments)=>{this.selectedMedia[TABS.IMAGES.id]=this.selectedMedia[TABS.IMAGES.id].filter(media=>media.mediaType!=='unsplashRecord');this.selectedMedia[TABS.IMAGES.id]=this.selectedMedia[TABS.IMAGES.id].concat(attachments.map(attachment=>({...attachment,mediaType:'attachment'})));});}}
return super.save(...arguments);},});patch(uploadService,{start(env,{rpc}){const service=super.start(...arguments);return{...service,async uploadUnsplashRecords(records,{resModel,resId},onUploaded){service.incrementId();const file=service.addFile({id:service.fileId,name:records.length>1?_t("Uploading %s '%s' images.",records.length,records[0].query):_t("Uploading '%s' image.",records[0].query),});try{const urls={};for(const record of records){const _1920Url=new URL(record.urls.regular);_1920Url.searchParams.set('w','1920');urls[record.id]={url:_1920Url.href,download_url:record.links.download_location,description:record.alt_description,};}
const xhr=new XMLHttpRequest();xhr.upload.addEventListener('progress',ev=>{const rpcComplete=ev.loaded/ev.total*100;file.progress=rpcComplete;});xhr.upload.addEventListener('load',function(){file.progress=100;});const attachments=await rpc('/web_unsplash/attachment/add',{'res_id':resId,'res_model':resModel,'unsplashurls':urls,'query':records[0].query,},{xhr});if(attachments.error){file.hasError=true;file.errorMessage=attachments.error;}else{file.uploaded=true;await onUploaded(attachments);}
setTimeout(()=>service.deleteFile(file.id),AUTOCLOSE_DELAY);}catch(error){file.hasError=true;setTimeout(()=>service.deleteFile(file.id),AUTOCLOSE_DELAY);throw error;}}};}});return __exports;});;

/* /web_unsplash/static/src/services/unsplash_service.js */
odoo.define('@web_unsplash/services/unsplash_service',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require('@web/core/registry');const unsplashService=__exports.unsplashService={dependencies:['rpc'],async start(env,{rpc}){const _cache={};return{async getImages(query,offset=0,pageSize=30,orientation){const from=offset;const to=offset+pageSize;let cachedData=orientation?_cache[query+orientation]:_cache[query];if(cachedData&&(cachedData.images.length>=to||(cachedData.totalImages!==0&&cachedData.totalImages<to))){return{images:cachedData.images.slice(from,to),isMaxed:to>cachedData.totalImages};}
cachedData=await this._fetchImages(query,orientation);return{images:cachedData.images.slice(from,to),isMaxed:to>cachedData.totalImages};},async _fetchImages(query,orientation){const key=orientation?query+orientation:query;if(!_cache[key]){_cache[key]={images:[],maxPages:0,totalImages:0,pageCached:0};}
const cachedData=_cache[key];const payload={query:query,page:cachedData.pageCached+1,per_page:30,};if(orientation){payload.orientation=orientation;}
const result=await rpc('/web_unsplash/fetch_images',payload);if(result.error){return Promise.reject(result.error);}
cachedData.pageCached++;cachedData.images.push(...result.results);cachedData.maxPages=result.total_pages;cachedData.totalImages=result.total;return cachedData;},};},};registry.category('services').add('unsplash',unsplashService);return __exports;});;

/* /web_editor/static/src/js/backend/QWebPlugin.js */
odoo.define('@web_editor/js/backend/QWebPlugin',['@web_editor/js/common/wysiwyg_utils','@web_editor/js/editor/odoo-editor/src/utils/utils'],function(require){'use strict';let __exports={};const{ancestors}=require('@web_editor/js/common/wysiwyg_utils');const{closestElement}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");const QWebPlugin=__exports.QWebPlugin=class QWebPlugin{constructor(options={}){this._options=options;if(this._options.editor){this._editable=this._options.editor.editable;this._document=this._options.editor.document;this._selectQwebNode(this._options.editor);}else{this._editable=this._options.editable;this._document=this._options.document||window.document;}
this._getContextFromParentRect=this._options.editor?.options?.getContextFromParentRect||(()=>({top:0,left:0}));this._editable=this._options.editable||(this._options.editor&&this._options.editor.editable);this._document=this._options.document||(this._options.editor&&this._options.editor.document)||window.document;this._tGroupCount=0;this._hideBranchingSelection=this._hideBranchingSelection.bind(this);this._makeBranchingSelection();this._clickListeners=[];}
destroy(){this._selectElWrapper.remove();for(const listener of this._clickListeners){document.removeEventListener('click',listener);}}
cleanForSave(editable){for(const node of editable.querySelectorAll('[data-oe-t-group], [data-oe-t-inline], [data-oe-t-selectable], [data-oe-t-group-active]')){node.removeAttribute('data-oe-t-group-active');node.removeAttribute('data-oe-t-group');node.removeAttribute('data-oe-t-inline');node.removeAttribute('data-oe-t-selectable');}}
sanitizeElement(subRoot){if(subRoot.nodeType!==Node.ELEMENT_NODE){return;}
if(this._options.editor){this._options.editor.observerUnactive('qweb-plugin-sanitize');}
this._fixInlines(subRoot);const demoElements=subRoot.querySelectorAll('[t-esc], [t-raw], [t-out], [t-field]');for(const element of demoElements){element.setAttribute('contenteditable','false');}
this._groupQwebBranching(subRoot);if(this._options.editor){this._options.editor.observerActive('qweb-plugin-sanitize');}}
_groupQwebBranching(subRoot){const tNodes=subRoot.querySelectorAll('[t-if], [t-elif], [t-else]');const groupsEncounter=new Set();for(const node of tNodes){const parentTNode=[...node.parentElement.children];const index=parentTNode.indexOf(node);const prevNode=parentTNode[index-1];let groupId;if(prevNode&&node.previousElementSibling===prevNode&&!node.hasAttribute('t-if')){prevNode.setAttribute('data-oe-t-selectable','true');groupId=parseInt(prevNode.getAttribute('data-oe-t-group'));node.setAttribute('data-oe-t-selectable','true');}else{groupId=this._tGroupCount++;}
groupsEncounter.add(groupId);node.setAttribute('data-oe-t-group',groupId);const clickListener=e=>{e.stopImmediatePropagation();this._showBranchingSelection(node);};this._clickListeners.push(clickListener);node.addEventListener('click',clickListener);}
for(const groupId of groupsEncounter){const isOneElementActive=subRoot.querySelector(`[data-oe-t-group='${groupId}'][data-oe-t-group-active]`,);if(!isOneElementActive){subRoot.querySelector(`[data-oe-t-group='${groupId}']`).setAttribute('data-oe-t-group-active','true');}}}
_fixInlines(subRoot){const checkAllInline=el=>{return[...el.children].every(child=>{if(child.tagName==='T'){return checkAllInline(child);}else{return(child.nodeType!==Node.ELEMENT_NODE||window.getComputedStyle(child).display==='inline');}});};const tElements=subRoot.querySelectorAll('t');setTimeout(()=>{if(this._options.editor){this._options.editor.observerUnactive('qweb-plugin-checkAllInline');}
for(const tElement of tElements){if(checkAllInline(tElement)){tElement.setAttribute('data-oe-t-inline','true');}}
if(this._options.editor){this._options.editor.observerActive('qweb-plugin-checkAllInline');}});}
_selectQwebNode(editor){editor.addDomListener(editor.document,'selectionchange',e=>{const selection=editor.document.getSelection();const qwebNode=selection.anchorNode&&closestElement(selection.anchorNode,'[t-field],[t-esc],[t-out]');if(qwebNode){const range=new Range();range.selectNode(qwebNode);selection.removeAllRanges();selection.addRange(range);}});}
_makeBranchingSelection(){const document=this._options.document||window.document;this._selectElWrapper=document.createElement('div');this._selectElWrapper.classList.add('oe-qweb-select');this._selectElWrapper.innerHTML='';document.body.append(this._selectElWrapper);this._hideBranchingSelection();}
_showBranchingSelection(target){this._hideBranchingSelection();const branchingHierarchyElements=[target,...ancestors(target,this._editable)].filter(element=>element.getAttribute('data-oe-t-group-active')==='true').filter(element=>{const itemGroupId=element.getAttribute('data-oe-t-group');const groupItemsNodes=element.parentElement.querySelectorAll(`[data-oe-t-group='${itemGroupId}']`,);return groupItemsNodes.length>1;});if(!branchingHierarchyElements.length)return;const groupsActive=branchingHierarchyElements.map(node=>node.getAttribute('data-oe-t-group'),);for(const branchingElement of branchingHierarchyElements){this._selectElWrapper.prepend(this._renderBranchingSelection(branchingElement));}
const closeSelectHandler=event=>{const path=[event.target,...ancestors(event.target)];const shouldClose=!path.find(element=>element===this._selectElWrapper||groupsActive.includes(element.getAttribute('data-oe-t-group')),);if(shouldClose){this._hideBranchingSelection();document.removeEventListener('mousedown',closeSelectHandler);}};document.addEventListener('mousedown',closeSelectHandler);this._selectElWrapper.style.display='flex';this._updateBranchingSelectionPosition(branchingHierarchyElements[branchingHierarchyElements.length-1],);}
_updateBranchingSelectionPosition(target){const box=target.getBoundingClientRect();const selBox=this._selectElWrapper.getBoundingClientRect();const parentBox=this._getContextFromParentRect();const left=parentBox.left+window.scrollX+box.left;const top=parentBox.top+window.scrollY+box.top-selBox.height;this._selectElWrapper.style.left=`${left}px`;this._selectElWrapper.style.top=`${top}px`;}
_renderBranchingSelection(target){this._document.addEventListener('scroll',this._hideBranchingSelection);const selectEl=document.createElement('select');const groupId=parseInt(target.getAttribute('data-oe-t-group'));const groupElements=target.parentElement.querySelectorAll(`[data-oe-t-group='${groupId}']`,);for(const element of groupElements){const optionElement=document.createElement('option');if(element.hasAttribute('t-if')){optionElement.innerText=`if: "${element.getAttribute("t-if")}"`;}else if(element.hasAttribute('t-elif')){optionElement.innerText=`elif: "${element.getAttribute("t-elif")}"`;}else if(element.hasAttribute('t-else')){optionElement.innerText='else';}
if(element.hasAttribute('data-oe-t-group-active')){optionElement.selected=true;}
selectEl.appendChild(optionElement);}
selectEl.onchange=()=>{let activeElement;for(let i=0;i<groupElements.length;i++){if(i===selectEl.selectedIndex){activeElement=groupElements[i];groupElements[i].setAttribute('data-oe-t-group-active','true');}else{groupElements[i].removeAttribute('data-oe-t-group-active');}}
this._showBranchingSelection(activeElement);};return selectEl;}
_hideBranchingSelection(){this._selectElWrapper.style.display='none';this._selectElWrapper.innerHTML=``;this._document.removeEventListener('scroll',this._hideBranchingSelection);}}
return __exports;});;

/* /web_editor/static/src/js/backend/command_category.js */
odoo.define('@web_editor/js/backend/command_category',['@web/core/registry'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("shortcut_conflict",{},{sequence:5});return __exports;});;

/* /web_editor/static/src/js/backend/convert_inline.js */
odoo.define('@web_editor/js/backend/convert_inline',['@web_editor/js/editor/odoo-editor/src/utils/utils'],function(require){'use strict';let __exports={};const{getAdjacentPreviousSiblings,isBlock,rgbToHex,commonParentGet}=require("@web_editor/js/editor/odoo-editor/src/utils/utils");const RE_COL_MATCH=/(^| )col(-[\w\d]+)*( |$)/;const RE_COMMAS_OUTSIDE_PARENTHESES=/,(?![^(]*?\))/g;const RE_OFFSET_MATCH=/(^| )offset(-[\w\d]+)*( |$)/;const RE_PADDING_MATCH=/[ ]*padding[^;]*;/g;const RE_PADDING=/([\d.]+)/;const RE_WHITESPACE=/[\s\u200b]*/;const SELECTORS_IGNORE=/(^\*$|:hover|:before|:after|:active|:link|::|'|\([^(),]+[,(])/;const FONT_PROPERTIES_TO_INHERIT=['color','font-size','font-family','font-weight','font-style','text-decoration','text-transform','text-align',];const TABLE_ATTRIBUTES=__exports.TABLE_ATTRIBUTES={cellspacing:0,cellpadding:0,border:0,width:'100%',align:'center',role:'presentation',};const TABLE_STYLES=__exports.TABLE_STYLES={'border-collapse':'collapse','text-align':'inherit','font-size':'unset','line-height':'inherit',};function addTables($editable){const editable=$editable.get(0);for(const snippet of editable.querySelectorAll('.o_mail_snippet_general, .o_layout')){const table=_createTable(snippet.attributes);const row=document.createElement('tr');let col=document.createElement('td');row.appendChild(col);if(snippet.classList.contains('o_basic_theme')){const div=document.createElement('div');div.classList.add('o_apple_wrapper_padding');col.appendChild(div);col=div;const style=document.createElement('style');const padding='34px';style.textContent=`@media{@media{.o_basic_theme div.o_apple_wrapper_padding{padding:${snippet.style.padding};}}}`+`@media(min-width:961px){@media{@media{.o_basic_theme div.o_apple_wrapper_padding{padding-left:${padding};}}}}`;div.before(style);}
table.appendChild(row);for(const child of[...snippet.childNodes]){col.appendChild(child);}
snippet.before(table);snippet.remove();const childTables=[...col.children].filter(child=>child.nodeName==='TABLE');if(!childTables.length){const tableB=_createTable();const rowB=document.createElement('tr');const colB=document.createElement('td');rowB.appendChild(colB);tableB.appendChild(rowB);for(const child of[...col.childNodes]){colB.appendChild(child);}
col.appendChild(tableB);}}}
function attachmentThumbnailToLinkImg($editable){const editable=$editable.get(0);const links=[...editable.querySelectorAll(`a[href*="/web/content/"][data-mimetype]:empty`)].filter(link=>(RE_WHITESPACE.test(link.textContent)));for(const link of links){const image=document.createElement('img');image.setAttribute('src',_getStylePropertyValue(link,'background-image').replace(/(^url\(['"])|(['"]\)$)/g,''));image.setAttribute('height',Math.max(1,_getHeight(link)));image.setAttribute('width',Math.max(1,_getWidth(link)));link.prepend(image);};}
function bootstrapToTable(editable){for(const rowInColumn of[...editable.querySelectorAll('.row')].filter(row=>RE_COL_MATCH.test(row.parentElement.className))){const parentColumn=rowInColumn.parentElement;const previous=rowInColumn.previousElementSibling;if(previous&&previous.classList.contains('o_fake_table')){previous.append(rowInColumn);}else{_wrap(rowInColumn,'div','o_fake_table');}
const rowStyle=getComputedStyle(rowInColumn);const columnStyle=getComputedStyle(parentColumn);for(const side of['left','right']){const negativeMargin=+rowStyle[`margin-${side}`].replace('px','');const columnPadding=+columnStyle[`padding-${side}`].replace('px','');if(negativeMargin<0&&columnPadding>=Math.abs(negativeMargin)){parentColumn.style[`padding-${side}`]=`${columnPadding + negativeMargin}px`;rowInColumn.style[`margin-${side}`]=0;}}}
for(const masonryTopInnerContainer of editable.querySelectorAll('.s_masonry_block > .container')){masonryTopInnerContainer.style.setProperty('height','100%');}
for(const masonryGrid of editable.querySelectorAll('.o_masonry_grid_container')){masonryGrid.style.setProperty('padding',0);for(const fakeTable of[...masonryGrid.children].filter(c=>c.classList.contains('o_fake_table'))){fakeTable.style.setProperty('height',_getHeight(fakeTable)+'px');}}
for(const masonryRow of editable.querySelectorAll('.o_masonry_grid_container > .o_fake_table > .row.h-100')){masonryRow.style.removeProperty('height');masonryRow.parentElement.style.setProperty('height','100%');}
const containers=editable.querySelectorAll('.container, .container-fluid, .o_fake_table');for(const container of containers){container.setAttribute('o-temp-width',_getWidth(container));}
for(const container of[...containers].filter(n=>[...n.children].some(c=>c.classList.contains('row')))){const containerWidth=parseFloat(container.getAttribute('o-temp-width'));const table=_createTable(container.attributes);for(const child of[...container.childNodes]){table.append(child);}
table.classList.remove('container','container-fluid','o_fake_table');if(!table.className){table.removeAttribute('class');}
container.before(table);container.remove();for(const row of[...table.children].filter(child=>isBlock(child)&&!child.classList.contains('row'))){const newCol=_wrap(row,'div','col-12');_wrap(newCol,'div','row');}
for(const bootstrapRow of[...table.children].filter(c=>c.classList.contains('row'))){const tr=document.createElement('tr');for(const attr of bootstrapRow.attributes){tr.setAttribute(attr.name,attr.value);}
tr.classList.remove('row');if(!tr.className){tr.removeAttribute('class');}
for(const child of[...bootstrapRow.childNodes]){tr.append(child);}
bootstrapRow.before(tr);bootstrapRow.remove();const bootstrapColumns=[...tr.children].filter(column=>column.className&&column.className.match(RE_COL_MATCH));const flexColumns=bootstrapColumns.filter(column=>!/\d/.test(column.className.match(RE_COL_MATCH)[0]||'0'));const colTotalSize=bootstrapColumns.map(child=>_getColumnSize(child)+_getColumnOffsetSize(child)).reduce((a,b)=>a+b,0);const colSize=Math.max(1,Math.round((12-colTotalSize)/flexColumns.length));for(const flexColumn of flexColumns){flexColumn.classList.remove(flexColumn.className.match(RE_COL_MATCH)[0].trim());flexColumn.classList.add(`col-${colSize}`);}
let columnIndex=0;for(const bootstrapColumn of[...bootstrapColumns]){const offsetSize=_getColumnOffsetSize(bootstrapColumn);if(offsetSize){const newColumn=document.createElement('div');newColumn.classList.add(`col-${offsetSize}`);bootstrapColumn.classList.remove(bootstrapColumn.className.match(RE_OFFSET_MATCH)[0].trim());bootstrapColumn.before(newColumn);bootstrapColumns.splice(columnIndex,0,newColumn);columnIndex++;}
columnIndex++;}
let grid=_createColumnGrid();let gridIndex=0;let currentRow=tr.cloneNode();tr.after(currentRow);let currentCol;columnIndex=0;for(const bootstrapColumn of bootstrapColumns){const columnSize=_getColumnSize(bootstrapColumn);if(gridIndex+columnSize<12){currentCol=grid[gridIndex];_applyColspan(currentCol,columnSize,containerWidth);gridIndex+=columnSize;if(columnIndex===bootstrapColumns.length-1){_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));}}else if(gridIndex+columnSize===12){currentCol=grid[gridIndex];_applyColspan(currentCol,columnSize,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));if(columnIndex!==bootstrapColumns.length-1){const previousRow=currentRow;currentRow=currentRow.cloneNode();previousRow.after(currentRow);grid=_createColumnGrid();gridIndex=0;}}else{_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));const previousRow=currentRow;currentRow=currentRow.cloneNode();previousRow.after(currentRow);grid=_createColumnGrid();currentCol=grid[0];_applyColspan(currentCol,columnSize,containerWidth);gridIndex=columnSize;if(columnIndex===bootstrapColumns.length-1&&gridIndex<12){_applyColspan(grid[gridIndex],12-gridIndex,containerWidth);currentRow.append(...grid.filter(td=>td.getAttribute('colspan')));}}
if(currentCol){for(const attr of bootstrapColumn.attributes){if(attr.name!=='colspan'){currentCol.setAttribute(attr.name,attr.value);}}
const colMatch=bootstrapColumn.className.match(RE_COL_MATCH);currentCol.classList.remove(colMatch[0].trim());if(!currentCol.className){currentCol.removeAttribute('class');}
for(const child of[...bootstrapColumn.childNodes]){currentCol.append(child);}
_applyColspan(currentCol,+currentCol.getAttribute('colspan'),containerWidth);}
columnIndex++;}
tr.remove();}}
for(const table of editable.querySelectorAll('table')){table.removeAttribute('o-temp-width');}
const tds=[...editable.querySelectorAll('td')].filter(td=>td.children.length>1&&[...td.children].every(child=>child.nodeName==='TABLE')).reverse();for(const td of tds){const table=_createTable();const trs=[...td.children].map(child=>_wrap(child,'td')).map(wrappedChild=>_wrap(wrappedChild,'tr'));trs[0].before(table);table.append(...trs);}}
function cardToTable(editable){for(const card of editable.querySelectorAll('.card')){const table=_createTable(card.attributes);table.style.removeProperty('overflow');const cardImgTopSuperRows=[];for(const child of[...card.childNodes]){const row=document.createElement('tr');const col=document.createElement('td');if(!['IMG','A'].includes(child.nodeName)&&isBlock(child)){for(const attr of child.attributes){col.setAttribute(attr.name,attr.value);}
for(const descendant of[...child.childNodes]){col.append(descendant);}
child.remove();}else if(child.nodeType===Node.TEXT_NODE){if(child.textContent.replace(RE_WHITESPACE,'').length){col.append(child);}else{continue;}}else{col.append(child);}
const subTable=_createTable();const superRow=document.createElement('tr');const superCol=document.createElement('td');row.append(col);subTable.append(row);superCol.append(subTable);superRow.append(superCol);table.append(superRow);if(child.nodeType===Node.ELEMENT_NODE){const hasImgTop=[child,...child.querySelectorAll('.card-img-top')].some(node=>(node.classList&&node.classList.contains('card-img-top')&&node.closest&&node.closest('.card')===table));if(hasImgTop){cardImgTopSuperRows.push(superRow);}}}
const smallestCardImgRow=Math.min(0,...cardImgTopSuperRows.map(row=>row.clientHeight));for(const row of cardImgTopSuperRows){row.style.height=smallestCardImgRow+'px';}
card.before(table);card.remove();}}
function classToStyle($editable,cssRules){const editable=$editable.get(0);const writes=[];const nodeToRules=new Map();const rulesToProcess=[];for(const rule of cssRules){const nodes=editable.querySelectorAll(rule.selector);if(nodes.length){rulesToProcess.push(rule);}
for(const node of nodes){const nodeRules=nodeToRules.get(node);if(!nodeRules){nodeToRules.set(node,[rule]);}else{nodeRules.push(rule);}}}
_computeStyleAndSpecificityOnRules(rulesToProcess);for(const rules of nodeToRules.values()){rules.sort((a,b)=>a.specificity-b.specificity);}
for(const node of nodeToRules.keys()){const nodeRules=nodeToRules.get(node);const css=nodeRules?_getMatchedCSSRules(node,nodeRules):{};for(const styleName of node.style){if(styleName.includes('flex')||`${node.style[styleName]}`.includes('flex')){writes.push(()=>{node.style[styleName]='';});}}
let style=node.getAttribute('style')||'';style=style.replace(/!important/g,'');for(const[key,value]of Object.entries(css)){if(!(new RegExp(`(^|;)\\s*${key}[ :]`).test(style))){style=`${key}:${value};${style}`;}};if(Object.keys(style||{}).length===0){writes.push(()=>{node.removeAttribute('style');});}else{writes.push(()=>{node.setAttribute('style',style);if(node.style.width){node.setAttribute('width',node.style.width.replace('px','').trim());}});}
if(node.nodeName==='IMG'){writes.push(()=>{if(node.classList.contains('s_media_list_img')){node.style.removeProperty('height');}
if(node.style.getPropertyValue('width')==='100%'&&node.style.getPropertyValue('object-fit')===''){node.style.setProperty('object-fit','cover');}});}
if(node.nodeName==='TD'&&!node.childNodes.length){writes.push(()=>{node.appendChild(document.createTextNode('\u00A0'));});}
if(node.nodeName==='A'&&node.classList.contains('btn')&&!node.classList.contains('btn-link')&&!node.children.length){writes.push(()=>{node.before(_createMso(`<table align="center" border="0"
                    role="presentation" cellpadding="0" cellspacing="0"
                    style="border-radius: 6px; border-collapse: separate !important;">
                        <tbody>
                            <tr>
                                <td style="${node.style.cssText.replace(RE_PADDING_MATCH, '').replaceAll('"', '&quot;')}" ${
                                    node.parentElement.style.textAlign === 'center' ? 'align="center" ' : ''
                                }bgcolor="${rgbToHex(node.style.backgroundColor)}">
                    `));node.after(_createMso(`</td>
                        </tr>
                    </tbody>
                </table>`));});}else if(node.nodeName==='IMG'&&node.classList.contains('mx-auto')&&node.classList.contains('d-block')){writes.push(()=>{_wrap(node,'p','o_outlook_hack','text-align:center;margin:0');});}
writes.push(()=>{let computedStyle;for(const styleName of node.style){const styleValue=node.style.getPropertyValue(styleName);if(styleValue.includes('var(')||styleValue.includes('calc(')){computedStyle=computedStyle||getComputedStyle(node);const prop=styleValue.includes('var(')?styleValue.replace(/var\((.*)\)/,'$1'):styleName;const value=computedStyle.getPropertyValue(prop)||computedStyle.getPropertyValue(styleName);node.style.setProperty(styleName,value);}}});writes.push(()=>{const propsToConvert=FONT_PROPERTIES_TO_INHERIT.filter(prop=>node.style[prop]==='inherit');if(propsToConvert.length){const computedStyle=getComputedStyle(node);for(const prop of propsToConvert){node.style.setProperty(prop,computedStyle[prop]);}}});};writes.forEach(fn=>fn());}
function enforceTablesResponsivity(editable){const trs=[...editable.querySelectorAll('.o_mail_wrapper tr')].filter(tr=>[...tr.children].some(td=>td.classList.contains('o_converted_col'))).reverse();for(const tr of trs){const commonTable=_createTable();commonTable.style.height='100%';const commonTr=document.createElement('tr');const commonTd=document.createElement('td');commonTr.appendChild(commonTd);commonTable.appendChild(commonTr);const tds=[...tr.children].filter(child=>child.nodeName==='TD');let index=0;for(const td of tds){const width=td.style.maxWidth;const div=document.createElement('div');div.style.display='inline-block';div.style.verticalAlign='top';div.classList.add('o_stacking_wrapper');commonTd.appendChild(div);const newTable=_createTable();newTable.style.width=width;newTable.classList.add('o_stacking_wrapper');div.appendChild(newTable);const newTr=document.createElement('tr');newTable.appendChild(newTr);newTr.appendChild(td);td.style.width='100%';td.removeAttribute('width');if(index===0){div.before(_createMso(`
                    <table cellpadding="0" cellspacing="0" border="0" role="presentation" style="width: 100%;">
                        <tr>
                            <td valign="top" style="width: ${width};">`));}else{div.before(_createMso(`</td><td valign="top" style="width: ${width};">`));}
if(index===tds.length-1){div.after(_createMso(`</td></tr></table>`));}
index++;}
const topTd=document.createElement('td');topTd.appendChild(commonTable);tr.prepend(topTd);}}
function handleMasonry(editable){const masonryTrs=editable.querySelectorAll('.s_masonry_block tr');for(const tr of masonryTrs){const height=_getHeight(tr);const tds=[...tr.children].filter(child=>child.nodeName==='TD');const tdsWithTable=tds.filter(td=>[...td.children].some(child=>child.nodeName==='TABLE'));if(tdsWithTable.length){for(const tdWithTable of tdsWithTable){tdWithTable.classList.add('o_desktop_h100');tdWithTable.style.setProperty('height','100%');}
tds.forEach(td=>td.style.setProperty('height',height+'px'));}
const trSiblings=[...tr.parentElement.children].filter(child=>child.nodeName==='TR');if(trSiblings.length>1&&(tr.classList.contains('h-100')||tr.style.getPropertyValue('height')==='100%')){tr.style.setProperty('height',`${_getHeight(tr.parentElement) / trSiblings.length}px`);}}
for(const tr of masonryTrs){const height=tr.style.height.includes('px')?parseFloat(tr.style.height.replace('px','').trim()):_getHeight(tr);tr.closest('table').classList.add('o_desktop_h100');tr.classList.add('o_desktop_h100');for(const td of[...tr.children].filter(child=>child.nodeName==='TD')){td.classList.add('o_desktop_h100');td.style.setProperty('height','100%');const childrenNames=[...td.children].map(child=>child.nodeName);if(!childrenNames.includes('TABLE')){const wrapper=document.createElement('div');wrapper.style.setProperty('display','inline-block');wrapper.style.setProperty('width','100%');const tdStyle=getComputedStyle(td);wrapper.style.setProperty('color',tdStyle.color);const firstNonCommentChild=[...td.childNodes].find(child=>child.nodeType!==Node.COMMENT_NODE);let anchor;if(firstNonCommentChild){anchor=getAdjacentPreviousSiblings(firstNonCommentChild).filter(sib=>sib.nodeType!==Node.TEXT_NODE).shift();}
for(const child of[...td.childNodes].filter(child=>child.nodeType!==Node.COMMENT_NODE)){wrapper.append(child);}
anchor?anchor.after(wrapper):td.append(wrapper);const centeringSpan=document.createElement('span');centeringSpan.style.setProperty('height','100%');centeringSpan.style.setProperty('display','inline-block');centeringSpan.style.setProperty('vertical-align','middle');td.prepend(centeringSpan);if(td.style.height.includes('%')){const newHeight=height*parseFloat(td.style.height.replace('%').trim())/100;td.style.setProperty('height',newHeight+'px');td.style.setProperty('max-height',newHeight+'px');wrapper.style.setProperty('max-height',newHeight+'px');if(wrapper.childElementCount===1&&wrapper.firstElementChild.nodeName==='IMG'&&wrapper.firstElementChild.style.height==='100%'){wrapper.firstElementChild.style.setProperty('max-height',newHeight+'px');}}}}}}
function enforceImagesResponsivity(editable){for(const image of editable.querySelectorAll('td > img')){const td=image.parentElement;if(td.childElementCount===1&&(image.classList.contains('h-100')||_getStylePropertyValue(image,'height')==='100%')){td.style.setProperty('height',_getHeight(td.parentElement)+'px');image.style.setProperty('height','100%');}}
for(const image of editable.querySelectorAll('img[width="100%"][height]')){image.before(_createMso(image.outerHTML));image.classList.add('mso-hide');image.removeAttribute('height');}}
__exports.toInline=toInline;async function toInline($editable,cssRules,$iframe){$editable.removeClass('odoo-editor-editable');const editable=$editable.get(0);const iframe=$iframe&&$iframe.get(0);const wysiwyg=$editable.data('wysiwyg');const doc=editable.ownerDocument;cssRules=cssRules||wysiwyg&&wysiwyg._rulesCache;if(!cssRules){cssRules=getCSSRules(doc);if(wysiwyg){wysiwyg._rulesCache=cssRules;}}
const displaysToRestore=[];if(_isHidden(editable)){let ancestor=editable;while(ancestor&&ancestor.nodeName!=='html'&&_isHidden(ancestor)){if(_getStylePropertyValue(ancestor,'display')==='none'){displaysToRestore.push([ancestor,ancestor.style.display]);ancestor.style.setProperty('display','block');}
ancestor=ancestor.parentElement;if((!ancestor||ancestor.nodeName==='HTML')&&iframe){ancestor=iframe;}}}
for(const imgTop of editable.querySelectorAll('.card-img-top')){imgTop.style.setProperty('height',_getHeight(imgTop)+'px');}
attachmentThumbnailToLinkImg($editable);fontToImg($editable);await svgToPng($editable);for(const image of editable.querySelectorAll('img.img-fluid')){const width=_getWidth(image);const clone=image.cloneNode();clone.setAttribute('width',width);clone.style.setProperty('width',width+'px');clone.style.removeProperty('max-width');image.before(_createMso(clone.outerHTML));_hideForOutlook(image);}
classToStyle($editable,cssRules);bootstrapToTable(editable);cardToTable(editable);listGroupToTable(editable);addTables($editable);handleMasonry(editable);const rootFontSizeProperty=getComputedStyle(editable.ownerDocument.documentElement).fontSize;const rootFontSize=parseFloat(rootFontSizeProperty.replace(/[^\d\.]/g,''));normalizeRem($editable,rootFontSize);enforceImagesResponsivity(editable);enforceTablesResponsivity(editable);flattenBackgroundImages(editable);formatTables($editable);normalizeColors($editable);responsiveToStaticForOutlook(editable);for(const attributeName of['width','height']){const images=editable.querySelectorAll('img');for(const image of images){if(image.style[attributeName]!=='auto'){const value=image.getAttribute(attributeName)||(attributeName==='height'&&image.offsetHeight)||(attributeName==='width'?_getWidth(image):_getHeight(image));if(value){image.setAttribute(attributeName,value);image.style.setProperty(attributeName,value+'px');}}};};for(const centeredImage of editable.querySelectorAll('td > img.mx-auto')){if(centeredImage.parentElement.children.length===1){centeredImage.parentElement.style.setProperty('text-align','center');}}
[editable,...editable.querySelectorAll('[contenteditable]')].forEach(node=>node.removeAttribute('contenteditable'));editable.querySelectorAll('.mso-hide').forEach(_hideForOutlook);editable.querySelectorAll('[style*=font-family]').forEach(n=>(n.nodeName==='IMG'?n.style.removeProperty('font-family'):n.setAttribute('style',n.getAttribute('style').replaceAll('"','\''))));$editable.find('style').remove();editable.querySelectorAll('.o_converted_col').forEach(node=>node.classList.remove('o_converted_col'));for(const[node,displayValue]of displaysToRestore){node.style.setProperty('display',displayValue);}
$editable.addClass('odoo-editor-editable');}
function flattenBackgroundImages(editable){const backgroundImages=[...editable.querySelectorAll('*[style*=background-image]')].filter(el=>!el.closest('.mso-hide')).reverse();for(const backgroundImage of backgroundImages){const vml=_backgroundImageToVml(backgroundImage);if(vml){backgroundImage.after(_createMso(vml));backgroundImage.classList.add('mso-hide');}
if(backgroundImage.hasAttribute('data-bg-src')){backgroundImage.removeAttribute('data-bg-src');}}}
function fontToImg($editable){const editable=$editable.get(0);const{fonts}=odoo.loader.modules.get("@web_editor/js/wysiwyg/fonts");for(const font of editable.querySelectorAll('.fa')){let icon,content;fonts.fontIcons.find(fontIcon=>{return fonts.getCssSelectors(fontIcon.parser).find(data=>{if(font.matches(data.selector.replace(/::?before/g,''))){icon=data.names[0].split('-').shift();content=data.css.match(/content:\s*['"]?(.)['"]?/)[1];return true;}});});if(content){const color=_getStylePropertyValue(font,'color').replace(/\s/g,'');let backgroundColoredElement=font;let bg,isTransparent;do{bg=_getStylePropertyValue(backgroundColoredElement,'background-color').replace(/\s/g,'');isTransparent=bg==='transparent'||bg==='rgba(0,0,0,0)';backgroundColoredElement=backgroundColoredElement.parentElement;}while(isTransparent&&backgroundColoredElement);if(bg==='rgba(0,0,0,0)'&&isTransparent){bg='rgb(255,255,255)';}
const style=font.getAttribute('style');const width=_getWidth(font);const height=_getHeight(font);const lineHeight=_getStylePropertyValue(font,'line-height');font.style.setProperty('height','fit-content');font.style.setProperty('width','fit-content');font.style.setProperty('line-height','normal');const intrinsicWidth=_getWidth(font);const intrinsicHeight=_getHeight(font);const hPadding=width&&intrinsicWidth&&(width-intrinsicWidth)/2;const vPadding=height&&intrinsicHeight&&(height-intrinsicHeight)/2;let padding='';if(hPadding||vPadding){padding=vPadding?vPadding+'px ':'0 ';padding+=hPadding?hPadding+'px':'0';}
const image=document.createElement('img');image.setAttribute('width',intrinsicWidth);image.setAttribute('height',intrinsicHeight);image.setAttribute('src',`/web_editor/font_to_img/${content.charCodeAt(0)}/${encodeURIComponent(color)}/${encodeURIComponent(bg)}/${Math.max(1, Math.round(intrinsicWidth))}x${Math.max(1, Math.round(intrinsicHeight))}`);image.setAttribute('data-class',font.getAttribute('class'));image.setAttribute('data-style',style);image.setAttribute('style',style);image.style.setProperty('box-sizing','border-box');image.style.setProperty('line-height',lineHeight);image.style.setProperty('width',intrinsicWidth+'px');image.style.setProperty('height',intrinsicHeight+'px');image.style.setProperty('vertical-align','unset');if(!padding){image.style.setProperty('margin',_getStylePropertyValue(font,'margin'));}
const wrapper=document.createElement('span');wrapper.style.setProperty('display','inline-block');wrapper.append(image);font.before(wrapper);if(font.classList.contains('mx-auto')){wrapper.parentElement.style.textAlign='center';}
font.remove();wrapper.style.setProperty('padding',padding);const wrapperWidth=width+['left','right'].reduce((sum,side)=>(sum+(+_getStylePropertyValue(image,`margin-${side}`).replace('px','')||0)),0);wrapper.style.setProperty('width',wrapperWidth+'px');wrapper.style.setProperty('height',height+'px');wrapper.style.setProperty('vertical-align','text-bottom');wrapper.style.setProperty('background-color',image.style.backgroundColor);wrapper.setAttribute('class','oe_unbreakable '+
font.getAttribute('class').replace(new RegExp('(^|\\s+)'+icon+'(-[^\\s]+)?','gi'),''));}else{font.remove();}}}
function formatTables($editable){const editable=$editable.get(0);const writes=[];for(const table of editable.querySelectorAll('table.o_mail_snippet_general, .o_mail_snippet_general table')){const tablePaddingTop=parseFloat(_getStylePropertyValue(table,'padding-top').match(RE_PADDING)[1]);const tablePaddingRight=parseFloat(_getStylePropertyValue(table,'padding-right').match(RE_PADDING)[1]);const tablePaddingBottom=parseFloat(_getStylePropertyValue(table,'padding-bottom').match(RE_PADDING)[1]);const tablePaddingLeft=parseFloat(_getStylePropertyValue(table,'padding-left').match(RE_PADDING)[1]);const rows=[...table.querySelectorAll('tr')].filter(tr=>tr.closest('table')===table);const columns=[...table.querySelectorAll('td')].filter(td=>td.closest('table')===table);for(const column of columns){const columnsInRow=[...column.closest('tr').querySelectorAll('td')].filter(td=>td.closest('table')===table);const columnIndex=columnsInRow.findIndex(col=>col===column);const rowIndex=rows.findIndex(row=>row===column.closest('tr'));if(!rowIndex){const match=_getStylePropertyValue(column,'padding-top').match(RE_PADDING);const columnPaddingTop=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-top']=`${columnPaddingTop + tablePaddingTop}px`;});}
if(columnIndex===columnsInRow.length-1){const match=_getStylePropertyValue(column,'padding-right').match(RE_PADDING);const columnPaddingRight=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-right']=`${columnPaddingRight + tablePaddingRight}px`;});}
if(rowIndex===rows.length-1){const match=_getStylePropertyValue(column,'padding-bottom').match(RE_PADDING);const columnPaddingBottom=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-bottom']=`${columnPaddingBottom + tablePaddingBottom}px`;});}
if(!columnIndex){const match=_getStylePropertyValue(column,'padding-left').match(RE_PADDING);const columnPaddingLeft=match?parseFloat(match[1]):0;writes.push(()=>{column.style['padding-left']=`${columnPaddingLeft + tablePaddingLeft}px`;});}}
writes.push(()=>{table.style.removeProperty('padding');});}
writes.forEach((fn)=>fn());for(const table of[...editable.querySelectorAll('table')].filter(n=>![...n.children].some(c=>c.nodeName==='TBODY'))){const contents=[...table.childNodes];const tbody=document.createElement('tbody');tbody.style.setProperty('vertical-align','top');table.prepend(tbody);tbody.append(...contents);}
for(const node of[...editable.querySelectorAll('*')].filter(n=>(n.style&&n.style.getPropertyValue('height')==='100%'&&(!n.parentElement.style.getPropertyValue('height')||n.parentElement.style.getPropertyValue('height').includes('%'))))){let parent=node.parentElement;let height=parent.style.getPropertyValue('height');while(parent&&height&&height.includes('%')){parent=parent.parentElement;height=parent.style.getPropertyValue('height');}
if(parent){parent.style.setProperty('height',$(parent).height());}}
for(const cell of editable.querySelectorAll('td')){const alignSelf=cell.style.alignSelf;const justifyContent=cell.style.justifyContent;if(alignSelf==='start'||justifyContent==='start'||justifyContent==='flex-start'){cell.style.verticalAlign='top';}else if(alignSelf==='center'||justifyContent==='center'){const parentCell=cell.parentElement.closest('td');const parentTable=cell.closest('table');if(parentCell){parentTable.style.height=_getHeight(parentCell)+'px';}
cell.style.verticalAlign='middle';}else if(alignSelf==='end'||justifyContent==='end'||justifyContent==='flex-end'){cell.style.verticalAlign='bottom';}}
for(const row of editable.querySelectorAll('tr')){const alignItems=row.style.alignItems;if(alignItems==='flex-start'){row.style.verticalAlign='top';}else if(alignItems==='center'){row.style.verticalAlign='middle';}else if(alignItems==='flex-end'||alignItems==='baseline'){row.style.verticalAlign='bottom';}else if(alignItems==='stretch'){const columns=[...row.querySelectorAll('td.o_converted_col')];if(columns.length>1){const commonAncestor=commonParentGet(columns[0],columns[1]);const biggestHeight=commonAncestor.clientHeight;for(const column of columns){column.style.height=biggestHeight+'px';}}}}
for(const table of editable.querySelectorAll('table')){const propsToConvert=FONT_PROPERTIES_TO_INHERIT.filter(prop=>table.style[prop]==='inherit'||!table.style[prop]);if(propsToConvert.length){for(const prop of propsToConvert){let ancestor=table;while(ancestor&&(!ancestor.style[prop]||ancestor.style[prop]==='inherit')){ancestor=ancestor.parentElement;}
if(ancestor){table.style.setProperty(prop,ancestor.style[prop]);}}}}}
__exports.getCSSRules=getCSSRules;function getCSSRules(doc){const cssRules=[];for(const sheet of doc.styleSheets){let rules;try{rules=sheet.rules||sheet.cssRules;}catch(e){console.log("Can't read the css rules of: "+sheet.href,e);continue;}
for(const rule of(rules||[])){const subRules=[rule];const conditionText=rule.conditionText;const minWidthMatch=conditionText&&conditionText.match(/\(min-width *: *(\d+)/);const minWidth=minWidthMatch&&+(minWidthMatch[1]||'0');if(minWidth&&minWidth>=992){let mediaRules;try{mediaRules=rule.rules||rule.cssRules;subRules.push(...mediaRules);}catch(e){console.log(`Can't read the css rules of: ${sheet.href} (${conditionText})`,e);}}
for(const subRule of subRules){const selectorText=subRule.selectorText||'';for(const selector of selectorText.split(RE_COMMAS_OUTSIDE_PARENTHESES)){if(selector&&!SELECTORS_IGNORE.test(selector)){cssRules.push({selector:selector.trim(),rawRule:subRule});if(selector==='body'){cssRules.push({selector:'.o_layout',rawRule:subRule,specificity:1});}}}}}}
return cssRules;}
function listGroupToTable(editable){for(const listGroup of editable.querySelectorAll('.list-group')){let table;if(listGroup.querySelectorAll('.list-group-item').length){table=_createTable(listGroup.attributes);}else{table=listGroup.cloneNode();for(const attr of listGroup.attributes){table.setAttribute(attr.name,attr.value);}}
for(const child of[...listGroup.childNodes]){if(child.classList&&child.classList.contains('list-group-item')){const row=document.createElement('tr');const col=document.createElement('td');for(const attr of child.attributes){col.setAttribute(attr.name,attr.value);}
col.append(...child.childNodes);col.classList.remove('list-group-item');if(!col.className){col.removeAttribute('class');}
row.append(col);table.append(row);child.remove();}else if(child.nodeName==='LI'){table.append(...child.childNodes);}else{table.append(child);}}
table.classList.remove('list-group');if(!table.className){table.removeAttribute('class');}
if(listGroup.nodeName==='TD'){listGroup.append(table);listGroup.classList.remove('list-group');if(!listGroup.className){listGroup.removeAttribute('class');}}else{listGroup.before(table);listGroup.remove();}}}
function normalizeColors($editable){const editable=$editable.get(0);for(const node of editable.querySelectorAll('[style*="rgb"]')){const rgbaMatch=node.getAttribute('style').match(/rgba?\(([\d\.]+\s*,?\s*){3,4}\)/g);for(const rgb of rgbaMatch||[]){node.setAttribute('style',node.getAttribute('style').replace(rgb,rgbToHex(rgb,node)));}}}
function normalizeRem($editable,rootFontSize=16){const editable=$editable.get(0);for(const node of editable.querySelectorAll('[style*="rem"]')){const remMatch=node.getAttribute('style').match(/[\d\.]+\s*rem/g);for(const rem of remMatch||[]){const remValue=parseFloat(rem.replace(/[^\d\.]/g,''));const pxValue=Math.round(remValue*rootFontSize*100)/100;node.setAttribute('style',node.getAttribute('style').replace(rem,pxValue+'px'));}}}
function responsiveToStaticForOutlook(editable){for(const td of editable.querySelectorAll('td.o_converted_col:not(.mso-hide)')){const tdStyle=td.getAttribute('style')||'';const msoAttributes=[...td.attributes].filter(attr=>attr.name!=='style'&&attr.name!=='width');const msoWidth=td.style.getPropertyValue('max-width');const msoStyles=tdStyle.replace(/(^| |max-)width:[^;]*;\s*/g,'');const outlookTd=document.createElement('td');for(const attribute of msoAttributes){outlookTd.setAttribute(attribute.name,td.getAttribute(attribute.name));}
if(msoWidth){outlookTd.setAttribute('width',(''+msoWidth).replace('px','').trim());outlookTd.setAttribute('style',`${msoStyles}width: ${msoWidth};`);}else{outlookTd.setAttribute('style',msoStyles);}
if(td.closest('.s_masonry_block')){outlookTd.style.padding=0;}
if(td.children.length===1&&td.firstElementChild.nodeName==='IMG'){const tdComputedStyle=getComputedStyle(td);for(const side of['left','right']){if(td.firstElementChild.style.width==='100%'){const prop=`padding-${side}`;const imagePadding=+td.firstElementChild.style[prop].replace('px','');if(imagePadding>0){const tdPadding=+tdComputedStyle[prop].replace('px','')||0;outlookTd.style[prop]=tdPadding+imagePadding+'px';}}}}
td.before(_createMso(outlookTd.outerHTML.replace('</td>','')));_hideForOutlook(td,'opening');}}
async function svgToPng($editable){for(const svg of $editable.find('img[src*=".svg"]')){await new Promise(resolve=>{svg.onload=()=>resolve();if(svg.complete){resolve();}});const image=document.createElement('img');const canvas=document.createElement('CANVAS');const width=_getWidth(svg);const height=_getHeight(svg);canvas.setAttribute('width',width);canvas.setAttribute('height',height);canvas.getContext('2d').drawImage(svg,0,0,width,height);for(const attribute of svg.attributes){image.setAttribute(attribute.name,attribute.value);}
image.setAttribute('src',canvas.toDataURL('png'));image.setAttribute('width',width);image.setAttribute('height',height);svg.before(image);svg.remove();}}
function _applyColspan(element,colspan,tableWidth){element.setAttribute('colspan',colspan);const widthPercentage=+element.getAttribute('colspan')/12;const width=Math.round(tableWidth*widthPercentage*100)/100;element.style.setProperty('max-width',width+'px');element.classList.add('o_converted_col');}
function _backgroundImageToVml(backgroundImage){const matches=backgroundImage.style.backgroundImage.match(/url\("?(.+?)"?\)/);const url=matches&&matches[1];if(url){const clone=backgroundImage.cloneNode(true);const div=document.createElement('div');div.replaceChildren(...clone.childNodes);[['fontSize',0],['height','100%'],['width','100%']].forEach(([k,v])=>div.style[k]=v);const vmlContent=document.createElement('div');vmlContent.append(div);const style=getComputedStyle(backgroundImage);for(const prop of FONT_PROPERTIES_TO_INHERIT){div.style[prop]=backgroundImage.style[prop]||style[prop];}
[...div.children].forEach(child=>child.style.setProperty('font-size',child.style.fontSize||style.fontSize));for(const prop of['background','background-image','background-repeat','background-size']){clone.style.removeProperty(prop);}
clone.style.padding=0;clone.className=clone.className.replace(/p[bt]\d+/g,'');clone.setAttribute('background',url);clone.setAttribute('valign','middle');const[width,height]=[_getWidth(backgroundImage),_getHeight(backgroundImage)];const vml=`<v:image xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" `+`style="border: 0; display: inline-block; width: ${width}px; height: ${height}px;" src="${url}"/>
        <v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" `+`style="border: 0; display: inline-block; position: absolute; width:${width}px; height:${height}px; v-text-anchor:middle;">
            <v:fill opacity="0%" color="#000000"/>
            <v:textbox inset="0,0,0,0">
                <table border="0" cellpadding="0" cellspacing="0">
                    <tr>
                        <td width="${width}" align="center" style="text-align: center;">${vmlContent.outerHTML}</td>
                    </tr>
                </table>
            </v:textbox>
        </v:rect>`;return`${clone.outerHTML.replace(/<\/[\w-]+>[\s\n]*$/, '')}${vml}</${clone.nodeName.toLowerCase()}>`;}}
function _computeSpecificity(selector){let a=0;selector=selector.replace(/#[a-z0-9_-]+/gi,()=>{a++;return'';});let b=0;selector=selector.replace(/(\.[a-z0-9_-]+)|(\[.*?\])/gi,()=>{b++;return'';});let c=0;selector=selector.replace(/(^|\s+|:+)[a-z0-9_-]+/gi,a=>{if(!a.includes(':not('))c++;return'';});return(a*100)+(b*10)+c;}
function _computeStyleAndSpecificityOnRules(cssRules){for(const cssRule of cssRules){if(!cssRule.style&&cssRule.rawRule.style){const style=_normalizeStyle(cssRule.rawRule.style);if(Object.keys(style).length){Object.assign(cssRule,{style,specificity:_computeSpecificity(cssRule.selector)});}}}}
function _createColumnGrid(){return new Array(12).fill().map(()=>document.createElement('td'));}
function _createMso(content=''){return document.createComment(`[if mso]>${content}<![endif]`)}
function _createTable(attributes=[]){const table=document.createElement('table');Object.entries(TABLE_ATTRIBUTES).forEach(([att,value])=>table.setAttribute(att,value));for(const attr of attributes){if(!(attr.name==='width'&&attr.value==='100%')){table.setAttribute(attr.name,attr.value);}}
table.style.setProperty('width','100%','important');if(table.classList.contains('o_layout')){const layoutStyles={...TABLE_STYLES};delete layoutStyles['font-size'];delete layoutStyles['line-height'];Object.entries(layoutStyles).forEach(([att,value])=>table.style[att]=value)}else{for(const styleName in TABLE_STYLES){if(!('style'in attributes&&attributes.style.value.includes(styleName+':'))){table.style[styleName]=TABLE_STYLES[styleName];}}}
return table;}
function _getColumnSize(column){const colMatch=column.className.match(RE_COL_MATCH);const colOptions=colMatch[2]&&colMatch[2].substr(1).split('-');const colSize=colOptions&&(colOptions.length===2?+colOptions[1]:+colOptions[0])||0;return colSize;}
function _getColumnOffsetSize(column){const offsetMatch=column.className.match(RE_OFFSET_MATCH);const offsetOptions=offsetMatch&&offsetMatch[2]&&offsetMatch[2].substr(1).split('-');const offsetSize=offsetOptions&&(offsetOptions.length===2?+offsetOptions[1]:+offsetOptions[0])||0;return offsetSize;}
function _getMatchedCSSRules(node,cssRules){node.matches=node.matches||node.webkitMatchesSelector||node.mozMatchesSelector||node.msMatchesSelector||node.oMatchesSelector;const styles=cssRules.map((rule)=>rule.style).filter(Boolean);if(node.style.length){const inlineStyles={};for(const styleName of node.style){inlineStyles[styleName]=node.style[styleName];}
styles.push(inlineStyles);}
const processedStyle={};for(const style of styles){for(const[key,value]of Object.entries(style)){if(!processedStyle[key]||!processedStyle[key].includes('important')||value.includes('important')){processedStyle[key]=value;}}}
for(const[key,value]of Object.entries(processedStyle)){if(value&&value.endsWith('important')){processedStyle[key]=value.replace(/\s*!important\s*$/,'');}};if(processedStyle.display==='block'&&!(node.classList&&node.classList.contains('oe-nested'))){delete processedStyle.display;}
if(!processedStyle['box-sizing']){processedStyle['box-sizing']='border-box';}
for(const info of[{name:'margin'},{name:'padding'},{name:'border',suffix:'-style',defaultValue:'none'},]){const positions=['top','right','bottom','left'];const positionalKeys=positions.map(position=>`${info.name}-${position}${info.suffix || ''}`);const styles=positionalKeys.map(key=>processedStyle[key]).filter(s=>s);const hasVariableStyle=styles.some(style=>style.includes('calc(')||style.includes('var('));const inherits=positionalKeys.some(key=>['inherit','initial'].includes((processedStyle[key]||'').trim()));if(styles.length&&!hasVariableStyle&&!inherits){const propertyName=`${info.name}${info.suffix || ''}`;processedStyle[propertyName]=positionalKeys.every(key=>processedStyle[positionalKeys[0]]===processedStyle[key])?processedStyle[propertyName]=processedStyle[positionalKeys[0]]:positionalKeys.map(key=>processedStyle[key]||(info.defaultValue||0)).join(' ');for(const prop of positionalKeys){delete processedStyle[prop];}}};if(processedStyle['border-bottom-left-radius']){processedStyle['border-radius']=processedStyle['border-bottom-left-radius'];delete processedStyle['border-bottom-left-radius'];delete processedStyle['border-bottom-right-radius'];delete processedStyle['border-top-left-radius'];delete processedStyle['border-top-right-radius'];}
for(const styleName in processedStyle){if(styleName.includes('border')&&processedStyle[styleName]==='initial'){delete processedStyle[styleName];}};if(processedStyle['text-decoration-line']){processedStyle['text-decoration']=processedStyle['text-decoration-line'];delete processedStyle['text-decoration-line'];delete processedStyle['text-decoration-color'];delete processedStyle['text-decoration-style'];delete processedStyle['text-decoration-thickness'];}
for(const styleName in processedStyle){if(styleName.includes('flex')||`${processedStyle[styleName]}`.includes('flex')){delete processedStyle[styleName];}}
return processedStyle;}
let lastComputedStyleElement;let lastComputedStyle
function _getStylePropertyValue(element,propertyName){const computedStyle=lastComputedStyleElement===element?lastComputedStyle:getComputedStyle(element)
lastComputedStyleElement=element;lastComputedStyle=computedStyle;return computedStyle[propertyName]||element.style.getPropertyValue(propertyName);}
function _getWidth(element){return parseFloat(getComputedStyle(element).width.replace('px',''))||0;}
function _getHeight(element){return parseFloat(getComputedStyle(element).height.replace('px',''))||0;}
function _hideForOutlook(node,onlyHideTag=false){if(!onlyHideTag){node.setAttribute('style',`${node.getAttribute('style') || ''} mso-hide: all;`.trim());}
node[onlyHideTag==='closing'?'append':'before'](document.createComment('[if !mso]><!'));node[onlyHideTag==='opening'?'prepend':'after'](document.createComment('<![endif]'));}
function _isHidden(element){return element.offsetParent===null;}
function _normalizeStyle(style){const normalizedStyle={};for(const styleName of style){const value=style[styleName];if(value&&!styleName.includes("animation")&&!styleName.includes("-webkit")&&typeof value==="string"){const normalizedStyleName=styleName.replace(/-(.)/g,(a,b)=>b.toUpperCase());normalizedStyle[styleName]=style[normalizedStyleName];if(style.getPropertyPriority(styleName)==='important'){normalizedStyle[styleName]+=' !important';}}}
return normalizedStyle;}
function _wrap(element,wrapperTag,wrapperClass,wrapperStyle){const wrapper=document.createElement(wrapperTag);if(wrapperClass){wrapper.className=wrapperClass;}
if(wrapperStyle){wrapper.style.cssText=wrapperStyle;}
element.parentElement.insertBefore(wrapper,element);wrapper.append(element);return wrapper;}
__exports[Symbol.for("default")]={addTables:addTables,attachmentThumbnailToLinkImg:attachmentThumbnailToLinkImg,bootstrapToTable:bootstrapToTable,cardToTable:cardToTable,classToStyle:classToStyle,fontToImg:fontToImg,formatTables:formatTables,getCSSRules:getCSSRules,listGroupToTable:listGroupToTable,normalizeColors:normalizeColors,normalizeRem:normalizeRem,toInline:toInline,};return __exports;});;

/* /web_editor/static/src/js/backend/html_field.js */
odoo.define('@web_editor/js/backend/html_field',['@web/core/registry','@web/core/l10n/translation','@web/views/fields/standard_field_props','@web_editor/js/backend/QWebPlugin','@web/views/fields/translation_button','@web/views/fields/dynamic_placeholder_hook','@web/core/utils/hooks','@web_editor/js/editor/odoo-editor/src/utils/utils','@web_editor/js/backend/convert_inline','@web/core/assets','@odoo/owl','@web/core/utils/functions','@web/views/fields/html/html_field'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{_t}=require("@web/core/l10n/translation");const{standardFieldProps}=require("@web/views/fields/standard_field_props");const{QWebPlugin}=require('@web_editor/js/backend/QWebPlugin');const{TranslationButton}=require("@web/views/fields/translation_button");const{useDynamicPlaceholder}=require("@web/views/fields/dynamic_placeholder_hook");const{useBus,useService,useSpellCheck,}=require("@web/core/utils/hooks");const{getAdjacentPreviousSiblings,getAdjacentNextSiblings,getRangePosition}=require('@web_editor/js/editor/odoo-editor/src/utils/utils');const{toInline}=require('@web_editor/js/backend/convert_inline');const{getBundle,loadBundle}=require('@web/core/assets');const{Component,useRef,useState,onWillStart,onMounted,onWillUpdateProps,useEffect,onWillUnmount,status,}=require("@odoo/owl");const{uniqueId}=require('@web/core/utils/functions');require('@web/views/fields/html/html_field');let stripHistoryIds;const HtmlField=__exports.HtmlField=class HtmlField extends Component{static template="web_editor.HtmlField";static components={TranslationButton,};static defaultProps={dynamicPlaceholder:false};static props={...standardFieldProps,placeholder:{type:String,optional:true},codeview:{type:Boolean,optional:true},isCollaborative:{type:Boolean,optional:true},dynamicPlaceholder:{type:Boolean,optional:true,default:false},dynamicPlaceholderModelReferenceField:{type:String,optional:true},cssReadonlyAssetId:{type:String,optional:true},isInlineStyle:{type:Boolean,optional:true},sandboxedPreview:{type:Boolean,optional:true},wrapper:{type:String,optional:true},wysiwygOptions:{type:Object},hasReadonlyModifiers:{type:Boolean,optional:true},};setup(){this.containsComplexHTML=this.computeContainsComplexHTML();this.sandboxedPreview=this.props.sandboxedPreview||this.containsComplexHTML;this.readonlyElementRef=useRef("readonlyElement");this.codeViewRef=useRef("codeView");this.iframeRef=useRef("iframe");this.codeViewButtonRef=useRef("codeViewButton");if(this.props.dynamicPlaceholder){this.dynamicPlaceholder=useDynamicPlaceholder();}
this.rpc=useService("rpc");this.onIframeUpdated=this.env.onIframeUpdated||(()=>{});this.state=useState({showCodeView:false,iframeVisible:false,});const{model}=this.props.record;useBus(model.bus,"WILL_SAVE_URGENTLY",()=>this.commitChanges({urgent:true}));useBus(model.bus,"NEED_LOCAL_CHANGES",({detail})=>detail.proms.push(this.commitChanges({shouldInline:true})));useSpellCheck();this._onUpdateIframeId="onLoad_"+uniqueId("FieldHtml");onWillStart(async()=>{if(this.props.cssReadonlyAssetId){this.cssReadonlyAsset=await getBundle(this.props.cssReadonlyAssetId);}
await this._lazyloadWysiwyg();});this._lastRecordInfo={res_model:this.props.record.resModel,res_id:this.props.record.resId,};onWillUpdateProps((newProps)=>{if(!newProps.readonly&&!this.sandboxedPreview&&this.state.iframeVisible){this.state.iframeVisible=false;}
const newRecordInfo={res_model:newProps.record.resModel,res_id:newProps.record.resId,};if(JSON.stringify(this._lastRecordInfo)!==JSON.stringify(newRecordInfo)){this.currentEditingValue=undefined;}
this._lastRecordInfo=newRecordInfo;});useEffect(()=>{(async()=>{if(this._qwebPlugin){this._qwebPlugin.destroy();}
if(this.props.readonly||(!this.state.showCodeView&&this.sandboxedPreview)){if(this.showIframe){await this._setupReadonlyIframe();}else if(this.readonlyElementRef.el){this._qwebPlugin=new QWebPlugin();this._qwebPlugin.sanitizeElement(this.readonlyElementRef.el);retargetLinks(this.readonlyElementRef.el);const hasReadonlyModifiers=this.props.hasReadonlyModifiers;if(!hasReadonlyModifiers){const $el=$(this.readonlyElementRef.el);$el.off('.checklistBinding');$el.on('click.checklistBinding','ul.o_checklist > li',this._onReadonlyClickChecklist.bind(this));$el.on('click.checklistBinding','.o_stars .fa-star, .o_stars .fa-star-o',this._onReadonlyClickStar.bind(this));}}}else{const codeViewEl=this._getCodeViewEl();if(codeViewEl){codeViewEl.value=this.props.record.data[this.props.name];}}})();});onMounted(()=>{this.dynamicPlaceholder?.setElementRef(this.wysiwyg);});onWillUnmount(async()=>{if(!this.props.readonly&&this._isDirty()){await this.commitChanges();}
if(this._qwebPlugin){this._qwebPlugin.destroy();}
if(this.resizerHandleObserver){this.resizerHandleObserver.disconnect();}});}
computeContainsComplexHTML(){const domParser=new DOMParser();const parsedOriginal=domParser.parseFromString(this.props.record.data[this.props.name]||'','text/html');return!!parsedOriginal.head.innerHTML.trim();}
get isTranslatable(){return this.props.record.fields[this.props.name].translate;}
get markupValue(){return this.props.record.data[this.props.name];}
get showIframe(){return(this.sandboxedPreview&&!this.state.showCodeView)||(this.props.readonly&&this.props.cssReadonlyAssetId);}
get wysiwygOptions(){let dynamicPlaceholderOptions={};if(this.props.dynamicPlaceholder){dynamicPlaceholderOptions={powerboxCommands:[{category:_t('Marketing Tools'),name:_t('Dynamic Placeholder'),priority:10,description:_t('Insert personalized content'),fontawesome:'fa-magic',callback:()=>{this.wysiwygRangePosition=getRangePosition(document.createElement('x'),this.wysiwyg.options.document||document);this.dynamicPlaceholder.updateModel(this.props.dynamicPlaceholderModelReferenceField);setTimeout(async()=>{await this.dynamicPlaceholder.open({validateCallback:this.onDynamicPlaceholderValidate.bind(this),closeCallback:this.onDynamicPlaceholderClose.bind(this),positionCallback:this.positionDynamicPlaceholder.bind(this),});});},}],powerboxFilters:[this._filterPowerBoxCommands.bind(this)],}}
const wysiwygOptions={...this.props.wysiwygOptions};const{sanitize_tags,sanitize}=this.props.record.fields[this.props.name];if(sanitize_tags||(sanitize_tags===undefined&&sanitize)){wysiwygOptions.allowCommandVideo=false;}
return{value:this.props.record.data[this.props.name],autostart:false,onAttachmentChange:this._onAttachmentChange.bind(this),onDblClickEditableMedia:this._onDblClickEditableMedia.bind(this),onWysiwygBlur:this._onWysiwygBlur.bind(this),...wysiwygOptions,...dynamicPlaceholderOptions,recordInfo:{res_model:this.props.record.resModel,res_id:this.props.record.resId,},collaborationChannel:this.props.isCollaborative&&{collaborationModelName:this.props.record.resModel,collaborationFieldName:this.props.name,collaborationResId:parseInt(this.props.record.resId),},fieldId:this.props.id,editorPlugins:[...(wysiwygOptions.editorPlugins||[]),QWebPlugin,this.MoveNodePlugin],record:this.props.record,};}
_filterPowerBoxCommands(commands){let selectionIsInForbidenSnippet=false;if(this.wysiwyg&&this.wysiwyg.odooEditor){const selection=this.wysiwyg.odooEditor.document.getSelection();selectionIsInForbidenSnippet=this.wysiwyg.closestElement(selection.anchorNode,'div[data-snippet="s_cover"], div[data-snippet="s_masonry_block"]');}
return selectionIsInForbidenSnippet?commands.filter((o)=>o.title!=="Dynamic Placeholder"):commands;}
getEditingValue(){const codeViewEl=this._getCodeViewEl();if(codeViewEl){return codeViewEl.value;}else{if(this.wysiwyg){return this.wysiwyg.getValue();}else{return null;}}}
async updateValue(){const value=this.getEditingValue();const lastValue=(this.props.record.data[this.props.name]||"").toString();if(value!==null&&!(!lastValue&&stripHistoryIds(value)==="<p><br></p>")&&stripHistoryIds(value)!==stripHistoryIds(lastValue)){this.props.record.model.bus.trigger("FIELD_IS_DIRTY",false);this.currentEditingValue=value;await this.props.record.update({[this.props.name]:value});}}
async startWysiwyg(wysiwyg){this.wysiwyg=wysiwyg;await this.wysiwyg.startEdition();wysiwyg.$editable[0].classList.add("odoo-editor-qweb");if(this.props.codeview){const $codeviewButtonToolbar=$(`
                <div id="codeview-btn-group" class="btn-group">
                    <button class="o_codeview_btn btn btn-primary">
                        <i class="fa fa-code"></i>
                    </button>
                </div>
            `);this.wysiwyg.toolbarEl.append($codeviewButtonToolbar[0]);$codeviewButtonToolbar.click(this.toggleCodeView.bind(this));}
this.wysiwyg.odooEditor.addEventListener("historyStep",()=>this.props.record.model.bus.trigger("FIELD_IS_DIRTY",this._isDirty()));if(this.props.isCollaborative){this.wysiwyg.odooEditor.addEventListener("onExternalHistorySteps",()=>this.props.record.model.bus.trigger("FIELD_IS_DIRTY",this._isDirty()));}
this.isRendered=true;}
toggleCodeView(){this.state.showCodeView=!this.state.showCodeView;if(this.wysiwyg){this.wysiwyg.odooEditor.observerUnactive('toggleCodeView');if(this.state.showCodeView){this.wysiwyg.$editable.remove();this.wysiwyg.odooEditor.toolbarHide();const value=this.wysiwyg.getValue();this.props.record.update({[this.props.name]:value});}else{this.wysiwyg.odooEditor.observerActive('toggleCodeView');}}
if(!this.state.showCodeView){const $codeview=$(this.codeViewRef.el);const value=$codeview.val();this.props.record.update({[this.props.name]:value});}}
onDynamicPlaceholderValidate(chain,defaultValue){if(chain){this.wysiwyg.focus();let dynamicPlaceholder="object."+chain;dynamicPlaceholder+=defaultValue&&defaultValue!==''?` or '''${defaultValue}'''`:'';const t=document.createElement('T');t.setAttribute('t-out',dynamicPlaceholder);this.wysiwyg.odooEditor.execCommand('insert',t);this.wysiwyg.odooEditor.sanitize(t);}}
onDynamicPlaceholderClose(){this.wysiwyg.focus();}
positionDynamicPlaceholder(popover,position){const enoughSpaceBelow=window.innerHeight-popover.clientHeight-this.wysiwygRangePosition.top;let topPosition=(enoughSpaceBelow>0)?this.wysiwygRangePosition.top:this.wysiwygRangePosition.top+enoughSpaceBelow;let leftPosition=this.wysiwygRangePosition.left-14;const enoughSpaceRight=window.innerWidth-popover.clientWidth-leftPosition;leftPosition=(enoughSpaceRight>0)?leftPosition:leftPosition+enoughSpaceRight;popover.style.top=topPosition+'px';popover.style.left=leftPosition+'px';}
async commitChanges({urgent,shouldInline}={}){if(this._isDirty()||urgent||(shouldInline&&this.props.isInlineStyle)){let savePendingImagesPromise,toInlinePromise;if(this.wysiwyg&&this.wysiwyg.odooEditor){this.wysiwyg.odooEditor.observerUnactive('commitChanges');savePendingImagesPromise=this.wysiwyg.savePendingImages();if(this.props.isInlineStyle){toInlinePromise=this._toInline();}
if(urgent&&status(this)!=='destroyed'){await this.updateValue();}
await savePendingImagesPromise;if(this.props.isInlineStyle){await toInlinePromise;}
this.wysiwyg.odooEditor.observerActive('commitChanges');}
if(status(this)!=='destroyed'){await this.updateValue();}}}
async _lazyloadWysiwyg(){let wysiwygModule=await odoo.loader.modules.get('@web_editor/js/wysiwyg/wysiwyg');this.MoveNodePlugin=(await odoo.loader.modules.get('@web_editor/js/wysiwyg/MoveNodePlugin'))?.MoveNodePlugin;if(!wysiwygModule){await loadBundle('web_editor.backend_assets_wysiwyg');wysiwygModule=await odoo.loader.modules.get('@web_editor/js/wysiwyg/wysiwyg');this.MoveNodePlugin=(await odoo.loader.modules.get('@web_editor/js/wysiwyg/MoveNodePlugin')).MoveNodePlugin;}
stripHistoryIds=wysiwygModule.stripHistoryIds;this.Wysiwyg=wysiwygModule.Wysiwyg;}
_isDirty(){const strippedPropValue=stripHistoryIds(String(this.props.record.data[this.props.name]));const strippedEditingValue=stripHistoryIds(this.getEditingValue());const domParser=new DOMParser();const codeViewEl=this._getCodeViewEl();let parsedPreviousValue;if(!codeViewEl&&this.wysiwyg){const editable=domParser.parseFromString(strippedPropValue||'<p><br></p>','text/html').body;const div=document.createElement('div');div.style.display='none';div.append(editable);document.body.append(div);const editableValue=stripHistoryIds(this.wysiwyg.getValue({$layout:$(editable)}));div.remove();parsedPreviousValue=domParser.parseFromString(editableValue,'text/html').body;}else{parsedPreviousValue=domParser.parseFromString(strippedPropValue||'<p><br></p>','text/html').body;}
const parsedNewValue=domParser.parseFromString(strippedEditingValue,'text/html').body;return!this.props.readonly&&parsedPreviousValue.innerHTML!==parsedNewValue.innerHTML;}
_getCodeViewEl(){return this.state.showCodeView&&this.codeViewRef.el;}
async _setupReadonlyIframe(){const iframeTarget=this.sandboxedPreview?this.iframeRef.el.contentDocument.documentElement:this.iframeRef.el.contentDocument.querySelector('#iframe_target');if(this.iframePromise&&iframeTarget){if(iframeTarget.innerHTML!==this.props.record.data[this.props.name]){iframeTarget.innerHTML=this.props.record.data[this.props.name];retargetLinks(iframeTarget);}
return this.iframePromise;}
this.iframePromise=new Promise((resolve)=>{let value=this.props.record.data[this.props.name];let avoidDoubleLoad=0;window.top[this._onUpdateIframeId]=(_avoidDoubleLoad)=>{if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg iframe double load detected');return;}
resolve();this.state.iframeVisible=true;this.onIframeUpdated();};this.iframeRef.el.addEventListener('load',async()=>{const _avoidDoubleLoad=++avoidDoubleLoad;if(_avoidDoubleLoad!==avoidDoubleLoad){console.warn('Wysiwyg immediate iframe double load detected');return;}
const cwindow=this.iframeRef.el.contentWindow;try{cwindow.document;}catch{return;}
if(!this.sandboxedPreview){cwindow.document.open("text/html","replace").write('<!DOCTYPE html><html>'+'<head>'+'<meta charset="utf-8"/>'+'<meta http-equiv="X-UA-Compatible" content="IE=edge"/>\n'+'<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>\n'+'</head>\n'+'<body class="o_in_iframe o_readonly" style="overflow: hidden;">\n'+'<div id="iframe_target"></div>\n'+'</body>'+'</html>');}
if(this.props.cssReadonlyAssetId){for(const cssLib of this.cssReadonlyAsset.cssLibs){const link=cwindow.document.createElement('link');link.setAttribute('type','text/css');link.setAttribute('rel','stylesheet');link.setAttribute('href',cssLib);cwindow.document.head.append(link);}
for(const cssContent of this.cssReadonlyAsset.cssContents){const style=cwindow.document.createElement('style');style.setAttribute('type','text/css');const textNode=cwindow.document.createTextNode(cssContent);style.append(textNode);cwindow.document.head.append(style);}}
if(!this.sandboxedPreview){const iframeTarget=cwindow.document.querySelector('#iframe_target');iframeTarget.innerHTML=value;const script=cwindow.document.createElement('script');script.setAttribute('type','text/javascript');const scriptTextNode=document.createTextNode(`if (window.top.${this._onUpdateIframeId}) {`+`window.top.${this._onUpdateIframeId}(${_avoidDoubleLoad})`+`}`);script.append(scriptTextNode);cwindow.document.body.append(script);}else{cwindow.document.documentElement.innerHTML=value;}
const height=cwindow.document.body.scrollHeight;this.iframeRef.el.style.height=Math.max(30,Math.min(height,500))+'px';retargetLinks(cwindow.document.body);if(this.sandboxedPreview){this.state.iframeVisible=true;this.onIframeUpdated();resolve();}});this.iframeRef.el.after(this.iframeRef.el);});return this.iframePromise;}
async _toInline(){const $editable=this.wysiwyg.getEditable();this.wysiwyg.odooEditor.sanitize(this.wysiwyg.odooEditor.editable);const html=this.wysiwyg.getValue();const $odooEditor=$editable.closest('.odoo-editor-editable');$odooEditor.removeClass('odoo-editor-editable');$editable.html(html);await toInline($editable,undefined,this.wysiwyg.$iframe);$odooEditor.addClass('odoo-editor-editable');this.wysiwyg.setValue($editable.html());this.wysiwyg.odooEditor.sanitize(this.wysiwyg.odooEditor.editable);}
_onAttachmentChange(attachment){if(!(this.props.record.fieldNames.includes('attachment_ids')&&this.props.record.resModel==='mail.compose.message')){return;}
this.props.record.data.attachment_ids.linkTo(attachment.id,attachment);}
_onDblClickEditableMedia(ev){const el=ev.currentTarget;if(el.nodeName==='IMG'&&el.src){this.wysiwyg.showImageFullscreen(el.src);}}
_onWysiwygBlur(){if(this.props.isInlineStyle){this.updateValue();}else{this.commitChanges();}}
async _onReadonlyClickChecklist(ev){if(ev.offsetX>0){return;}
ev.stopPropagation();ev.preventDefault();const checked=$(ev.target).hasClass('o_checked');let checklistId=$(ev.target).attr('id');checklistId=checklistId&&checklistId.replace('checkId-','');checklistId=parseInt(checklistId||'0');const value=await this.rpc('/web_editor/checklist',{res_model:this.props.record.resModel,res_id:this.props.record.resId,filename:this.props.name,checklistId:checklistId,checked:!checked,});if(value){this.props.record.update({[this.props.name]:value});}}
async _onReadonlyClickStar(ev){ev.stopPropagation();ev.preventDefault();const node=ev.target;const previousStars=getAdjacentPreviousSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.className.includes('fa-star')));const nextStars=getAdjacentNextSiblings(node,sib=>(sib.nodeType===Node.ELEMENT_NODE&&sib.classList.contains('fa-star')));const shouldToggleOff=node.classList.contains('fa-star')&&!nextStars.length;const rating=shouldToggleOff?0:previousStars.length+1;let starsId=$(node).parent().attr('id');starsId=starsId&&starsId.replace('checkId-','');starsId=parseInt(starsId||'0');const value=await this.rpc('/web_editor/stars',{res_model:this.props.record.resModel,res_id:this.props.record.resId,filename:this.props.name,starsId,rating,});if(value){this.props.record.update({[this.props.name]:value});}}}
const htmlField=__exports.htmlField={component:HtmlField,displayName:_t("Html"),supportedOptions:[{label:_t("CSS Edit"),name:"cssEdit",type:"string"},{label:_t("Height"),name:"height",type:"string"},{label:_t("Min height"),name:"minHeight",type:"string"},{label:_t("Max height"),name:"maxHeight",type:"string"},{label:_t("Snippets"),name:"snippets",type:"string"},{label:_t("No videos"),name:"noVideos",type:"boolean",default:true},{label:_t("Resizable"),name:"resizable",type:"boolean",},{label:_t("Sandboxed preview"),name:"sandboxedPreview",type:"boolean",help:_t("With the option enabled, all content can only be viewed in a sandboxed iframe or in the code editor."),},{label:_t("Collaborative edition"),name:"collaborative",type:"boolean",},{label:_t("Collaborative trigger"),name:"collaborative_trigger",type:"selection",choices:[{label:_t("Focus"),value:"focus"},{label:_t("Start"),value:"start"},],default:"focus",help:_t("Specify when the collaboration starts. 'Focus' will start the collaboration session when the user clicks inside the text field (default), 'Start' when the record is loaded (could impact performance if set)."),},{label:_t("Codeview"),name:"codeview",type:"boolean",help:_t("Allow users to view and edit the field in HTML.")}],supportedTypes:["html"],extractProps({attrs,options},dynamicInfo){const wysiwygOptions={placeholder:attrs.placeholder,noAttachment:options['no-attachment'],inIframe:Boolean(options.cssEdit),iframeCssAssets:options.cssEdit,iframeHtmlClass:attrs.iframeHtmlClass,snippets:options.snippets,mediaModalParams:{noVideos:'noVideos'in options?options.noVideos:true,useMediaLibrary:true,},linkOptions:{forceNewWindow:true,},tabsize:0,height:options.height,minHeight:options.minHeight,maxHeight:options.maxHeight,resizable:'resizable'in options?options.resizable:false,};if('collaborative'in options){wysiwygOptions.collaborative=options.collaborative;wysiwygOptions.collaborativeTrigger=options.collaborative_trigger||'focus';}
if('style-inline'in options){wysiwygOptions.inlineStyle=Boolean(options['style-inline']);}
if('allowCommandImage'in options){wysiwygOptions.allowCommandImage=Boolean(options.allowCommandImage);}
if('allowCommandVideo'in options){wysiwygOptions.allowCommandVideo=Boolean(options.allowCommandVideo);}
return{codeview:Boolean(odoo.debug&&options.codeview),placeholder:attrs.placeholder,sandboxedPreview:Boolean(options.sandboxedPreview),isCollaborative:options.collaborative,cssReadonlyAssetId:options.cssReadonly,dynamicPlaceholder:options?.dynamic_placeholder||false,dynamicPlaceholderModelReferenceField:options?.dynamic_placeholder_model_reference_field||"",isInlineStyle:options['style-inline'],wysiwygOptions,hasReadonlyModifiers:dynamicInfo.readonly,};},};registry.category("fields").add("html",htmlField,{force:true});const retargetLinks=(container)=>{for(const link of container.querySelectorAll('a')){link.setAttribute('target','_blank');link.setAttribute('rel','noreferrer');}}
return __exports;});;

/* /web_tour/static/src/debug/debug_manager.js */
odoo.define('@web_tour/debug/debug_manager',['@web/core/l10n/translation','@web/core/browser/browser','@web/core/registry','@web_tour/debug/tour_dialog_component','@web_tour/tour_service/tour_state'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const ToursDialog=require("@web_tour/debug/tour_dialog_component")[Symbol.for("default")];const{tourState}=require("@web_tour/tour_service/tour_state");__exports.disableTours=disableTours;function disableTours({env}){if(!env.services.user.isSystem){return null;}
const activeTourNames=tourState.getActiveTourNames();if(activeTourNames.length===0){return null;}
return{type:"item",description:_t("Disable Tours"),callback:async()=>{await env.services.orm.call("web_tour.tour","consume",[activeTourNames]);for(const tourName of activeTourNames){tourState.clear(tourName);}
browser.location.reload();},sequence:50,};}
__exports.startTour=startTour;function startTour({env}){if(!env.services.user.isSystem){return null;}
return{type:"item",description:_t("Start Tour"),callback:async()=>{env.services.dialog.add(ToursDialog);},sequence:60,};}
registry.category("debug").category("default").add("web_tour.startTour",startTour).add("web_tour.disableTours",disableTours);return __exports;});;

/* /web_tour/static/src/debug/tour_dialog_component.js */
odoo.define('@web_tour/debug/tour_dialog_component',['@web/core/utils/hooks','@web/core/dialog/dialog','@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Dialog}=require("@web/core/dialog/dialog");const{_t}=require("@web/core/l10n/translation");const{Component}=require("@odoo/owl");const ToursDialog=__exports[Symbol.for("default")]=class ToursDialog extends Component{setup(){this.title=_t("Tours");this.tourService=useService("tour_service");this.onboardingTours=this.tourService.getSortedTours().filter(tour=>!tour.test);this.testingTours=this.tourService.getSortedTours().filter(tour=>tour.test);}
_onStartTour(ev){this.tourService.startTour(ev.target.dataset.name,{mode:'manual'});this.props.close();}
_onTestTour(ev){this.tourService.startTour(ev.target.dataset.name,{mode:'auto',stepDelay:500,showPointerDuration:250});this.props.close();}}
ToursDialog.template="web_tour.ToursDialog";ToursDialog.components={Dialog};return __exports;});;

/* /web_tour/static/src/tour_pointer/tour_pointer.js */
odoo.define('@web_tour/tour_pointer/tour_pointer',['@odoo/owl','@web/core/position_hook'],function(require){'use strict';let __exports={};const{Component,useEffect,useRef}=require("@odoo/owl");const{usePosition}=require("@web/core/position_hook");const TourPointer=__exports.TourPointer=class TourPointer extends Component{static props={pointerState:{type:Object,shape:{anchor:{type:HTMLElement,optional:true},content:{type:String,optional:true},isOpen:{type:Boolean,optional:true},isVisible:{type:Boolean,optional:true},onClick:{type:[Function,{value:null}],optional:true},onMouseEnter:{type:[Function,{value:null}],optional:true},onMouseLeave:{type:[Function,{value:null}],optional:true},position:{type:[{value:"left"},{value:"right"},{value:"top"},{value:"bottom"},],optional:true,},rev:{type:Number,optional:true},},},bounce:{type:Boolean,optional:true},};static defaultProps={bounce:true,};static template="web_tour.TourPointer";static width=28;static height=28;setup(){const positionOptions={margin:6,onPositioned:(pointer,position)=>{const popperRect=pointer.getBoundingClientRect();const{top,left,direction}=position;if(direction==="top"){pointer.style.bottom=`${window.innerHeight - top - popperRect.height}px`;pointer.style.removeProperty("top");}else if(direction==="left"){pointer.style.right=`${window.innerWidth - left - popperRect.width}px`;pointer.style.removeProperty("left");}},};Object.defineProperty(positionOptions,"position",{get:()=>this.position,enumerable:true});const position=usePosition("pointer",()=>this.props.pointerState.anchor,positionOptions);const rootRef=useRef("pointer");let dimensions=null;let lastMeasuredContent=null;let lastOpenState=this.isOpen;let lastAnchor;let[anchorX,anchorY]=[0,0];useEffect(()=>{const{el:pointer}=rootRef;if(pointer){const hasContentChanged=lastMeasuredContent!==this.content;const hasOpenStateChanged=lastOpenState!==this.isOpen;lastOpenState=this.isOpen;if(hasContentChanged){lastMeasuredContent=this.content;pointer.style.removeProperty("width");pointer.style.removeProperty("height");dimensions=pointer.getBoundingClientRect();}
if(hasContentChanged||hasOpenStateChanged){const[width,height]=this.isOpen?[dimensions.width,dimensions.height]:[this.constructor.width,this.constructor.height];if(this.isOpen){pointer.style.removeProperty("transition");}else{pointer.style.setProperty("transition","none");}
pointer.style.setProperty("width",`${width}px`);pointer.style.setProperty("height",`${height}px`);}
if(!this.isOpen){const{anchor}=this.props.pointerState;if(anchor===lastAnchor){const{x,y,width}=anchor.getBoundingClientRect();const[lastAnchorX,lastAnchorY]=[anchorX,anchorY];[anchorX,anchorY]=[x,y];const delta=Math.sqrt(Math.pow(x-lastAnchorX,2)+Math.pow(y-lastAnchorY,2));if(delta<1){position.lock();return;}
const wouldOverflow=window.innerWidth-x-width/2<dimensions?.width;pointer.classList.toggle("o_expand_left",wouldOverflow);}
lastAnchor=anchor;pointer.style.bottom="";pointer.style.right="";position.unlock();}}else{lastMeasuredContent=null;lastOpenState=false;lastAnchor=null;dimensions=null;}});}
get content(){return this.props.pointerState.content||"";}
get isOpen(){return this.props.pointerState.isOpen;}
get position(){return this.props.pointerState.position||"top";}}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_compilers.js */
odoo.define('@web_tour/tour_service/tour_compilers',['@web/core/browser/browser','@web/core/utils/timing','@web/core/utils/ui','@web_tour/tour_service/tour_state','@web_tour/tour_service/tour_utils'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{debounce}=require("@web/core/utils/timing");const{isVisible}=require("@web/core/utils/ui");const{tourState}=require("@web_tour/tour_service/tour_state");const{callWithUnloadCheck,getConsumeEventType,getFirstVisibleElement,getJQueryElementFromSelector,getScrollParent,RunningTourActionHelper,}=require("@web_tour/tour_service/tour_utils");function findTrigger(selector,inModal,shadowDOM){const $target=$(shadowDOM?document.querySelector(shadowDOM)?.shadowRoot:document);const $visibleModal=$target.find(".modal:visible").last();let $el;if(inModal!==false&&$visibleModal.length){$el=$visibleModal.find(selector);}else{$el=getJQueryElementFromSelector(selector,$target);}
return getFirstVisibleElement($el).get(0);}
function findExtraTrigger(selector,shadowDOM){const $target=$(shadowDOM?document.querySelector(shadowDOM)?.shadowRoot:document);const $el=getJQueryElementFromSelector(selector,$target);return getFirstVisibleElement($el).get(0);}
function findStepTriggers(step){const triggerEl=findTrigger(step.trigger,step.in_modal,step.shadow_dom);const altEl=findTrigger(step.alt_trigger,step.in_modal,step.shadow_dom);const skipEl=findTrigger(step.skip_trigger,step.in_modal,step.shadow_dom);const extraTriggerOkay=step.extra_trigger?findExtraTrigger(step.extra_trigger,step.shadow_dom):true;return{triggerEl,altEl,extraTriggerOkay,skipEl};}
function describeStep(step){return step.content?`${step.content} (trigger: ${step.trigger})`:step.trigger;}
function describeFailedStepSimple(step,tour){return`Tour ${tour.name} failed at step ${describeStep(step)}`;}
function describeFailedStepDetailed(step,tour){const offset=3;const stepIndex=tour.steps.findIndex((s)=>s===step);const start=stepIndex-offset>=0?stepIndex-offset:0;const end=stepIndex+offset+1<=tour.steps.length?stepIndex+offset+1:tour.steps.length;let result="";for(let i=start;i<end;i++){const highlight=i===stepIndex;const stepString=JSON.stringify(tour.steps[i],(_key,value)=>{if(typeof value==="function"){return"[function]";}else{return value;}},2);result+=`\n${highlight ? "----- FAILING STEP -----\n" : ""}${stepString},${
            highlight ? "\n-----------------------" : ""
        }`;}
return`${describeFailedStepSimple(step, tour)}\n\n${result.trim()}`;}
function getAnchorEl(el,consumeEvent){if(consumeEvent==="drag"){return el.closest(".ui-draggable, .o_draggable");}
if(consumeEvent==="input"&&!["textarea","input"].includes(el.tagName.toLowerCase())){return el.closest("[contenteditable='true']");}
if(consumeEvent==="sort"){return el.closest(".ui-sortable, .o_sortable");}
return el;}
function canContinue(el,step){const rootNode=el.getRootNode();const isInDoc=rootNode instanceof ShadowRoot?el.ownerDocument.contains(rootNode.host):el.ownerDocument.contains(el);const isElement=el instanceof el.ownerDocument.defaultView.Element||el instanceof Element;const isBlocked=document.body.classList.contains("o_ui_blocked")||document.querySelector(".o_blockUI");return(isInDoc&&isElement&&!isBlocked&&(!step.allowInvisible?isVisible(el):true)&&(!el.disabled||step.isCheck));}
function setupListeners({anchorEl,consumeEvent,onMouseEnter,onMouseLeave,onScroll,onConsume,}){anchorEl.addEventListener(consumeEvent,onConsume);anchorEl.addEventListener("mouseenter",onMouseEnter);anchorEl.addEventListener("mouseleave",onMouseLeave);const cleanups=[()=>{anchorEl.removeEventListener(consumeEvent,onConsume);anchorEl.removeEventListener("mouseenter",onMouseEnter);anchorEl.removeEventListener("mouseleave",onMouseLeave);},];const scrollEl=getScrollParent(anchorEl);if(scrollEl){const debouncedOnScroll=debounce(onScroll,50);scrollEl.addEventListener("scroll",debouncedOnScroll);cleanups.push(()=>scrollEl.removeEventListener("scroll",debouncedOnScroll));}
return()=>{while(cleanups.length){cleanups.pop()();}};}
__exports.compileStepManual=compileStepManual;function compileStepManual(stepIndex,step,options){const{tour,pointer,onStepConsummed}=options;let proceedWith=null;let removeListeners=()=>{};return[{action:()=>console.log(step.trigger),},{trigger:()=>{removeListeners();if(proceedWith){return proceedWith;}
const{triggerEl,altEl,extraTriggerOkay,skipEl}=findStepTriggers(step);if(skipEl){return skipEl;}
const stepEl=extraTriggerOkay&&(triggerEl||altEl);if(stepEl&&canContinue(stepEl,step)){const consumeEvent=step.consumeEvent||getConsumeEventType(stepEl,step.run);const anchorEl=getAnchorEl(stepEl,consumeEvent);const debouncedToggleOpen=debounce(pointer.showContent,50,true);const updatePointer=()=>{pointer.setState({onMouseEnter:()=>debouncedToggleOpen(true),onMouseLeave:()=>debouncedToggleOpen(false),});pointer.pointTo(anchorEl,step);};removeListeners=setupListeners({anchorEl,consumeEvent,onMouseEnter:()=>pointer.showContent(true),onMouseLeave:()=>pointer.showContent(false),onScroll:updatePointer,onConsume:()=>{proceedWith=stepEl;pointer.hide();},});updatePointer();}else{pointer.hide();}},action:()=>{tourState.set(tour.name,"currentIndex",stepIndex+1);pointer.hide();proceedWith=null;onStepConsummed(tour,step);},},];}
let tourTimeout;__exports.compileStepAuto=compileStepAuto;function compileStepAuto(stepIndex,step,options){const{tour,pointer,stepDelay,keepWatchBrowser,showPointerDuration,onStepConsummed}=options;let skipAction=false;return[{action:async()=>{await new Promise(resolve=>requestAnimationFrame(resolve))},},{action:async()=>{skipAction=false;console.log(`Tour ${tour.name} on step: '${describeStep(step)}'`);if(!keepWatchBrowser){browser.clearTimeout(tourTimeout);tourTimeout=browser.setTimeout(()=>{console.warn(describeFailedStepDetailed(step,tour));console.error(describeFailedStepSimple(step,tour));},(step.timeout||10000)+stepDelay);}
await new Promise((resolve)=>browser.setTimeout(resolve,stepDelay));},},{trigger:()=>{const{triggerEl,altEl,extraTriggerOkay,skipEl}=findStepTriggers(step);let stepEl=extraTriggerOkay&&(triggerEl||altEl);if(skipEl){skipAction=true;stepEl=skipEl;}
if(!stepEl){return false;}
return canContinue(stepEl,step)&&stepEl;},action:async(stepEl)=>{tourState.set(tour.name,"currentIndex",stepIndex+1);if(skipAction){return;}
const consumeEvent=step.consumeEvent||getConsumeEventType(stepEl,step.run);const $anchorEl=$(stepEl);if(showPointerDuration>0){pointer.pointTo($anchorEl.get(0),step);await new Promise((r)=>browser.setTimeout(r,showPointerDuration));pointer.hide();}
const actionHelper=new RunningTourActionHelper({consume_event:consumeEvent,$anchor:$anchorEl,});let result;if(typeof step.run==="function"){const willUnload=await callWithUnloadCheck(()=>step.run.call({$anchor:$anchorEl},actionHelper));result=willUnload&&"will unload";}else if(step.run!==undefined){const m=step.run.match(/^([a-zA-Z0-9_]+) *(?:\(? *(.+?) *\)?)?$/);actionHelper[m[1]](m[2]);}else if(!step.isCheck){if(stepIndex===tour.steps.length-1){console.warn('Tour %s: ignoring action (auto) of last step',tour.name);}else{actionHelper.auto();}}
return result;},},{action:()=>{onStepConsummed(tour,step);},},];}
__exports.compileTourToMacro=compileTourToMacro;function compileTourToMacro(tour,options){const{filteredSteps,stepCompiler,pointer,stepDelay,keepWatchBrowser,showPointerDuration,checkDelay,onStepConsummed,onTourEnd,}=options;const currentStepIndex=tourState.get(tour.name,"currentIndex");return{...tour,checkDelay,steps:filteredSteps.reduce((newSteps,step,i)=>{if(i<currentStepIndex){return newSteps;}else{return[...newSteps,...stepCompiler(i,step,{tour,pointer,stepDelay,keepWatchBrowser,showPointerDuration,onStepConsummed,}),];}},[]).concat([{action(){tourState.clear(tour.name);onTourEnd(tour);clearTimeout(tourTimeout);},},]),};}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_pointer_state.js */
odoo.define('@web_tour/tour_service/tour_pointer_state',['@odoo/owl','@web/core/l10n/translation','@web_tour/tour_pointer/tour_pointer','@web_tour/tour_service/tour_utils'],function(require){'use strict';let __exports={};const{reactive}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{TourPointer}=require("@web_tour/tour_pointer/tour_pointer");const{getScrollParent}=require("@web_tour/tour_service/tour_utils");class Intersection{constructor(){this.currentTarget=null;this.rootBounds=null;this._targetPosition="unknown";this._observer=new IntersectionObserver((observations)=>this._handleObservations(observations));}
_handleObservations(observations){if(observations.length<1){return;}
const observation=observations[observations.length-1];this.rootBounds=observation.rootBounds;if(this.rootBounds&&this.currentTarget){if(observation.isIntersecting){this._targetPosition="in";}else{const targetBounds=this.currentTarget.getBoundingClientRect();if(targetBounds.bottom<this.rootBounds.height/2){this._targetPosition="out-above";}else if(targetBounds.top>this.rootBounds.height/2){this._targetPosition="out-below";}}}else{this._targetPosition="unknown";}}
get targetPosition(){if(!this.rootBounds){return this.currentTarget?"in":"unknown";}else{return this._targetPosition;}}
setTarget(newTarget){if(this.currentTarget!==newTarget){if(this.currentTarget){this._observer.unobserve(this.currentTarget);}
if(newTarget){this._observer.observe(newTarget);}
this.currentTarget=newTarget;}}
stop(){this._observer.disconnect();}}
__exports.createPointerState=createPointerState;function createPointerState(){const setState=(newState)=>{Object.assign(state,newState);};const pointTo=(anchor,step)=>{intersection.setTarget(anchor);if(anchor){let{position,content}=step;switch(intersection.targetPosition){case"unknown":{break;}
case"in":{if(document.body.contains(floatingAnchor)){floatingAnchor.remove();}
setState({anchor,content,onClick:null,position,isVisible:true});break;}
default:{const onClick=()=>{anchor.scrollIntoView({behavior:"smooth",block:"nearest"});hide();};const scrollParent=getScrollParent(anchor);if(!scrollParent){setState({anchor,content,onClick:null,position,isVisible:true});return;}
const{x,y,width,height}=scrollParent.getBoundingClientRect();floatingAnchor.style.left=`${x + width / 2}px`;if(intersection.targetPosition==="out-below"){position="top";content=_t("Scroll down to reach the next step.");floatingAnchor.style.top=`${y + height - TourPointer.height}px`;}else if(intersection.targetPosition==="out-above"){position="bottom";content=_t("Scroll up to reach the next step.");floatingAnchor.style.top=`${y + TourPointer.height}px`;}
if(!document.contains(floatingAnchor)){document.body.appendChild(floatingAnchor);}
setState({anchor:floatingAnchor,content,onClick,position,isVisible:true,});}}}else{hide();}};function hide(){setState({content:"",isVisible:false,isOpen:false});}
function showContent(isOpen){setState({isOpen});}
function destroy(){intersection.stop();if(document.body.contains(floatingAnchor)){floatingAnchor.remove();}}
const state=reactive({});const intersection=new Intersection();const floatingAnchor=document.createElement("div");floatingAnchor.className="position-fixed";return{state,methods:{setState,showContent,pointTo,hide,destroy}};}
return __exports;});;

/* /web_tour/static/src/tour_service/tour_service.js */
odoo.define('@web_tour/tour_service/tour_service',['@odoo/owl','@web/core/browser/browser','@web/core/l10n/translation','@web/core/macro','@web/core/registry','@web/core/transition','@web/session','@web_tour/tour_pointer/tour_pointer','@web_tour/tour_service/tour_compilers','@web_tour/tour_service/tour_pointer_state','@web_tour/tour_service/tour_state','@web_tour/tour_service/tour_utils'],function(require){'use strict';let __exports={};const{EventBus,markup,whenReady,reactive}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{MacroEngine}=require("@web/core/macro");const{registry}=require("@web/core/registry");const{config:transitionConfig}=require("@web/core/transition");const{session}=require("@web/session");const{TourPointer}=require("@web_tour/tour_pointer/tour_pointer");const{compileStepAuto,compileStepManual,compileTourToMacro}=require("@web_tour/tour_service/tour_compilers");const{createPointerState}=require("@web_tour/tour_service/tour_pointer_state");const{tourState}=require("@web_tour/tour_service/tour_state");const{callWithUnloadCheck}=require("@web_tour/tour_service/tour_utils");const tourService=__exports.tourService={dependencies:["orm","effect","ui","overlay","localization"],start:async(_env,{orm,effect,ui,overlay})=>{await whenReady();const toursEnabled="tour_disable"in session&&!session.tour_disable;const consumedTours=new Set(session.web_tours);const tours={};const tourRegistry=registry.category("web_tour.tours");function register(name,tour){name=tour.saveAs||name;const wait_for=tour.wait_for||Promise.resolve();let steps;tours[name]={wait_for,name,get steps(){if(typeof tour.steps!=="function"){throw new Error(`tour.steps has to be a function that returns TourStep[]`);}
if(!steps){steps=tour.steps().map((step)=>{step.shadow_dom=step.shadow_dom??tour.shadow_dom;return step;});}
return steps;},shadow_dom:tour.shadow_dom,url:tour.url,rainbowMan:tour.rainbowMan===undefined?true:!!tour.rainbowMan,rainbowManMessage:tour.rainbowManMessage,fadeout:tour.fadeout||"medium",sequence:tour.sequence||1000,test:tour.test,checkDelay:tour.checkDelay,};wait_for.then(()=>{if(!tour.test&&toursEnabled&&!consumedTours.has(name)&&!tourState.getActiveTourNames().includes(name)){startTour(name,{mode:"manual",redirect:false});}});}
for(const[name,tour]of tourRegistry.getEntries()){register(name,tour);}
tourRegistry.addEventListener("UPDATE",({detail:{key,value}})=>{if(tourRegistry.contains(key)){register(key,value);if(tourState.getActiveTourNames().includes(key)&&(toursEnabled||tourState.get(key,"mode")==="auto")){resumeTour(key);}}else{delete tours[value];}});const bus=new EventBus();const macroEngine=new MacroEngine({target:document});const pointers=reactive({});const runningTours=new Set();const possiblePointTos=[];function createPointer(tourName,config){const{state:pointerState,methods}=createPointerState();let remove;return{start(){pointers[tourName]={methods,id:tourName,component:TourPointer,props:{pointerState,...config},};remove=overlay.add(pointers[tourName].component,pointers[tourName].props);},stop(){remove?.();delete pointers[tourName];methods.destroy();},...methods,async pointTo(anchor,step){possiblePointTos.push([tourName,()=>methods.pointTo(anchor,step)]);await Promise.resolve();if(!possiblePointTos.length){return;}
const toursByPriority=Object.fromEntries(getSortedTours().map((t,i)=>[t.name,i]));const sortedPointTos=possiblePointTos.slice(0).sort(([a],[b])=>toursByPriority[a]-toursByPriority[b]);possiblePointTos.splice(0);const active=sortedPointTos[0];const[activeId,enablePointer]=active||[];for(const{id,methods}of Object.values(pointers)){if(id===activeId){enablePointer();}else{methods.hide();}}},};}
function shouldOmit(step,mode){const isDefined=(key,obj)=>key in obj&&obj[key]!==undefined;const getEdition=()=>(session.server_version_info||[]).at(-1)==="e"?"enterprise":"community";const correctEdition=isDefined("edition",step)?step.edition===getEdition():true;const correctDevice=isDefined("mobile",step)?step.mobile===ui.isSmall:true;return(!correctEdition||!correctDevice||(mode==="manual"&&step.auto));}
function convertToMacro(tour,pointer,{mode,stepDelay,keepWatchBrowser,showPointerDuration}){const stepCompiler=mode==="auto"?compileStepAuto:compileStepManual;const checkDelay=mode==="auto"?tour.checkDelay:100;const filteredSteps=tour.steps.filter((step)=>!shouldOmit(step,mode));return compileTourToMacro(tour,{filteredSteps,stepCompiler,pointer,stepDelay,keepWatchBrowser,showPointerDuration,checkDelay,onStepConsummed(tour,step){bus.trigger("STEP-CONSUMMED",{tour,step});},onTourEnd({name,rainbowManMessage,fadeout}){if(mode==="auto"){transitionConfig.disabled=false;}
let message;if(typeof rainbowManMessage==="function"){message=rainbowManMessage({isTourConsumed:(name)=>consumedTours.has(name),});}else if(typeof rainbowManMessage==="string"){message=rainbowManMessage;}else{message=markup(_t("<strong><b>Good job!</b> You went through all steps of this tour.</strong>"));}
effect.add({type:"rainbow_man",message,fadeout});if(mode==="manual"){consumedTours.add(name);orm.call("web_tour.tour","consume",[[name]]);}
pointer.stop();browser.console.log("test successful");runningTours.delete(name);},});}
function observeShadows(shadowHostSelectors){const observer=new MutationObserver(()=>{const shadowRoots=[];for(const selector of shadowHostSelectors){const shadowHost=document.querySelector(selector);if(shadowHost){shadowRoots.push(shadowHost.shadowRoot);shadowHostSelectors.delete(selector);}}
for(const shadowRoot of shadowRoots){macroEngine.observer.observe(shadowRoot,macroEngine.observerOptions);}
if(shadowHostSelectors.size===0){observer.disconnect();}});observer.observe(macroEngine.target,{childList:true,subtree:true});}
function setupShadowObservers(tour){const shadowDOMs=new Set(tour.steps.filter((step)=>step.shadow_dom).map((step)=>step.shadow_dom));if(shadowDOMs.size>0){observeShadows(shadowDOMs);}}
function activateMacro(macro,mode){if(mode==="auto"){transitionConfig.disabled=true;}
macroEngine.activate(macro,mode==="auto");}
function startTour(tourName,options={}){if(runningTours.has(tourName)&&options.mode==="manual"){return;}
runningTours.add(tourName);const defaultOptions={stepDelay:0,keepWatchBrowser:false,mode:"auto",startUrl:"",showPointerDuration:0,redirect:true,};options=Object.assign(defaultOptions,options);const tour=tours[tourName];if(!tour){throw new Error(`Tour '${tourName}' is not found.`);}
tourState.set(tourName,"currentIndex",0);tourState.set(tourName,"stepDelay",options.stepDelay);tourState.set(tourName,"keepWatchBrowser",options.keepWatchBrowser);tourState.set(tourName,"showPointerDuration",options.showPointerDuration);tourState.set(tourName,"mode",options.mode);tourState.set(tourName,"sequence",tour.sequence);const pointer=createPointer(tourName,{bounce:!(options.mode==="auto"&&options.keepWatchBrowser),});const macro=convertToMacro(tour,pointer,options);const willUnload=callWithUnloadCheck(()=>{if(tour.url&&tour.url!==options.startUrl&&options.redirect){window.location.href=window.location.origin+tour.url;}});if(!willUnload){setupShadowObservers(tour);pointer.start();activateMacro(macro,options.mode);}}
function resumeTour(tourName){if(runningTours.has(tourName)){return;}
runningTours.add(tourName);const tour=tours[tourName];const stepDelay=tourState.get(tourName,"stepDelay");const keepWatchBrowser=tourState.get(tourName,"keepWatchBrowser");const showPointerDuration=tourState.get(tourName,"showPointerDuration");const mode=tourState.get(tourName,"mode");const pointer=createPointer(tourName,{bounce:!(mode==="auto"&&keepWatchBrowser),});const macro=convertToMacro(tour,pointer,{mode,stepDelay,keepWatchBrowser,showPointerDuration,});setupShadowObservers(tour);pointer.start();activateMacro(macro,mode);}
function getSortedTours(){return Object.values(tours).sort((t1,t2)=>{return t1.sequence-t2.sequence||(t1.name<t2.name?-1:1);});}
if(!window.frameElement){for(const tourName of tourState.getActiveTourNames()){if(tourName in tours){resumeTour(tourName);}}}
odoo.startTour=startTour;odoo.isTourReady=(tourName)=>tours[tourName].wait_for.then(()=>true);return{bus,startTour,getSortedTours,};},};registry.category("services").add("tour_service",tourService);return __exports;});;

/* /web_tour/static/src/tour_service/tour_state.js */
odoo.define('@web_tour/tour_service/tour_state',['@web/core/browser/browser'],function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const BOOLEAN={toLocalStorage:(val)=>(val?"1":"0"),fromLocalStorage:(val)=>(val==="1"?true:false),};const INTEGER={toLocalStorage:(val)=>val.toString(),fromLocalStorage:(val)=>parseInt(val,10),};const STRING={toLocalStorage:(x)=>x,fromLocalStorage:(x)=>x,};const ALLOWED_KEYS={keepWatchBrowser:BOOLEAN,showPointerDuration:INTEGER,currentIndex:INTEGER,stepDelay:INTEGER,mode:STRING,sequence:INTEGER,};function getPrefixedName(tourName,key){return`tour__${tourName}__${key}`;}
function destructurePrefixedName(prefixedName){const match=prefixedName.match(/tour__([.\w]+)__([\w]+)/);return match?[match[1],match[2]]:null;}
const tourState=__exports.tourState={get(tourName,key){if(!(key in ALLOWED_KEYS)){throw new Error(`Invalid key: '${key}' (tourName = '${tourName}')`);}
const prefixedName=getPrefixedName(tourName,key);const savedValue=browser.localStorage.getItem(prefixedName);return ALLOWED_KEYS[key].fromLocalStorage(savedValue);},set(tourName,key,value){if(!(key in ALLOWED_KEYS)){throw new Error(`Invalid key: '${key}' (tourName = '${tourName}')`);}
const prefixedName=getPrefixedName(tourName,key);browser.localStorage.setItem(prefixedName,ALLOWED_KEYS[key].toLocalStorage(value));},clear(tourName){for(const key in ALLOWED_KEYS){const prefixedName=getPrefixedName(tourName,key);browser.localStorage.removeItem(prefixedName);}},getActiveTourNames(){const tourNames=new Set();for(const key of Object.keys(browser.localStorage)){const[tourName]=destructurePrefixedName(key)||[false];if(tourName){tourNames.add(tourName);}}
return[...tourNames].sort((a,b)=>this.get(a,"sequence")-this.get(b,"sequence"));},};return __exports;});;

/* /web_tour/static/src/tour_service/tour_utils.js */
odoo.define('@web_tour/tour_service/tour_utils',['@odoo/owl','@web/core/l10n/translation','@web/core/ui/ui_service','@web/core/utils/ui'],function(require){'use strict';let __exports={};const{markup}=require("@odoo/owl");const{_t}=require("@web/core/l10n/translation");const{utils}=require("@web/core/ui/ui_service");const{_legacyIsVisible}=require("@web/core/utils/ui");const TourError=__exports.TourError=class TourError extends Error{constructor(message,...args){super(message,...args);this.message=`(TourError) ${message}`;}}
__exports.callWithUnloadCheck=callWithUnloadCheck;function callWithUnloadCheck(func,...args){let willUnload=false;const beforeunload=()=>(willUnload=true);window.addEventListener("beforeunload",beforeunload);const result=func(...args);if(result instanceof Promise){return result.then(()=>{window.removeEventListener("beforeunload",beforeunload);return willUnload;});}else{window.removeEventListener("beforeunload",beforeunload);return willUnload;}}
__exports.getFirstVisibleElement=getFirstVisibleElement;function getFirstVisibleElement($elements){for(var i=0;i<$elements.length;i++){var $i=$elements.eq(i);if(_legacyIsVisible($i[0])){return $i;}}
return $();}
__exports.getJQueryElementFromSelector=getJQueryElementFromSelector;function getJQueryElementFromSelector(selector,$target){$target=$target||$(document);const iframeSplit=typeof selector==="string"&&selector.match(/(.*\biframe[^ ]*)(.*)/);if(iframeSplit&&iframeSplit[2]){var $iframe=$target.find(`${iframeSplit[1]}:not(.o_ignore_in_tour)`);if($iframe.is('[is-ready="false"]')){return $();}
var $el=$iframe.contents().find(iframeSplit[2]);$el.iframeContainer=$iframe[0];return $el;}else if(typeof selector==="string"){return $target.find(selector);}else{return $(selector);}}
__exports.getConsumeEventType=getConsumeEventType;function getConsumeEventType(element,runCommand){if(!element){return"click";}
const{classList,tagName,type}=element;const tag=tagName.toLowerCase();if(classList.contains("o_field_many2one")){return"autocompleteselect";}
if(tag==="textarea"||(tag==="input"&&(!type||["email","number","password","search","tel","text","url"].includes(type)))){if(utils.isSmall()&&element.closest(".o_field_widget")?.matches(".o_field_many2one, .o_field_many2many")){return"click";}
return"input";}
if(classList.contains("ui-draggable-handle")){return"mousedown";}
if(typeof runCommand==="string"&&/^drag_and_drop/.test(runCommand)){if(element.closest(".ui-sortable")){return"sort";}
if((/^drag_and_drop_native/.test(runCommand)&&classList.contains("o_draggable"))||element.closest(".o_draggable")){return"pointerdown";}}
return"click";}
__exports.getDifferentParents=getDifferentParents;function getDifferentParents(n1,n2){const parents=[n2];while(parents[0].parentNode){const parent=parents[0].parentNode;if(parent.contains(n1)){break;}
parents.unshift(parent);}
return parents;}
__exports.getScrollParent=getScrollParent;function getScrollParent(element){if(!element){return null;}
if(element.scrollHeight>element.clientHeight){return element;}else{return getScrollParent(element.parentNode);}}
const triggerPointerEvent=__exports.triggerPointerEvent=(el,type,canBubbleAndBeCanceled,additionalParams)=>{const eventInit={bubbles:canBubbleAndBeCanceled,cancelable:canBubbleAndBeCanceled,view:window,...additionalParams,};el.dispatchEvent(new PointerEvent(type,eventInit));if(type.startsWith("pointer")){el.dispatchEvent(new MouseEvent(type.replace("pointer","mouse"),eventInit));}};const RunningTourActionHelper=__exports.RunningTourActionHelper=class RunningTourActionHelper{constructor(tip_widget){this.tip_widget=tip_widget;}
click(element){this._click(this._get_action_values(element));}
dblclick(element){this._click(this._get_action_values(element),2);}
tripleclick(element){this._click(this._get_action_values(element),3);}
clicknoleave(element){this._click(this._get_action_values(element),1,false);}
text(text,element){this._text(this._get_action_values(element),text);}
remove_text(text,element){this._text(this._get_action_values(element),"\n");}
text_blur(text,element){this._text_blur(this._get_action_values(element),text);}
range(text,element){this._range(this._get_action_values(element),text);}
drag_and_drop(to,element){this._drag_and_drop_jquery(this._get_action_values(element),to);}
drag_and_drop_native(toSel,element){const to=getJQueryElementFromSelector(toSel)[0];this._drag_and_drop(this._get_action_values(element).$element[0],to);}
keydown(keyCodes,element){this._keydown(this._get_action_values(element),keyCodes.split(/[,\s]+/));}
auto(element){var values=this._get_action_values(element);if(values.consume_event==="input"){this._text(values);}else{this._click(values);}}
_get_action_values(element){var $e=getJQueryElementFromSelector(element);var $element=element?getFirstVisibleElement($e):this.tip_widget.$anchor;if($element.length===0){$element=$e.first();}
var consume_event=element?getConsumeEventType($element[0]):this.tip_widget.consume_event;return{$element:$element,consume_event:consume_event,};}
_click(values,nb,leave){const target=values.$element[0];triggerPointerEvent(target,"pointerover",true);triggerPointerEvent(target,"pointerenter",false);triggerPointerEvent(target,"pointermove",true);for(let i=1;i<=(nb||1);i++){triggerPointerEvent(target,"pointerdown",true);triggerPointerEvent(target,"pointerup",true);triggerPointerEvent(target,"click",true,{detail:i});if(i%2===0){triggerPointerEvent(target,"dblclick",true);}}
if(leave!==false){triggerPointerEvent(target,"pointerout",true);triggerPointerEvent(target,"pointerleave",false);}}
_text(values,text){this._click(values);text=text||"Test";if(values.consume_event==="input"){values.$element.trigger({type:"keydown",key:text[text.length-1]}).val(text).trigger({type:"keyup",key:text[text.length-1]});values.$element[0].dispatchEvent(new InputEvent("input",{bubbles:true,}));}else if(values.$element.is("select")){var $options=values.$element.find("option");$options.prop("selected",false).removeProp("selected");var $selectedOption=$options.filter(function(){return $(this).val()===text;});if($selectedOption.length===0){$selectedOption=$options.filter(function(){return $(this).text().trim()===text;});}
const regex=/option\s+([0-9]+)/;if($selectedOption.length===0&&regex.test(text)){const position=parseInt(regex.exec(text)[1]);$selectedOption=$options.eq(position-1);}
$selectedOption.prop("selected",true);this._click(values);values.$element.trigger("input");}else{values.$element.focusIn();values.$element.trigger($.Event("keydown",{key:"_"}));values.$element.text(text).trigger("input");values.$element.focusInEnd();values.$element.trigger($.Event("keyup",{key:"_"}));}
values.$element[0].dispatchEvent(new Event("change",{bubbles:true,cancelable:false}));}
_text_blur(values,text){this._text(values,text);values.$element.trigger("focusout");values.$element.trigger("blur");}
_range(values,text){values.$element[0].value=text;values.$element[0].dispatchEvent(new Event('change',{bubbles:true,cancelable:false}));}
_calculateCenter($el,selector){const center=$el.offset();if(selector&&selector.indexOf("iframe")!==-1){const iFrameOffset=$("iframe").offset();center.left+=iFrameOffset.left;center.top+=iFrameOffset.top;}
center.left+=$el.outerWidth()/2;center.top+=$el.outerHeight()/2;return center;}
_drag_and_drop_jquery(values,to){var $to;const elementCenter=this._calculateCenter(values.$element);if(to){$to=getJQueryElementFromSelector(to);}else{$to=$(document.body);}
values.$element.trigger($.Event("mouseenter"));values.$element.trigger($.Event("mousedown",{which:1,pageX:elementCenter.left+1,pageY:elementCenter.top,}));if(!$to.length){values.$element.trigger($.Event("mousemove",{which:1,pageX:elementCenter.left+1,pageY:elementCenter.top,}));$to=getJQueryElementFromSelector(to);}
let toCenter=this._calculateCenter($to,to);values.$element.trigger($.Event("mousemove",{which:1,pageX:toCenter.left,pageY:toCenter.top}));toCenter=this._calculateCenter($to,to);values.$element.trigger($.Event("mouseup",{which:1,pageX:toCenter.left,pageY:toCenter.top}));}
_drag_and_drop(source,target){const sourceRect=source.getBoundingClientRect();const sourcePosition={clientX:sourceRect.x+sourceRect.width/2,clientY:sourceRect.y+sourceRect.height/2,};const targetRect=target.getBoundingClientRect();const targetPosition={clientX:targetRect.x+targetRect.width/2,clientY:targetRect.y+targetRect.height/2,};triggerPointerEvent(source,"pointerdown",true,sourcePosition);triggerPointerEvent(source,"pointermove",true,targetPosition);for(const parent of getDifferentParents(source,target)){triggerPointerEvent(parent,"pointerenter",false,targetPosition);}
triggerPointerEvent(target,"pointerup",true,targetPosition);}
_keydown(values,keyCodes){while(keyCodes.length){const eventOptions={};const keyCode=keyCodes.shift();let insertedText=null;if(isNaN(keyCode)){eventOptions.key=keyCode;}else{const code=parseInt(keyCode,10);if(code===32||(code>47&&code<58)||(code>64&&code<91)||(code>95&&code<112)||(code>185&&code<193)||(code>218&&code<223)){insertedText=String.fromCharCode(code);}}
values.$element.trigger(Object.assign({type:"keydown"},eventOptions));if(insertedText){values.$element[0].ownerDocument.execCommand("insertText",0,insertedText);}
values.$element.trigger(Object.assign({type:"keyup"},eventOptions));}}}
const stepUtils=__exports.stepUtils={_getHelpMessage(functionName,...args){return`Generated by function tour utils ${functionName}(${args.join(", ")})`;},addDebugHelp(helpMessage,step){if(typeof step.debugHelp==="string"){step.debugHelp=step.debugHelp+"\n"+helpMessage;}else{step.debugHelp=helpMessage;}
return step;},editionEnterpriseModifier(step){step.edition="enterprise";return step;},mobileModifier(step){step.mobile=true;return step;},showAppsMenuItem(){return{edition:"community",trigger:".o_navbar_apps_menu button",auto:true,position:"bottom",};},toggleHomeMenu(){return{edition:"enterprise",trigger:".o_main_navbar .o_menu_toggle",content:markup(_t("Click on the <i>Home icon</i> to navigate across apps.")),position:"bottom",};},autoExpandMoreButtons(extra_trigger){return{trigger:".o-form-buttonbox",extra_trigger:extra_trigger,auto:true,run:(actions)=>{const $more=$(".o-form-buttonbox .o_button_more");if($more.length){actions.click($more);}},};},goBackBreadcrumbsMobile(description,...extraTrigger){return extraTrigger.map((element)=>({mobile:true,trigger:".o_back_button",extra_trigger:element,content:description,position:"bottom",debugHelp:this._getHelpMessage("goBackBreadcrumbsMobile",description,...extraTrigger),}));},goToAppSteps(dataMenuXmlid,description){return[this.showAppsMenuItem(),{trigger:`.o_app[data-menu-xmlid="${dataMenuXmlid}"]`,content:description,position:"right",edition:"community",},{trigger:`.o_app[data-menu-xmlid="${dataMenuXmlid}"]`,content:description,position:"bottom",edition:"enterprise",},].map((step)=>this.addDebugHelp(this._getHelpMessage("goToApp",dataMenuXmlid,description),step));},openBurgerMenu(extraTrigger){return{mobile:true,trigger:".o_mobile_menu_toggle",extra_trigger:extraTrigger,content:_t("Open bugger menu."),position:"bottom",debugHelp:this._getHelpMessage("openBurgerMenu",extraTrigger),};},statusbarButtonsSteps(innerTextButton,description,extraTrigger){return[{mobile:true,auto:true,trigger:".o_statusbar_buttons",extra_trigger:extraTrigger,run:(actions)=>{const $action=$(".o_statusbar_buttons .btn.dropdown-toggle:contains(Action)");if($action.length){actions.click($action);}},},{trigger:`.o_statusbar_buttons button:enabled:contains('${innerTextButton}')`,content:description,position:"bottom",},].map((step)=>this.addDebugHelp(this._getHelpMessage("statusbarButtonsSteps",innerTextButton,description,extraTrigger),step));},simulateEnterKeyboardInSearchModal(){return{mobile:true,trigger:".o_searchview_input",extra_trigger:".modal:not(.o_inactive_modal) .dropdown-menu.o_searchview_autocomplete",position:"bottom",run:(action)=>{const keyEventEnter=new KeyboardEvent("keydown",{bubbles:true,cancelable:true,key:"Enter",code:"Enter",});action.tip_widget.$anchor[0].dispatchEvent(keyEventEnter);},debugHelp:this._getHelpMessage("simulateEnterKeyboardInSearchModal"),};},mobileKanbanSearchMany2X(modalTitle,valueSearched){return[{mobile:true,trigger:`.o_control_panel_navigation .btn .fa-search`,position:"bottom",},{mobile:true,trigger:".o_searchview_input",extra_trigger:`.modal:not(.o_inactive_modal) .modal-title:contains('${modalTitle}')`,position:"bottom",run:`text ${valueSearched}`,},this.simulateEnterKeyboardInSearchModal(),{mobile:true,trigger:`.o_kanban_record .o_kanban_record_title :contains('${valueSearched}')`,position:"bottom",},].map((step)=>this.addDebugHelp(this._getHelpMessage("mobileKanbanSearchMany2X",modalTitle,valueSearched),step));},saveForm(options={}){return[{content:options.content||"save form",trigger:".o_form_button_save",extra_trigger:options.extra_trigger,run:"click",auto:true,},{content:"wait for save completion",trigger:".o_form_readonly, .o_form_saved",run(){},auto:true,},];},discardForm(options={}){return[{content:options.content||"exit the form",trigger:".o_form_button_cancel",extra_trigger:options.extra_trigger,run:"click",auto:true,},{content:"wait for cancellation to complete",trigger:".o_view_controller.o_list_view, .o_form_view > div > div > .o_form_readonly, .o_form_view > div > div > .o_form_saved",run(){},auto:true,},];},};return __exports;});;

/* /web/static/src/main.js */
odoo.define('@web/main',['@web/start','@web/webclient/webclient'],function(require){'use strict';let __exports={};const{startWebClient}=require("@web/start");const{WebClient}=require("@web/webclient/webclient");startWebClient(WebClient);return __exports;});;

/* /web/static/src/start.js */
odoo.define('@web/start',['@web/env','@web/core/l10n/localization','@web/session','@web/core/browser/feature_detection','@odoo/owl'],function(require){'use strict';let __exports={};const{mountComponent}=require("@web/env");const{localization}=require("@web/core/l10n/localization");const{session}=require("@web/session");const{hasTouch}=require("@web/core/browser/feature_detection");const{Component,whenReady}=require("@odoo/owl");__exports.startWebClient=startWebClient;async function startWebClient(Webclient){odoo.info={db:session.db,server_version:session.server_version,server_version_info:session.server_version_info,isEnterprise:session.server_version_info.slice(-1)[0]==="e",};odoo.isReady=false;await whenReady();const app=await mountComponent(Webclient,document.body,{name:"Odoo Web Client"});const{env}=app;Component.env=env;const classList=document.body.classList;if(localization.direction==="rtl"){classList.add("o_rtl");}
if(env.services.user.userId===1){classList.add("o_is_superuser");}
if(env.debug){classList.add("o_debug");}
if(hasTouch()){classList.add("o_touch_device");}
odoo.isReady=true;}
return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define('web.assets_web.bundle.xml', ['@web/core/registry'], function(require){
                        'use strict';
                        const { registry } = require('@web/core/registry');
                        registry.category(`xml_templates`).add(`web.assets_web`, `<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
<t t-name="web.ActionSwiper">
        <t t-if="props.onRightSwipe || props.onLeftSwipe">
            <div class="o_actionswiper" t-on-touchend="_onTouchEndSwipe" t-on-touchmove="_onTouchMoveSwipe" t-on-touchstart="_onTouchStartSwipe" t-ref="root">
                <div class="o_actionswiper_overflow_container position-relative overflow-hidden">
                    <div class="o_actionswiper_target_container" t-ref="targetContainer" t-att-style="state.containerStyle" t-att-class="{ o_actionswiper_swiping: state.isSwiping }">
                        <t t-slot="default"/>
                        <t t-if="localizedProps.onRightSwipe and (localizedProps.onRightSwipe.icon or localizedProps.onRightSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + swipedDistance + 'px;'" class="o_actionswiper_right_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-end" t-att-class="localizedProps.onRightSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onRightSwipe.icon"/></span>
                            </div>
                        </t>
                        <t t-if="localizedProps.onLeftSwipe and (localizedProps.onLeftSwipe.icon or localizedProps.onLeftSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + -swipedDistance + 'px;'" class="o_actionswiper_left_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-start" t-att-class="localizedProps.onLeftSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onLeftSwipe.icon"/></span>
                            </div>
                        </t>
                    </div>
                </div>
            </div>
        </t>
        <t t-else="">
            <t t-slot="default"/>
        </t>
    </t>
<t t-name="web.AutoComplete">
        <div class="o-autocomplete" t-ref="root" t-att-class="autoCompleteRootClass">
            <input type="text" t-att-id="props.id" class="o-autocomplete--input o_input" autocomplete="off" t-att-placeholder="props.placeholder" role="combobox" t-att-aria-activedescendant="activeSourceOptionId" t-att-aria-expanded="displayOptions ? 'true' : 'false'" aria-autocomplete="list" aria-haspopup="listbox" t-model="state.value" t-on-blur="onInputBlur" t-on-click.stop="onInputClick" t-on-change="onInputChange" t-on-input="onInput" t-on-keydown="onInputKeydown" t-on-focus="onInputFocus" t-ref="input"/>
            <t t-if="displayOptions">
                <ul role="menu" class="o-autocomplete--dropdown-menu ui-widget show" t-att-class="ulDropdownClass" t-ref="sourcesList">
                    <t t-foreach="sources" t-as="source" t-key="source.id">
                        <t t-if="source.isLoading">
                            <li class="ui-menu-item" t-att-class="{                                     'o-autocomplete--dropdown-item': props.dropdown,                                     'd-block': !props.dropdown                                 }">
                                <a t-attf-id="{{props.id or 'autocomplete'}}_{{source_index}}_loading" role="option" href="#" class="dropdown-item ui-menu-item-wrapper" aria-selected="true">
                                    <i class="fa fa-spin fa-circle-o-notch"/> <t t-esc="source.placeholder"/>
                                </a>
                            </li>
                        </t>
                        <t t-else="">
                            <t t-foreach="source.options" t-as="option" t-key="option.id">
                                <li class="o-autocomplete--dropdown-item ui-menu-item d-block" t-att-class="option.classList" t-on-mouseenter="() =&gt; this.onOptionMouseEnter([source_index, option_index])" t-on-mouseleave="() =&gt; this.onOptionMouseLeave([source_index, option_index])" t-on-click="() =&gt; this.onOptionClick([source_index, option_index])" t-on-pointerdown="() =&gt; this.ignoreBlur = true">
                                    <a t-attf-id="{{props.id or 'autocomplete'}}_{{source_index}}_{{option_index}}" role="option" href="#" class="dropdown-item ui-menu-item-wrapper text-truncate" t-att-class="{ 'ui-state-active': isActiveSourceOption([source_index, option_index]) }" t-att-aria-selected="isActiveSourceOption([source_index, option_index]) ? 'true' : 'false'">
                                        <t t-if="source.optionTemplate">
                                            <t t-call="{{ source.optionTemplate }}"/>
                                        </t>
                                        <t t-else="">
                                            <t t-esc="option.label"/>
                                        </t>
                                    </a>
                                </li>
                            </t>
                        </t>
                    </t>
                </ul>
            </t>
        </div>
    </t>

<t t-name="web.CheckBox">
    <div class="o-checkbox form-check" t-attf-class="{{ props.slots ? 'form-check' : '' }}" t-att-class="props.className" t-on-click="onClick" t-ref="root">
        <input t-att-id="props.id or id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-att-name="props.name" t-on-change="onChange"/>
        <label t-att-for="props.id or id" class="form-check-label">
            <t t-slot="default"/>
        </label>
    </div>
</t>

<t t-name="web.CodeEditor">
        <div t-ref="editorRef" class="w-100" t-att-class="props.class"/>
    </t>

<t t-name="web.ColorList">
        <div class="o_colorlist d-flex flex-wrap align-items-center mw-100 gap-2" aria-atomic="true" t-ref="colorlist">
            <t t-if="!props.forceExpanded and !state.isExpanded">
                <button t-on-click="onToggle" role="menuitem" t-att-title="colors[props.selectedColor]" t-att-data-color="props.selectedColor" t-att-aria-label="colors[props.selectedColor]" t-attf-class="btn p-0 rounded-0 o_colorlist_toggler o_colorlist_item_color_{{ props.selectedColor }}"/>
            </t>
            <t t-else="" t-foreach="props.colors" t-as="colorId" t-key="colorId">
                <button t-on-click.prevent.stop="() =&gt; this.onColorSelected(colorId)" role="menuitem" t-att-title="colors[colorId]" t-att-data-color="colorId" t-att-aria-label="colors[colorId]" t-attf-class="btn p-0 rounded-0 o_colorlist_item_color_{{ colorId }} {{ colorId === props.selectedColor ? 'o_colorlist_selected' : '' }}"/>
            </t>
        </div>
    </t>

<t t-name="web.Colorpicker">
    <div class="o_colorpicker_widget" t-ref="el">
        <div class="d-flex justify-content-between align-items-stretch mb-2">
            <div class="o_color_pick_area position-relative w-75" t-att-style="props.noTransparency ? 'width: 89%;' : None">
                <div class="o_picker_pointer rounded-circle p-1 position-absolute" tabindex="-1"/>
            </div>
            <div class="o_color_slider position-relative">
                <div class="o_slider_pointer" tabindex="-1"/>
            </div>
            <div class="o_opacity_slider position-relative" t-if="!props.noTransparency">
                <div class="o_opacity_pointer" tabindex="-1"/>
            </div>
        </div>
        <div t-if="props.colorPreview" class="o_color_preview mb-1 w-100 p-2"/>
        <div class="o_color_picker_inputs d-flex justify-content-between mb-2">
            <t t-set="input_classes" t-value="'p-0 border-0 text-center font-monospace bg-transparent'"/>

            <div class="o_hex_div px-1 d-flex align-items-baseline">
                <input type="text" t-attf-class="o_hex_input {{input_classes}}" data-color-method="hex" size="1" t-on-input="_onHexColorInput"/>
                <label class="flex-grow-0 ms-1 mb-0">hex</label>
            </div>
            <div class="o_rgba_div px-1 d-flex align-items-baseline">
                <input type="text" t-attf-class="o_red_input {{input_classes}}" data-color-method="rgb" size="1"/>
                <input type="text" t-attf-class="o_green_input {{input_classes}}" data-color-method="rgb" size="1"/>
                <input type="text" t-attf-class="o_blue_input me-0 {{input_classes}}" data-color-method="rgb" size="1"/>
                <t t-if="!props.noTransparency">
                    <input type="text" t-attf-class="o_opacity_input {{input_classes}}" data-color-method="opacity" size="1"/>
                    <label class="flex-grow-0 ms-1 mb-0">
                        RGBA
                    </label>
                </t>
                <label t-else="" class="flex-grow-0 ms-1 mb-0">
                    RGB
                </label>
            </div>
        </div>
    </div>
</t>

<t t-name="web.DefaultFooter" owl="1">
    <span>
      <span class="fw-bolder text-primary">TIP</span> — search for
      <t t-foreach="elements" t-as="element" t-key="element.namespace">
          <t t-if="!(element_first || element_last)">, </t>
          <t t-if="element_last and !element_first"> and </t>
          <span class="o_namespace btn-link text-primary cursor-pointer" t-on-click="() =&gt; this.onClick(element.namespace)">
              <span t-out="element.namespace" class="fw-bolder text-primary"/><t t-out="element.name"/>
          </span>
      </t>
    </span>
  </t>

  <t t-name="web.DefaultCommandItem">
    <div class="o_command_default d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <t t-slot="focusMessage"/>
    </div>
  </t>

  <t t-name="web.HotkeyCommandItem">
    <div class="o_command_hotkey d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <span>
        <t t-foreach="getKeysToPress(props)" t-as="key" t-key="key_index">
          <kbd t-out="key" class="d-inline-block px-3 py-1"/>
          <span t-if="!key_last"> + </span>
        </t>
      </span>
    </div>
  </t>

<t t-name="web.CommandPalette">
    <Dialog header="false" footer="false" size="'md'" contentClass="'o_command_palette mt-5'">
      <div t-ref="root">
        <div class="o_command_palette_search input-group mb-2 px-4 py-3 border-bottom">
          <span t-if="state.namespace !== 'default'" class="o_namespace d-flex align-items-center me-1" t-out="state.namespace"/>
          <input class="form-control border-0 p-0" type="text" data-allow-hotkeys="true" t-att-value="state.searchValue" t-ref="autofocus" t-att-placeholder="state.placeholder" t-on-input="onSearchInput" t-on-keydown="onKeyDown" role="combobox" t-attf-aria-activedescendant="o_command_{{state.commands.length ? state.commands.indexOf(state.selectedCommand) : 'empty'}}" aria-expanded="true" aria-autocomplete="list" aria-haspopup="listbox"/>
          <div class="input-group-text border-0 bg-transparent">
              <i t-att-title="state.placeholder" role="img" t-att-aria-label="state.placeholder" class="oi oi-search"/>
          </div>
        </div>

        <div t-ref="listbox" role="listbox" class="o_command_palette_listbox position-relative overflow-auto">
          <div t-if="!state.commands.length" id="o_command_empty" role="option" aria-selected="true" class="o_command_palette_listbox_empty px-4 py-3 fst-italic" t-out="state.emptyMessage"/>
          <t t-if="!isFuzzySearch" t-foreach="commandsByCategory" t-as="category" t-key="category.keyId">
            <div class="o_command_category px-0">
              <span t-if="category.name" class="text-truncate text-uppercase fw-bold fs-6 px-3" t-out="category.name"/>
              <t t-foreach="category.commands" t-as="command" t-key="command.keyId">
                <t t-set="commandIndex" t-value="state.commands.indexOf(command)"/>
                <div t-attf-id="o_command_{{commandIndex}}" class="o_command" role="option" t-att-aria-selected="state.selectedCommand === command ? 'true' : 'false'" t-att-class="{ focused: state.selectedCommand === command }" t-on-click="(event) =&gt; this.onCommandClicked(event, commandIndex)" t-on-mouseenter="() =&gt; this.onCommandMouseEnter(commandIndex)" t-on-close="() =&gt; this.props.closeMe()">
                  <a t-att-href="command.href">
                    <t t-component="command.Component || DefaultCommandItem" name="command.name" searchValue="state.searchValue" t-props="command.props" executeCommand="() =&gt; this.executeCommand(command)">
                      <t t-set-slot="name">
                        <span class="o_command_name text-ellipsis" t-att-title="command.name">
                          <t t-foreach="command.splitName" t-as="name" t-key="name_index">
                            <b t-if="name_index % 2" t-out="name" class="text-primary"/>
                            <t t-else="" t-out="name"/>
                          </t>
                        </span>
                      </t>
                      <t t-set-slot="focusMessage">
                          <small t-if="!isMobileOS and command.href and state.selectedCommand === command" class="o_command_focus text-muted"><kbd><t t-if="isMacOS">CMD</t><t t-else="">CTRL</t></kbd>+<kbd>⏎</kbd><span class="ms-1">new tab</span></small>
                      </t>
                    </t>
                  </a>
                </div>
              </t>
            </div>

            <hr class="my-2 mx-0" t-if="!category_last"/>
          </t>
        </div>

        <div t-if="state.FooterComponent" class="o_command_palette_footer mt-2 px-4 py-2 border-top rounded-bottom bg-100 text-muted">
          <t t-component="state.FooterComponent" switchNamespace="(namespace) =&gt; this.debounceSearch(namespace.concat(this.state.searchValue))"/>
        </div>
      </div>
    </Dialog>
  </t>

<t t-name="web.ConfirmationDialog">
    <Dialog size="'md'" title="props.title" modalRef="modalRef">
      <p t-out="props.body" class="text-prewrap"/>
      <t t-set-slot="footer">
        <button class="btn" t-att-class="props.confirmClass" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

  <t t-name="web.AlertDialog">
    <Dialog size="'sm'" title="props.title" contentClass="props.contentClass">
      <p t-out="props.body" class="text-prewrap"/>
      <t t-set-slot="footer">
        <button class="btn" t-att-class="props.confirmClass" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

<t t-name="web.DateTimeInput">
        <input type="text" t-ref="start-date" t-att-id="props.id" class="o_datetime_input o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder"/>
    </t>
<t t-name="web.DateTimePicker.Days">
        <div class="d-flex gap-3">
            <t t-foreach="items" t-as="month" t-key="month.id">
                <div class="o_date_picker d-grid flex-grow-1 bg-view rounded overflow-auto" t-on-pointerleave="() =&gt; (state.hoveredDate = null)">
                    <t t-foreach="month.daysOfWeek" t-as="dayOfWeek" t-key="dayOfWeek[0]">
                        <div class="o_day_of_week_cell o_text_sm o_cell_md fw-bolder bg-100 border-bottom border-2 d-flex align-items-center justify-content-center" t-att-title="dayOfWeek[1]">
                            <div class="text-nowrap overflow-hidden" t-esc="props.daysOfWeekFormat === 'narrow' ? dayOfWeek[2] : dayOfWeek[0]"/>
                        </div>
                    </t>
                    <t t-foreach="month.weeks" t-as="week" t-key="week.number">
                        <t t-if="props.showWeekNumbers ?? !props.range">
                            <div class="o_week_number_cell o_center o_cell_md o_text_sm bg-100 fw-bolder" t-att-class="{ 'border-bottom': !week_last }" t-esc="week.number"/>
                        </t>
                        <t t-foreach="week.days" t-as="itemInfo" t-key="itemInfo.id">
                            <t t-set="arInfo" t-value="getActiveRangeInfo(itemInfo)"/>
                            <button class="o_date_item_cell o_datetime_button o_center o_cell_md btn p-1 border-0 fw-normal" tabindex="-1" t-att-class="{                                     'o_selected': arInfo.isSelected,                                     o_select_start: arInfo.isSelectStart,                                     o_select_end: arInfo.isSelectEnd,                                     'o_highlighted': arInfo.isHighlighted,                                     o_highlight_start: arInfo.isHighlightStart,                                     o_highlight_end: arInfo.isHighlightEnd,                                     o_current: arInfo.isCurrent,                                     o_today: itemInfo.includesToday,                                     o_out_of_range: itemInfo.isOutOfRange or !itemInfo.isValid,                                     [itemInfo.extraClass]: true,                                 }" t-att-disabled="!itemInfo.isValid" t-on-pointerenter="() =&gt; (state.hoveredDate = itemInfo.range[0])" t-on-click="() =&gt; this.zoomOrSelect(itemInfo)">
                                <span t-esc="itemInfo.label" class="z-index-1"/>
                            </button>
                        </t>
                    </t>
                </div>
            </t>
        </div>
        <div t-attf-class="position-relative d-flex flex-column flex-md-row gap-4 gap-md-3 {{ props.type === 'datetime' ? 'justify-content-center' : 'justify-content-end' }}">
            <div t-attf-class="d-flex gap-3 w-100 {{ props.type === 'datetime' ? 'justify-content-center' : 'd-none' }}">
                <t t-if="props.type === 'datetime'">
                    <t t-foreach="state.timeValues" t-as="timeValue" t-key="timeValue_index">
                        <div t-if="timeValue" class="o_time_picker d-flex align-items-center justify-content-center w-lg-50 w-100 gap-1">
                            <t t-call="web.DateTimePicker.Select">
                                <t t-set="unitIndex" t-value="0"/>
                                <t t-set="unitList" t-value="availableHours"/>
                            </t>
                            <span>:</span>
                            <t t-call="web.DateTimePicker.Select">
                                <t t-set="unitIndex" t-value="1"/>
                                <t t-set="unitList" t-value="availableMinutes"/>
                            </t>
                            <t t-if="availableSeconds.length">
                                <span>:</span>
                                <t t-call="web.DateTimePicker.Select">
                                    <t t-set="unitIndex" t-value="2"/>
                                    <t t-set="unitList" t-value="availableSeconds"/>
                                </t>
                            </t>
                            <t t-if="meridiems">
                                <t t-call="web.DateTimePicker.Select">
                                    <t t-set="unitIndex" t-value="3"/>
                                    <t t-set="unitList" t-value="meridiems"/>
                                </t>
                            </t>
                        </div>
                    </t>
                </t>
            </div>

            <div t-attf-class="o_datetime_buttons {{ props.type === 'datetime' ? 'position-md-absolute h-100 start-0' : '' }}">
                <t t-slot="bottom_left"/>
            </div>
            <div t-attf-class="o_datetime_buttons {{ props.type === 'datetime' ? 'position-md-absolute h-100 end-0' : '' }}">
                <t t-slot="buttons"/>
            </div>
        </div>
    </t>

    <t t-name="web.DateTimePicker.Grid">
        <div class="o_date_item_picker d-grid">
            <t t-foreach="items" t-as="itemInfo" t-key="itemInfo.id">
                <t t-set="arInfo" t-value="getActiveRangeInfo(itemInfo)"/>
                <button class="o_date_item_cell o_datetime_button btn o_center o_cell_lg btn p-1 border-0" tabindex="-1" t-att-class="{                         'o_selected': arInfo.isSelected,                         o_select_start: arInfo.isSelectStart,                         o_select_end: arInfo.isSelectEnd,                         'o_highlighted': arInfo.isHighlighted,                         o_highlight_start: arInfo.isHighlightStart,                         o_highlight_end: arInfo.isHighlightEnd,                         o_today: itemInfo.includesToday,                         o_out_of_range: itemInfo.isOutOfRange or !itemInfo.isValid,                     }" t-att-disabled="!itemInfo.isValid" t-on-click="() =&gt; this.zoomOrSelect(itemInfo)">
                    <span t-esc="itemInfo.label" class="z-index-1"/>
                </button>
            </t>
        </div>
    </t>

    <t t-name="web.DateTimePicker.Select">

        <select class="o_time_picker_select form-control form-control-sm w-auto" tabindex="-1" t-model="timeValue[unitIndex]" t-on-change="() =&gt; this.selectTime(timeValue_index)">
            <t t-foreach="unitList" t-as="unit" t-key="unit[0]">
                <option class="text-center" t-att-value="unit[0]" t-esc="unit[1]" t-att-selected="timeValue[unitIndex] === unit[0].toString()"/>
            </t>
        </select>
    </t>

    <t t-name="web.DateTimePicker">
        <div class="o_datetime_picker d-flex flex-column gap-2 user-select-none" t-att-class="!isLastPrecisionLevel ? 'p-2 p-lg-3' : ''" t-attf-style="--DateTimePicker__Day-template-columns: {{ props.showWeekNumbers ?? !props.range ? 8 : 7 }}">
            <nav class="o_datetime_picker_header btn-group">
                <button class="o_previous btn btn-light flex-grow-0" tabindex="-1" t-att-class="isLastPrecisionLevel ? 'order-1 btn-sm px-1' : ''" t-on-click="previous">
                    <i class="oi oi-chevron-left" t-att-title="activePrecisionLevel.prevTitle"/>
                </button>
                <button class="o_zoom_out o_datetime_button btn btn-light d-flex align-items-center px-0 text-truncate" t-att-class="isLastPrecisionLevel ? 'pe-none text-start' : 'justify-content-around'" tabindex="-1" t-att-title="!isLastPrecisionLevel and activePrecisionLevel.mainTitle" t-on-click="zoomOut">
                    <t t-foreach="titles" t-as="title" t-key="title">
                        <strong t-attf-class="o_header_part fs-5 {{                                 props.range ? 'flex-basis-50' : 'flex-basis-100',                                 isLastPrecisionLevel ? 'fs-6' : 'fs-5'                             }}" t-esc="title"/>
                    </t>
                </button>
                <button class="o_next btn btn-light flex-grow-0" t-att-class="isLastPrecisionLevel ? 'order-2 btn-sm px-1' : ''" tabindex="-1" t-on-click="next">
                    <i class="oi oi-chevron-right" t-att-title="activePrecisionLevel.nextTitle"/>
                </button>
            </nav>
            <t t-if="state.precision === 'days'">
                <t t-call="web.DateTimePicker.Days"/>
            </t>
            <t t-else="">
                <t t-call="web.DateTimePicker.Grid"/>
            </t>
        </div>
    </t>
<t t-name="web.DateTimePickerPopover">
        <DateTimePicker t-props="props.pickerProps">
            <t t-set-slot="buttons">
                <t t-if="isDateTimeRange">
                    <button class="o_apply btn btn-primary btn-sm h-100 w-100 w-md-auto d-flex align-items-center justify-content-center gap-1" tabindex="-1" t-on-click="props.close">
                        <i class="fa fa-check"/>
                        <span>Apply</span>
                    </button>
                </t>
            </t>
            <t t-set-slot="bottom_left">
                <t t-if="isDateTimeRange">
                    <button class="btn btn-secondary btn-sm h-100 w-100 w-md-auto d-flex align-items-center justify-content-center" tabindex="-1" t-on-click="props.close">
                        <span>Close</span>
                    </button>
                </t>
            </t>
        </DateTimePicker>
    </t>
<t t-name="web.DebugMenu">
        <Dropdown class="'o_debug_manager'" beforeOpen="getElements" position="'bottom-end'" togglerClass="\`o-dropdown--narrow \${env.inDialog?'btn btn-link':''}\`" autoOpen="false">
            <t t-set-slot="toggler">
                <i class="fa fa-bug" role="img" aria-label="Open developer tools"/>
            </t>
            <t t-foreach="elements" t-as="element" t-key="element_index">
                <DropdownItem t-if="element.type == 'item'" onSelected="element.callback" href="element.href">
                    <t t-esc="element.description"/>
                </DropdownItem>
                <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
                <t t-if="element.type == 'component'" t-component="element.Component" t-props="element.props"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.DebugMenu.SetDefaultDialog">
        <Dialog title="title">
            <table style="width: 100%">
                <tr>
                    <td>
                        <label for="formview_default_fields" class="oe_label oe_align_right">
                            Default:
                        </label>
                    </td>
                    <td class="oe_form_required">
                        <select id="formview_default_fields" class="o_input" t-model="state.fieldToSet">
                            <option value=""/>
                            <option t-foreach="defaultFields" t-as="field" t-att-value="field.name" t-key="field.name">
                                <t t-esc="field.string"/> = <t t-esc="field.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr t-if="conditions.length">
                    <td>
                        <label for="formview_default_conditions" class="oe_label oe_align_right">
                            Condition:
                        </label>
                    </td>
                    <td>
                        <select id="formview_default_conditions" class="o_input" t-model="state.condition">
                            <option value=""/>
                            <option t-foreach="conditions" t-as="cond" t-att-value="cond.name + '=' + cond.value" t-key="cond.name">
                                <t t-esc="cond.string"/>=<t t-esc="cond.displayed"/>
                            </option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <input type="radio" id="formview_default_self" value="self" name="scope" t-model="state.scope"/>
                        <label for="formview_default_self" class="oe_label" style="display: inline;">
                            Only you
                        </label>
                        <br/>
                        <input type="radio" id="formview_default_all" value="all" name="scope" t-model="state.scope"/>
                        <label for="formview_default_all" class="oe_label" style="display: inline;">
                            All users
                        </label>
                    </td>
                </tr>
            </table>
            <t t-set-slot="footer">
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
                <button class="btn btn-secondary" t-on-click="saveDefault">Save default</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.DebugMenu.GetMetadataDialog">
        <Dialog title="title">
            <table class="table table-sm table-striped">
                <tr>
                    <th>ID:</th>
                    <td><t t-esc="state.id"/></td>
                </tr>
                <tr>
                    <th>XML ID:</th>
                    <td>
                        <t t-if="state.xmlids.length &gt; 1">
                            <t t-foreach="state.xmlids" t-as="imd" t-key="imd['xmlid']">
                                <div t-att-class="&quot;p-0 &quot; + (imd[&quot;xmlid&quot;] === state.xmlid ? &quot;fw-bolder &quot; : &quot;&quot;) + (imd[&quot;noupdate&quot;] === true ? &quot;fst-italic &quot; : &quot;&quot;)" t-esc="imd['xmlid']"/>
                            </t>
                        </t>
                        <t t-elif="state.xmlid" t-esc="state.xmlid"/>
                        <t t-else="">
                            / <a t-on-click="onClickCreateXmlid"> (create)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>No Update:</th>
                    <td>
                        <t t-esc="state.noupdate"/>
                        <t t-if="state.xmlid">
                            <a t-on-click="toggleNoupdate"> (change)</a>
                        </t>
                    </td>
                </tr>
                <tr>
                    <th>Creation User:</th>
                    <td><t t-esc="state.creator"/></td>
                </tr>
                <tr>
                    <th>Creation Date:</th>
                    <td><t t-esc="state.createDate"/></td>
                </tr>
                <tr>
                    <th>Latest Modification by:</th>
                    <td><t t-esc="state.lastModifiedBy"/></td>
                </tr>
                <tr>
                    <th>Latest Modification Date:</th>
                    <td><t t-esc="state.writeDate"/></td>
                </tr>
            </table>
        </Dialog>
    </t>

    <t t-name="web.DebugMenu.GetViewDialog">
        <Dialog title="title">
            <pre t-esc="props.arch.outerHTML"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Close</button>
            </t>
        </Dialog>
    </t>
<t t-name="web.DebugMenu.ProfilingItem">
        <DropdownItem class="o_debug_profiling_item_wrapper">
            <div class="o_debug_profiling_item d-flex justify-content-between">
                <div class="align-self-center">
                    <div t-if="profiling.state.isEnabled" class="alert alert-info py-2 me-3">Recording...</div>
                    <span class="o_profiling_switch">
                        <span class="form-check form-switch" t-on-click.stop.prevent="() =&gt; this.profiling.toggleProfiling()">
                            <input type="checkbox" class="form-check-input" id="enable_profiling" t-att-checked="profiling.state.isEnabled"/>
                            <label class="form-check-label">Enable profiling</label>
                        </span>
                    </span>
                    <t t-if="profiling.state.isEnabled">
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('sql')">
                            <input type="checkbox" class="form-check-input" id="profile_sql" t-att-checked="profiling.isCollectorEnabled('sql')"/>
                            <label class="form-check-label" for="profile_sql">Record sql</label>
                        </span>
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('traces_async')">
                            <input type="checkbox" class="form-check-input" id="profile_traces_async" t-att-checked="profiling.isCollectorEnabled('traces_async')"/>
                            <label class="form-check-label" for="profile_traces_async">Record traces</label>
                        </span>
                        <div t-if="profiling.isCollectorEnabled('traces_async')" class="input-group input-group-sm mt-2" t-on-click.stop.prevent="">
                            <div class="input-group-text">Interval</div>
                            <select class="profile_param form-select" t-on-change="(ev) =&gt; this.changeParam('traces_async_interval', ev)">
                                <t t-set="interval" t-value="profiling.state.params.traces_async_interval"/>
                                <option value="">Default</option>
                                <option value="0.001" t-att-selected="interval === '0.001'">0.001</option>
                                <option value="0.01" t-att-selected="interval === '0.01'">0.01</option>
                                <option value="0.1" t-att-selected="interval === '0.1'">0.1</option>
                                <option value="1" t-att-selected="interval === '1'">1</option>
                            </select>
                        </div>
                        <span t-if="profiling.isCollectorEnabled('sql') || profiling.isCollectorEnabled('traces_async')" class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="(ev) =&gt; this.toggleParam('execution_context_qweb', ev)">
                            <input type="checkbox" class="form-check-input" id="profile_execution_context_qweb" t-att-checked="!!profiling.state.params.execution_context_qweb"/>
                            <label class="form-check-label" for="profile_execution_context_qweb">Add qweb directive context</label>
                        </span>
                        <span class="o_profiling_switch form-check form-switch mt-2" t-on-click.stop.prevent="() =&gt; this.profiling.toggleCollector('qweb')">
                            <input type="checkbox" class="form-check-input" id="profile_qweb" t-att-checked="profiling.isCollectorEnabled('qweb')"/>
                            <label class="form-check-label" for="profile_qweb">Record qweb</label>
                        </span>
                    </t>
                </div>
                <a href="#" t-on-click.prevent="openProfiles" t-attf-class="btn btn-light align-self-baseline {{profiling.state.isEnabled ? 'py-2' : ''}}">
                    <i class="o_open_profiling oi oi-launch"/>
                </a>
            </div>
        </DropdownItem>
    </t>

<t t-name="web.ProfilingQwebView">
    <div class="oe_form_field o_ace_view_editor oe_ace_open o_profiling_qweb_view">
        <div class="o_select_view_profiling" t-ref="selector">
            <a role="button" class="dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" href="#"><MenuItem view="state.view" t-if="state.view"/></a>
            <div class="dropdown-menu" role="menu">
                <t t-foreach="viewObjects" t-as="view" t-key="view_index">
                    <a role="menuitem" href="#" t-att-data-id="view.id" t-on-click.prevent="_onSelectView">
                        <MenuItem view="view"/>
                    </a>
                </t>
            </div>
        </div>
        <div class="ace-view-editor" t-ref="ace"/>
        <small class="text-muted">
            It is possible that the "t-call" time does not correspond to the overall time of the
            template. Because the global time (in the drop down) does not take into account the
            duration which is not in the rendering (look for the template, read, inheritance,
            compilation...). During rendering, the global time also takes part of the time to make
            the profile as well as some part not logged in the function generated by the qweb.
        </small>
    </div>
</t>
<t t-name="web.ProfilingQwebView.menuitem">
    <div class="o_delay"><t t-if="props.view.delay" t-esc="props.view.delay"/> ms</div>
    <div class="o_query"><t t-if="props.view.delay" t-esc="props.view.query"/> query</div>
    <t t-esc="props.view.display_name"/>
    <div class="o_key text-muted">(<t t-esc="props.view.id"/>, <t t-esc="props.view.key"/>)</div>
</t>
<t t-name="web.ProfilingQwebView.hover">
    <div class="o_info o_detail">
        <div class="o_delay"><t t-esc="delay"/> <span>ms</span></div>
        <div class="o_query"><t t-esc="query"/> <span>query</span></div>
    </div>
</t>
<t t-name="web.ProfilingQwebView.info">
    <div class="o_info">
        <div t-if="displayDetail" class="o_more">
            <span>*</span>
            <table class="o_detail">
                <thead>
                    <tr><th/><th>ms</th><th>query</th></tr>
                </thead>
                <tbody>
                    <tr t-foreach="groups" t-as="directive" t-key="directive_index">
                        <td><t t-esc="directive"/></td>
                        <td><t t-esc="groups[directive].delays.join(' ')"/></td>
                        <td><t t-esc="groups[directive].querys.join(' ')"/></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="o_delay"><t t-esc="delay"/></div>
        <div class="o_query"><t t-esc="query"/></div>
    </div>
</t>

<t t-name="web.ProfilingSystrayItem">
        <div class="d-flex align-items-center">
            <i class="fa fa-circle text-danger o_debug_recording"/>
        </div>
    </t>

<t t-name="web.Dialog">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen, o_inactive_modal: !data.isActive }" t-ref="modalRef">
                <div class="modal-dialog modal-dialog-centered" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass" t-att-style="contentStyle">
                        <header t-if="props.header" class="modal-header">
                            <t t-slot="header" close="data.close" isFullscreen="isFullscreen">
                                <t t-call="web.Dialog.header">
                                    <t t-set="fullscreen" t-value="isFullscreen"/>
                                </t>
                            </t>
                        </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-md-start flex-wrap gap-1 w-100" style="order:2">
                            <t t-slot="footer" close="() =&gt; this.data.close()">
                                <button class="btn btn-primary o-default-button" t-on-click="() =&gt; this.data.close()">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}">
                            <t t-slot="default" close="() =&gt; this.data.close()"/>
                        </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.Dialog.header">
        <t t-if="fullscreen">
            <button class="btn oi oi-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="dismiss"/>
        </t>
        <h4 class="modal-title text-break" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="dismiss"/>
        </t>
    </t>
<t t-name="web.DomainSelector">
        <div class="o_domain_selector w-100" aria-atomic="true" t-att-class="props.className">
            <t t-if="tree">
                <TreeEditor resModel="props.resModel" tree="tree" update.bind="update" readonly="props.readonly" isDebugMode="props.isDebugMode" defaultCondition="defaultCondition" defaultConnector="props.defaultConnector" getOperatorEditorInfo.bind="getOperatorEditorInfo" getDefaultOperator.bind="getDefaultOperator" getPathEditorInfo.bind="getPathEditorInfo">
                    <CheckBox t-if="showArchivedCheckbox" value="includeArchived" disabled="props.readonly" className="'form-switch'" onChange.bind="toggleIncludeArchived">
                        Include archived
                    </CheckBox>
                </TreeEditor>
            </t>
            <t t-else="">
                <div class="o_domain_selector_row d-flex align-items-center">
                    This domain is not supported.
                    <t t-if="!props.readonly">
                        <button class="btn btn-sm btn-primary ms-2" t-on-click="() =&gt; this.resetDomain()">Reset domain</button>
                    </t>
                </div>
            </t>
            <t t-if="props.isDebugMode and (!tree or !props.readonly)">
                <label class="o_domain_selector_debug_container d-block mt-3 border rounded p-3 bg-100 text-muted font-monospace">
                    <span class="small"># Code editor</span>
                    <textarea class="pt-2 border-0 bg-transparent text-body" type="text" t-att-readonly="props.readonly" spellcheck="false" t-att-value="props.domain" t-on-change="(ev) =&gt; this.onDomainChange(ev.target.value)"/>
                </label>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorDialog">
        <Dialog title="dialogTitle">
            <div t-if="props.text" class="mb-3" t-out="props.text"/>
            <DomainSelector t-props="domainSelectorProps"/>
            <t t-set-slot="footer">
                <t t-if="props.readonly">
                    <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Close</button>
                </t>
                <t t-else="">
                    <button class="btn btn-primary" t-att-disabled="disabled" t-on-click="onConfirm" t-ref="confirm"><t t-esc="confirmButtonText"/></button>
                    <button class="btn btn-secondary" t-on-click="onDiscard"><t t-esc="discardButtonText"/></button>
                </t>
            </t>
        </Dialog>
    </t>

<t t-name="web.AccordionItem">
        <div class="o_accordion position-relative">
            <button class="o_menu_item o_accordion_toggle dropdown-item" tabindex="0" t-att-class="{'selected': props.selected, 'open': state.open}" t-attf-class="{{ props.class }}" t-att-aria-expanded="state.open ? 'true' : 'false'" t-esc="props.description" t-on-click="() =&gt; state.open = !state.open"/>
            <t t-if="state.open">
                <div class="o_accordion_values ms-4 border-start">
                    <t t-slot="default"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.Dropdown">
    <div class="o-dropdown dropdown" t-att-class="props.class" t-attf-class="         {{ state.directionCaretClass || ''}}         {{ state.open ? 'show' : ''}}         {{ !showCaret ? 'o-dropdown--no-caret' : '' }}       " t-ref="root">
      <button t-if="props.toggler !== 'parent'" type="button" class="dropdown-toggle" t-attf-class="           {{props.togglerClass || ''}}           {{parentDropdown ? 'dropdown-item' : ''}}         " t-att-disabled="props.disabled" t-on-click.stop="onTogglerClick" t-on-mouseenter="onTogglerMouseEnter" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att-data-tooltip="props.tooltip" t-att-tabindex="props.skipTogglerTabbing ? -1 : 0" t-att-aria-expanded="state.open ? 'true' : 'false'" t-ref="togglerRef">
        <t t-slot="toggler" open="state.open"/>
      </button>
      <div t-if="state.open" t-attf-class="           o-dropdown--menu dropdown-menu           {{ parentDropdown ? 'o-dropdown--menu-submenu' : '' }}           {{ props.menuDisplay }}         " t-att-class="props.menuClass" role="menu" t-ref="menuRef" t-on-pointerenter="() =&gt; props.holdOnHover and position.lock()" t-on-pointerleave="() =&gt; props.holdOnHover and position.unlock()" t-on-scroll="props.onScroll">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

<t t-name="web.DropdownItem">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitem" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0">
      <t t-slot="default"/>
    </t>
  </t>


  <t t-name="web.CheckboxItem">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitemcheckbox" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0" t-att-aria-checked="props.checked ? 'true' : 'false'">
      <t t-slot="default"/>
    </t>
  </t>


  <t t-name="web.RainbowMan">
        <div class="o_reward position-absolute top-0 bottom-0 start-0 end-0 w-100 h-100" t-att-class="{ o_reward_fading: state.isFading }" t-on-animationend="onAnimationEnd">
            <svg class="o_reward_rainbow_man position-absolute top-0 bottom-0 start-0 end-0 m-auto overflow-visible" viewBox="0 0 400 400">
                <defs>
                    <radialGradient id="o_reward_gradient_bg" cx="200" cy="200" r="200" gradientUnits="userSpaceOnUse">
                        <stop offset="0.3" stop-color="#edeff4"/>
                        <stop offset="1" stop-color="#edeff4" stop-opacity="0"/>
                    </radialGradient>
                    <symbol id="o_reward_star">
                        <path d="M33 15.9C26.3558 13.6951 21.1575 8.4597 19 1.8 19 1.2477 18.5523.8 18 .8 17.4477.8 17 1.2477 17 1.8 14.6431 8.6938 9.0262 13.9736 2 15.9 1.3649 15.9.85 16.4149.85 17.05.85 17.6851 1.3649 18.2 2 18.2 8.6215 20.3845 13.8155 25.5785 16 32.2 16 32.7523 16.4477 33.2 17 33.2 17.5523 33.2 18 32.7523 18 32.2 20.3569 25.3062 25.9738 20.0264 33 18.1 33.6351 18.1 34.15 17.5851 34.15 16.95 34.15 16.3149 33.6351 15.8 33 15.8" fill="#FFFFFF"/>
                    </symbol>
                    <symbol id="o_reward_thumb">
                        <path d="M10 52C6 51 3 48 3 44 2 42 3 39 5 38 3 36 2 34 2 32 2 29 3 27 5 26 3 24 2 21 2 19 2 15 7 12 10 12L23 12C23 11 23 11 23 11L23 10C23 8 24 6 25 4 27 2 29 2 31 2 33 2 35 2 36 4 38 5 39 7 39 10L39 38C39 41 37 45 35 47 32 50 28 51 25 52L10 52 10 52Z" fill="#FBFBFC"/>
                        <polygon fill="#ECF1FF" points="25 11 25 51 5 52 5 12"/>
                        <path d="M31 0C28 0 26 1 24 3 22 5 21 7 21 10L10 10C8 10 6 11 4 12 2 14 1 16 1 19 1 21 1 24 2 26 1 27 1 29 1 32 1 34 1 36 2 38 1 40 0 42 1 45 1 50 5 53 10 54L25 54C29 54 33 52 36 49 39 46 41 42 41 38L41 10C41 4 36 0 31 0M31 4C34 4 37 6 37 10L37 38C37 41 35 44 33 46 31 48 28 49 25 50L10 50C7 49 5 47 5 44 4 41 6 38 9 37L9 37C6 37 5 35 5 32 5 28 6 26 9 26L9 26C6 26 5 22 5 19 5 16 8 14 11 14L23 14C24 14 25 12 25 11L25 10C25 7 28 4 31 4" fill="#A1ACBA"/>
                    </symbol>
                </defs>
                <rect width="400" height="400" fill="url(#o_reward_gradient_bg)"/>
                <g transform="translate(47 45) scale(0.9)" class="o_reward_rainbow">
                    <path d="M270,170a100,100,0,0,0-200,0" class="o_reward_rainbow_line" stroke="#FF9E80" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M290,170a120,120,0,0,0-240,0" class="o_reward_rainbow_line" stroke="#FFE57F" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M310,170a140,140,0,0,0-280,0" class="o_reward_rainbow_line" stroke="#80D8FF" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M330,170a160,160,0,0,0-320,0" class="o_reward_rainbow_line" stroke="#C794BA" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                </g>
                <g transform="translate(80 125)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_01"/>
                </g>
                <g transform="translate(140 75)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_02"/>
                </g>
                <g transform="translate(230 90)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_03"/>
                </g>
                <g transform="translate(275 120)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_04"/>
                </g>
                <g class="o_reward_face_group o_reward_box" transform-origin="center top">
                    <g class="o_reward_shadow_container o_reward_box">
                        <ellipse class="o_reward_shadow o_reward_box" cx="200" cy="105%" rx="100" ry="6" fill="#000" opacity="0.25" transform-origin="center"/>
                    </g>
                    <g class="o_reward_face_wrap o_reward_box" transform-origin="center">
                        <image class="o_reward_face" x="132" y="125" width="136" height="136" t-attf-href="{{props.imgUrl}}"/>
                    </g>
                    <g transform="translate(258 174)">
                        <use href="#o_reward_thumb" class="o_reward_box o_reward_thumbup" transform-origin="center"/>
                    </g>
                </g>
            </svg>
            <div class="o_reward_rainbow_man o_reward_msg_container position-absolute top-0 bottom-0 start-0 end-0 m-auto">
                <div class="o_reward_face_group h-100 w-75 mx-auto">
                    <svg viewBox="0 0 42 60" preserveAspectRatio="xMinYMax meet" width="37" height="65%" class="overflow-visible position-relative ms-5">
                        <g class="o_reward_box">
                            <use href="#o_reward_thumb" x="-60%" y="0" transform="rotate(-90) scale(1 -1)" transform-origin="center"/>
                        </g>
                    </svg>
                    <div class="o_reward_msg mx-4">
                        <div class="o_reward_msg_card">
                            <div class="o_reward_msg_content text-muted px-3 py-4 bg-view d-inline-block border border-light border-top-0">
                                <t t-if="!props.Component">
                                    <t t-out="props.message"/>
                                </t>
                                <t t-else="" t-component="props.Component" t-props="props.props"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.EmojiPicker">
    <div class="o-EmojiPicker bg-view d-flex flex-column justify-content-center" t-att-class="{ 'align-items-center': emojis.length === 0 }" t-on-click="onClick" t-on-keydown="onKeydown">
        <t t-if="emojis.length === 0">
            <span class="o-EmojiPicker-empty">😵‍💫</span>
            <span class="fs-5 text-muted">Failed to load emojis...</span>
        </t>
        <t t-else="">
            <div class="o-EmojiPicker-search d-flex align-items-center mx-2 mt-2 rounded">
                <span class="d-flex mx-1 w-100 rounded o-active">
                    <t t-call="web.EmojiPicker.searchInput">
                        <t t-if="props.state" t-set="localState" t-value="props.state"/>
                        <t t-else="" t-set="localState" t-value="state"/>
                    </t>
                    <i class="oi oi-search p-2 fs-5 rounded-start-0 rounded-3 o-active" title="Search..." role="img" aria-label="Search..."/>
                </span>
            </div>
            <t t-set="itemIndex" t-value="0"/>
            <div class="o-EmojiPicker-content overflow-auto d-flex flex-grow-1 w-100 flex-wrap align-items-center user-select-none mt-1" t-att-class="getEmojis().length === 0 ? 'flex-column justify-content-center' : 'align-content-start'" t-ref="emoji-grid" t-on-scroll="highlightActiveCategory">
                <t t-if="searchTerm and getEmojis().length === 0" class="d-flex flex-column">
                    <span class="o-EmojiPicker-empty">😢</span>
                    <span class="fs-5 text-muted">No emoji match your search</span>
                </t>
                <t t-if="recentEmojis.length &gt; 0 and !searchTerm">
                    <t t-call="web.EmojiPicker.section">
                        <t t-set="category" t-value="recentCategory"/>
                    </t>
                    <t t-foreach="recentEmojis" t-as="emoji" t-key="'recent_' + emoji_index">
                        <t t-call="web.EmojiPicker.emoji">
                            <t t-set="emoji" t-value="emoji"/>
                        </t>
                        <t t-set="itemIndex" t-value="itemIndex + 1"/>
                    </t>
                </t>
                <t t-set="current" t-value=""/>
                <t t-foreach="getEmojis()" t-as="emoji" t-key="emoji_index">
                    <t t-if="!searchTerm and current !== emoji.category">
                        <t t-set="current" t-value="emoji.category"/>
                        <t t-set="category" t-value="categories.find(c =&gt; c.name === current)"/>
                        <t t-call="web.EmojiPicker.section">
                            <t t-set="category" t-value="category"/>
                        </t>
                    </t>
                    <t t-elif="searchTerm" t-set="categorySortId" t-value="null"/>
                    <t t-call="web.EmojiPicker.emoji">
                        <t t-set="emoji" t-value="emoji"/>
                    </t>
                    <t t-set="itemIndex" t-value="itemIndex + 1"/>
                </t>
            </div>
            <div class="o-EmojiPicker-navbar d-flex flex-shrink-0 w-100 align-items-center bg-100 overflow-auto border-top">
                <t t-if="recentEmojis.length &gt; 0" t-call="web.EmojiPicker.tab">
                    <t t-set="category" t-value="recentCategory"/>
                </t>
                <t t-foreach="categories" t-as="category" t-key="category.sortId">
                    <t t-call="web.EmojiPicker.tab">
                        <t t-set="category" t-value="category"/>
                    </t>
                </t>
            </div>
        </t>
    </div>
</t>

<t t-name="web.EmojiPicker.tab">
    <span class="o-Emoji text-center p-1 cursor-pointer" t-att-class="{'o-active': category.sortId === state.categoryId}" t-att-title="category.name" t-att-data-id="category.sortId" t-on-click="selectCategory">
        <t t-esc="category.title"/>
    </span>
</t>

<t t-name="web.EmojiPicker.section">
    <span class="w-100 fs-7 p-2 position-sticky top-0 bg-view" t-att-data-category="category.sortId"><span class="o-EmojiPicker-sectionIcon" t-esc="category.title"/><span class="ms-2" t-esc="category.displayName"/></span>
    <span class="o-EmojiPicker-category opacity-100 fs-7 py-2" t-att-data-category="category.sortId"/>
</t>

<t t-name="web.EmojiPicker.emoji">
    <span class="o-Emoji cursor-pointer d-flex justify-content-center rounded" t-att-class="{ 'o-active': state.activeEmojiIndex === itemIndex, 'fs-2': !ui.isSmall, 'fs-1': ui.isSmall }" t-att-title="emoji.name" t-att-data-codepoints="emoji.codepoints" t-att-data-index="itemIndex" t-att-data-category="recentCategory.sortId" t-on-click="selectEmoji">
        <span t-esc="emoji.codepoints"/>
    </span>
</t>

<t t-name="web.EmojiPicker.searchInput">
    <input class="form-control border-0 flex-grow-1 rounded-3 rounded-end-0 o-active" placeholder="Search for an emoji" t-model="localState.searchTerm" t-ref="autofocus" t-att-model="localState.searchTerm" t-on-input="() =&gt; this.state.activeEmojiIndex = 0"/>
</t>

<t t-name="web.WarningDialog">
      <Dialog title="title" size="'md'" contentClass="'o_error_dialog'">
        <div role="alert">
          <p t-esc="message" class="text-prewrap"/>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.RedirectWarningDialog">
      <Dialog title="title" size="'md'" contentClass="'o_error_dialog'">
        <div role="alert">
          <p t-esc="message" class="text-prewrap"/>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-on-click="onClick" t-esc="buttonText"/>
          <button class="btn btn-secondary" t-on-click="props.close">Close</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.Error504Dialog">
      <Dialog title="this.constructor.title" size="'md'" contentClass="'o_error_dialog'">
        <div role="alert">
            <p class="text-prewrap">
            The operation was interrupted. This usually means that the current operation is taking too much time.
            </p>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.SessionExpiredDialog">
      <Dialog title="this.constructor.title" size="'md'" contentClass="'o_error_dialog'">
        <div role="alert">
          <p class="text-prewrap">
            Your Odoo session expired. The current page is about to be refreshed.
          </p>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary o-default-button" t-on-click="onClick">Close</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.ErrorDialog">
      <Dialog title="this.constructor.title" size="'md'" contentClass="'o_error_dialog'">
         <div role="alert">
          <p class="text-prewrap">
            <p><b>An error occurred</b></p>
            <p>Please use the copy button to report the error to your support service.</p>
          </p>

          <button class="btn btn-link" t-on-click="() =&gt; { state.showTraceback = !state.showTraceback }">See details</button>
          <div t-if="state.showTraceback and (props.name or props.message)" class="alert alert-info bg-100 clearfix" role="alert">
            <code t-if="props.name" t-esc="props.name"/>
            <p t-if="props.message" t-esc="props.message"/>
          </div>
          <div t-if="state.showTraceback" class="alert alert-danger o_error_detail" role="alert">
              <pre t-esc="traceback or props.traceback"/>
          </div>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary o-default-button" t-on-click="props.close">Close</button>
          <button class="btn btn-secondary" t-on-click="onClickClipboard">
            <i class="fa fa-clipboard mr8"/><t>Copy error to clipboard</t>
          </button>
        </t>
      </Dialog>
    </t>

<t t-name="web.ExpressionEditor">
        <div class="o_expression_editor w-100" aria-atomic="true">
            <t t-if="tree">
                <TreeEditor resModel="props.resModel" tree="tree" isDebugMode="isDebugMode" update.bind="update" defaultCondition="defaultCondition" getDefaultOperator.bind="getDefaultOperator" getOperatorEditorInfo.bind="getOperatorEditorInfo" getPathEditorInfo.bind="getPathEditorInfo"/>
            </t>
            <t t-else="">
                This expression is not supported.
                <button t-on-click="() =&gt; this.resetExpression()">Reset expression</button>
            </t>
            <t t-if="isDebugMode">
                <div class="o_expression_editor_debug_container d-block mt-3 border rounded p-3 bg-100 text-muted font-monospace">
                    <span class="small"># Code editor</span>
                    <textarea class="pt-2 border-0 bg-transparent text-body" type="text" spellcheck="false" t-att-value="props.expression" t-on-change="(ev) =&gt; this.onExpressionChange(ev.target.value)"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ExpressionEditorDialog">
        <Dialog title="'Edit Condition'">
            <ExpressionEditor t-props="expressionEditorProps"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onConfirm" t-ref="confirm">Confirm</button>
                <button class="btn btn-secondary" t-on-click="onDiscard">Discard</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.FileInput">
        <span class="o_file_input" t-att-class="{ 'd-none': props.hidden, 'show opacity-50 pe-none': state.isDisable}" aria-atomic="true">
            <span t-if="!props.hidden" class="o_file_input_trigger" t-on-click.prevent="onTriggerClicked">
                <t t-slot="default">
                    <button class="btn btn-primary">Choose File</button>
                </t>
            </span>
            <input type="file" name="ufile" class="o_input_file d-none" t-att-multiple="props.multiUpload" t-att-accept="props.acceptedFileExtensions" t-ref="file-input" t-att-disabled="state.isDisable" t-on-change="onFileInputChange"/>
        </span>
    </t>

<t t-name="web.FileUploadProgressBar">
        <div class="position-absolute top-0 start-0 h-100 w-100">
            <div class="o-file-upload-progress-bar-value h-100" t-ref="bar" t-att-style="'width: ' + (this.props.fileUpload.progress * 100) + '%;'"/>
            <span class="position-absolute top-0 end-0 cursor-pointer o-file-upload-progress-bar-abort fa fa-times-circle" title="Cancel Upload" aria-label="Cancel Upload" t-on-click.stop.prevent="onCancel"/>
        </div>
    </t>
<t t-name="web.FileUploadProgressContainer">
        <t t-foreach="Object.values(props.fileUploads)" t-as="fileUpload" t-key="fileUpload.id">
            <t t-if="!props.shouldDisplay || props.shouldDisplay(fileUpload)" t-component="props.Component" fileUpload="fileUpload" selector="props.selector"/>
        </t>
    </t>
<t t-name="web.FileUploadProgressKanbanRecord">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_kanban_record d-flex flex-grow-1 flex-md-shrink-1 flex-shrink-0">
            <div class="o_kanban_progress_card o_kanban_attachment position-relative p-0 cursor-pointer">
                <div class="o_kanban_image">
                    <div class="o_kanban_image_wrapper">
                        <div class="o_image o_image_thumbnail" t-att-data-mimetype="props.fileUpload.type"/>
                    </div>
                </div>
                <div class="o_kanban_details">
                    <div class="o_kanban_details_wrapper">
                        <div t-att-title="props.fileUpload.title" t-att-aria-label="props.fileUpload.title" class="o_kanban_record_title">
                            <span t-esc="props.fileUpload.title"/>
                        </div>
                        <div class="o_kanban_record_body"/>
                        <div class="o_kanban_record_bottom">
                            <div class="oe_kanban_bottom_left">
                                <div class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
                            </div>
                            <div class="oe_kanban_bottom_right">
                                <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
                            </div>
                        </div>
                    </div>
                </div>
                <FileUploadProgressBar fileUpload="props.fileUpload"/>
            </div>
        </div>
    </t>

    <t t-name="web.FileUploadProgressDataRow">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_data_row o_list_progress_card position-relative align-middle p-0">
            <span class="o_file_upload_upload_title" t-esc="props.fileUpload.title"/>
            <span class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
            <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
            <FileUploadProgressBar fileUpload="props.fileUpload"/>
        </div>
    </t>

<t t-name="web.FileViewer">
        <div class="d-flex justify-content-center" t-att-class="{ 'modal fixed-top bottom-0': props.modal }">
            <div class="o-FileViewer flex-column align-items-center d-flex w-100 h-100" tabindex="0" t-ref="autofocus" t-on-keydown.stop="(ev) =&gt; this.onKeydown(ev)">
                <div class="o-FileViewer-header position-absolute top-0 d-flex w-100 bg-black-75 text-400" t-on-click.stop="">
                    <div t-if="isViewable" class="d-flex align-items-center ms-4 me-2">
                        <i t-if="state.file.isImage" class="fa fa-picture-o" role="img" title="Image"/>
                        <i t-if="state.file.isPdf" class="fa fa-file-text" role="img" title="PDF file"/>
                        <i t-if="state.file.isText" class="fa fa-file-text" role="img" title="Text file"/>
                        <i t-if="state.file.isVideo" class="fa fa-video-camera" role="img" title="Video"/>
                    </div>
                    <div class="d-flex align-items-center mx-2 overflow-auto">
                        <span class="text-truncate" t-out="state.file.displayName"/>
                    </div>
                    <div class="flex-grow-1"/>
                    <div class="o-FileViewer-download o-FileViewer-headerButton d-flex align-items-center px-3 cursor-pointer" role="button" title="Download" t-on-click.stop="">
                        <a t-att-href="state.file.downloadUrl" class="text-reset" download="">
                            <i class="fa fa-download fa-fw" role="img"/>
                            <span>Download</span>
                        </a>
                    </div>

                    <div t-on-click.stop="close" class="o-FileViewer-headerButton d-flex align-items-center mb-0 px-3 h4 text-reset cursor-pointer" role="button" title="Close (Esc)" aria-label="Close">
                        <i class="fa fa-fw fa-times" role="img"/>
                    </div>
                </div>
                <div t-on-click.stop="close" t-on-mousemove="onMousemoveView" class="o-FileViewer-main position-absolute top-0 bottom-0 start-0 end-0 align-items-center justify-content-center d-flex" t-att-class="{ 'o_with_img overflow-hidden': state.file.isImage }">
                    <div t-if="state.file.isImage" class="o-FileViewer-zoomer position-absolute align-items-center justify-content-center d-flex w-100 h-100" t-ref="zoomer">
                        <div t-if="!state.imageLoaded" class="position-absolute">
                            <i class="fa fa-3x fa-circle-o-notch fa-fw fa-spin text-white" role="img" title="Loading"/>
                        </div>
                        <img t-on-click.stop="" t-on-load="onImageLoaded" t-on-wheel="onWheelImage" t-on-mousedown.stop="onMousedownImage" t-on-mouseup.stop="onMouseupImage" class="o-FileViewer-view o-FileViewer-viewImage mw-100 mh-100 transition-base" t-att-src="state.file.defaultSource" t-att-style="imageStyle" draggable="false" alt="Viewer" t-ref="image"/>
                    </div>
                    <iframe t-if="state.file.isPdf" class="o-FileViewer-view w-75 h-100 border-0" t-ref="iframeViewerPdf" t-att-class="{ 'w-100': ui.isSmall }" t-att-src="state.file.defaultSource"/>
                    <iframe t-if="state.file.isText" class="o-FileViewer-view o-isText o_text w-75 h-100 border-0" t-att-src="state.file.defaultSource"/>
                    <iframe t-if="state.file.isUrlYoutube" allow="autoplay; encrypted-media" class="o-FileViewer-view w-75 h-100 border-0" t-att-src="state.file.defaultSource" height="315" width="560"/>
                    <video t-if="state.file.isVideo" class="o-FileViewer-view w-75 h-75" t-att-class="{ 'w-100 h-100': ui.isSmall }" t-on-click.stop="" controls="controls">
                        <source t-att-data-type="state.file.mimetype" t-att-src="state.file.defaultSource"/>
                    </video>
                </div>
                <div t-if="state.file.isImage" class="position-absolute bottom-0 d-flex" role="toolbar">
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="zoomIn" title="Zoom In (+)" role="button">
                        <i class="fa fa-fw fa-plus" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': state.scale === 1 }" t-on-click.stop="resetZoom" role="button" title="Reset Zoom (0)">
                        <i class="fa fa-fw fa-search" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': state.scale === minScale }" t-on-click.stop="zoomOut" title="Zoom Out (-)" role="button">
                        <i class="fa fa-fw fa-minus" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="rotate" title="Rotate (r)" role="button">
                        <i class="fa fa-fw fa-repeat" role="img"/>
                    </div>
                    <div class="o-FileViewer-toolbarButton p-3 rounded-0" t-on-click.stop="onClickPrint" title="Print" role="button">
                        <i class="fa fa-fw fa-print" role="img"/>
                    </div>
                    <div class="o-FileViewer-download o-FileViewer-toolbarButton p-3 rounded-0 cursor-pointer" title="Download" role="button" t-on-click.stop="">
                        <a t-att-href="state.file.downloadUrl" class="text-reset" download="">
                            <i class="fa fa-download fa-fw" role="img"/>
                        </a>
                    </div>
                </div>
                <t t-if="props.files.length &gt; 1">
                    <div class="o-FileViewer-navigation position-absolute top-0 bottom-0 start-0 align-items-center justify-content-center d-flex my-auto ms-3 rounded-circle" t-on-click.stop="previous" title="Previous (Left-Arrow)" aria-label="Previous" role="button">
                        <span class="oi oi-chevron-left" role="img"/>
                    </div>
                    <div class="o-FileViewer-navigation position-absolute top-0 bottom-0 end-0 align-items-center justify-content-center d-flex my-auto me-3 rounded-circle" t-on-click.stop="next" title="Next (Right-Arrow)" aria-label="Next" role="button">
                        <span class="oi oi-chevron-right" role="img"/>
                    </div>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.InstallPrompt">
        <Dialog contentClass="'o_install_prompt position-fixed px-2 py-3 m-2'" size="'md'" footer="false">
            <t t-set-slot="header">
                <div class="d-flex w-100">
                    <h4>How to get the application</h4>
                    <div t-on-click="onClose" type="button" class="btn-close" aria-label="Close"/>
                </div>
            </t>
            <p>Install Odoo on your device to access it easily. Here are the steps to follow:</p>
            <t t-if="isMobileSafari">
                <ul class="list-group list-group-numbered">
                    <li>
                        Tap on the share icon
                    </li>
                    <li>
                        Select "Add to home screen"
                    </li>
                </ul>
            </t>
            <t t-else="">
                <ul class="list-group list-group-numbered">
                    <li>
                        Open "File" menu from your browser
                    </li>
                    <li>
                        Select "Add to dock"
                    </li>
                </ul>
            </t>
        </Dialog>
    </t>
<t t-name="web._ModelFieldSelector">
        <div class="o_model_field_selector d-flex" aria-atomic="true" t-att-class="props.readonly ? 'o_read_mode' : 'o_edit_mode o_input'" t-on-click="(ev) =&gt; this.openPopover(ev.currentTarget)">
            <div class="o_model_field_selector_value flex-grow-1 h-100" tabindex="0" t-att-data-tooltip="state.displayNames.join(' &gt; ')" data-tooltip-position="top">
                <t t-foreach="state.displayNames" t-as="displayName" t-key="displayName_index">
                    <t t-if="!displayName_first">
                        <i class="oi oi-chevron-right m-1" role="img" aria-label="Followed by" title="Followed by"/>
                    </t>
                    <span t-attf-class="o_model_field_selector_chain_part mb-1 #{props.readonly ? 'border-0 fw-bolder' : 'px-1'} text-nowrap">
                        <t t-esc="displayName"/>
                    </span>
                </t>
            </div>
            <div t-if="!props.readonly and state.isInvalid" class="o_model_field_selector_controls ms-2" tabindex="0">
                <i class="fa fa-exclamation-triangle text-warning o_model_field_selector_warning" role="alert" aria-label="Invalid field chain" title="Invalid field chain"/>
            </div>
            <div t-if="!props.readonly and props.allowEmpty and state.displayNames.length" class="o_model_field_selector_controls ms-2" tabindex="0">
                <i class="fa fa-times" t-on-click.stop="clear" aria-label="Clear" title="Clear"/>
            </div>
        </div>
    </t>

<t t-name="web.ModelFieldSelectorPopover">
        <div class="o_model_field_selector_popover" tabindex="0" t-ref="root" t-on-keydown="onInputKeydown">
            <div class="o_model_field_selector_popover_header text-center">
                <t t-if="state.page.previousPage">
                    <i class="oi oi-arrow-left o_model_field_selector_popover_option o_model_field_selector_popover_prev_page" title="Previous" role="img" aria-label="Previous" t-on-click="() =&gt; this.goToPreviousPage()"/>
                </t>
                <div class="o_model_field_selector_popover_title">
                    <t t-esc="state.page.title"/>
                </div>
                <i class="fa fa-times o_model_field_selector_popover_option o_model_field_selector_popover_close" title="Close" role="img" aria-label="Close" t-on-click="props.close"/>
                <t t-if="props.showSearchInput">
                    <div class="o_model_field_selector_popover_search mt-2">
                        <input type="text" placeholder="Search..." class="o_input p-1 border rounded-1 bg-view" t-att-value="state.page.query" t-on-input="(ev) =&gt; this.debouncedSearchFields(ev.target.value)"/>
                    </div>
                </t>
            </div>
            <div class="o_model_field_selector_popover_body">
                <ul class="o_model_field_selector_popover_page">
                    <t t-foreach="state.page.fieldNames" t-as="fieldName" t-key="fieldName">
                        <t t-set="fieldDef" t-value="state.page.fieldDefs[fieldName]"/>
                        <li class="o_model_field_selector_popover_item d-flex border-bottom" t-att-class="{ 'active': fieldName === state.page.focusedFieldName }" t-att-data-name="fieldName">
                            <button class="o_model_field_selector_popover_item_name btn btn-light flex-fill rounded-0 text-start" t-on-click="() =&gt; this.selectField(fieldDef)">
                                <t t-esc="fieldDef.string"/>
                                <t t-if="fieldDef.record_name"> (<t t-esc="fieldDef.record_name"/>)</t>
                                <div t-if="props.isDebugMode" class="text-muted o_model_field_selector_popover_item_title"><t t-esc="fieldName"/> (<t t-esc="fieldDef.type"/>)</div>
                            </button>
                            <t t-if="(!fieldDef.is_property and fieldDef.relation and props.followRelations) or fieldDef.type === 'properties'">
                                <button class="o_model_field_selector_popover_item_relation btn btn-light border-0 border-start rounded-0" t-on-click.stop="() =&gt; this.followRelation(fieldDef)">
                                    <i class="oi oi-chevron-right o_model_field_selector_popover_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
                                </button>
                            </t>
                        </li>
                    </t>
                </ul>
            </div>
            <t t-if="showDebugInput">
                <div class="o_model_field_selector_popover_footer">
                    <input type="text" class="o_model_field_selector_debug o_input" t-att-value="state.page.path" t-on-change="(ev) =&gt; this.loadNewPath(ev.target.value)" t-on-keydown="onDebugInputKeydown" t-on-input="(ev) =&gt; this.props.update(ev.target.value, true)"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ModelSelector">
        <div class="o_model_selector" t-ref="autocomplete_container">
            <input t-if="env.isSmall" type="text" class="o_input" readonly="" t-att-id="props.id" t-att-value="props.value"/>
            <AutoComplete t-else="" id="props.id" value="props.value || ''" sources="sources" placeholder="placeholder" autoSelect="props.autoSelect" onSelect.bind="onSelect"/>
            <span class="o_dropdown_button"/>
        </div>
    </t>
<t t-name="web.Notebook">
        <div t-attf-class="o_notebook d-flex w-100 {{ props.orientation === 'horizontal' ? 'horizontal flex-column' : 'vertical flex-row' }} {{ props.className }}" t-if="state.currentPage">
            <div class="o_notebook_headers" t-att-class="{ 'm-0': props.orientation === 'vertical' }">
                <ul t-attf-class="nav nav-tabs {{ props.orientation === 'horizontal' ? 'flex-row flex-nowrap' : 'flex-column p-0' }}">
                    <li t-foreach="navItems" t-as="navItem" t-key="navItem[0]" class="nav-item flex-nowrap cursor-pointer" t-if="navItem[1].isVisible" t-attf-class="{{ navItem[1].isDisabled ? 'disabled' : '' }}">
                        <a class="nav-link" t-attf-class="{{ navItem[0] === state.currentPage ? 'active' : '' }} {{ props.orientation === 'vertical' ? 'p-3 rounded-0' : '' }} {{ navItem[1].className || '' }}" t-att-name="navItem[1].name" t-on-click.prevent="() =&gt; this.activatePage(navItem[0])" href="#" role="tab" tabindex="0">
                            <i t-if="props.icons and props.icons[navItem[0]]" t-attf-class="fa {{ props.icons[navItem[0]] }} me-2"/>
                            <t t-esc="navItem[1].title"/>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="o_notebook_content tab-content">
                <div class="tab-pane active" t-ref="activePane">
                    <t t-if="page" t-component="page.Component" t-key="state.currentPage" t-props="page.props"/>
                    <t t-else="" t-slot="{{ state.currentPage }}"/>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.NotificationWowl">
        <div t-on-mouseenter="this.props.freeze" t-on-mouseleave="this.props.refresh" t-attf-class="o_notification {{props.className}} border border-{{props.type}} mb-2 position-relative" role="alert" aria-live="assertive" aria-atomic="true">
            <strong t-if="props.title" t-attf-class="o_notification_title d-block text-{{props.type}} py-2 ps-3 pe-5" t-out="props.title"/>
            <button type="button" class="o_notification_close btn" aria-label="Close" t-on-click="props.close">
                <i class="oi oi-close"/>
            </button>
            <div t-attf-class="o_notification_body ps-3 pe-5 py-2">
                <div t-if="props.message" class="me-auto o_notification_content" t-out="props.message"/>
                <div t-if="props.buttons.length" class="o_notification_buttons d-flex gap-2 mt-2">
                    <button t-foreach="props.buttons" t-as="button" type="button" t-key="button_index" t-attf-class="btn {{button.primary ? 'btn-primary' : 'btn-secondary'}}" t-on-click="button.onClick">
                    <t t-if="button.icon">
                        <i t-if="button.icon.indexOf('fa-') === 0" role="img" t-att-aria-label="button.name" t-att-title="button.name" t-attf-class="fa fa-fw o_button_icon {{button.icon}}"/>
                        <img t-else="" t-att-src="button.icon" t-att-alt="button.name"/>
                    </t>
                    <span t-esc="button.name"/>
                </button>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.OverlayContainer">
        <div class="o-overlay-container">
            <t t-foreach="sortedOverlays" t-as="overlay" t-key="overlay.id">
                <ErrorHandler onError="(error) =&gt; this.handleError(overlay, error)">
                    <t t-component="overlay.component" t-props="overlay.props"/>
                </ErrorHandler>
            </t>
        </div>
    </t>

<t t-name="web.Pager">
        <nav class="o_pager d-flex gap-2 h-100" aria-label="Pager">
            <span class="o_pager_counter align-self-center" t-on-click.stop="">
                <t t-if="state.isEditing">
                    <input type="text" class="o_pager_value o_input d-inline-block w-auto text-end mb-n1" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="onInputBlur" t-on-change="onInputChange" t-on-keydown.stop="onInputKeydown"/>
                </t>
                <t t-else="">
                    <span class="o_pager_value d-inline-block border-bottom border-transparent mb-n1" t-esc="value" t-on-click="onValueClick"/>
                </t>
                <span> / </span>
                <t t-if="props.updateTotal">
                    <span class="o_pager_limit o_pager_limit_fetch" t-att-class="{ 'disabled': state.isDisabled }" t-on-click.stop="updateTotal"><t t-esc="props.total"/>+</span>
                </t>
                <t t-else="">
                    <span class="o_pager_limit" t-esc="props.total"/>
                </t>
            </span>
            <span class="btn-group d-print-none" aria-atomic="true">

                <button type="button" class="oi oi-chevron-left btn btn-secondary o_pager_previous px-2 rounded-start" aria-label="Previous" data-tooltip="Previous" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'p' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(-1)"/>
                <button type="button" class="oi oi-chevron-right btn btn-secondary o_pager_next px-2 rounded-end" aria-label="Next" data-tooltip="Next" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'n' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(1)"/>
            </span>
        </nav>
    </t>

<t t-name="web.PopoverWowl">
        <div role="tooltip" class="o_popover popover mw-100" t-att-class="props.class" t-ref="ref">
            <t t-slot="default"/>
            <div t-if="props.arrow" class="popover-arrow"/>
        </div>
    </t>

<t t-name="web.MultiRecordSelector">
        <div class="o_input d-flex flex-wrap gap-1 o_multi_record_selector" t-ref="multiRecordSelector">
            <TagsList tags="tags"/>
            <RecordAutocomplete resModel="props.resModel" value="''" domain="props.domain" context="props.context" className="'flex-grow-1'" fieldString="props.fieldString" placeholder="placeholder" multiSelect="true" getIds.bind="getIds" update.bind="update"/>
            <span class="o_dropdown_button"/>
        </div>
    </t>

<t t-name="web.RecordAutocomplete">
        <AutoComplete placeholder="props.placeholder" value="props.value" autoSelect="true" resetOnSelect="props.multiSelect" class="props.className" sources="sources" onSelect.bind="onSelect" onChange.bind="onChange"/>
    </t>

<t t-name="web.RecordSelector">
        <div class="o_input d-flex flex-wrap gap-1 o_record_selector">
            <RecordAutocomplete resModel="props.resModel" value="displayName" domain="props.domain" context="props.context" className="'h-100 flex-grow-1'" fieldString="props.fieldString" placeholder="props.placeholder" multiSelect="false" getIds="() =&gt; []" update.bind="update"/>
            <span class="o_dropdown_button"/>
        </div>
    </t>

<t t-name="web_studio.ResizablePanel">
        <div class="o_resizable_panel d-flex flex-column" t-att-class="class" t-ref="containerRef">
            <t t-slot="default"/>
            <div class="o_resizable_panel_handle position-absolute top-0 bottom-0 end-0" t-att-class="props.handleSide === 'start' ? 'start-0' : 'end-0'" t-ref="handleRef"/>
        </div>
    </t>

<t t-name="web.SelectMenu">
        <Dropdown class="\`o_select_menu border w-auto rounded-2 overflow-hidden \${props.class || ''}\`" togglerClass="\`o_select_menu_toggler btn w-100 bg-light \${props.togglerClass || ''} \${canDeselect ? 'o_can_deselect' : ''}\`" menuClass="\`o_select_menu_menu\${props.searchable ? ' py-0' : ''}\${props.multiSelect ? ' o_select_menu_multi_select' : ''} border\`" position="'bottom-fit'" beforeOpen.bind="onBeforeOpen" onScroll.bind="onScroll" onStateChanged.bind="onStateChanged">
            <t t-set-slot="toggler">
                <t t-if="props.multiSelect">
                    <div class="text-wrap text-start">
                        <TagsList tags="multiSelectChoices"/>
                    </div>
                </t>
                <t t-else="">
                    <span class="o_select_menu_toggler_slot text-start text-truncate">
                        <t t-if="!props.slots or !props.slots.default" t-esc="displayValue"/>
                        <t t-else="" t-slot="default"/>
                    </span>
                    <span t-if="canDeselect" t-on-click.stop="() =&gt; this.props.onSelect(null)" class="o_select_menu_toggler_clear p-0 m-0">
                        <i class="fa fa-times"/>
                    </span>
                </t>
                <span class="o_select_menu_toggler_caret p-0 m-0">
                    <i class="fa fa-caret-down"/>
                </span>
            </t>
            <input t-if="props.searchable" type="text" class="dropdown-item o_select_menu_sticky px-3 py-3 position-sticky top-0 start-0 border-bottom" t-ref="inputRef" t-on-input="debouncedOnInput" t-on-keydown="onSearchKeydown" t-att-placeholder="props.searchPlaceholder" autocomplete="selectMenuAutocompleteOff" autocorrect="off" spellcheck="false"/>
            <t t-if="state.choices.length === 0">
                <span class="text-muted fst-italic ms-3">No result found</span>
            </t>
            <t t-foreach="state.displayedOptions" t-as="choice" t-key="choice_index">
                <t t-call="{{ this.constructor.choiceItemTemplate }}">
                    <t t-set="choice" t-value="choice"/>
                </t>
            </t>
            <t t-if="props.slots and props.slots.bottomArea" t-slot="bottomArea" data="state"/>
        </Dropdown>
    </t>

    <t t-name="web.SelectMenu.ChoiceItem">
        <div t-if="choice.isGroup" class="o_select_menu_group sticky-top bg-light px-3 mt-2 fst-italic fw-bolder user-select-none">
            <span t-esc="choice.label"/>
            <hr class="mt-2 mb-1"/>
        </div>
        <DropdownItem t-if="!choice.isGroup" onSelected="() =&gt; this.onItemSelected(choice.value)" class="getItemClass(choice) + ' d-flex align-items-center'">
            <t t-if="props.slots and props.slots.choice" t-slot="choice" data="choice"/>
            <t t-else="">
                <div class="o_select_menu_item_label text-wrap" t-esc="choice.label || choice.value"/>
            </t>
        </DropdownItem>
    </t>

<t t-name="web.sign_svg_text" name="SVG Signature Text">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" t-att-width="width" t-att-height="height">
            <defs>
                <style type="text/css">
                    @font-face {
                        font-family: "font";
                        src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                        font-weight: normal;
                        font-style: normal;
                    }
                </style>
            </defs>

            <text t-esc="text" x="50%" t-att-y="height * 3 / 5" t-att-font-size="height * 3 / 5" t-att-textLength="width * 4 / 5 * (type === 'signature' ? Math.min(1, text.length / 7) : 1)" t-att-lengthAdjust="'spacing' + (type === 'signature' ? 'AndGlyphs' : '')" t-attf-style="font-family:'font'; stroke: none; fill: {{color}};" text-anchor="middle"/>
        </svg>
    </t>


    <t t-name="web.NameAndSignature">
        <div class="o_web_sign_name_and_signature">
            <div t-if="!props.noInputName" class="o_web_sign_name_group">
                <label class="col-form-label" t-att-for="'o_web_sign_name_input_' + htmlId">Full Name</label>
                <input type="text" name="signer" t-att-id="'o_web_sign_name_input_' + htmlId" class="o_web_sign_name_input form-control" t-on-input="onInputSignName" t-att-value="props.signature.name" t-ref="signNameInput" placeholder="Type your name to sign" required=""/>
            </div>


            <div t-if="state.showSignatureArea" class="o_web_sign_signature_group bg-100 card mt-3" style="overflow: hidden;">
                <div class="card-header bg-transparent">
                    <div class="row g-0">
                        <div t-if="!props.noInputName or defaultName" class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignAuto" t-attf-class="o_web_sign_auto_button me-2 btn btn-light {{ state.signMode === 'auto' ? 'active': '' }}">
                                Auto
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('draw')" t-attf-class="o_web_sign_draw_button me-2 btn btn-light {{ state.signMode === 'draw' ? 'active': '' }}">
                                Draw
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignLoad" t-attf-class="o_web_sign_load_button me-2 btn btn-light {{ state.signMode === 'load' ? 'active': '' }}">
                                Load
                            </a>
                        </div>

                        <div class="col-auto division ms-auto"/>

                        <Dropdown t-if="state.signMode === 'auto'" class="'o_web_sign_auto_select_style col-auto'" showCaret="true" togglerClass="'btn btn-link fa fa-font'">
                            <t t-foreach="fonts" t-as="font" t-key="font_index">
                                <DropdownItem onSelected="() =&gt; this.onSelectFont(font_index)">
                                    <img class="img-fluid" t-att-src="getSVGTextFont(font)"/>
                                </DropdownItem>
                            </t>
                        </Dropdown>

                        <div t-if="state.signMode === 'draw'" t-attf-class="o_web_sign_draw_clear col-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignDrawClear" class="btn btn-link fa fa-trash"/>
                        </div>

                        <div t-if="state.signMode === 'load'" class="o_web_sign_load_file col-auto">
                            <button type="button" id="loadFileXml" t-on-click="uploadFile" class="btn btn-link fa fa-upload"/>
                            <input t-ref="signInputLoad" type="file" role="button" name="files[]" class="d-none" t-on-change="onChangeSignLoadInput"/>
                        </div>
                    </div>
                </div>

                <div class="o_web_sign_signature_container position-relative">
                    <div class="o_signature_stroke position-absolute"/>
                    <div t-if="state.showSignatureArea" t-ref="signature" t-att-style="signatureStyle" class="o_web_sign_signature p-0 bg-transparent position-relative"/>
                </div>

                <div t-if="loadIsInvalid" t-attf-class="o_web_sign_load_invalid card-footer d-none">
                    <div class="alert alert-danger mb-0" role="alert">
                        This file is invalid. Please select an image.
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.SignatureDialog">
      <Dialog title="title">
         <div>
            <NameAndSignature t-props="nameAndSignatureProps"/>
            <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-att-disabled="signature.isSignatureEmpty" t-on-click="onClickConfirm">Adopt &amp; Sign</button>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

<t t-name="web.TagsList">
        <t t-foreach="visibleTags" t-as="tag" t-key="tag.id or tag_index">
            <span class="o_tag position-relative d-inline-flex align-items-center user-select-none mw-100" t-att-class="{                     'o_avatar opacity-trigger-hover' : tag.img,                     'o_badge badge rounded-pill lh-1': !tag.img,                 }" t-attf-class="{{ !tag.img ? 'o_tag_color_' + (tag.colorIndex ? tag.colorIndex : '0') : '' }}" tabindex="-1" t-att-data-color="tag.colorIndex" t-att-title="tag.text" t-on-click="(ev) =&gt; tag.onClick and tag.onClick(ev)" t-on-keydown="tag.onKeydown">


                <span t-if="tag.img and props.displayText and tag.onDelete" class="o_avatar_backdrop position-absolute top-0 end-0 bottom-0 start-0 ms-n2 mt-n1 mb-n1 bg-view rounded border shadow opacity-0 opacity-100-hover"/>

                <img t-if="tag.img" t-att-src="tag.img" class="o_avatar o_m2m_avatar position-relative rounded" t-att-class="tag.imageClass"/>

                <i t-if="tag.icon" t-attf-class="p-1 fa {{ tag.icon }}" t-att-class="tag.className"/>

                <div t-if="props.displayText" class="o_tag_badge_text text-truncate" t-att-class="{'position-relative ms-1' : tag.img}" t-out="tag.text"/>

                <a t-if="tag.onDelete" t-on-click.stop.prevent="(ev) =&gt; tag.onDelete and tag.onDelete(ev)" class="o_delete d-flex align-items-center opacity-100-hover" t-att-class="{                             'btn btn-link position-relative py-0 px-1 text-danger opacity-0': tag.img,                             'ps-1 opacity-75': !tag.img                         }" title="Delete" aria-label="Delete" tabIndex="-1" href="#">
                        <i class="oi oi-close align-text-top"/>
                </a>
            </span>
        </t>
        <span t-if="props.tags and otherTags.length" class="o_m2m_avatar_empty rounded-circle text-center fw-bold" data-tooltip-template="web.TagsList.Tooltip" data-tooltip-position="right" t-att-data-tooltip-info="tooltipInfo">
            <span t-if="otherTags.length &gt; 9" t-esc="'9+'"/>
            <span t-else="" t-esc="'+' + otherTags.length"/>
        </span>
    </t>

    <t t-name="web.TagsList.Tooltip">
        <t t-foreach="tags" t-as="tag" t-key="tag.id">
            <div t-esc="tag.text"/>
        </t>
    </t>

<t t-name="web.Tooltip">
        <div class="o-tooltip tooltip-inner text-start">
            <t t-if="props.template" t-call="{{props.template}}" t-call-context="{ env, ...props.info }"/>
            <span t-else="" t-esc="props.tooltip"/>
        </div>
    </t>

<t t-name="web.TreeEditor">
        <div class="o_tree_editor w-100" aria-atomic="true" t-att-class="className">
            <div t-attf-class="o_tree_editor_node d-flex flex-column #{props.readonly ? 'gap-2' : 'gap-1'}">
                <t t-set="node" t-value="tree"/>
                <div class="o_tree_editor_row d-flex align-items-center">
                    <div class="o_tree_editor_connector d-flex flex-grow-1 align-items-center">
                        <t t-if="node.children.length">
                            <span>Match</span>
                            <t t-if="node.children.length &gt; 1">
                                <t t-call="web.TreeEditor.connector.dropdown"/>
                            </t>
                            <t t-else="">
                                <span class="px-1">
                                    <t t-call="web.TreeEditor.connector.title"/>
                                </span>
                            </t>
                            <span>of the following rules:</span>
                        </t>
                        <t t-else="">
                            <span>Match <strong>all records</strong></span>
                        </t>
                    </div>
                    <t t-slot="default"/>
                </div>
                <t t-if="node.children.length" t-call="web.TreeEditor.connector.children"/>
                <t t-if="!props.readonly">
                    <div class="o_tree_editor_row d-flex align-items-center">
                        <a href="#" role="button" t-on-click="() =&gt; this.insertRootLeaf(node)">New Rule</a>
                    </div>
                </t>
            </div>
        </div>
    </t>

    <t t-name="web.TreeEditor.controls">
        <div class="o_tree_editor_node_control_panel d-flex" role="toolbar" aria-label="Domain node">
            <button class="btn px-2 fs-4" role="button" title="Add New Rule" aria-label="Add New Rule" t-on-click="() =&gt; this.insertLeaf(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-plus"/>
            </button>
            <button class="btn px-2 fs-4" role="button" title="Add branch" aria-label="Add branch" t-on-click="() =&gt; this.insertBranch(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-sitemap"/>
            </button>
            <button class="btn btn-link px-2 text-danger fs-4" role="button" title="Delete node" aria-label="Delete node" t-on-click="() =&gt; this.delete(parent, node)" t-on-mouseenter="(ev) =&gt; this.highlightNode(ev.target, true)" t-on-mouseleave="(ev) =&gt; this.highlightNode(ev.target, false)">
                <i class="fa fa-trash"/>
            </button>
        </div>
    </t>

    <t t-name="web.TreeEditor.connector.title">
        <t t-set="title">
            <t t-if="node.value === '|'">
                <t t-if="node.negate">none</t>
                <t t-else="">any</t>
            </t>
            <t t-else="">
                <t t-if="node.negate">not all</t>
                <t t-else="">all</t>
            </t>
        </t>
        <t t-esc="title"/>
    </t>

    <t t-name="web.TreeEditor.connector.dropdown">
        <t t-if="props.readonly">
            <strong class="px-1">
                <t t-call="web.TreeEditor.connector.title"/>
            </strong>
        </t>
        <t t-else="">
            <div aria-atomic="true">
                <Dropdown togglerClass="'btn btn-link btn-primary py-0 px-1'" showCaret="true">
                    <t t-set-slot="toggler">
                        <t t-call="web.TreeEditor.connector.title"/>
                    </t>
                    <DropdownItem onSelected="() =&gt; this.updateConnector(node, '&amp;')">all</DropdownItem>
                    <DropdownItem onSelected="() =&gt; this.updateConnector(node, '|')">any</DropdownItem>
                </Dropdown>
            </div>
        </t>
    </t>

    <t t-name="web.TreeEditor.connector.children">
        <t t-foreach="node.children" t-as="child" t-key="child.type + '_' + child_index">
            <div class="o_tree_editor_node" t-att-class="{ 'ps-4': addPadding }">
                <t t-call="web.TreeEditor.{{ child.type }}">
                    <t t-set="parent" t-value="node"/>
                    <t t-set="node" t-value="child"/>
                </t>
            </div>
        </t>
    </t>

    <t t-name="web.TreeEditor.connector">
        <div class="o_tree_editor_row d-flex align-items-center">
            <div class="o_tree_editor_connector d-flex flex-grow-1">
                <t t-call="web.TreeEditor.connector.dropdown"/>
                <span>of:</span>
            </div>
            <t t-if="!props.readonly">
                <t t-call="web.TreeEditor.controls"/>
            </t>
        </div>
        <t t-call="web.TreeEditor.connector.children">
            <t t-set="addPadding" t-value="true"/>
        </t>
    </t>

    <t t-name="web.TreeEditor.condition">
        <div class="o_tree_editor_row d-flex align-items-center">
            <t t-if="props.readonly">
                <t t-call="web.TreeEditor.condition:readonly"/>
            </t>
            <t t-else="">
                <t t-call="web.TreeEditor.condition:editable"/>
                <t t-call="web.TreeEditor.controls"/>
            </t>
        </div>
    </t>

    <t t-name="web.TreeEditor.condition:readonly">
        <t t-set="description" t-value="getDescription(node)"/>
        <div class="o_tree_editor_condition d-flex gap-1 px-2 border bg-100">
            <ModelFieldSelector path="node.path" resModel="props.resModel" readonly="true"/>
            <span class="fst-italic" t-esc="description.operatorDescription"/>
            <t t-if="description.valueDescription">
                <t t-set="values" t-value="description.valueDescription.values"/>
                <t t-set="join" t-value="description.valueDescription.join"/>
                <t t-set="addParenthesis" t-value="description.valueDescription.addParenthesis"/>
                <t t-if="addParenthesis">( </t>
                <t t-foreach="values" t-as="val" t-key="val_index">
                    <span class="text-primary fw-bolder"><t t-esc="val"/></span>
                    <t t-if="!val_last"> <t t-esc="join"/> </t>
                </t>
                <t t-if="addParenthesis"> )</t>
            </t>
        </div>
    </t>

    <t t-name="web.TreeEditor.Editor">
        <t t-if="!info.isSupported(value)">
            <div t-attf-class="o_tree_editor_editor #{_classes}">
                <div class="o_input d-flex align-items-center">
                    <span class="flex-grow-1 text-truncate" t-esc="info.stringify(value)"/>
                    <i role="alert" class="fa fa-exclamation-triangle text-warning mx-2" t-att-title="(typeof info.message === 'function') ? info.message(value) : info.message"/>
                    <i class="fa fa-times" title="Clear" t-on-click="() =&gt; update(info.defaultValue())"/>
                </div>
            </div>
        </t>
        <t t-elif="info.component">
            <div t-attf-class="o_tree_editor_editor #{_classes}">
                <t t-component="info.component" t-props="info.extractProps({ update, value })"/>
            </div>
        </t>
    </t>

    <t t-name="web.TreeEditor.condition:editable">
        <div class="o_tree_editor_condition d-flex flex-grow-1 align-items-end gap-2">
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col col-md-4 pe-0'"/>
                <t t-set="info" t-value="props.getPathEditorInfo(node)"/>
                <t t-set="value" t-value="node.path"/>
                <t t-set="update" t-value="(path) =&gt; this.updatePath(node, path)"/>
            </t>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col col-md-2 px-3'"/>
                <t t-set="info" t-value="props.getOperatorEditorInfo(node)"/>
                <t t-set="value" t-value="[node.operator, node.negate]"/>
                <t t-set="update" t-value="(operator, negate) =&gt; this.updateLeafOperator(node, operator, negate)"/>
            </t>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'col ps-0 overflow-hidden'"/>
                <t t-set="info" t-value="getValueEditorInfo(node)"/>
                <t t-set="value" t-value="node.value"/>
                <t t-set="update" t-value="(value) =&gt; this.updateLeafValue(node, value)"/>
            </t>
        </div>
    </t>

    <t t-name="web.TreeEditor.complex_condition">
        <div class="o_tree_editor_row d-flex align-items-center">
            <div class="o_tree_editor_complex_condition flex-grow-1">
                <input class="o_input w-100" t-att-value="node.value" t-att-readonly="props.readonly or !isDebugMode" t-on-change="(ev) =&gt; this.updateComplexCondition(node, ev.target.value)"/>
            </div>
            <t t-call="web.TreeEditor.controls"/>
        </div>
    </t>


<t t-name="web.TreeEditor.Input">
        <input type="text" class="o_input" t-att-value="props.startEmpty ? '' : props.value" t-on-change="(ev) =&gt; props.update(ev.target.value)"/>
    </t>

    <t t-name="web.TreeEditor.Select">
        <select class="o_input pe-3 text-truncate" t-on-change="(ev) =&gt; props.update(deserialize(ev.target.value))">
            <option t-if="props.addBlankOption" hidden="true"/>
            <t t-foreach="props.options" t-as="option" t-key="serialize(option[0])">
                <option t-att-value="serialize(option[0])" t-att-selected="!props.addBlankOption and option[0] === props.value" t-esc="option[1]"/>
            </t>
        </select>
    </t>

    <t t-name="web.TreeEditor.Range">
        <div class="d-flex align-items-center">
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.editorInfo"/>
                <t t-set="value" t-value="props.value[0]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(0, val)"/>
            </t>
            <i class="fa fa-long-arrow-right mx-2" aria-label="Arrow icon" title="Arrow"/>
            <t t-call="web.TreeEditor.Editor">
                <t t-set="_classes" t-value="'overflow-hidden flex-grow-1'"/>
                <t t-set="info" t-value="props.editorInfo"/>
                <t t-set="value" t-value="props.value[1]"/>
                <t t-set="update" t-value="(val) =&gt; this.update(1, val)"/>
            </t>
        </div>
    </t>

    <t t-name="web.TreeEditor.List">
        <div class="o_input d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
            <div class="flex-grow-1">
                <t t-call="web.TreeEditor.Editor">
                    <t t-set="info" t-value="props.editorInfo"/>
                    <t t-set="value" t-value="props.editorInfo.defaultValue()"/>
                    <t t-set="update" t-value="(val) =&gt; this.update(val)"/>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.ActionMenus">
        <div class="o_cp_action_menus d-flex pe-2 gap-1">
            <Dropdown t-if="printItems.length" class="'d-inline-block'" togglerClass="'btn btn-secondary'" hotkey="'shift+u'">
                <t t-set-slot="toggler">
                    <i class="fa fa-print me-1"/>
                    <span class="o_dropdown_title">Print</span>
                </t>
                <t t-foreach="printItems" t-as="item" t-key="item.key">
                    <DropdownItem class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                        <t t-esc="item.description"/>
                    </DropdownItem>
                </t>
            </Dropdown>

            <Dropdown t-if="actionItems.length" class="'d-inline-block'" togglerClass="'btn btn-secondary'" hotkey="'u'">
                <t t-set-slot="toggler">
                    <i class="fa fa-cog me-1"/>
                    <span class="o_dropdown_title">Actions</span>
                </t>
                <t t-foreach="actionItems" t-as="item" t-key="item.key">
                    <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>
                    <DropdownItem t-else="" class="'o_menu_item'" onSelected="() =&gt; this.onItemSelected(item)">
                        <i t-if="item.icon" t-att-class="item.icon + ' me-1 fa-fw oi-fw'"/>
                        <t t-esc="item.description"/>
                    </DropdownItem>
                </t>
            </Dropdown>
        </div>
    </t>

<t t-name="web.CogMenu">
        <div t-if="hasItems" class="o_cp_action_menus d-flex align-items-center pe-2 gap-1">
            <Dropdown class="'lh-1'" togglerClass="'d-print-none btn p-0 ms-1 lh-sm border-0'" menuClass="'lh-base'">
                <t t-set-slot="toggler">
                    <i class="fa fa-cog" data-hotkey="u" data-tooltip="Actions"/>
                </t>

                <t t-if="printItems.length">
                    <Dropdown t-if="printItems.length &gt; 1">
                        <t t-set-slot="toggler">
                            <i class="fa fa-print me-1"/> Print
                        </t>
                        <DropdownItem t-foreach="printItems" t-as="item" t-key="item.key" class="'text-truncate o_menu_item'" title="item.description" onSelected="() =&gt; this.onItemSelected(item)">
                            <t t-esc="item.description"/>
                        </DropdownItem>
                    </Dropdown>

                    <DropdownItem t-else="" class="'text-truncate o_menu_item'" title="printItems[0].description" onSelected="() =&gt; this.onItemSelected(printItems[0])">
                        <i class="fa fa-print me-1"/> <t t-out="printItems[0].description"/>
                    </DropdownItem>
                </t>

                <t t-foreach="cogItems" t-as="item" t-key="item.key">
                    <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                        <div role="separator" class="dropdown-divider"/>
                    </t>

                    <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>

                    <DropdownItem t-else="" class="'text-truncate o_menu_item'" title="item.description" onSelected="() =&gt; this.onItemSelected(item)">
                        <i t-if="item.icon" t-att-class="item.icon" class="fa-fw oi-fw me-1"/>
                        <t t-esc="item.description"/>
                    </DropdownItem>

                    <t t-set="currentGroup" t-value="item.groupNumber"/>
                </t>
            </Dropdown>
        </div>
    </t>

<t t-name="web.ControlPanel">
        <div class="o_control_panel d-flex flex-column gap-3 gap-lg-1 px-3 pt-2 pb-3" t-ref="root" data-command-category="actions">
            <div class="o_control_panel_main d-flex flex-wrap flex-lg-nowrap justify-content-between align-items-lg-start gap-3 flex-grow-1">
                <div class="o_control_panel_breadcrumbs d-flex align-items-center gap-1 order-0 h-lg-100">
                    <div class="o_control_panel_main_buttons d-flex gap-1 d-empty-none d-print-none" t-ref="mainButtons" t-on-keydown="onMainButtonsKeydown">
                        <div class="btn-group d-xl-none o_control_panel_collapsed_create">
                            <t t-slot="control-panel-create-button"/>
                            <button t-att-class="{invisible: display.disableDropdown}" type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split o_control_panel_collapsed_create" data-bs-toggle="dropdown" aria-expanded="false">
                                 <span class="visually-hidden">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu o_control_panel_collapsed_create">
                                <t t-slot="layout-buttons"/>
                                <t t-slot="control-panel-always-buttons"/>
                            </ul>
                        </div>
                        <div class="d-none d-xl-inline-flex gap-1">
                            <t t-slot="control-panel-create-button"/>
                            <t t-slot="layout-buttons"/>
                            <t t-slot="control-panel-always-buttons"/>
                        </div>
                    </div>
                    <t t-if="env.config.noBreadcrumbs">
                        <section class="o_control_panel_breadcrumbs_actions d-contents">
                            <t t-slot="control-panel-additional-actions"/>
                            <t t-slot="control-panel-status-indicator"/>
                        </section>
                    </t>
                    <t t-else="">
                        <t t-slot="control-panel-breadcrumb">
                            <t t-call="web.Breadcrumbs"/>
                        </t>
                    </t>
                    <span class="d-none d-xl-block me-auto"/> 
                </div>

                <div class="o_control_panel_actions d-empty-none d-flex align-items-center justify-content-start justify-content-lg-around order-2 order-lg-1 w-100 w-lg-auto">
                    <t t-if="display.layoutActions" t-slot="layout-actions"/>
                    <t t-slot="control-panel-selection-actions"/>
                </div>

                <div class="o_control_panel_navigation d-flex flex-wrap flex-md-nowrap justify-content-end gap-3 gap-lg-1 gap-xl-3 order-1 order-lg-2 flex-grow-1">
                    <div t-if="pagerProps and pagerProps.total &gt; 0" class="o_cp_pager text-nowrap " role="search">
                        <Pager t-props="pagerProps"/>
                    </div>
                    <t t-if="env.config.viewSwitcherEntries?.length &gt; 1">
                        <Dropdown class="'o_cp_switch_buttons d-xl-none btn-group'" togglerClass="'btn btn-secondary'" showCaret="true">
                            <t t-set-slot="toggler">
                                <t t-set="activeView" t-value="env.config.viewSwitcherEntries.find((view) =&gt; view.active)"/>
                                <i class="oi-fw" t-att-class="activeView.icon"/>
                            </t>
                            <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                                <DropdownItem onSelected="() =&gt; this.onViewClicked(view.type)" class="view.active ? 'selected' : ''">
                                    <i class="oi-fw" t-att-class="view.icon"/>
                                    <span class="ms-1" t-out="view.name"/>
                                </DropdownItem>
                            </t>
                        </Dropdown>
                        <nav class="o_cp_switch_buttons d-print-none d-none d-xl-inline-flex btn-group">
                            <t t-foreach="env.config.viewSwitcherEntries" t-as="view" t-key="view.type">
                                <button class="btn btn-secondary o_switch_view " t-attf-class="o_{{view.type}} {{view.active ? 'active' : ''}}" t-att-data-tooltip="view.name" t-on-click="() =&gt; this.onViewClicked(view.type)">
                                    <i t-att-class="view.icon"/>
                                </button>
                            </t>
                        </nav>
                    </t>
                    <t t-slot="control-panel-navigation-additional"/>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.Breadcrumbs">
        <t t-set="currentBreadcrumbs" t-value="breadcrumbs.slice(-1)"/>
        <t t-set="visiblePathBreadcrumbs" t-value="breadcrumbs.slice(-3, -1)"/>
        <t t-set="collapsedBreadcrumbs" t-value="breadcrumbs.slice(0, -3).reverse()"/>
        <t t-set="breadcrumb" t-value="currentBreadcrumbs[0] || {}"/>

        <div t-if="collapsedBreadcrumbs.length || visiblePathBreadcrumbs.length" class="o_breadcrumb d-flex flex-row flex-md-column align-self-stretch justify-content-between min-w-0">
            <t t-if="env.isSmall">
                <t t-set="previousBreadcrumb" t-value="visiblePathBreadcrumbs.slice(-1)"/>
                <button class="o_back_button btn btn-link px-1" t-on-click.prevent="() =&gt; this.onBreadcrumbClicked(previousBreadcrumb.jsId)">
                    <i class="oi oi-fw oi-arrow-left"/>
                </button>
            </t>
            <t t-else="">
                <ol class="breadcrumb flex-nowrap text-nowrap small lh-sm">
                    <li t-if="collapsedBreadcrumbs.length" class="breadcrumb-item d-inline-flex min-w-0">
                        <Dropdown togglerClass="'btn btn-light btn-sm px-1 p-0'">
                            <t t-set-slot="toggler">
                                <i class="fa fa-ellipsis-h"/>
                            </t>
                            <t t-foreach="collapsedBreadcrumbs" t-as="breadcrumb" t-key="breadcrumb.jsId">
                                <DropdownItem onSelected="() =&gt; this.onBreadcrumbClicked(breadcrumb.jsId)">
                                    <t t-call="web.Breadcrumb.Name"/>
                                </DropdownItem>
                            </t>
                        </Dropdown>
                    </li>
                    <t t-foreach="visiblePathBreadcrumbs" t-as="breadcrumb" t-key="breadcrumb.jsId">
                        <li class="breadcrumb-item d-inline-flex min-w-0" t-att-class="{ o_back_button: breadcrumb_last }" t-att-data-hotkey="breadcrumb_last and 'b'" t-on-click.prevent="() =&gt; this.onBreadcrumbClicked(breadcrumb.jsId)">
                            <a href="#" class="fw-bold text-truncate" t-att-data-tooltip="'Back to &quot;' + breadcrumb.name + '&quot;'"><t t-call="web.Breadcrumb.Name"/></a>
                        </li>
                    </t>
                </ol>
            </t>
            <div class="d-flex gap-1 text-truncate">
                <div class="o_last_breadcrumb_item active d-flex gap-2 align-items-center min-w-0 lh-sm">
                    <span class="min-w-0 text-truncate" t-call="web.Breadcrumb.Name"/>
                </div>
                <t t-call="web.Breadcrumb.Actions"/>
            </div>
        </div>

        <div t-else="" class="o_breadcrumb d-flex gap-1 text-truncate">
            <div class="o_last_breadcrumb_item active d-flex fs-4 min-w-0 align-items-center">
                <span class="min-w-0 text-truncate" t-call="web.Breadcrumb.Name"/>
            </div>
            <t t-call="web.Breadcrumb.Actions"/>
        </div>

        <t t-slot="control-panel-status-indicator"/>
    </t>

    <t t-name="web.Breadcrumb.Actions">
        <div class="o_control_panel_breadcrumbs_actions d-inline-flex">
            <t t-slot="control-panel-additional-actions"/>
        </div>
    </t>

    <t t-name="web.Breadcrumb.Name">
        <t t-if="breadcrumb.name" t-out="breadcrumb.name"/>
        <em t-else="" class="text-warning">Unnamed</em>
        <t t-slot="control-panel-additional-breadcrums"/>
    </t>

<t t-name="web.CustomFavoriteItem">
        <t t-set="saveCurrentSearchDescription">Save current search</t>
        <AccordionItem class="'o_add_favorite text-truncate'" description="saveCurrentSearchDescription">
            <div class="px-3 py-2">
                <input type="text" class="o_input" t-ref="description" t-model.trim="state.description" t-on-keydown="onInputKeydown"/>
                <CheckBox value="state.isDefault" onChange.bind="onDefaultCheckboxChange">
                    <span data-tooltip="Use this filter by default when opening this view">Default filter</span>
                </CheckBox>
                <CheckBox value="state.isShared" onChange.bind="onShareCheckboxChange">
                    <span data-tooltip="Make this filter available to other users">Shared</span>
                </CheckBox>
            </div>
            <div class="px-3 py-2">
                <button class="o_save_favorite btn btn-primary w-100" t-on-click="saveFavorite">
                    Save
                </button>
            </div>
        </AccordionItem>
    </t>

<t t-name="web.CustomGroupByItem">
        <select class="o_add_custom_group_menu o_menu_item dropdown-item" t-on-change="(ev) =&gt; this.onSelected(ev)">
            <option value="" disabled="true" selected="true" hidden="true">Add Custom Group</option>
            <option t-foreach="props.fields" t-as="field" t-key="field.name" t-if="field.type !== 'properties' and !field.isProperty" t-att-value="field.name" t-esc="field.string"/>
        </select>
    </t>

<t t-name="web.Layout">
        <t t-if="env.inDialog" t-portal="'#' + env.dialogId + ' .modal-footer'">
            <t t-slot="layout-buttons"/>
        </t>
        <t t-component="components.ControlPanel" slots="controlPanelSlots" t-if="display.controlPanel" display="display.controlPanel"/>
        <t t-component="components.Banner" t-if="display.banner"/>
        <div t-ref="content" class="o_content" t-attf-class="{{props.className}}" t-att-class="{ 'o_component_with_search_panel': display.searchPanel }">
            <t t-component="components.SearchPanel" t-if="display.searchPanel"/>
            <t t-slot="default" contentRef="contentRef"/>
        </div>
    </t>

<t t-name="web.PropertiesGroupByItem">
        <AccordionItem class="'o_add_custom_group_menu text-truncate'" description="props.item.description" selected="isActive">
            <t t-set="items" t-value="state.groupByItems"/>
            <t t-if="items and items.length">
                <t t-foreach="items" t-as="item" t-key="item.name">
                    <t t-set="description" t-value="isSingleParent ? item.description : \`\${item.description} (\${item.definitionRecordName})\`"/>

                    <AccordionItem t-if="item.options" description="description" selected="item.isActive">
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-set="optionName" t-value="\`\${item.name}:\${option.id}\`"/>
                            <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive" parentClosingMode="'none'" t-esc="option.description" onSelected="() =&gt; this.onGroup({ itemId: item.id, optionId: option.id})"/>
                        </t>
                    </AccordionItem>

                    <CheckboxItem t-else="" class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="description" onSelected="() =&gt; this.onGroup({ itemId: item.id })"/>
                </t>
            </t>
            <DropdownItem t-else="" parentClosingMode="'none'" class="'fst-italic'">
                No Properties
            </DropdownItem>
        </AccordionItem>
    </t>
<t t-name="web.SearchBar.Facets">
        <t t-foreach="env.searchModel.facets" t-as="facet" t-key="facet_index">
            <div class="o_searchview_facet position-relative d-inline-flex align-items-stretch rounded-2 bg-200 text-nowrap opacity-trigger-hover" t-att-class="{o_facet_with_domain: facet.domain }" role="listitem" aria-label="search" tabindex="0" t-on-keydown="ev =&gt; this.onFacetKeydown(facet, facet_index, ev)">


                <div class="position-absolute start-0 top-0 bottom-0 end-0 bg-view border rounded-2 shadow opacity-0 opacity-100-hover"/>

                <div class="o_searchview_facet_label position-relative rounded-start-2 px-1" t-on-click="(ev) =&gt; this.onFacetLabelClick(ev.target, facet)" t-att-role="facet.domain ? 'button' : 'img'" t-att-class="{                         'text-bg-action d-flex align-items-center': facet.type == 'groupBy' || facet.type == 'comparison',                         'btn btn-primary rounded-end-0 p-0': facet.type == 'field' || facet.type == 'filter',                         'btn btn-favourite rounded-end-0 p-0': facet.type == 'favorite'                     }">
                    <i t-if="facet.icon" class="small fa-fw" t-att-class="facet.icon" role="image"/>
                    <small t-else="" class="px-1" t-esc="facet.title"/>


                    <span t-if="facet.domain" class="position-absolute start-0 top-0 bottom-0 end-0 bg-inherit opacity-0 opacity-100-hover" t-att-class="{'px-2 transition-base': !facet.icon}">
                        <i class="fa fa-fw fa-cog"/>
                    </span>
                </div>

                <div class="o_facet_values position-relative d-flex flex-wrap align-items-center ps-2 rounded-end-2 text-wrap">
                    <t t-foreach="facet.values" t-as="facetValue" t-key="facetValue_index">
                        <em t-if="!facetValue_first" class="o_facet_values_sep small fw-bold mx-1 opacity-50" t-esc="facet.separator"/>
                        <small class="o_facet_value" t-esc="facetValue"/>
                    </t>
                    <button class="o_facet_remove oi oi-close btn btn-link py-0 px-2 text-danger" role="button" aria-label="Remove" title="Remove" t-on-click="() =&gt; this.onFacetRemove(facet)"/>
                </div>
            </div>
        </t>
    </t>

    <t t-name="web.SearchBar.Input">
        <input type="text" class="o_searchview_input o_input d-print-none flex-grow-1 w-auto border-0" accesskey="Q" placeholder="Search..." role="searchbox" t-ref="autofocus" t-on-keydown="onSearchKeydown" t-on-input="onSearchInput"/>
    </t>

    <t t-name="web.SearchBar.Items">
        <ul class="o-dropdown--menu dropdown-menu o_searchview_autocomplete show" role="menu">
            <t t-foreach="items" t-as="item" t-key="item.id">
                <li class="o_menu_item dropdown-item" t-att-class="{ o_indent: item.isChild, focus: item_index === state.focusedIndex}" t-att-id="item.id" t-on-click="() =&gt; this.selectItem(item)" t-on-mousemove="() =&gt; this.onItemMousemove(item_index)">
                    <t t-if="item.isParent">
                        <a t-att-class="{ o_expand: true, 'ms-4': item.isFieldProperty}" href="#" t-on-click.stop.prevent="() =&gt; this.toggleItem(item, !item.isExpanded)">
                            <i t-attf-class="fa fa-caret-{{ item.isExpanded ? 'down' : 'right' }}"/>
                        </a>
                    </t>
                    <a href="#" t-on-click.prevent="" t-att-class="{'ps-3 pe-2 text-truncate': item.isFieldProperty }" t-att-title="item.title">
                        <t t-if="item.isChild">
                            <t t-esc="item.label"/>
                        </t>
                        <t t-elif="!item.isFieldProperty"> Search </t> <b t-esc="item.searchItemDescription"/> <t t-if="item.preposition"> <t t-esc="item.preposition"/>: <b class="fst-italic text-primary" t-esc="item.label"/> </t>
                    </a>
                </li>
            </t>
        </ul>
    </t>

    <t t-name="web.SearchBar">
        <div class="o_cp_searchview d-flex input-group" role="search" t-ref="root">
            <div class="o_searchview form-control d-print-contents d-flex align-items-center py-1" role="search" aria-autocomplete="list">
                <i class="o_searchview_icon d-print-none oi oi-search me-2" role="img" aria-label="Search..." title="Search..."/>
                <div class="o_searchview_input_container d-flex flex-grow-1 flex-wrap gap-1">
                    <t t-call="web.SearchBar.Facets"/>
                    <t t-call="web.SearchBar.Input"/>
                    <t t-if="items.length">
                        <t t-call="web.SearchBar.Items"/>
                    </t>
                </div>
            </div>
            <SearchBarMenu>
                <t t-slot="search-bar-additional-menu"/>
            </SearchBarMenu>
        </div>
    </t>

<t t-name="web.SearchBar.Toggler">
        <button t-if="props.isSmall" t-attf-class="btn btn-secondary {{ props.showSearchBar ? 'active' : '' }}" t-on-click="props.toggleSearchBar">
            <i class="fa fa-fw fa-search"/>
        </button>
    </t>

<t t-name="web.SearchBarMenu">
        <Dropdown togglerClass="'o_searchview_dropdown_toggler d-print-none btn btn-outline-secondary o-no-caret rounded-start-0 h-100'" menuClass="'o_search_bar_menu d-flex flex-wrap flex-lg-nowrap w-100 w-md-auto mx-md-auto mt-2 py-3'" position="'bottom-end'" holdOnHover="true" t-if="this.env.searchModel.searchMenuTypes.size">
            <t t-set-slot="toggler" t-slot-scope="scope">
                <i class="fa fa-caret-down" aria-hidden="true" data-hotkey="shift+q" title="Toggle Search Panel"/>
            </t>

            <t t-if="this.env.searchModel.searchMenuTypes.has('filter')">
                <div class="o_dropdown_container o_filter_menu w-100 h-100 w-lg-auto px-3 mb-4 mb-lg-0 border-end">
                    <div class="px-3 fs-5 mb-2">
                        <i class="me-2 text-primary" t-att-class="facet_icons.filter"/>
                        <h5 class="o_dropdown_title d-inline">Filters</h5>
                    </div>
                    <t t-set="currentGroup" t-value="null"/>
                    <t t-foreach="filterItems" t-as="item" t-key="item.id">
                        <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                            <div class="dropdown-divider" role="separator"/>
                        </t>
                        <t t-if="item.options">
                            <AccordionItem class="'text-truncate'" description="item.description" selected="item.isActive">
                                <t t-set="subGroup" t-value="null"/>
                                <t t-foreach="item.options" t-as="option" t-key="option.id">
                                    <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                        <div class="dropdown-divider" role="separator"/>
                                    </t>
                                    <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" t-esc="option.description" checked="option.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id, optionId: option.id })"/>
                                    <t t-set="subGroup" t-value="option.groupNumber"/>
                                </t>
                            </AccordionItem>
                        </t>
                        <t t-else="">
                            <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" title="item.description.length &gt; 15 ? item.description : ''" onSelected="() =&gt; this.onFilterSelected({ itemId: item.id })"/>
                        </t>
                        <t t-set="currentGroup" t-value="item.groupNumber"/>
                    </t>
                    <t t-if="filterItems.length">
                        <div role="separator" class="dropdown-divider"/>
                    </t>
                    <DropdownItem class="'o_menu_item o_add_custom_filter'" onSelected.bind="onAddCustomFilterClick">Add Custom Filter</DropdownItem>
                </div>
            </t>

            <t t-if="this.env.searchModel.searchMenuTypes.has('groupBy')">
                <div class="o_dropdown_container o_group_by_menu w-100 h-100 w-lg-auto px-3 mb-4 mb-lg-0 border-end">
                    <div class="px-3 fs-5 mb-2">
                        <i class="me-2 text-action" t-att-class="facet_icons.groupBy"/>
                        <h5 class="o_dropdown_title d-inline">Group By</h5>
                    </div>
                    <t t-set="currentGroup" t-value="null"/>
                    <t t-foreach="groupByItems" t-as="item" t-key="item.id">
                        <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                            <div class="dropdown-divider" role="separator"/>
                        </t>
                        <t t-if="item.fieldType === 'properties'">
                            <PropertiesGroupByItem item="item" onGroup.bind="onGroupBySelected"/>
                        </t>
                        <t t-elif="item.options">
                            <AccordionItem class="'text-truncate'" description="item.description" selected="item.isActive">
                                <t t-set="subGroup" t-value="null"/>
                                <t t-foreach="item.options" t-as="option" t-key="option.id">
                                    <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                        <div class="dropdown-divider" role="separator"/>
                                    </t>
                                    <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive ? true : false" parentClosingMode="'none'" t-esc="option.description" title="option.description.length &gt; 15 ? option.description : ''" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id, optionId: option.id})"/>
                                    <t t-set="subGroup" t-value="option.groupNumber"/>
                                </t>
                            </AccordionItem>
                        </t>
                        <t t-else="">
                            <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" title="item.description.length &gt; 15 ? item.description : ''" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id })"/>
                        </t>
                        <t t-set="currentGroup" t-value="item.groupNumber"/>
                    </t>
                    <t t-if="!hideCustomGroupBy and fields.length">
                        <div t-if="groupByItems.length" role="separator" class="dropdown-divider"/>
                        <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
                    </t>
                </div>
            </t>

            <t t-if="showComparisonMenu">
                <div class="o_dropdown_container o_comparison_menu w-100 h-100 w-lg-auto px-3 border-end">
                    <div class="px-3 fs-5 mb-2">
                        <i class="me-2 text-danger" t-att-class="facet_icons.comparison"/>
                        <h5 class="o_dropdown_title d-inline">Comparison</h5>
                    </div>
                    <t t-foreach="comparisonItems" t-as="item" t-key="item.id">
                        <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" title="item.description.length &gt; 15 ? item.description : ''" onSelected="() =&gt; this.onComparisonSelected(item.id)"/>
                    </t>
                </div>
            </t>

            <t t-if="this.env.searchModel.searchMenuTypes.has('favorite')">
                <div class="o_dropdown_container o_favorite_menu w-100 h-100 w-lg-auto px-3">
                    <div class="px-3 fs-5 mb-2">
                        <i class="me-2 text-favourite" t-att-class="facet_icons.favorite"/>
                        <h5 class="o_dropdown_title d-inline">Favorites</h5>
                    </div>
                    <t t-set="currentGroup" t-value="null"/>
                    <t t-foreach="favoriteItems" t-as="item" t-key="item.id or item.key">
                        <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                            <div role="separator" class="dropdown-divider"/>
                        </t>
                        <t t-if="item.type ==='favorite'">
                            <CheckboxItem class="{ 'o_menu_item text-truncate': true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" onSelected="() =&gt; this.onFavoriteSelected(item.id)">
                                <span class="d-flex p-0 align-items-center justify-content-between">
                                    <span t-out="item.description" t-att-title="item.description.length &gt; 15 ? item.description : ''" class="text-truncate"/>
                                    <i class="ms-1 o_icon_right fa fa-trash-o" title="Delete item" t-on-click.stop="() =&gt; this.openConfirmationDialog(item.id)"/>
                                </span>
                            </CheckboxItem>
                        </t>
                        <t t-else="">
                            <t t-component="item.Component"/>
                        </t>
                        <t t-set="currentGroup" t-value="item.groupNumber"/>
                    </t>
                </div>
            </t>
            <t t-slot="default"/>
        </Dropdown>
    </t>

<t t-name="web.SearchPanel">
    <t t-if="env.isSmall">
        <t t-call="web.SearchPanel.Small"/>
    </t>
    <t t-else="">
        <t t-call="web.SearchPanel.Regular"/>
    </t>
</t>

<t t-name="web.SearchPanelContent">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 h-100 pb-5 bg-view overflow-auto" t-att-class="env.searchModel.searchPanelInfo.className" t-attf-class="#{env.isSmall ? 'px-3' : 'pe-1 ps-3'}" t-ref="root">
        <div t-if="!sections or sections.length === 0" class="o_search_panel_empty_state me-3">
            <button class="btn w-100 overflow-visible">
                <div class="d-flex align-items-center me-2 ms-auto">All</div>
            </button>
        </div>
        <section t-foreach="sections" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-primary': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <div t-if="section.errorMsg" class="alert alert-warning">
                <span><t t-esc="section.errorMsg"/></span>
            </div>
            <ul t-else="" class="list-group d-block o_search_panel_field">
                <t t-if="section.type === 'category'" t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="section.rootIds"/>
                </t>
                <t t-elif="section.groups">
                    <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                        <t t-set="_section" t-value="section"/>
                        <t t-set="group" t-value="section.groups.get(groupId)"/>
                        <header class="o_search_panel_group_header pb-1">
                            <div class="form-check w-100">

                                <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this.toggleFilterGroup(section.id, group)"/>
                                <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 cursor-pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                                    <span class="o_search_panel_label_title text-truncate" t-attf-class="{{ group.color_index ? 'o_tag o_badge badge rounded-pill o_tag_color_' + group.color_index : ''}}">
                                        <t t-esc="group.name"/>
                                    </span>
                                </label>
                            </div>
                        </header>
                        <ul class="list-group d-block">
                            <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                                <t t-set="values" t-value="group.values"/>
                                <t t-set="isChildList" t-value="true"/>

                                <t t-set="section" t-value="_section"/>
                            </t>
                        </ul>
                    </li>
                    <ul t-if="section.groups.get(false)" class="list-group d-block">
                        <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                            <t t-set="group" t-value="section.groups.get(false)"/>
                            <t t-set="values" t-value="group.values"/>

                            <t t-set="section" t-value="section"/>
                        </t>
                    </ul>
                </t>
                <t t-else="" t-call="{{ constructor.subTemplates.filtersGroup }}">
                    <t t-set="values" t-value="section.values"/>
                </t>
            </ul>
        </section>
    </div>
</t>

<t t-name="web.SearchPanel.Regular">
    <div class="o_search_panel flex-grow-0 flex-shrink-0 h-100 pb-5 bg-view overflow-auto" t-att-class="env.searchModel.searchPanelInfo.className" t-attf-class="#{env.isSmall ? 'px-3' : 'pe-1 ps-3'}" t-ref="root">
        <div t-if="!sections or sections.length === 0" class="o_search_panel_empty_state me-3">
            <button class="btn w-100 overflow-visible">
                <div class="d-flex align-items-center me-2 ms-auto">All</div>
            </button>
        </div>
        <section t-foreach="sections" t-as="section" t-key="section.id" t-attf-class="o_search_panel_section o_search_panel_{{ section.type }}">
            <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                <i t-attf-class="fa {{ section.icon }} o_search_panel_section_icon {{!section.color &amp;&amp; section.type == 'filter' ? 'text-warning' : !section.color ? 'text-primary': ''}} me-2" t-att-style="section.color and ('color: ' + section.color)"/>
                <b t-esc="section.description"/>
            </header>
            <div t-if="section.errorMsg" class="alert alert-warning">
                <span><t t-esc="section.errorMsg"/></span>
            </div>
            <ul t-else="" class="list-group d-block o_search_panel_field">
                <t t-if="section.type === 'category'" t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="section.rootIds"/>
                </t>
                <t t-elif="section.groups">
                    <li t-foreach="section.sortedGroupIds" t-as="groupId" t-key="groupId" class="o_search_panel_filter_group list-group-item p-0 border-0" t-att-class="groupId_last? 'mb-0' : 'mb-3'">

                        <t t-set="_section" t-value="section"/>
                        <t t-set="group" t-value="section.groups.get(groupId)"/>
                        <header class="o_search_panel_group_header pb-1">
                            <div class="form-check w-100">

                                <input type="checkbox" class="form-check-input" t-attf-id="{{ section.id }}_input_{{ groupId }})" t-on-click="() =&gt; this.toggleFilterGroup(section.id, group)"/>
                                <label t-attf-for="{{ section.id }}_input_{{ groupId }})" class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 cursor-pointer" t-att-class="{ o_with_counters: group.enableCounters }" t-att-title="group.tooltip or false">
                                    <span class="o_search_panel_label_title text-truncate" t-attf-class="{{ group.color_index ? 'o_tag o_badge badge rounded-pill o_tag_color_' + group.color_index : ''}}">
                                        <t t-esc="group.name"/>
                                    </span>
                                </label>
                            </div>
                        </header>
                        <ul class="list-group d-block">
                            <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                                <t t-set="values" t-value="group.values"/>
                                <t t-set="isChildList" t-value="true"/>

                                <t t-set="section" t-value="_section"/>
                            </t>
                        </ul>
                    </li>
                    <ul t-if="section.groups.get(false)" class="list-group d-block">
                        <t t-call="{{ constructor.subTemplates.filtersGroup }}">
                            <t t-set="group" t-value="section.groups.get(false)"/>
                            <t t-set="values" t-value="group.values"/>

                            <t t-set="section" t-value="section"/>
                        </t>
                    </ul>
                </t>
                <t t-else="" t-call="{{ constructor.subTemplates.filtersGroup }}">
                    <t t-set="values" t-value="section.values"/>
                </t>
            </ul>
        </section>
    </div>
</t>

<t t-name="web.SearchPanel.Small">
    <t t-if="state.showMobileSearch">
        <t t-portal="'body'">
            <div class="o_search_panel o_searchview o_mobile_search" t-ref="root">
                <div class="o_mobile_search_header">
                    <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; state.showMobileSearch = false">
                        <i class="oi oi-arrow-left"/>
                        <strong class="ms-2">FILTER</strong>
                    </button>
                </div>
                <div class="o_mobile_search_content">
                    <t t-call="web.SearchPanelContent"/>
                </div>
                <button type="button" class="btn btn-primary o_mobile_search_footer" t-on-click.stop="() =&gt; state.showMobileSearch = false">
                    <t>SEE RESULT</t>
                </button>
            </div>
        </t>
    </t>

    <t t-else="">
        <button class="o_search_panel o_search_panel_summary btn w-100 overflow-visible" t-on-click="() =&gt; state.showMobileSearch = true" t-ref="root">
            <t t-set="categories" t-value="getCategorySelection()"/>
            <t t-set="filters" t-value="getFilterSelection()"/>
            <div class="d-flex align-items-center">
                <i class="fa fa-fw fa-filter"/>
                <div class="o_search_panel_current_selection text-truncate ms-2 me-auto">
                    <t t-if="!categories.length and !filters.length">All</t>
                    <t t-else="">
                        <t t-foreach="categories" t-as="category" t-key="category.id">
                            <span class="o_search_panel_category me-1">
                                <i t-if="category.icon" t-attf-class="o_search_panel_section_icon fa {{ category.icon }} me-1" t-att-style="category.color and ('color: ' + category.color)"/>
                                <t t-esc="category.values.join('/')"/>
                            </span>
                        </t>
                        <t t-foreach="filters" t-as="filter" t-key="filter.id">
                            <span class="o_search_panel_filter me-1">
                                <i t-if="filter.icon" t-attf-class="o_search_panel_section_icon fa {{ filter.icon }} me-1" t-att-style="filter.color and ('color: ' + filter.color)"/>
                                <t t-esc="filter.values.join(', ')"/>
                            </span>
                        </t>
                    </t>
                </div>
            </div>
        </button>
    </t>
</t>

<t t-name="web.SearchPanel.Category">
    <t t-foreach="values" t-as="valueId" t-key="valueId">
        <t t-set="value" t-value="section.values.get(valueId)"/>
        <li class="o_search_panel_category_value list-group-item py-1 cursor-pointer border-0 pe-0" t-att-class="isChildList ? 'o_treeEntry' : 'ps-0'">
            <header class="list-group-item list-group-item-action d-flex align-items-center px-0 py-lg-0 border-0" t-att-class="{'active text-900 fw-bold': state.active[section.id] === valueId}" t-on-click="() =&gt; this.toggleCategory(section, value)">
                <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 cursor-pointer mb-0" t-att-class="{'o_with_counters': section.enableCounters }">
                    <button class="o_toggle_fold btn p-0 flex-shrink-0 text-center">
                        <i t-if="value.childrenIds.length" class="fa" t-att-class="{                                 'fa-caret-down' : state.expanded[section.id][valueId],                                 'fa-caret-right':  !state.expanded[section.id][valueId]                             }"/>
                    </button>
                    <span class="o_search_panel_label_title text-truncate" t-att-class="{'fw-bold' : value.bold}" t-esc="value.display_name" t-att-data-tooltip="value.display_name"/>
                </div>
                <small t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 fw-bold" t-esc="value.__count"/>
            </header>
            <ul t-if="value.childrenIds.length and state.expanded[section.id][valueId]" class="list-group d-block">
                <t t-call="{{ constructor.subTemplates.category }}">
                    <t t-set="values" t-value="value.childrenIds"/>
                    <t t-set="isChildList" t-value="true"/>
                </t>
            </ul>
        </li>
    </t>
</t>

<t t-name="web.SearchPanel.FiltersGroup">
    <li t-foreach="[...values.keys()]" t-as="valueId" t-key="valueId" class="o_search_panel_filter_value list-group-item p-0 mb-1 border-0 cursor-pointer" t-att-class="{ 'ps-2' : isChildList }">
        <t t-set="value" t-value="values.get(valueId)"/>
        <div class="form-check w-100">
            <input type="checkbox" t-attf-id="{{ section.id }}_input_{{ valueId }}" t-att-checked="state.active[section.id][valueId]" class="form-check-input" t-on-click="ev =&gt; this.toggleFilterValue(section.id, valueId, ev)"/>
            <label class="o_search_panel_label form-check-label d-flex align-items-center justify-content-between w-100 cursor-pointer" t-attf-for="{{ section.id }}_input_{{ valueId }}" t-att-title="(group and group.tooltip) or false">
                <span class="o_search_panel_label_title text-truncate" t-esc="value.display_name"/>
                <span t-if="section.enableCounters and value.__count gt 0" class="o_search_panel_counter text-muted mx-2 small" t-esc="value.__count"/>
            </label>
        </div>
    </li>
</t>

<t t-name="web.WithSearch">
    <t t-slot="default" context="searchModel.context" domain="searchModel.domain" groupBy="searchModel.groupBy" orderBy="searchModel.orderBy" comparison="searchModel.comparison" display="searchModel.display"/>
  </t>

<t t-name="web.CalendarCommonPopover">
        <t t-if="env.isSmall">
            <Dialog title="props.record.title" contentClass="'o_calendar_color_'+ props.record.colorIndex">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    <t t-name="web.CalendarCommonPopover.popover">
        <div class="card-header d-flex justify-content-between py-2 pe-2">
            <span class="popover-header border-0 text-truncate" t-esc="props.record.title" t-att-data-tooltip="props.record.title"/>
            <span class="o_cw_popover_close ms-4 mt-2 me-2" t-on-click.stop="() =&gt; props.close()">
                <i class="fc-close fc-icon fc-icon-x"/>
            </span>
        </div>
        <div class="o_cw_body">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <div class="card-footer d-flex gap-1 border-top" t-att-class="{ 'o_footer_shrink': !hasFooter }">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </div>
        </div>
    </t>

    <t t-name="web.CalendarCommonPopover.body">
        <ul class="list-group list-group-flush">
            <li t-if="date" class="list-group-item">
                <i class="fa fa-fw fa-calendar text-400"/>
                <span class="fw-bold ms-2" t-esc="date"/> <small t-if="dateDuration != 'All day'"><b t-esc="dateDuration"/></small>
            </li>
            <li t-if="time" class="list-group-item">
                <i class="fa fa-fw fa-clock-o text-400"/>
                <span class="fw-bold ms-2" t-esc="time"/> <small t-if="timeDuration"><b t-esc="\`(\${timeDuration})\`"/></small>
            </li>
        </ul>
        <ul class="list-group list-group-flush o_cw_popover_fields_secondary">
            <Record resModel="props.model.resModel" resId="props.record.id" fields="props.model.fields" activeFields="activeFields" mode="'readonly'" values="props.record.rawRecord" t-slot-scope="slot">
                <t t-foreach="Object.keys(props.model.popoverFieldNodes)" t-as="fieldId" t-key="fieldId">
                    <t t-set="fieldInfo" t-value="props.model.popoverFieldNodes[fieldId]"/>
                    <t t-if="!isInvisible(fieldInfo, slot.record)">
                        <li class="list-group-item d-flex text-nowrap align-items-center" t-att-class="fieldInfo.attrs.class" t-att-data-tooltip="getFormattedValue(fieldId, slot.record)">
                            <span class="fw-bold me-2" t-if="!fieldInfo.options.noLabel">
                                <t t-if="fieldInfo.options.icon">
                                    <i t-attf-class="fa-fw {{fieldInfo.options.icon}} text-400"/>
                                </t>
                                <t t-else="">
                                    <t t-esc="fieldInfo.string"/>
                                </t>
                            </span>
                            <div class="flex-grow-1 role-container text-truncate">
                                <Field name="fieldInfo.name" class="'w-100'" record="slot.record" fieldInfo="fieldInfo" type="fieldInfo.widget"/>
                            </div>
                        </li>
                    </t>
                </t>
            </Record>
        </ul>
    </t>

    <t t-name="web.CalendarCommonPopover.footer">
        <t t-if="isEventEditable">
            <a href="#" class="btn btn-primary o_cw_popover_edit" t-on-click="onEditEvent">Edit</a>
        </t>
        <t t-if="isEventDeletable">
            <a href="#" class="btn btn-secondary o_cw_popover_delete" t-on-click="onDeleteEvent">Delete</a>
        </t>
    </t>

<t t-name="web.CalendarCommonRenderer">
        <div class="o_calendar_widget" t-ref="fullCalendar"/>
    </t>

    <t t-name="web.CalendarCommonRenderer.event">
        <div class="fc-content" t-att-class="isMonth ? 'd-flex gap-1 text-truncate' : ''">
            <t t-if="!isTimeHidden">
                <span class="d-none d-lg-inline fc-time" t-esc="startTime"/>
                <t> </t>
            </t>
            <div class="o_event_title text-truncate" t-out="title"/>
        </div>
    </t>

    <t t-name="web.CalendarCommonRendererHeader">
        <span class="o_cw_day_name" t-esc="scale == 'day' ? weekdayLong : weekdayShort "/> <span t-if="scale != 'month'" class="fc-day-number o_cw_day_number" t-esc="day"/>
    </t>

<t t-name="web.CalendarController">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <div class="o_calendar_container d-flex d-md-grid flex-column h-100 bg-view">
                    <div class="o_calendar_header d-flex align-items-center gap-1 px-3 py-2 border-bottom">
                        <div t-if="!env.isSmall" class="o_calendar_navigation_buttons btn-group">
                            <button class="o_calendar_button_prev btn btn-secondary d-none d-md-block" title="Previous" aria-label="Previous" t-on-click.stop="() =&gt; this.setDate('previous')"><i class="oi oi-arrow-left"/></button>
                            <button class="o_calendar_button_next btn btn-secondary d-none d-md-block" title="Next" aria-label="Next" t-on-click.stop="() =&gt; this.setDate('next')"><i class="oi oi-arrow-right"/></button>
                        </div>
                        <ViewScaleSelector scales="scales" currentScale="model.scale" isWeekendVisible="state.isWeekendVisible" setScale.bind="setScale" toggleWeekendVisibility.bind="toggleWeekendVisibility" dropdownClass="'order-3 order-lg-0'"/>
                        <button class="btn btn-secondary o_calendar_button_today order-2 order-lg-0 ms-auto ms-lg-0" t-att-class="env.isSmall ? 'btn-sm btn-light' : 'btn-secondary'" t-on-click.stop="() =&gt; this.setDate('today')">   <span t-if="env.isSmall" class="position-relative pt-1"><t t-esc="today"/><i class="fa fa-calendar-o position-absolute top-50 start-50 translate-middle fs-1"/></span>
                            <t t-else="">Today</t>
                        </button>
                        <h5 class="d-inline-flex ms-lg-2 mb-0">
                            <t t-if="model.meta.scale === 'year'">
                                <t t-esc="currentYear"/>
                            </t>
                            <t t-elif="model.meta.scale === 'month'">
                                <t t-esc="currentMonth"/>
                            </t>
                            <t t-elif="model.meta.scale === 'week'">
                                <t t-esc="weekHeader"/> <span t-if="model.meta.scale === 'week'" class="badge bg-100 rounded px-1 ms-1">Week <t t-esc="currentWeek"/></span>
                            </t>
                            <t t-else="">
                                <t t-esc="dayHeader"/>
                            </t>
                        </h5>
                        <button class="btn btn-light d-none d-md-block order-4 oi oi-panel-right ms-lg-auto collapsed lh-base" t-on-click="toggleSideBar"/>
                    </div>
                    <MobileFilterPanel t-if="env.isSmall" t-props="mobileFilterPanelProps"/>
                    <t t-if="showCalendar" t-component="props.Renderer" t-props="rendererProps"/>
                    <div t-if="showSideBar" class="o_calendar_sidebar_container col-auto overflow-x-hidden overflow-y-auto">
                        <div class="o_calendar_sidebar">
                            <DatePicker t-if="!env.isSmall" t-props="datePickerProps"/>
                            <FilterPanel t-props="filterPanelProps"/>
                        </div>
                    </div>
                </div>
            </Layout>
        </div>
    </t>

    <t t-name="web.CalendarController.controlButtons"/>

<t t-name="web.CalendarRenderer">
        <div class="o_calendar_renderer h-100">
            <ActionSwiper t-props="actionSwiperProps">
                <t t-component="calendarComponent" t-props="props" t-key="calendarKey"/>
            </ActionSwiper>
        </div>
    </t>

<t t-name="web.CalendarYearPopover">
        <t t-if="env.isSmall">
            <Dialog title="dialogTitle">
                <t t-call="{{ constructor.subTemplates.body }}"/>
                <t t-set-slot="footer">
                    <t t-call="{{ constructor.subTemplates.footer }}"/>
                </t>
            </Dialog>
        </t>
        <t t-else="">
            <t t-call="{{ constructor.subTemplates.popover }}"/>
        </t>
    </t>

    <t t-name="web.CalendarYearPopover.popover">
        <div class="position-absolute" style="top: .75rem; right: 1rem;">
            <span class="o_cw_popover_close" t-on-click.stop="() =&gt; props.close()">
                <i class="fc-close fc-icon fc-icon-x"/>
            </span>
        </div>
        <div class="o_cw_body popover-body d-flex flex-column gap-2">
            <t t-call="{{ constructor.subTemplates.body }}"/>
            <t t-if="props.model.canCreate">
                <t t-call="{{ constructor.subTemplates.footer }}"/>
            </t>
        </div>
    </t>

    <t t-name="web.CalendarYearPopover.body">
        <div t-foreach="recordGroups" t-as="recordGroup" t-key="recordGroup.title">
            <h5 t-out="recordGroup.title"/>
            <t t-foreach="recordGroup.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.subTemplates.record }}"/>
            </t>
        </div>
    </t>

    <t t-name="web.CalendarYearPopover.footer">
        <t t-if="props.model.canCreate">
            <a href="#" class="btn-link o_cw_popover_create" t-on-click.prevent="onCreateButtonClick">
                <i class="fa fa-plus"/>
                Create
            </a>
        </t>
        <t t-else="">
            <button class="btn btn-primary o-default-button" t-on-click="props.close">
                <t>Ok</t>
            </button>
        </t>
    </t>

    <t t-name="web.CalendarYearPopover.record">
        <a href="#" t-on-click.prevent="() =&gt; this.onRecordClick(record)" t-attf-style="{{ getRecordStyle(record) }}" t-attf-class="o_cw_popover_link d-flex align-items-center gap-1 {{ getRecordClass(record) }} {{record.startHour ? 'o_event_dot' : 'o_event_allday'}}" t-att-data-id="record.id" t-att-data-title="record.title">
            <span t-if="record.startHour"><t t-out="record.startHour"/></span>
            <span t-esc="record.title"/>
        </a>
    </t>

<t t-name="web.CalendarYearRenderer">
        <div class="o_calendar_widget overflow-y-auto" t-ref="root">
            <div class="fc-view-container">
                <div class="fc fc-dayGridYear-view d-flex flex-wrap justify-content-evenly gap-3 px-2 py-3">
                    <t t-foreach="months" t-as="month" t-key="month">
                        <div class="fc-month-container">
                            <div class="fc-month" t-ref="fullCalendar-{{ month }}"/>
                        </div>
                    </t>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.CalendarFilterPanel">
        <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
            <t t-if="section.filters.length gt 0">
                <div class="o_calendar_filter d-flex flex-column gap-1 mt-4 mb-2" t-att-class="{'o-calendar-filter-panel--section-collapsed': isSectionCollapsed(section)}" t-att-data-name="section.fieldName">
                    <t t-if="section.label">
                        <div class="o_calendar_filter_items_checkall o-checkbox form-check" data-value="section">
                            <t t-set="filterId" t-value="nextFilterId"/>
                            <input type="checkbox" name="select-all" class="form-check-input" t-attf-id="o_calendar_filter_{{filterId}}" t-att-checked="isAllActive(section)" t-on-change="(ev) =&gt; this.onAllFilterInputChange(section, ev)"/>
                             <t t-if="section.canCollapse">
                                <label class="d-flex align-items-center" type="button" t-on-click.stop.prevent="() =&gt; this.toggleSection(section, ev)">
                                    <span class="o_cw_filter_label fw-bolder" t-esc="section.label"/>
                                    <i class="o_cw_filter_collapse_icon fa ms-1" t-attf-class="fa-caret-{{ isSectionCollapsed(section) ? 'left' : 'down' }}"/>
                                </label>
                            </t>
                            <t t-else="">
                                <label class="o_cw_filter_label fw-bolder" t-esc="section.label"/>
                            </t>
                        </div>
                    </t>
                    <Transition visible="!isSectionCollapsed(section)" name="'o-section-slide'" leaveDuration="350" t-slot-scope="transition">
                        <div class="o_calendar_filter_items d-flex flex-column gap-1" t-att-class="transition.className">
                            <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                                <t t-set="filterId" t-value="nextFilterId"/>
                                <t t-call="{{ constructor.subTemplates.filter }}"/>
                            </t>
                        </div>
                    </Transition>
                    <t t-if="section.canAddFilter">
                        <AutoComplete t-props="getAutoCompleteProps(section)"/>
                    </t>
                </div>
            </t>
        </t>
    </t>

    <t t-name="web.CalendarFilterPanel.filter">
        <div class="o_calendar_filter_item o-checkbox form-check position-relative w-100 overflow-hidden cursor-pointer" t-att-class="getFilterColor(filter)" t-att-data-value="filter.value">
            <input type="checkbox" name="selection" class="o_cw_filter_input_bg form-check-input" t-att-style="filter.colorIndex and typeof filter.colorIndex !== 'number' ? \`border-color: \${filter.colorIndex}; background-color: \${filter.colorIndex};\` : ''" t-attf-id="o_calendar_filter_item_{{filterId}}" t-att-checked="filter.active" t-on-change="(ev) =&gt; this.onFilterInputChange(section, filter, ev)"/>
            <label class="d-flex align-items-center gap-1" t-attf-for="o_calendar_filter_item_{{filterId}}">
                <t t-if="section.hasAvatar and filter.hasAvatar">
                    <img class="o_cw_filter_avatar o_avatar rounded" t-attf-src="/web/image/{{ section.avatar.model }}/{{ filter.value }}/{{ section.avatar.field }}" alt="Avatar"/>
                </t>
                <t t-elif="filter.type === 'all'">
                    <i class="o_cw_filter_avatar o_avatar fa fa-users fa-fw flex-shrink-0 me-1" role="img" aria-label="Avatar" title="Avatar"/>
                </t>
                <span class="o_cw_filter_title flex-grow-1 text-truncate lh-base" t-esc="filter.label"/>
            </label>
            <t t-if="filter.canRemove">
                <button class="o_remove btn position-absolute top-50 end-0 py-0 px-2 bg-view text-700 transition-base" role="img" title="Remove this favorite from the list" aria-label="Remove this favorite from the list" t-on-click="() =&gt; this.onFilterRemoveBtnClick(section, filter)">
                    <i class="oi oi-close"/>
                </button>
            </t>
        </div>
    </t>

<t t-name="web.CalendarMobileFilterPanel">
        <div class="o_other_calendar_panel d-flex align-items-center" t-on-click="props.toggleSideBar">
            <div class="o_filter me-auto d-flex overflow-auto">
                <t t-foreach="props.model.filterSections" t-as="section" t-key="section.fieldName">
                    <t t-if="section.filters.length gt 0">

                        <t t-foreach="getSortedFilters(section)" t-as="filter" t-key="filter.value">
                            <span t-if="filter.active" class="d-flex align-items-center text-nowrap ms-1 me-2">
                                <i class="fa fa-fw" t-att-class="getFilterColor(filter) !== 'o_color_false' ? 'fa-circle ' + getFilterColor(filter) : 'fa-circle-o'"/>
                                <span class="ms-1 fw-bold text-nowrap" t-esc="filter.label"/>
                            </span>
                        </t>
                    </t>
                </t>
            </div>
            <i t-attf-class="oi fa-fw oi-chevron-{{caretDirection}} ms-2"/>
        </div>
    </t>

<t t-name="web.CalendarQuickCreate">
        <Dialog size="'sm'" title="dialogTitle">
            <div class="o-calendar-quick-create mb-3">
                <label for="title" class="col-form-label o_form_label">
                    Name:
                </label>
                <input type="text" class="o_input o_required_modifier o-calendar-quick-create--input" name="title" t-ref="title" t-on-keyup="onInputKeyup" t-att-value="props.title"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o-calendar-quick-create--create-btn" t-on-click="onCreateBtnClick">
                    Create
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--edit-btn" t-on-click="onEditBtnClick">
                    Edit
                </button>
                <button class="btn btn-secondary o-calendar-quick-create--cancel-btn" t-on-click="onCancelBtnClick">
                    Cancel
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.AceField">

        <div class="o_field_widget oe_form_field o_ace_view_editor oe_ace_open">
            <CodeEditor value="state.initialValue" mode="mode" readonly="props.readonly" onBlur.bind="commitChanges" onChange.bind="handleChange" class="'ace-view-editor'" theme="theme" maxLines="200"/>
        </div>
    </t>

<t t-name="web.AttachmentImageField">
        <div class="o_attachment_image">
            <img t-if="props.record.data[props.name]" t-attf-src="/web/image/{{ props.record.data[props.name][0] }}?unique=1" t-att-title="!!env.debug and props.record.data[props.name][1]" alt="Image"/>
        </div>
    </t>

<t t-name="web.BadgeField">
        <span t-if="props.record.data[props.name]" class="badge rounded-pill" t-att-class="classFromDecoration" t-esc="formattedValue"/>
    </t>

<div t-name="web.BadgeSelectionField" class="d-flex flex-wrap gap-1 mb-3">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <t t-foreach="options" t-as="option" t-key="option[0]">
                <span class="o_selection_badge btn btn-secondary mb-1" t-att-class="{ 'active': value === option[0], 'btn-sm': props.size === 'sm', 'btn-lg': props.size === 'lg' }" t-att-value="stringify(option[0])" t-esc="option[1]" t-on-click="() =&gt; this.onChange(option[0])"/>
            </t>
        </t>
    </div>

<t t-name="web.BinaryField">
        <t t-if="!props.readonly">
            <t t-if="props.record.data[props.name]">
                <div class="w-100 d-inline-flex gap-1">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t name="download" t-if="props.record.resId and !props.record.dirty">
                            <button class="btn btn-link btn-sm lh-1 fa fa-download o_download_file_button" data-tooltip="Download" aria-label="Download" t-on-click="onFileDownload">
                            </button>
                        </t>
                        <t t-set-slot="toggler">
                            <input type="text" class="o_input" t-att-value="fileName" readonly="readonly"/>
                            <button class="btn btn-link btn-sm lh-1 fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit">
                            </button>
                        </t>
                        <button class="btn btn-link btn-sm lh-1 fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="() =&gt; this.update({})">
                        </button>
                    </FileUploader>
                </div>
            </t>
            <t t-else="">
                <label class="o_select_file_button btn btn-primary">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t t-set-slot="toggler">
                            Upload your file
                        </t>
                    </FileUploader>
                </label>
            </t>
        </t>
        <t t-elif="props.record.resId and props.record.data[props.name]">
            <a class="o_form_uri" href="#" t-on-click.prevent="onFileDownload">
                <span class="fa fa-download me-2"/>
                <t t-if="fileName" t-esc="fileName"/>
            </a>
        </t>
    </t>

    <t t-name="web.ListBinaryField">
        <t t-if="!props.readonly">
            <t t-if="props.record.data[props.name]">
                <div class="w-100 d-inline-flex gap-1">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t name="download" t-if="props.record.resId and !props.record.dirty">
                            <button class="btn btn-link btn-sm lh-1 fa fa-download o_download_file_button" data-tooltip="Download" aria-label="Download" t-on-click="onFileDownload">
                            </button>
                        </t>
                        <t t-set-slot="toggler">
                            <input type="text" class="o_input" t-att-value="fileName" readonly="readonly"/>
                            <button class="btn btn-link btn-sm lh-1 fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit">
                            </button>
                        </t>
                        <button class="btn btn-link btn-sm lh-1 fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="() =&gt; this.update({})">
                        </button>
                    </FileUploader>
                </div>
            </t>
            <t t-else="">
                <label class="o_select_file_button btn btn-sm btn-link p-0">
                <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                    <t t-set-slot="toggler">
                        <i class="fa fa-upload fa-fw"/> Upload your file
                    </t>
                </FileUploader>
            </label>
        </t>
        </t>
        <t t-elif="props.record.resId and props.record.data[props.name]">
            <a class="o_form_uri" href="#" t-on-click.prevent="onFileDownload">
                <span class="fa fa-download me-2"/>
                <t t-if="fileName" t-esc="fileName"/>
            </a>
        </t>
    </t>

    <t t-name="web.BooleanField">
        <CheckBox id="props.id" value="state.value" className="'d-inline-block'" disabled="props.readonly" onChange.bind="onChange"/>
    </t>

<t t-name="web.BooleanFavoriteField">
        <div class="o_favorite" t-on-click.prevent.stop="update">
            <a href="#">
                <t t-if="props.record.data[props.name]">
                    <i class="fa fa-star me-1" role="img" title="Remove from Favorites" aria-label="Remove from Favorites"/>
                    <t t-if="!props.noLabel">Remove from Favorites</t>
                </t>
                <t t-else="">
                    <i class="fa fa-star-o me-1" role="img" title="Add to Favorites" aria-label="Add to Favorites"/>
                    <t t-if="!props.noLabel">Add to Favorites</t>
                </t>
            </a>
        </div>
    </t>

<t t-name="web.BooleanIconField">
        <button t-attf-class="btn btn-sm btn-{{props.record.data[props.name] ? 'primary' : 'outline-secondary'}} mx-2 py-1 fa {{props.icon}}" t-att-data-tooltip="props.label" t-on-click.prevent.stop="update"/>
    </t>

<t t-name="web.BooleanToggleField">
        <CheckBox id="props.id" value="state.value" className="'o_field_boolean o_boolean_toggle form-switch'" disabled="props.readonly" onChange.bind="onChange">
            ​ 
        </CheckBox>
    </t>

<t t-name="web.ListBooleanToggleField">
        <div t-on-click="onClick">
            <t t-call="web.BooleanToggleField"/>
        </div>
    </t>

<t t-name="web.CharField">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <input class="o_input" t-att-class="{'o_field_translate': isTranslatable}" t-att-id="props.id" t-att-type="props.isPassword ? 'password' : 'text'" t-att-autocomplete="props.autocomplete or (props.isPassword ? 'new-password' : 'off')" t-att-maxlength="maxLength &gt; 0 and maxLength" t-att-placeholder="props.placeholder" t-ref="input"/>
            <t t-if="isTranslatable">
                <TranslationButton fieldName="props.name" record="props.record"/>
            </t>
        </t>
    </t>

<t t-name="web.ColorField">
        <div class="o_field_color d-flex" t-att-class="{ 'o_field_cursor_disabled': props.readonly }" t-attf-style="background: #{color or 'url(/web/static/img/transparent.png)'}">
            <input t-on-click.stop="" class="w-100 h-100 opacity-0" type="color" t-att-value="color" t-att-disabled="props.readonly" t-on-input="(ev) =&gt; this.color = ev.target.value" t-on-change="(ev) =&gt; this.props.record.update({ [this.props.name]: ev.target.value })"/>
        </div>
    </t>

<t t-name="web.ColorPickerField">
        <ColorList canToggle="props.canToggle" colors="constructor.RECORD_COLORS" forceExpanded="isExpanded" onColorSelected.bind="switchColor" selectedColor="props.record.data[props.name] || 0"/>
    </t>

<t t-name="web.CopyButton">
        <button class="text-nowrap" t-ref="button" t-att-disabled="props.disabled" t-attf-class="btn btn-primary o_clipboard_button {{ props.className || '' }}" t-on-click.stop="onClick">
            <span class="fa fa-clipboard mx-1"/>
            <span t-esc="props.copyText"/>
        </button>
    </t>

<t t-name="web.CopyClipboardField">
        <div class="d-grid rounded-2 overflow-hidden">
            <Field t-props="fieldProps"/>
            <CopyButton className="copyButtonClassName" content="props.record.data[props.name]" copyText="copyText" successText="successText"/>
        </div>
    </t>

    <t t-name="web.CopyClipboardButtonField">
        <CopyButton t-if="props.record.data[props.name]" className="copyButtonClassName" content="props.record.data[props.name]" copyText="copyText" disabled="disabled" successText="successText"/>
    </t>

<t t-name="web.DateTimeField">
        <t t-set="showSeparator" t-value="shouldShowSeparator()"/>
        <div class="d-flex gap-2 align-items-center" t-ref="root">

            <t t-if="props.readonly">
                <span class="text-truncate" t-esc="getFormattedValue(0)"/>
            </t>
            <t t-elif="!props.required and !props.alwaysRange and isEmpty(startDateField) and !isEmpty(endDateField)">
                <button class="o_add_date o_add_start_date btn btn-secondary btn-sm w-100" t-on-click="() =&gt; this.addDate(0)">
                    <i class="fa fa-plus me-2"/>
                    Add start date
                </button>
            </t>
            <t t-elif="props.required or props.alwaysRange or !isEmpty(startDateField) or startDateField === props.name">
                <input t-ref="start-date" type="text" t-att-id="showSeparator ? props.endDateField and props.id : props.id" class="o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder" t-att-data-field="startDateField" t-on-input="onInput"/>
                <span t-if="props.warnFuture and isDateInTheFuture(0)" class="fa fa-exclamation-triangle text-danger" title="This date is on the future. Make sure it is what you expected."/>
            </t>


            <t t-if="showSeparator">
                <i class="fa fa-long-arrow-right" aria-label="Arrow icon" title="Arrow"/>
            </t>


            <t t-if="endDateField">
                <t t-if="props.readonly">
                    <span class="text-truncate" t-esc="getFormattedValue(1)"/>
                </t>
                <t t-elif="!props.required and !props.alwaysRange and !isEmpty(startDateField) and isEmpty(endDateField)">
                    <button class="o_add_date o_add_end_date btn btn-secondary btn-sm w-100" t-on-click="() =&gt; this.addDate(1)">
                        <i class="fa fa-plus me-2"/>
                        Add end date
                    </button>
                </t>
                <t t-elif="props.required or props.alwaysRange or !isEmpty(endDateField) or endDateField === props.name">
                    <input t-ref="end-date" type="text" t-att-id="props.startDateField and props.id" class="o_input cursor-pointer" autocomplete="off" t-att-placeholder="props.placeholder" t-att-data-field="endDateField" t-on-input="onInput"/>
                    <span t-if="props.warnFuture and isDateInTheFuture(1)" class="fa fa-exclamation-triangle text-danger" title="This date is on the future. Make sure it is what you expected."/>
                </t>
            </t>
        </div>
    </t>
<t t-name="web.DomainField">
        <div t-att-class="{ o_inline_mode: !props.editInDialog }">
            <t t-set="resModel" t-value="getResModel()"/>
            <t t-if="resModel">
                <t t-if="props.isFoldable and state.folded and state.isValid">
                    <div class="d-flex align-items-center" t-on-click="() =&gt; state.folded = false">
                        <i data-tooltip="Modify filter" class="fa fa-lg fa-caret-right pe-2"/>
                        <div class="d-print-contents">
                            <t t-if="!state.facets.length">
                                <span>Match <strong>all records</strong></span>
                                <t t-if="!props.readonly">
                                    <button class="btn btn-sm btn-primary o_domain_add_first_node_button mx-2" t-on-click.stop="() =&gt; this.addCondition()">
                                        <i class="fa fa-plus"/> Add condition
                                    </button>
                                </t>
                            </t>
                            <t t-foreach="state.facets" t-as="facet" t-key="facet_index">
                                <div class="d-inline-flex align-items-stretch text-nowrap px-1 position-relative" role="listitem" tabindex="0">
                                    <div class="o_searchview_facet_label rounded-start-2 btn btn-primary rounded-end-0 p-0" role="button">
                                        <i class="px-1 small fa fa-filter" role="image"/>
                                    </div>
                                    <div class="o_facet_values d-flex align-items-center px-2 bg-200 rounded-end-2 text-wrap">
                                        <small class="o_facet_value" t-esc="facet"/>
                                    </div>
                                </div>
                            </t>
                            <t t-if="state.isValid">
                                <button class="btn btn-sm btn-link o_domain_show_selection_button" data-tooltip="Show matching records" type="button" t-on-click.stop="onButtonClick">
                                    <t t-esc="state.recordCount"/> record(s)
                                </button>
                            </t>
                        </div>
                    </div>
                </t>
                <t t-else="">
                    <div class="d-flex">
                        <a t-if="props.isFoldable and state.isValid" t-on-click="fold">
                            <i class="fa fa-lg fa-caret-down pe-2"/>
                        </a>
                        <DomainSelector resModel="resModel" domain="getDomain()" readonly="props.readonly or props.editInDialog" update.bind="update" isDebugMode="!!env.debug" className="props.readonly ? 'o_read_mode' : 'o_edit_mode'"/>
                    </div>
                    <div class="o_field_domain_panel d-flex align-items-center gap-2 mt-1">
                        <i class="oi oi-arrow-right" role="img" aria-label="Domain" title="Domain"/>
                        <t t-if="state.isValid === null and state.recordCount === null">
                            <i class="fa fa-circle-o-notch fa-spin ms-2" role="img" aria-label="Loading" title="Loading"/>
                        </t>
                        <t t-else="">
                            <t t-if="state.isValid">
                                <button class="btn btn-sm btn-link o_domain_show_selection_button" type="button" t-on-click.stop="onButtonClick">
                                    <t t-esc="state.recordCount"/> record(s)
                                </button>
                            </t>
                            <t t-else="">
                                <span class="text-warning" role="alert">
                                    <i class="fa fa-exclamation-triangle" role="img" aria-label="Warning" title="Warning"/> Invalid domain
                                </span>
                            </t>
                            <t t-if="!!env.debug and !props.readonly">
                                <button class="btn btn-sm btn-icon fa fa-refresh o_refresh_count" role="img" aria-label="Refresh" title="Refresh" t-on-click="() =&gt; this.checkProps()"/>
                            </t>
                        </t>
                        <t t-if="props.editInDialog and !props.readonly">
                            <button class="btn btn-sm btn-primary o_field_domain_dialog_button" t-on-click.prevent="onEditDialogBtnClick">Edit Domain</button>
                        </t>
                    </div>
                </t>
            </t>
            <t t-else="">
                <div>Select a model to add a filter.</div>
            </t>
        </div>
    </t>

<t t-name="web.DynamicPlaceholderPopover">
        <t t-if="state.isPathSelected">
            <div class="o_model_field_selector_popover" t-on-keydown="onInputKeydown">
                <div class="o_model_field_selector_popover_header text-center">
                    <div class="o_model_field_selector_popover_title">Default value</div>
                    <i class="fa fa-times o_model_field_selector_popover_option o_model_field_selector_popover_close" title="Close" role="img" aria-label="Close" t-on-click="props.close"/>
                    <div class="o_model_field_selector_default_value_input mt-2">
                        <input type="text" placeholder="Type a default text or press ENTER" class="o_input" t-att-value="state.defaultValue" t-on-input="(ev) =&gt; this.setDefaultValue(ev.target.value)" t-ref="autofocus"/>
                    </div>
                </div>
                <div class="o_model_field_selector_popover_body">
                    <ul class="o_model_field_selector_popover_page">
                        <li class="o_model_field_selector_popover_item">
                            <button class="o_model_field_selector_popover_item_name btn flex-fill text-start" t-on-click="() =&gt; this.validate()">
                                <t t-if="state.defaultValue === ''">
                                    <div class="text-muted o_model_field_selector_item_title">Default text is used when no values are set</div>
                                </t>
                                <t t-else="">
                                    <div class="text-muted o_model_field_selector_item_title">As a default text when no value are set</div>
                                </t>
                            </button>
                        </li>
                    </ul>
                </div>
                <div class="o_model_field_selector_popover_footer">
                    <input type="text" class="o_input o_model_field_selector_debug" disabled="disabled" t-att-value="state.path"/>
                </div>
            </div>
        </t>
        <t t-else="">
            <ModelFieldSelectorPopover close.bind="closeFieldSelector" filter.bind="filter" followRelations="true" isDebugMode="!!env.debug" path="state.path" resModel="props.resModel" showSearchInput="true" update.bind="setPath"/>
        </t>
    </t>

<t t-name="web.DynamicModelFieldSelectorChar">
            <DynamicModelFieldSelector t-props="getSelectorProps"/>
        <t t-if="props.readonly">
            <span t-esc="formattedValue" class="d-none"/>
        </t>
        <t t-else="">
            <input class="o_input d-none" t-att-class="{'o_field_translate': isTranslatable}" t-att-id="props.id" t-att-type="props.isPassword ? 'password' : 'text'" t-att-autocomplete="props.autocomplete or (props.isPassword ? 'new-password' : 'off')" t-att-maxlength="maxLength &gt; 0 and maxLength" t-att-placeholder="props.placeholder" t-ref="input"/>
            <t t-if="isTranslatable">
                <TranslationButton fieldName="props.name" record="props.record"/>
            </t>
        </t>
    </t>

<t t-name="web.EmailField">
        <t t-if="props.readonly">
            <div class="d-grid">
                <a class="o_form_uri o_text_overflow" t-on-click.stop="" t-att-href="props.record.data[props.name] ? 'mailto:'+props.record.data[props.name] : undefined" t-esc="props.record.data[props.name] || ''"/>
            </div>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="email" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    <t t-name="web.FormEmailField">
        <t t-if="props.readonly">
            <div class="d-grid">
                <a class="o_form_uri o_text_overflow" t-on-click.stop="" t-att-href="props.record.data[props.name] ? 'mailto:'+props.record.data[props.name] : undefined" t-esc="props.record.data[props.name] || ''"/>
            </div>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="email" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            <a t-if="props.record.data[props.name]" t-att-href="'mailto:'+props.record.data[props.name]" class="ms-3 d-inline-flex align-items-center" target="_blank">
                <i class="fa fa-envelope" data-tooltip="Send Email" aria-label="Send Email"/>
            </a>
            </div>
        </t>
    </t>

    <t t-name="web.Field">
        <div t-att-name="props.name" t-att-class="classNames" t-att-style="props.style" t-att-data-tooltip-template="tooltip and 'web.FieldTooltip'" t-att-data-tooltip-info="tooltip">
            <t t-component="field.component" t-props="fieldComponentProps"/>
        </div>
    </t>

<t t-name="web.FieldTooltip">

        <p t-if="field.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="field.help"/>
        </p>

        <ul class="o-tooltip--technical" t-if="debug" role="tooltip">
            <li data-item="field" t-if="field and field.label">
                <span class="o-tooltip--technical--title">Label:</span>
                <t t-esc="field.label"/>
            </li>
            <li data-item="field" t-if="field and field.name">
                <span class="o-tooltip--technical--title">Field:</span>
                <t t-esc="field.name"/>
            </li>
            <li data-item="object" t-if="resModel">
                <span class="o-tooltip--technical--title">Model:</span>
                <t t-esc="resModel"/>
            </li>
            <t t-if="field">
                <li t-if="field.type" data-item="type">
                    <span class="o-tooltip--technical--title">Type:</span>
                    <t t-esc="field.type"/>
                </li>
                <li t-if="field.widget" data-item="widget">
                    <span class="o-tooltip--technical--title">Widget:</span>
                    <t t-if="field.widgetDescription" t-esc="field.widgetDescription"/>
                    <t t-if="field.widget">
                        (<t t-esc="field.widget"/>)
                    </t>
                </li>
                <li t-if="field.context" data-item="context">
                    <span class="o-tooltip--technical--title">Context:</span>
                    <t t-esc="field.context"/>
                </li>
                <li t-if="field.domain" data-item="domain">
                    <span class="o-tooltip--technical--title">Domain:</span>
                    <t t-esc="field.domain.length === 0 ? '[]' : field.domain"/>
                </li>
                <li t-if="field.invisible" data-item="invisible">
                    <span class="o-tooltip--technical--title">Invisible:</span>
                    <t t-esc="field.invisible"/>
                </li>
                <li t-if="field.column_invisible" data-item="column_invisible">
                    <span class="o-tooltip--technical--title">Column invisible:</span>
                    <t t-esc="field.column_invisible"/>
                </li>
                <li t-if="field.required" data-item="required">
                    <span class="o-tooltip--technical--title">Required:</span>
                    <t t-esc="field.required"/>
                </li>
                <li t-if="field.readonly" data-item="readonly">
                    <span class="o-tooltip--technical--title">Readonly:</span>
                    <t t-esc="field.readonly"/>
                </li>
                <li t-if="field.default" data-item="default">
                    <span class="o-tooltip--technical--title">Default:</span>
                    <t t-esc="field.default"/>
                </li>
                <li t-if="field.changeDefault" data-item="changeDefault">
                    <span class="o-tooltip--technical--title">Change default:</span>
                    Yes
                </li>
                <li t-if="field.relation" data-item="relation">
                    <span class="o-tooltip--technical--title">Relation:</span>
                    <t t-esc="field.relation"/>
                </li>
                <li t-if="field.selection" data-item="selection">
                    <span class="o-tooltip--technical--title">Selection:</span>
                    <ul class="o-tooltip--technical">
                        <li t-foreach="field.selection" t-as="option" t-key="option_index">
                            [<t t-esc="option[0]"/>]
                            <t t-if="option[1]"> - </t>
                            <t t-esc="option[1]"/>
                        </li>
                    </ul>
                </li>
            </t>
        </ul>
    </t>

<t t-name="web.FileUploader">
        <t t-if="state.isUploading and props.showUploadingText">Uploading...</t>
        <span t-else="" t-on-click.prevent="onSelectFileButtonClick" style="display:contents">
            <t t-slot="toggler"/>
        </span>
        <t t-slot="default"/>
        <input type="file" t-att-name="props.inputName" t-ref="fileInput" t-attf-class="o_input_file d-none {{ props.fileUploadClass or '' }}" t-att-multiple="props.multiUpload ? 'multiple' : false" t-att-accept="props.acceptedFileExtensions or '*'" t-on-change="onFileChange"/>
    </t>

<t t-name="web.FloatField">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-on-focusin="onFocusIn" t-on-focusout="onFocusOut" t-att-id="props.id" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" t-att-type="props.inputType" inputmode="decimal" class="o_input" autocomplete="off" t-att-step="props.step"/>
    </t>

<t t-name="web.FloatTimeField">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-att-id="props.id" t-att-type="props.inputType" t-ref="numpadDecimal" t-att-placeholder="props.placeholder" class="o_input" autocomplete="off"/>
    </t>

<t t-name="web.FloatToggleField">
        <span t-if="props.readonly and !props.disableReadOnly" t-esc="formattedValue"/>
        <button t-else="" class="o_field_float_toggle" t-on-click="onChange"><t t-esc="formattedValue"/></button>
    </t>

<t t-name="web.FontSelectionField">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="props.record.data[props.name]" t-attf-style="font-family:{{ props.record.data[props.name] }};"/>
        </t>
        <t t-else="">
            <select class="o_input" t-on-change="onChange" t-attf-style="font-family:{{ props.record.data[props.name] }};">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ props.required ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]" t-attf-style="font-family:{{ option[1] }};"/>
                </t>
            </select>
        </t>
    </t>

<t t-name="web.GaugeField">
        <div class="oe_gauge position-relative">
            <canvas t-ref="canvas"/>
            <span class="o_gauge_value position-absolute start-0 end-0 bottom-0 text-center" t-esc="props.record.data[props.name]"/>
        </div>
    </t>

<t t-name="web.HandleField">
        <span class="o_row_handle oi oi-draggable ui-sortable-handle" t-on-click.stop=""/>
    </t>

<t t-name="web.HtmlField">
        <t t-if="props.readonly">
            <span t-out="props.record.data[props.name] or ''"/>
        </t>
        <t t-else="" t-call="web.TextField"/>
    </t>

<t t-name="web.IframeWrapperField">
        <div class="o_preview_iframe_wrapper">
            <iframe src="about:blank" class="o_preview_iframe" t-ref="iframe"/>
        </div>
    </t>

<t t-name="web.ImageField">
        <div class="d-inline-block position-relative opacity-trigger-hover">
            <div t-attf-class="position-absolute d-flex justify-content-between w-100 bottom-0 opacity-0 opacity-100-hover {{isMobile ? 'o_mobile_controls' : ''}}" aria-atomic="true" t-att-style="sizeStyle">
                <t t-if="!props.readonly">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" t-key="props.record.resId" onUploaded.bind="onFileUploaded">
                        <t t-set-slot="toggler">
                            <button class="o_select_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Edit" aria-label="Edit">
                                <i class="fa fa-pencil fa-fw"/>
                            </button>
                        </t>
                        <button t-if="props.record.data[props.name] and state.isValid" class="o_clear_file_button btn btn-light border-0 rounded-circle m-1 p-1" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove">
                            <i class="fa fa-trash-o fa-fw"/>
                        </button>
                    </FileUploader>
                </t>
            </div>
            <img loading="lazy" class="img img-fluid" alt="Binary file" t-att-src="this.getUrl(props.previewImage or props.name)" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error.stop="onLoadFailed" t-att-data-tooltip-template="hasTooltip and tooltipAttributes.template" t-att-data-tooltip-info="hasTooltip and tooltipAttributes.info" t-att-data-tooltip-delay="hasTooltip and props.zoomDelay"/>
        </div>
    </t>

    <t t-name="web.ImageZoomTooltip">
        <div class="o_image_zoom">
            <img t-att-src="url"/>
        </div>
    </t>

<t t-name="web.ImageUrlField">
        <img t-if="props.record.data[props.name]" class="img img-fluid" alt="Image" t-att-src="state.src" t-att-border="props.readonly ? 0 : 1" t-att-name="props.name" t-att-height="props.height" t-att-width="props.width" t-att-style="sizeStyle" t-on-error="onLoadFailed"/>
    </t>

<t t-name="web.IntegerField">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <input t-else="" t-ref="numpadDecimal" t-on-focusin="onFocusIn" t-on-focusout="onFocusOut" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" inputmode="numeric" class="o_input" autocomplete="off" t-att-step="props.step"/>
    </t>

<t t-name="web.JournalDashboardGraphField">
        <div class="o_dashboard_graph" t-att-class="props.className" t-attf-class="o_graph_{{ props.graphType }}chart">
            <canvas t-ref="canvas"/>
        </div>
    </t>

<t t-name="web.JsonbField">
        <span t-esc="formattedValue"/>
    </t>

<t t-name="web.LabelSelectionField">
        <span t-attf-class="badge text-bg-{{className}} " t-esc="string" t-att-raw-value="props.record.data[props.name]"/>
    </t>

<t t-name="web.Many2ManyBinaryField">
        <div t-attf-class="oe_fileupload {{props.className ? props.className : ''}}" aria-atomic="true">
            <div class="o_attachments">
                <t t-foreach="files" t-as="file" t-key="file_index">
                   <t t-call="Many2ManyBinaryField.attachment_preview"/>
                </t>
            </div>
            <div t-if="!props.readonly &amp;&amp; (!props.numberOfFiles or files.length &lt; props.numberOfFiles)" class="oe_add">
                <FileInput acceptedFileExtensions="props.acceptedFileExtensions" multiUpload="true" onUpload.bind="onFileUploaded" resModel="props.record.resModel" resId="props.record.resId or 0">
                    <button class="btn btn-secondary o_attach" data-tooltip="Attach">
                        <span class="fa fa-paperclip" aria-label="Attach"/> <t t-esc="uploadText"/>
                    </button>
                </FileInput>
            </div>
        </div>
    </t>

<t t-name="Many2ManyBinaryField.attachment_preview">
    <t t-set="editable" t-value="!props.readonly"/>
    <div t-attf-class="o_attachment o_attachment_many2many #{ editable ? 'o_attachment_editable' : '' } #{upload ? 'o_attachment_uploading' : ''}" t-att-title="file.name">
        <div class="o_attachment_wrap">
            <t t-set="ext" t-value="getExtension(file)"/>
            <t t-set="url" t-value="getUrl(file.id)"/>
            <div class="o_image_box float-start" t-att-data-tooltip="'Download ' + file.name">
                <a t-att-href="url" aria-label="Download" download="">
                    <span class="o_image o_hover" t-att-data-mimetype="file.mimetype" t-att-data-ext="ext" role="img"/>
                </a>
            </div>

            <div class="caption">
                <a class="ml4" t-att-data-tooltip="'Download ' + file.name" t-att-href="url" download=""><t t-esc="file.name"/></a>
            </div>
            <div class="caption small">
                <a class="ml4 small text-uppercase" t-att-href="url" download=""><b><t t-esc="ext"/></b></a>
                <div t-if="editable" class="progress o_attachment_progress_bar">
                    <div class="progress-bar progress-bar-striped active" style="width: 100%">Uploading</div>
                </div>
            </div>

            <div class="o_attachment_uploaded"><i class="text-success fa fa-check" role="img" aria-label="Uploaded" title="Uploaded"/></div>
            <div t-if="editable" class="o_attachment_delete" t-on-click.stop="() =&gt; this.onFileRemove(file.id)"><span role="img" aria-label="Delete" title="Delete">×</span></div>
        </div>
    </div>
</t>

<t t-name="web.Many2ManyCheckboxesField">
        <div aria-atomic="true">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div>
                    <CheckBox value="isSelected(item)" disabled="props.readonly" onChange="(ev) =&gt; this.onChange(item[0], ev)">
                        <t t-esc="item[1]"/>
                    </CheckBox>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.KanbanMany2ManyTagsField">
        <div class="d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
        </div>
    </t>
<t t-name="web.Many2ManyTagsField">
        <div class="o_field_tags d-inline-flex flex-wrap gap-1" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true" nameCreateField="props.nameCreateField" noSearchMore="props.noSearchMore"/>
            </div>
        </div>
    </t>

    <t t-name="web.Many2ManyTagsFieldColorListPopover">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected="(id) =&gt; props.switchTagColor(id, props.tag)"/>
            <CheckBox className="'pt-2'" value="props.tag.colorIndex === 0" onChange.alike="(isChecked) =&gt; props.onTagVisibilityChange(isChecked, props.tag)">Hide in kanban</CheckBox>
        </div>
    </t>

<t t-name="web.Many2ManyTagsAvatarField">
        <div class="many2many_tags_avatar_field_container o_field_tags d-inline-flex flex-wrap mw-100 gap-1" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags" itemsVisible="itemsVisible"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true"/>
            </div>
        </div>
    </t>

    <t t-name="web.KanbanMany2ManyTagsAvatarFieldTagsList">
            <t t-if="canDisplayQuickAssignAvatar">
                <a t-on-click.stop.prevent="openPopover" tabIndex="-1" href="#" title="Assign" aria-label="Assign" class="o_quick_assign fa fa-user-plus o_m2m_avatar btn-link d-flex align-items-center text-dark" role="button"/>
            </t>
        <t t-foreach="visibleTags" t-as="tag" t-key="tag.id or tag_index">
            <span class="o_tag position-relative d-inline-flex align-items-center user-select-none mw-100" t-att-class="{                     'o_avatar opacity-trigger-hover' : tag.img,                     'o_badge badge rounded-pill lh-1': !tag.img,                 }" t-attf-class="{{ !tag.img ? 'o_tag_color_' + (tag.colorIndex ? tag.colorIndex : '0') : '' }}" tabindex="-1" t-att-data-color="tag.colorIndex" t-att-title="tag.text" t-on-click="(ev) =&gt; tag.onClick and tag.onClick(ev)" t-on-keydown="tag.onKeydown">


                <span t-if="tag.img and props.displayText and tag.onDelete" class="o_avatar_backdrop position-absolute top-0 end-0 bottom-0 start-0 ms-n2 mt-n1 mb-n1 bg-view rounded border shadow opacity-0 opacity-100-hover"/>

                <img t-if="tag.img" t-att-src="tag.img" class="o_avatar o_m2m_avatar position-relative rounded" t-att-class="tag.imageClass"/>

                <i t-if="tag.icon" t-attf-class="p-1 fa {{ tag.icon }}" t-att-class="tag.className"/>

                <div t-if="props.displayText" class="o_tag_badge_text text-truncate" t-att-class="{'position-relative ms-1' : tag.img}" t-out="tag.text"/>

                <a t-if="tag.onDelete" t-on-click.stop.prevent="(ev) =&gt; tag.onDelete and tag.onDelete(ev)" class="o_delete d-flex align-items-center opacity-100-hover" t-att-class="{                             'btn btn-link position-relative py-0 px-1 text-danger opacity-0': tag.img,                             'ps-1 opacity-75': !tag.img                         }" title="Delete" aria-label="Delete" tabIndex="-1" href="#">
                        <i class="oi oi-close align-text-top"/>
                </a>
            </span>
        </t>
        <span t-if="props.tags and otherTags.length" class="o_m2m_avatar_empty rounded-circle text-center fw-bold" data-tooltip-template="web.TagsList.Tooltip" data-tooltip-position="right" t-att-data-tooltip-info="tooltipInfo" t-on-click.stop.prevent="openPopover">
            <span t-if="otherTags.length &gt; 9" t-esc="'9+'"/>
            <span t-else="" t-esc="'+' + otherTags.length"/>
        </span>
    </t>

    <t t-name="web.KanbanMany2ManyTagsAvatarField">
        <div class="many2many_tags_avatar_field_container o_field_tags d-inline-flex flex-wrap mw-100 gap-1" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags" itemsVisible="itemsVisible" popoverProps="popoverProps" readonly="!props.isEditable"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="tags.length ? '' : props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true"/>
            </div>
        </div>
    </t>

    <t t-name="web.Many2ManyTagsAvatarFieldPopover">
        <div class="many2many_tags_avatar_field_container o_field_tags flex-wrap gap-1 p-2 o_m2m_tags_avatar_field_popover o_field_widget o_field_many2many_tags_avatar" t-att-class="{'o_tags_input o_input': !props.readonly}" t-ref="many2ManyTagsField">
            <TagsList tags="tags" itemsVisible="itemsVisible"/>
            <div t-if="showM2OSelectionField" class="o_field_many2many_selection d-inline-flex w-100 w-100" t-ref="autoComplete">
                <Many2XAutocomplete id="props.id" placeholder="props.placeholder" resModel="relation" autoSelect="true" fieldString="string" activeActions="activeActions" update="update" quickCreate="activeActions.create ? quickCreate : null" context="props.context" getDomain.bind="getDomain" isToMany="true" dropdown="false" autofocus="true"/>
            </div>
        </div>
    </t>

    <t t-name="web.Many2OneField.CreateConfirmationDialog">
        <Dialog title="title" size="'md'">
            <div>
                <t t-out="dialogContent"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onCreate">Create</button>
                <button class="btn" t-on-click="() =&gt; props.close()">Discard</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.Many2OneField">
        <t t-if="props.readonly">
            <t t-if="!props.canOpen">
                <span>
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </span>
            </t>
            <t t-else="">
                <a t-if="value" t-attf-class="o_form_uri #{classFromDecoration}" t-att-href="value ? \`#id=\${value[0]}&amp;model=\${relation}\` : '#'" t-on-click.prevent="onClick">
                    <span t-esc="displayName"/>
                    <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                        <br/>
                        <span t-esc="extraLine"/>
                    </t>
                </a>
            </t>
        </t>
        <t t-else="">
            <div class="o_field_many2one_selection">
                <Many2XAutocomplete t-props="Many2XAutocompleteProps"/>
                <t t-if="hasExternalButton">
                    <button type="button" class="btn btn-link text-action oi o_external_button" t-att-class="env.inDialog ? 'oi-launch' : 'oi-arrow-right'" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalBtnClick"/>
                </t>
                <button t-if="hasBarcodeButton" t-on-click="onBarcodeBtnClick" type="button" class="btn ms-3 o_barcode" tabindex="-1" draggable="false" aria-label="Scan barcode" title="Scan barcode" data-tooltip="Scan barcode"/>
            </div>
            <div class="o_field_many2one_extra">
                <t t-foreach="extraLines" t-as="extraLine" t-key="extraLine_index">
                    <br t-if="!extraLine_first"/>
                    <span t-esc="extraLine"/>
                </t>
            </div>
        </t>
    </t>

<t t-name="web.Many2OneAvatarField">
        <div class="d-flex align-items-center gap-1" t-att-data-tooltip="props.record.data[props.name][1]">
            <span class="o_avatar o_m2o_avatar">
                <span t-if="props.record.data[props.name] === false and !props.readonly" class="o_avatar_empty o_m2o_avatar_empty"/>
                <img t-if="props.record.data[props.name] !== false" t-attf-src="/web/image/{{relation}}/{{props.record.data[props.name][0]}}/avatar_128" class="rounded"/>
            </span>
            <Many2OneField t-props="many2OneProps"/>
        </div>
    </t>

    <t t-name="web.KanbanMany2OneAvatarField">
        <div class="d-flex align-items-center gap-1" t-att-data-tooltip="props.record.data[props.name][1]">
            <span class="o_avatar o_m2o_avatar d-flex">
                <t t-if="props.record.data[props.name] === false and props.isEditable">
                <a t-on-click.stop.prevent="openPopover" tabIndex="-1" href="#" title="Assign" aria-label="Assign" class="o_quick_assign fa fa-user-plus btn-link d-flex align-items-center text-dark" role="button"/>
            </t>
        <img t-if="props.record.data[props.name] !== false" t-attf-src="/web/image/{{relation}}/{{props.record.data[props.name][0]}}/avatar_128" class="rounded"/>
            </span>
            <Many2OneField t-props="many2OneProps"/>
        </div>
    </t>

    <t t-name="web.MonetaryField">
        <span t-if="props.readonly" t-esc="formattedValue"/>
        <div class="text-nowrap d-inline-flex w-100 align-items-baseline" t-else="">
            <span t-if="!props.hideSymbol and currency" t-out="currencySymbol"/>
            <input t-ref="numpadDecimal" t-att-id="props.id" t-att-type="props.inputType" t-att-placeholder="props.placeholder" class="o_input flex-grow-1 flex-shrink-1" autocomplete="off"/>
        </div>
    </t>

<t t-name="web.PdfViewerField">
        <t t-if="!props.readonly">
            <div class="o_form_pdf_controls d-flex gap-1">
                <t t-if="props.record.data[props.name]">
                    <FileUploader acceptedFileExtensions="'.pdf'" onUploaded.bind="onFileUploaded">
                        <t t-set-slot="toggler">
                            <button class="btn btn-secondary fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit"/>
                        </t>
                        <button class="btn btn-secondary fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="onFileRemove"/>
                    </FileUploader>
                </t>
                <t t-else="">
                    <label class="o_select_file_button btn btn-primary">
                        <FileUploader acceptedFileExtensions="'.pdf'" onUploaded.bind="onFileUploaded">
                            <t t-set-slot="toggler">
                                Upload your file
                            </t>
                        </FileUploader>
                    </label>
                </t>
            </div>
        </t>
        <t t-if="props.record.data[props.name]">
            <iframe class="o_pdfview_iframe" alt="PDF file" t-att-src="url" t-att-name="props.name" t-on-error="onLoadFailed"/>
        </t>
    </t>

<t t-name="web.PercentPieField">
        <figure class="o_pie mb-0 rounded-circle" t-attf-style="background: conic-gradient(                     var(--PercentPieField-color-active) 0% {{props.record.data[props.name]}}%,                     var(--PercentPieField-color-static) 0% 100%                 )"/>

        <div class="o_pie_info">
            <span class="o_pie_value" t-esc="formattedValue + '%'"/>
            <span class="o_pie_text" t-esc="props.string"/>
        </div>
    </t>

<t t-name="web.PercentageField">
        <t t-if="props.readonly">
            <span t-esc="formattedValue"/>
        </t>
        <t t-else="">
            <div class="d-flex">
                <input t-ref="numpadDecimal" t-attf-class="o_input" t-att-placeholder="props.placeholder" type="text" inputmode="decimal" autocomplete="off"/>
                <span>%</span>
            </div>
        </t>
    </t>

<t t-name="web.PhoneField">
        <div class="o_phone_content d-inline-flex w-100">
            <t t-if="props.readonly">
                <a t-if="props.record.data[props.name]" class="o_form_uri" t-att-href="phoneHref" t-esc="props.record.data[props.name]"/>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="tel" autocomplete="off" t-att-placeholder="props.placeholder" t-ref="input"/>
            </t>
        </div>
    </t>

    <t t-name="web.FormPhoneField">
        <div class="o_phone_content d-inline-flex w-100">
            <t t-if="props.readonly">
                <a t-if="props.record.data[props.name]" class="o_form_uri" t-att-href="phoneHref" t-esc="props.record.data[props.name]"/>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="tel" autocomplete="off" t-att-placeholder="props.placeholder" t-ref="input"/>
            <a t-if="props.record.data[props.name]" t-att-href="phoneHref" class="o_phone_form_link ms-3 d-inline-flex align-items-center">
                <i class="fa fa-phone"/><small class="fw-bold ms-1">Call</small>
            </a>
            </t>
        </div>
    </t>

    <t t-name="web.PriorityField">
        <div class="o_priority" role="radiogroup" name="priority" aria-label="Priority">
            <t t-foreach="options" t-as="value" t-key="value">
                <t t-if="!value_first">
                    <t t-if="props.readonly">
                        <span class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" t-att-tabindex="value_index === state.index ? 0 : -1" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index lte index" t-att-aria-label="value[1]"/>
                    </t>
                    <t t-else="">
                        <a href="#" class="o_priority_star fa" role="radio" t-att-class="value_index lte index ? 'fa-star' : 'fa-star-o'" t-att-tabindex="value_index === state.index ? 0 : -1" t-att-data-tooltip="getTooltip(value[1])" t-att-aria-checked="value_index lte index" t-att-aria-label="value[1]" t-on-click.prevent.stop="() =&gt; this.onStarClicked(value[0])" t-on-mouseenter="() =&gt; state.index = value_index" t-on-mouseleave="() =&gt; state.index = -1"/>
                    </t>
                </t>
            </t>
        </div>
    </t>

<t t-name="web.ProgressBarField">
        <div class="o_progressbar w-100 d-flex align-items-center" t-ref="numpadDecimal">
            <div t-if="props.title" class="o_progressbar_title text-nowrap pe-1"><t t-esc="props.title"/></div>
            <div class="o_progress align-middle overflow-hidden" aria-valuemin="0" t-att-aria-valuemax="this.maxValue" t-att-aria-valuenow="this.currentValue">
                <div t-attf-class="{{ progressBarColorClass }} h-100" t-att-style="'width: min(' + 100 * this.currentValue / this.maxValue + '%, 100%)'"/>
            </div>
            <div class="o_progressbar_value d-flex">
                <t t-if="isPercentage">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatCurrentValue() or ''" t-att-required="props.required" t-on-change="onCurrentValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    <span>%</span>
                </t>
                <t t-else="">
                    <input t-if="isEditable and props.isCurrentValueEditable" t-ref="currentValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatCurrentValue()" t-on-change="onCurrentValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatCurrentValue(true)"/>
                    /
                    <input t-if="isEditable and props.isMaxValueEditable" t-ref="maxValue" class="o_input h-100 text-center" type="text" inputmode="decimal" autocomplete="off" t-att-value="formatMaxValue()" t-on-change="onMaxValueChange" t-on-focus="onInputFocus" t-on-blur="onInputBlur"/>
                    <span t-else="" class="mx-1" t-esc="formatMaxValue(true)"/>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.CardPropertiesField">
        <div t-ref="properties" class="w-100 fw-normal text-muted">
            <div class="o_card_property_field d-inline-flex flex-column justify-content-center align-items-start w-100 mb-1" t-foreach="propertiesList" t-as="propertyConfiguration" t-key="propertyConfiguration.name" t-if="propertyConfiguration.value and propertyConfiguration.view_in_cards">

                <div class="mw-100 text-truncate d-flex gap-2" t-att-class="{'border rounded-3 ps-2' : propertyConfiguration.type === 'boolean'}">
                    <label t-if="['integer', 'float', 'date', 'datetime', 'boolean'].includes(propertyConfiguration.type)" t-att-class="{'fw-bold' : propertyConfiguration.type !== 'boolean'}" t-out="propertyConfiguration.string"/>
                    <PropertyValue id="generateUniqueDomID()" canChangeDefinition="state.canChangeDefinition" comodel="propertyConfiguration.comodel || ''" context="props.context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="() =&gt; {}" onTagsChange.bind="() =&gt; {}"/>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.PropertiesField">
        <div t-ref="properties" class="row" t-att-class="{'d-none': propertiesList.length === 0 and !state.showAddButton}" t-att-columns="renderedColumnsCount">
            <t t-set="unfoldedSeparators" t-value="state.unfoldedSeparators"/>
            <t t-set="_groupedPropertiesList" t-value="groupedPropertiesList"/>
            <t t-foreach="groupedPropertiesList" t-as="propertiesListGroup" t-key="propertiesListGroup_index">
                <t t-set="foldable" t-value="propertiesListGroup.name and propertiesListGroup.title and propertiesListGroup.title.length"/>
                <t t-set="isFolded" t-value="propertiesListGroup.name and !unfoldedSeparators.includes(propertiesListGroup.name)"/>
                <div class="o_inner_group o_group col-lg-6 o_property_group" t-att-property-name="propertiesListGroup.name || ''">
                    <div t-if="!propertiesListGroup.invisibleLabel" class="o_field_property_label o_field_property_group_label d-flex flex-row w-100 mb-3 text-uppercase fw-bolder align-items-baseline pe-2" t-att-class="{'invisible': propertiesListGroup.columnSeparator}" t-on-click="() =&gt; this.onSeparatorClick(propertiesListGroup.name)">
                        <span t-if="propertiesListGroup.title" t-out="propertiesListGroup.title"/>
                        <i t-if="state.canChangeDefinition and !props.readonly and !propertiesListGroup.columnSeparator" class="o_field_property_open_popover fa fa-pencil ms-3" t-on-click.prevent.stop="(event) =&gt; this.onPropertyEdit(event, propertiesListGroup.name)"/>
                        <i t-if="state.canChangeDefinition and !props.readonly" class="oi oi-draggable ms-1 d-none d-sm-block"/>
                        <div t-if="foldable" class="ms-auto">
                            <i class="fa me-1" t-att-class="isFolded ? 'fa-caret-right' : 'fa-caret-down'"/>
                        </div>
                    </div>
                    <div t-foreach="propertiesListGroup.elements" t-as="propertyConfiguration" t-key="propertyConfiguration.name" class="o_property_field o_wrap_label" t-att-class="{                             'd-flex flex-row': !env.isSmall and !isFolded, 'o_property_folded': isFolded,                             'mb-4': renderedColumnsCount === 1, 'mb-3': renderedColumnsCount !== 1                         }" t-att-property-name="propertyConfiguration.name">
                        <t t-set="domId" t-value="generateUniqueDomID()"/>
                        <label class="o_field_property_label o_form_label text-break d-flex align-items-baseline mb-0" t-att-class="{'w-auto': env.isSmall}" t-att-for="domId">
                            <span t-if="propertyConfiguration.string and propertyConfiguration.string.length" t-out="propertyConfiguration.string" t-att-class="{'o_property_field_highlight': state.movedPropertyName === propertyConfiguration.name}"/>
                            <i t-else="" class="o_field_property_empty_label">
                                New Property
                            </i>
                            <i t-if="state.canChangeDefinition and !props.readonly" class="o_field_property_open_popover fa fa-pencil ms-2" t-on-click="(event) =&gt; this.onPropertyEdit(event, propertyConfiguration.name)"/>
                            <i t-if="state.canChangeDefinition and !props.readonly" class="oi oi-draggable ms-1 d-none d-sm-block"/>
                        </label>
                        <div class="o_property_field_value w-100">
                            <PropertyValue id="domId" canChangeDefinition="state.canChangeDefinition" checkDefinitionWriteAccess.bind="checkDefinitionWriteAccess ? checkDefinitionWriteAccess : () =&gt; {}" comodel="propertyConfiguration.comodel || ''" context="props.context" domain="propertyConfiguration.domain || '[]'" readonly="props.readonly" selection="propertyConfiguration.selection" string="propertyConfiguration.string" tags="propertyConfiguration.tags" type="propertyConfiguration.type" value="propertyConfiguration.value" onChange.bind="(value) =&gt; this.onPropertyValueChange(propertyConfiguration.name, value)" onTagsChange.bind="(newTags, newValue) =&gt; this.onTagsChange(propertyConfiguration.name, newTags, newValue)"/>
                        </div>
                    </div>
                    <div t-if="propertiesListGroup_index === _groupedPropertiesList.length - 1 and state.showAddButton" class="o_field_property_add d-none d-sm-block" t-att-class="{'g-col-2': props.columns !== 1}">
                        <button t-if="!props.readonly and state.canChangeDefinition and definitionRecordId" class="btn btn-light text-muted text-break m-0" t-on-click="onPropertyCreate">
                            <i class="fa fa-plus"/>
                            Add a Property
                        </button>
                    </div>
                </div>
            </t>
        </div>
    </t>
<t t-name="web.PropertyDefinition">
        <div class="o_field_property_definition o_field_widget o_form_view d-block" t-ref="propertyDefinition">
            <div class="d-flex justify-content-between px-3 border-bottom">
                <div t-if="!env.isSmall" class="border-end py-1">
                    <button t-attf-class="btn btn-link ps-0 {{this.isFirst ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('up')" title="Move this Property up">
                        <i class="oi oi-chevron-up ms-2"/>
                    </button>
                    <button t-attf-class="btn btn-link pe-3 {{this.isLast ? 'disabled' : ''}}" t-on-click="() =&gt; this.onPropertyMove('down')" title="Move this Property down">
                        <i class="oi oi-chevron-down ms-2"/>
                    </button>
                </div>
                <button t-else="" class="btn oi oi-arrow-left my-2" t-on-click="() =&gt; this.props.close()"/>
                <button t-if="!props.readonly and props.canChangeDefinition" class="btn pe-0 text-danger float-end o_field_property_definition_delete" title="Remove Property" t-on-click="props.onDelete">
                    <i class="fa fa-trash"/> Delete
                </button>
            </div>
            <div class="o_modal_container p-3 o_inner_group grid">
                <div class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label align-self-center text-900">Label</label>
                    <h6 t-if="props.readonly" t-out="state.propertyDefinition.string" class="text-truncate"/>
                    <input class="o_input o_field_property_definition_header" type="text" required="" placeholder="Property Name" autocomplete="off" t-model="state.propertyDefinition.string" t-on-change="onPropertyLabelChange" t-on-keypress="onPropertyLabelKeypress"/>
                </div>
                <div class="d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('type')" class="o_form_label align-self-center text-900">
                        Field Type
                    </label>
                    <div class="o_field_property_definition_type">
                        <div t-if="props.readonly" class="d-flex align-items-center mb-2">
                            <img class="me-3" t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png"/>
                            <span t-out="state.typeLabel"/>
                        </div>
                        <Dropdown t-else="" title="state.typeLabel" togglerClass="'btn btn-link d-flex p-0 w-100'">
                            <t t-set-slot="toggler">
                                <div class="o_input_dropdown w-100 o_field_property_dropdown">
                                    <img t-attf-src="/web/static/src/views/fields/properties/icons/{{state.propertyDefinition.type}}.png" class="position-relative z-index-1 me-n4"/>
                                    <input type="text" class="dropdown text-start w-100 o_input py-1 align-middle" t-att-id="getUniqueDomID('type')" t-att-value="state.typeLabel" readonly=""/>
                                    <span class="o_dropdown_button"/>
                                </div>
                            </t>
                            <t t-foreach="availablePropertyTypes" t-as="option" t-key="option[0]">
                                <DropdownItem onSelected.bind="() =&gt; this.onPropertyTypeChange(option[0])">
                                    <div class="d-flex align-items-center">
                                        <img class="me-2" t-attf-src="/web/static/src/views/fields/properties/icons/{{option[0]}}.png"/>
                                        <span t-out="option[1]"/>
                                    </div>
                                </DropdownItem>
                            </t>
                        </Dropdown>
                    </div>
                </div>

                <div t-if="state.propertyDefinition.type === 'selection'" class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label text-900">Values</label>
                    <PropertyDefinitionSelection readonly="props.readonly || !props.canChangeDefinition" canChangeDefinition="props.canChangeDefinition" default="state.propertyDefinition.default || ''" options="state.propertyDefinition.selection || []" onOptionsChange.bind="onSelectionOptionChange" onDefaultOptionChange.bind="onDefaultChange"/>
                </div>
                <div t-if="state.propertyDefinition.type === 'tags'" class="d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('tags')" class="o_form_label text-900">Tag</label>
                    <PropertyTags id="getUniqueDomID('tags')" selectedTags="propertyTagValues" tags="state.propertyDefinition.tags || []" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" deleteAction="'tags'" onTagsChange.bind="onTagsChange"/>
                </div>
                <div t-if="state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many'" class="o_field_property_definition_model d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('model')" class="o_form_label align-self-center text-900">Model</label>
                    <span t-if="props.readonly">
                        <t t-if="state.resModelDescription" t-out="state.resModelDescription"/>
                    </span>
                    <ModelSelector t-else="" id="getUniqueDomID('model')" value="state.resModelDescription" onModelSelected.bind="onModelChange"/>
                </div>
                <div t-if="(state.propertyDefinition.type === 'many2one' || state.propertyDefinition.type === 'many2many')                     and state.propertyDefinition.comodel and state.propertyDefinition.comodel.length" class="d-contents mb-3 mb-sm-0">
                    <label class="o_form_label text-900">Domain</label>
                    <div>
                        <DomainSelector resModel="state.propertyDefinition.comodel" domain="state.propertyDefinition.domain || '[]'" readonly="props.readonly" update.bind="onDomainChange" isDebugMode="!!env.debug" className="'d-inline-block me-2'"/>
                        <div t-if="state.matchingRecordsCount !== undefined" class="d-inline-block">
                            <i class="oi oi-arrow-right" role="img" title="Domain"/>
                            <button class="btn btn-sm btn-secondary" type="button" t-on-click.stop="onButtonDomainClick">
                                <t t-out="state.matchingRecordsCount"/> record(s)
                            </button>
                        </div>
                    </div>
                </div>
                <div t-if="!['tags', 'selection', 'separator'].includes(state.propertyDefinition.type)                     and (!['many2one', 'many2many'].includes(state.propertyDefinition.type)                     || (state.propertyDefinition.comodel and state.propertyDefinition.comodel.length))" class="o_field_property_definition_value d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('default')" class="o_form_label align-self-center text-900">
                        <t t-if="state.propertyDefinition.type === 'boolean'">Default State</t>
                        <t t-else="">Default Value</t>
                    </label>
                    <PropertyValue id="getUniqueDomID('default')" readonly="props.readonly" canChangeDefinition="props.canChangeDefinition" type="state.propertyDefinition.type" string="state.propertyDefinition.string" value="state.propertyDefinition.default" comodel="state.propertyDefinition.comodel || ''" domain="state.propertyDefinition.domain || '[]'" context="props.context" onChange.bind="onDefaultChange"/>
                </div>
                <div t-if="state.propertyDefinition.type !== 'separator'" class="o_field_property_definition_kanban d-contents mb-3 mb-sm-0">
                    <label t-att-for="getUniqueDomID('kanban')" class="o_form_label align-self-center text-900">
                        Display in Cards
                        <sup class="text-info" title="Whether or not this Property Field is displayed in the Calendar, Cards &amp; Kanban views">?</sup>
                    </label>
                    <CheckBox id="getUniqueDomID('kanban')" value="props.propertyDefinition.view_in_cards" disabled="props.readonly" onChange.bind="onViewInKanbanChange"/>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.PropertyDefinitionSelection">
        <div class="o_field_property_selection d-flex" t-ref="propertyDefinitionSelection">
            <div class="w-100">
                <div t-foreach="optionsVisible" t-as="option" t-key="option[0]" class="o_field_property_selection_option d-flex flex-row align-items-center justify-content-between mb-2 rounded" t-att-option-name="option[0]">
                    <i t-if="!props.readonly and props.canChangeDefinition" class="o_field_property_selection_drag oi oi-draggable ui-sortable-handle me-2 text-center"/>
                    <span t-if="props.readonly" t-out="option[1]"/>
                    <input t-else="" class="o_input me-3" type="text" placeholder="Option Name" t-att-value="option[1]" t-on-change="(event) =&gt; this.onOptionChange(event, option_index)" t-on-blur="(event) =&gt; this.onOptionBlur(event, option_index)" t-on-keydown="(event) =&gt; this.onOptionKeyDown(event, option_index)"/>
                    <button class="btn btn-link m-0 p-0 text-muted fs-5" title="Select Default" t-on-click="() =&gt; this.onOptionSetDefault(option_index)">
                        <i t-att-class="option[0] === props.default ? 'fa fa-star align-bottom' : 'fa fa-star-o align-bottom'"/>
                    </button>
                    <button t-if="!props.readonly" class="btn btn-link link-danger ms-2 p-0 fs-5" title="Remove Property" t-on-click="() =&gt; this.onOptionDelete(option_index)">
                        <i class="fa fa-trash-o align-bottom"/>
                    </button>
                </div>
                <button t-if="!props.readonly" class="btn btn-link btn-sm" t-on-click="() =&gt; this.onOptionCreate(this.options.length)" t-ref="addButton">
                    <i class="fa fa-plus"/>
                    Add a Value
                </button>
            </div>
        </div>
    </t>
<t t-name="web.PropertyTags">

        <div t-attf-class="o_field_property_tag o_field_widget o_field_many2many_tags d-flex {{props.readonly ? 'readonly' : ''}}">
            <TagsList tags="tagListItems"/>
            <div t-if="!props.readonly" class="o_field_property_dropdown_menu o_input_dropdown">
                <AutoComplete id="props.id" value="''" sources="autocompleteSources" onSelect.bind="({value}) =&gt; this.onOptionSelected(value)" resetOnSelect="true"/>
                <span class="o_dropdown_button"/>
            </div>
        </div>
    </t>
    <t t-name="web.PropertyTagsColorListPopover">
        <div class="o_tag_popover m-2">
            <ColorList colors="props.colors" forceExpanded="true" onColorSelected.bind="(id) =&gt; props.switchTagColor(id, props.tag)"/>
        </div>
    </t>
    <t t-name="web.PropertyTagsField">
        <PropertyTags t-props="propertyTagsProps"/>
    </t>
<t t-name="web.PropertyValue">
        <t t-if="props.readonly and !['boolean', 'many2one', 'many2many', 'tags'].includes(props.type)">
            <span t-if="displayValue" t-out="displayValue"/>
        </t>
        <t t-else="">
            <t t-if="props.type === 'boolean'">
                <CheckBox id="props.id" value="propertyValue" disabled="props.readonly" onChange.bind="onValueChange"/>
            </t>
            <t t-elif="['date', 'datetime'].includes(props.type)">
                <DateTimeInput id="props.id" type="props.type" value="propertyValue" onChange.bind="onValueChange"/>
            </t>
            <t t-elif="props.type === 'integer'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" autocomplete="off" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'float'">
                <input t-att-id="props.id" class="o_input o_field_property_input" type="text" autocomplete="off" t-att-value="displayValue" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
            <t t-elif="props.type === 'selection'">
                <select class="o_input" t-on-change="event =&gt; this.onValueChange(event.target.value)" t-att-id="props.id">
                    <option t-att-value="false"/>
                    <t t-foreach="props.selection || []" t-as="option" t-key="option[0]">
                        <option t-att-selected="option[0] === propertyValue" t-att-value="option[0]" t-out="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-elif="props.type === 'tags'">
                <PropertyTags id="props.id" selectedTags="propertyValue" tags="props.tags || []" deleteAction="'value'" readonly="props.readonly" canChangeTags="props.canChangeDefinition" checkDefinitionWriteAccess.bind="props.checkDefinitionWriteAccess ? props.checkDefinitionWriteAccess : () =&gt; {}" onValueChange.bind="onValueChange" onTagsChange.bind="props.onTagsChange"/>
            </t>
            <div t-elif="props.type === 'many2one'" class="o_field_property_many2one_value d-flex flex-row align-items-center" t-att-class="{'avatar': showAvatar}">
                <t t-if="props.comodel">
                    <t t-set="hasAccess" t-value="!propertyValue || propertyValue[1]"/>
                    <img t-if="showAvatar and propertyValue[0] and hasAccess" t-attf-src="/web/image/{{props.comodel}}/{{propertyValue[0]}}/avatar_128" class="o_avatar rounded me-1"/>
                    <t t-if="props.readonly || !hasAccess">
                        <a t-if="clickableRelational || !hasAccess" t-attf-class="o_form_uri {{propertyValue and propertyValue[1] ? '' : 'disabled'}}" t-att-href="propertyValue[0] ? \`#id=\${propertyValue[0]}&amp;model=\${props.comodel}\` : '#'" t-on-click.prevent="onMany2oneClick">
                            <t t-if="hasAccess" t-out="propertyValue[1]"/>
                            <t t-else="">No Access</t>
                        </a>
                        <span t-else="" t-out="propertyValue and propertyValue[1] || ''"/>
                    </t>
                    <Many2XAutocomplete t-else="" t-key="props.id + '_' + props.comodel + '_' + props.string" value="propertyValue[1] || ''" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }"/>
                    <button t-if="!props.readonly and propertyValue and propertyValue[0] and hasAccess" type="button" class="btn btn-secondary oi oi-arrow-right o_external_button o_properties_external_button py-0" tabindex="-1" draggable="false" aria-label="Internal link" data-tooltip="Internal link" t-on-click="onExternalLinkClick"/>
                </t>
            </div>
            <t t-elif="props.type === 'many2many'">
                <div t-if="props.comodel" class="o_field_property_many2many_value d-flex flex-wrap flex-row gap-1 ms-0 pe-1 w-100 " t-attf-class="o_field_widget o_field_many2many_tags {{showAvatar ? 'avatar' : ''}} {{props.readonly ? 'readonly' : ''}}">

                    <TagsList tags="propertyValue"/>
                    <Many2XAutocomplete t-if="!props.readonly" t-key="props.id + '_' + props.comodel + '_' + props.string" id="props.id" resModel="props.comodel" autoSelect="true" fieldString="props.string" update.bind="onValueChange" context="props.context" getDomain.bind="() =&gt; propertyDomain" quickCreate.bind="onQuickCreate" activeActions="{ create: true, createEdit: true, write: true }" isToMany="true"/>
                </div>
            </t>
            <t t-else="">
                <input class="o_input" t-att-id="props.id" type="text" autocomplete="off" t-att-value="propertyValue || ''" t-on-change="(event) =&gt; this.onValueChange(event.target.value)"/>
            </t>
        </t>
    </t>
<t t-name="web.RadioField">
        <div role="radiogroup" t-attf-class="o_{{ props.orientation }}" t-att-aria-label="props.label">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div class="form-check o_radio_item" aria-atomic="true">
                    <input type="radio" class="form-check-input o_radio_input" t-att-checked="item[0] === value" t-att-disabled="props.readonly" t-att-name="id" t-att-data-value="item[0]" t-att-data-index="item_index" t-att-id="\`\${id}_\${item[0]}\`" t-on-change="() =&gt; this.onChange(item)"/>
                    <label class="form-check-label o_form_label" t-att-for="\`\${id}_\${item[0]}\`" t-esc="item[1]"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ReferenceField">
        <div class="o_row">
            <t t-if="!props.readonly and !hideModelSelector">
                <select class="o_input" t-att-tabindex="relation ? '-1': 0" t-on-change="(ev) =&gt; this.updateModel(ev.target.value || false)">
                    <option/>
                    <t t-foreach="selection" t-as="option" t-key="option[0]">
                        <option t-att-value="option[0]" t-att-selected="option[0] === relation" t-esc="option[1]"/>
                    </t>
                </select>
            </t>
            <t t-if="relation">
                <Many2OneField t-key="m2oProps.relation" t-props="m2oProps"/>
            </t>
        </div>
    </t>

<t t-name="web.X2ManyFieldDialog">
    <Dialog title="title" withBodyPadding="false" modalRef="modalRef" contentClass="contentClass">
        <FormRenderer record="record" archInfo="archInfo"/>
        <t t-set-slot="footer">
            <t t-if="footerArchInfo">
                <FormRenderer record="record" archInfo="footerArchInfo"/>
            </t>
            <t t-else="">
                <t t-if="record.isInEdition">
                    <t t-if="canCreate">
                        <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save &amp; Close</button>
                        <button class="btn btn-primary o_form_button_save_new" t-on-click="saveAndNew" data-hotkey="n">Save &amp; New</button>
                    </t>
                    <t t-else="">
                        <button class="btn btn-primary o_form_button_save" t-on-click="save" data-hotkey="c">Save</button>
                    </t>
                    <button class="btn btn-secondary o_form_button_cancel" t-on-click="discard" data-hotkey="j">Discard</button>

                    <t t-if="props.delete">
                        <button class="btn btn-secondary o_btn_remove" t-on-click="remove" data-hotkey="k">
                            <t t-if="props.deleteButtonLabel" t-out="props.deleteButtonLabel"/>
                            <t t-else="">Remove</t>
                        </button>
                    </t>
                </t>
                <t t-else="">
                    <button class="btn btn-primary o_form_button_cancel" t-on-click="() =&gt; this.props.close()" data-hotkey="j">Close</button>
                </t>
            </t>
        </t>
    </Dialog>
</t>

<t t-name="web.Many2XAutocomplete">
    <div class="o_input_dropdown" t-ref="autocomplete_container">
        <input t-if="env.isSmall and props.dropdown" type="text" t-att-id="props.id" class="o_input" readonly="" autocomplete="off" t-att-placeholder="props.placeholder" t-att-value="props.value" t-on-click="onSearchMore" t-on-barcode-search="onBarcodeSearch"/>
        <AutoComplete t-else="" value="props.value" id="props.id" placeholder="props.placeholder" sources="sources" autoSelect="props.autoSelect" onSelect.bind="onSelect" onInput.bind="onInput" onChange.bind="onChange" dropdown="props.dropdown" autofocus="props.autofocus" resetOnSelect="props.value === ''" onCancel.bind="onCancel"/>
        <span class="o_dropdown_button"/>
    </div>
</t>

<t t-name="web.AvatarMany2XAutocomplete">
    <span class="o_avatar_many2x_autocomplete o_avatar d-flex align-items-center">
        <img t-if="option.value" class="rounded me-1" t-attf-src="/web/image/{{option.resModel}}/{{option.value}}/avatar_128"/>
        <t t-esc="option.label"/>
    </span>
</t>

<t t-name="web.RemainingDaysField">
        <t t-if="props.readonly">
            <t t-set="days" t-value="diffDays"/>
            <t t-set="formatted" t-value="formattedValue"/>
            <div t-att-class="{                     'fw-bold': days !== null and days lte 0,                     'text-danger': days !== null and days lt 0,                     'text-warning': days !== null and days === 0,                 }" t-att-title="formatted">
                <t t-esc="diffString"/>
            </div>
        </t>
        <t t-else="">
            <DateTimeField t-props="props"/>
        </t>
    </t>
<t t-name="web.SelectionField">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <select class="o_input pe-3" t-on-change="onChange" t-on-click.stop="() =&gt; {}" t-att-id="props.id">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ props.required ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]"/>
                </t>
            </select>
        </t>
    </t>

<t t-name="web.SignatureField">
        <t t-if="value">
            <img class="o_signature img img-fluid" alt="Binary file" t-att-src="getUrl" t-att-name="props.name" t-att-style="sizeStyle" t-on-click="onClickSignature" t-on-error.stop="onLoadFailed"/>
        </t>
        <t t-else="">
            <div class="o_signature o_signature_empty" t-att-style="sizeStyle" t-on-click="onClickSignature">
                <svg t-on-error.stop="onLoadFailed"/>
                <p>SIGNATURE</p>
            </div>
        </t>
    </t>

<t t-name="web.StatInfoField">
        <span class="o_stat_info o_stat_value" t-esc="formattedValue"/>
        <span t-if="!props.noLabel" class="o_stat_text" t-esc="label"/>
    </t>

<t t-name="web.StateSelectionField">
        <t t-if="props.readonly">
            <button class="d-flex align-items-center btn fw-normal p-0">
                <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                <span t-if="props.showLabel" class="o_status_label ms-1" t-esc="label"/>
            </button>
        </t>
        <t t-else="">
            <Dropdown togglerClass="'btn btn-link d-flex p-0'">
                <t t-set-slot="toggler">
                    <div class="d-flex align-items-center" t-att-title="props.showLabel ? '' : label">
                        <span t-attf-class="o_status {{ statusColor(currentValue) }} "/>
                        <span t-if="props.showLabel" class="o_status_label ms-1" t-esc="label"/>
                    </div>
                </t>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <DropdownItem class="\`d-flex align-items-center \${option[0] === currentValue ? 'active' : ''}\`" onSelected="() =&gt; this.updateRecord(option[0])">
                            <span t-attf-class="o_status ms-2 {{ statusColor(option[0]) }} "/>
                            <span t-esc="option[1]"/>
                    </DropdownItem>
                </t>
            </Dropdown>
        </t>
    </t>

<t t-name="web.StatusBarField.Dropdown">
        <Dropdown toggler="'parent'">
            <t t-foreach="items" t-as="item" t-key="item.value">
                <DropdownItem class="getDropdownItemClassNames(item)" onSelected="() =&gt; this.selectItem(item)">
                    <span t-esc="item.label"/>
                </DropdownItem>
            </t>
        </Dropdown>

        <t t-esc="label"/>
    </t>

    <t t-name="web.StatusBarField">
        <div class="o_statusbar_status" t-ref="root" role="radiogroup">
            <button t-ref="after" type="button" class="btn btn-secondary dropdown-toggle o_arrow_button o_first">
                <t t-call="web.StatusBarField.Dropdown">
                    <t t-set="label">...</t>
                    <t t-set="items" t-value="items.after"/>
                </t>
            </button>
            <t t-foreach="items.inline" t-as="item" t-key="item.value">
                <button type="button" class="btn btn-secondary o_arrow_button" t-att-class="{                         o_first: item_first,                         o_arrow_button_current: item.isSelected,                         o_last: item_last,                     }" t-att-disabled="props.isDisabled || item.isSelected" role="radio" t-att-aria-label="getItemTooltip(item)" t-att-aria-checked="item.isSelected.toString()" t-att-aria-current="item.isSelected and 'step'" t-att-data-value="item.value" t-esc="item.label" t-on-click="() =&gt; this.selectItem(item)"/>
            </t>
            <button t-ref="before" type="button" class="btn btn-secondary dropdown-toggle o_arrow_button o_last">
                <t t-call="web.StatusBarField.Dropdown">
                    <t t-set="label">...</t>
                    <t t-set="items" t-value="items.before"/>
                </t>
            </button>
            <button t-ref="dropdown" type="button" class="btn btn-secondary dropdown-toggle">
                <t t-call="web.StatusBarField.Dropdown">
                    <t t-set="label" t-value="getCurrentLabel()"/>
                    <t t-set="items" t-value="getAllItems()"/>
                </t>
            </button>
        </div>
    </t>
<t t-name="web.TextField">
        <t t-if="props.readonly">
            <span t-esc="props.record.data[props.name] or ''"/>
        </t>
        <t t-else="">
            <div t-ref="div">
                <textarea class="o_input" t-att-class="{'o_field_translate': isTranslatable}" t-att-id="props.id" t-att-placeholder="props.placeholder" t-att-rows="rowCount" t-ref="textarea"/>
                <t t-if="isTranslatable">
                    <TranslationButton fieldName="props.name" record="props.record"/>
                </t>
            </div>
        </t>
    </t>

<t t-name="web.TimezoneMismatchField">
        <t t-if="props.readonly">
            <span t-esc="string" t-att-raw-value="value"/>
        </t>
        <t t-else="">
            <select class="o_input pe-3" t-on-change="onChange" t-on-click.stop="() =&gt; {}" t-att-id="props.id">
                <option t-att-selected="false === value" t-att-value="stringify(false)" t-esc="this.props.placeholder || ''" t-attf-style="{{ props.required ? 'display:none' : '' }}"/>
                <t t-foreach="options" t-as="option" t-key="option[0]">
                    <option t-att-selected="option[0] === value" t-att-value="stringify(option[0])" t-esc="option[1]"/>
                </t>
            </select>
        </t>
            <span t-if="mismatch" class="o_tz_warning fa fa-exclamation-triangle position-static align-self-center m-0 ms-2" t-att-title="mismatchTitle"/>
    </t>

<t t-name="web.TranslationButton">
        <t t-if="isMultiLang">
            <span class="o_field_translate btn btn-link" t-on-click.prevent="onClick">
                <t t-esc="lang"/>
            </span>
        </t>
    </t>

<t t-name="web.TranslationDialog">
        <Dialog title="title">
            <div class="o_translation_dialog">
                <t t-foreach="terms" t-as="term" t-key="term.id">
                    <div class="row">
                        <div class="col-12" t-att-class="{ o_language_current: term.lang === user.lang }" t-attf-class="col-lg-{{ props.showSource ? 2 : 3 }}">
                            <t t-esc="term.langName"/>
                        </div>
                        <t t-if="props.showSource">
                            <div class="col-12 col-lg-3 source">
                                <t t-esc="term.source"/>
                            </div>
                        </t>
                        <div class="col-12 translation" t-attf-class="col-lg-{{ props.showSource ? 7 : 9 }}">
                            <t t-if="props.isText">
                                <textarea class="o_field_text o_field_translate o_field_widget o_input" t-att-value="term.value" t-att-data-id="term.id" t-att-rows="props.showSource ? 2 : 5" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                            <t t-else="">
                                <input type="text" class="o_field_char o_input" t-att-value="term.value" t-att-data-id="term.id" t-on-change="(ev) =&gt; this.updatedTerms[term.id] = ev.target.value"/>
                            </t>
                        </div>
                    </div>
                </t>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onSave">Save</button>
                <button class="btn" t-on-click="props.close">Discard</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.UrlField">
        <t t-if="props.readonly">
            <a class="o_field_widget o_form_uri" t-on-click.stop="" t-att-href="formattedHref" t-esc="props.text || props.record.data[props.name] || ''" target="_blank"/>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="text" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            </div>
        </t>
    </t>

    <t t-name="web.FormUrlField">
        <t t-if="props.readonly">
            <a class="o_field_widget o_form_uri" t-on-click.stop="" t-att-href="formattedHref" t-esc="props.text || props.record.data[props.name] || ''" target="_blank"/>
        </t>
        <t t-else="">
            <div class="d-inline-flex w-100">
                <input class="o_input" t-att-id="props.id" type="text" autocomplete="off" t-att-placeholder="props.placeholder" t-att-required="props.required" t-ref="input"/>
            <a t-if="props.record.data[props.name]" t-att-href="formattedHref" class="ms-3 d-inline-flex align-items-center" target="_blank">
                <i class="fa fa-globe" data-tooltip="Go to URL" aria-label="Go to URL"/>
            </a>
            </div>
        </t>
    </t>

    <t t-name="web.ListX2ManyField">
       <t t-esc="formattedValue"/>
    </t>

<t t-name="web.X2ManyField">
        <div t-att-class="className">
            <div class="o_x2m_control_panel d-empty-none mb-4">
                <t t-if="displayControlPanelButtons">
                    <div class="o_cp_buttons gap-1" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                        <t t-foreach="creates" t-as="create" t-key="create_index">
                            <button t-if="create.type === 'create'" type="button" class="btn btn-secondary" t-att-class="create.class" t-on-click.stop.prevent="() =&gt; this.onAdd({ context: create.context })">
                                <t t-esc="create.string"/>
                            </button>
                            <ViewButton t-if="create.type === 'button'" className="\`\${create.className}\`" clickParams="create.clickParams" icon="create.icon" record="props.record.data[props.name]" string="create.string" title="create.title"/>
                        </t>
                    </div>
                </t>
                <div t-if="props.record.data[props.name].count &gt; props.record.data[props.name].limit" class="o_cp_pager" role="search">
                    <Pager t-props="pagerProps"/>
                </div>
            </div>
            <ListRenderer t-if="props.viewMode === 'list'" t-props="rendererProps"/>
            <KanbanRenderer t-elif="props.viewMode" t-props="rendererProps"/>
        </div>
    </t>

<t t-name="web.Form.ButtonBox">
    <div class="o-form-buttonbox position-relative d-flex w-md-auto" t-attf-class="{{ isFull ? 'o_full w-100' : 'o_not_full'}} {{this.props.class}}">
        <t t-slot="{{ button_value }}" t-foreach="visibleButtons" t-as="button" t-key="button_value"/>
        <t t-if="additionalButtons.length">
            <Dropdown position="'bottom-end'" togglerClass="'o_button_more btn btn-outline-secondary d-flex justify-content-center align-items-center'" menuClass="'o_dropdown_more position-absolute top-100 p-0 border-0'" class="'oe_stat_button btn position-relative p-0 border-0'">
                <t t-set-slot="toggler"><span>More</span></t>
                <DropdownItem t-foreach="additionalButtons" t-as="button" t-key="button_value" class="'d-flex flex-column p-0'">
                    <t t-slot="{{ button_value }}"/>
                </DropdownItem>
            </Dropdown>
        </t>
    </div>
</t>

<t t-name="web.FormView">
        <div t-att-class="className" t-ref="root">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>

                    <t t-set-slot="layout-buttons">
                        <t t-if="env.inDialog">
                            <t t-if="footerArchInfo">
                                <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="footerArchInfo"/>
                            </t>
                            <t t-else="">
                                <t t-call="{{ props.buttonTemplate }}"/>
                            </t>
                        </t>
                    </t>

                    <t t-set-slot="layout-actions">
                        <t t-if="buttonBoxTemplate">
                            <t t-call="{{ buttonBoxTemplate }}" t-call-context="{ __comp__: Object.assign(Object.create(this), { this, props: { ...this.props, record: this.model.root } }) }"/>
                        </t>
                    </t>

                    <t t-set-slot="control-panel-additional-actions">
                        <CogMenu getActiveIds="() =&gt; model.root.isNew ? [] : [model.root.resId]" context="props.context" items="props.info.actionMenus ? this.actionMenuItems : {}" isDomainSelected="model.root.isDomainSelected" resModel="model.root.resModel" domain="props.domain" onActionExecuted="() =&gt; model.load({ resId: model.root.resId, resIds: model.root.resIds })" shouldExecuteAction.bind="shouldExecuteAction"/>
                    </t>

                    <t t-set-slot="control-panel-status-indicator">
                        <t t-if="canEdit">
                            <FormStatusIndicator model="model" discard.bind="discard" save.bind="saveButtonClicked"/>
                        </t>
                    </t>
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-outline-primary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="archInfo" translateAlert="translateAlert" onNotebookPageChange.bind="onNotebookPageChange" activeNotebookPages="props.state and props.state.activeNotebookPages"/>
                </Layout>
            </div>
        </div>
    </t>

    <t t-name="web.FormView.Buttons">
        <div class="o_cp_buttons d-flex align-items-baseline w-100" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit d-flex gap-1">
                <button type="button" class="btn btn-primary o_form_button_save" data-hotkey="s" t-on-click.stop="() =&gt; this.saveButtonClicked({closable: true})">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.FormErrorDialog">
        <Dialog header="false" size="'md'" contentClass="'o_error_dialog'">
            <div role="alert">
                <h1 class="text-danger">Oh snap!</h1>
                <p t-esc="props.message" class="text-prewrap"/>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="stay">Stay here</button>
                <button class="btn btn-secondary" t-on-click="discard">Discard changes</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.Form.OuterGroup">
    <div class="o_group row align-items-start" t-attf-class="{{ allClasses }}" t-att-style="props.style">
        <t t-slot="title" t-if="props.slots and props.slots.title"/>
        <t t-foreach="getItems()" t-as="item" t-key="item_index">
            <span class="o_newline" t-if="item.newline"/>
            <t t-slot="{{ item.name }}" className="item.colspan !== props.maxCols ? 'col-lg-' + item.size : ''"/>
        </t>
    </div>
</t>

<t t-name="web.Form.InnerGroup">
    <div t-attf-class="{{ allClasses }}" class="o_inner_group grid" t-att-style="props.style">
        <div t-if="props.slots and props.slots.title" t-attf-class="g-col-sm-{{ props.maxCols }}">
            <t t-slot="title"/>
        </div>
        <div t-foreach="getRows()" t-as="row" t-key="row_index" class="o_wrap_field d-flex d-sm-contents flex-column mb-3 mb-sm-0" t-if="row.isVisible">
            <t t-foreach="row" t-as="cell" t-key="cell_index">

                <t t-if="cell.subType === 'item_component'">
                    <t t-call="web.Form.InnerGroup.ItemComponent"><t t-set="cell" t-value="cell"/></t>
                </t>

                <t t-else="">
                    <div class="o_cell flex-grow-1 flex-sm-grow-0" t-attf-style="{{ cell.itemSpan &gt; 1 ? 'grid-column: span ' + cell.itemSpan + ';' : '' }}{{ cell.width ? 'width: ' + cell.width + '%' + ';' : '' }}" t-attf-class="{{ cell.subType === 'label' ? 'o_wrap_label w-100 text-break text-900' : null }}" t-if="cell.isVisible">
                        <t t-slot="{{ cell.name }}"/>
                    </div>
                </t>

            </t>
        </div>
    </div>
</t>

<t t-name="web.Form.InnerGroup.ItemComponent">
    <t t-if="cell.props.fieldInfo.field.component.name !== 'BooleanField'">
        <div class="o_cell o_wrap_label flex-grow-1 flex-sm-grow-0 w-100 text-break text-900">
            <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
        </div>
        <div class="o_cell o_wrap_input flex-grow-1 flex-sm-grow-0 text-break" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}{{ cell.width ? 'width: ' + cell.width + '%' + ';' : '' }}">
            <t t-slot="{{ cell.name }}"/>
        </div>
    </t>
    <t t-else="">
        <div class="o_wrap_field_boolean d-flex flex-wrap d-sm-contents flex-sm-nowrap">
            <div class="o_cell o_wrap_label flex-sm-grow-0 text-break text-900">
                <t t-component="cell.Component" t-if="cell.isVisible" t-props="cell.props"/>
            </div>
            <div class="o_cell o_wrap_input order-first flex-sm-grow-0 order-sm-0" t-attf-style="{{ cell.itemSpan -1 &gt; 1 ? 'grid-column: span ' + (cell.itemSpan -1) + ';' : '' }}">
                <t t-slot="{{ cell.name }}"/>
            </div>
        </div>
    </t>
</t>

<t t-name="web.FormLabel">
        <label class="o_form_label" t-att-for="props.id" t-att-class="className">
            <t t-esc="props.string"/><sup class="text-info p-1" t-if="hasTooltip" t-att="{'data-tooltip-template': 'web.FieldTooltip', 'data-tooltip-info': tooltipInfo, 'data-tooltip-touch-tap-to-show': 'true'}">?</sup>
        </label>
    </t>

<t t-name="web.FormStatusIndicator">
        <div class="o_form_status_indicator d-md-flex align-items-center align-self-md-end me-auto" t-att-class="{ o_form_status_indicator_new_record: props.model.root.isNew }">
            <div class="o_form_status_indicator_buttons d-flex" t-att-class="{ invisible: !(props.model.root.isNew or displayButtons) }">
                <button type="button" class="o_form_button_save btn btn-light px-1 py-0 lh-sm" data-hotkey="s" t-on-click.stop="save" data-tooltip="Save manually" aria-label="Save manually" t-ref="save">
                    <i class="fa fa-cloud-upload fa-fw"/>
                </button>
                <button type="button" class="o_form_button_cancel btn btn-light px-1 py-0 lh-sm" data-hotkey="j" t-on-click.stop="discard" data-tooltip="Discard changes" aria-label="Discard changes">
                    <i class="fa fa-undo fa-fw"/>
                </button>
            </div>
            <span t-if="!props.model.root.isNew and indicatorMode === 'invalid'" class="text-danger small ms-2" data-tooltip="Unable to save. Correct the issue or discard changes">
                <i class="fa fa-warning"/>
            </span>
        </div>
    </t>
<t t-name="web.Setting">
        <div t-att-class="classNames">
            <div class="o_setting_left_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <t t-if="props.fieldName and fieldType==='boolean'">
                    <t t-slot="fieldSlot"/>
                </t>
            </div>
            <div class="o_setting_right_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <FormLabel t-if="props.fieldName and props.addLabel" notMuttedLabel="notMuttedLabel" fieldName="props.fieldName" id="props.fieldId" string="labelString" record="props.record" fieldInfo="props.fieldInfo"/>
                <t t-if="labelString and !props.fieldName and props.addLabel">
                    <span class="o_form_label"><t t-esc="labelString"/></span>
                </t>
                <t t-if="labelString and props.documentation">
                    <DocumentationLink path="props.documentation"/>
                </t>
                <t t-if="displayCompanyDependentIcon">
                    <span class="fa fa-lg fa-building-o" title="Values set here are company-specific."/>
                </t>
                <t t-if="labelString and props.help">
                    <div class="text-muted"><t t-esc="props.help"/></div>
                </t>
                <div class="mt16">
                    <t t-if="props.fieldName and fieldType!=='boolean'">
                        <t t-slot="fieldSlot"/>
                    </t>
                    <t t-slot="default"/>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.StatusBarButtons">
        <div class="o_statusbar_buttons d-flex align-items-center align-content-around flex-wrap gap-1">
            <t t-set="slots" t-value="visibleSlotNames"/>
            <t t-if="env.isSmall and slots.length &gt; 1">
                <Dropdown togglerClass="'btn btn-primary'" showCaret="true">
                    <t t-set-slot="toggler">Action</t>
                    <t t-foreach="slots" t-as="slot" t-key="slot">
                        <DropdownItem class="'o_statusbar_button_dropdown_item'">
                            <t t-slot="{{ slot }}"/>
                        </DropdownItem>
                    </t>
                </Dropdown>
            </t>
            <t t-else="">
                <t t-foreach="slots" t-as="slot" t-key="slot">
                    <t t-slot="{{ slot }}"/>
                </t>
            </t>
        </div>
    </t>

<t t-name="web.GraphView.Buttons">
        <div class="btn-group" role="toolbar" aria-label="Main actions">
            <t t-call="web.ReportViewMeasures">
                <t t-set="measures" t-value="model.metaData.measures"/>
                <t t-set="activeMeasures" t-value="[model.metaData.measure]"/>
            </t>
        </div>
        <div class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-bar-chart o_graph_button" data-tooltip="Bar Chart" aria-label="Bar Chart" data-mode="bar" t-on-click="() =&gt; this.onModeSelected('bar')" t-att-class="{ active: model.metaData.mode === 'bar' }"/>
            <button class="btn btn-secondary fa fa-line-chart o_graph_button" data-tooltip="Line Chart" aria-label="Line Chart" data-mode="line" t-on-click="() =&gt; this.onModeSelected('line')" t-att-class="{ active: model.metaData.mode === 'line' }"/>
            <button class="btn btn-secondary fa fa-pie-chart o_graph_button" data-tooltip="Pie Chart" aria-label="Pie Chart" data-mode="pie" t-on-click="() =&gt; this.onModeSelected('pie')" t-att-class="{ active: model.metaData.mode === 'pie' }"/>
        </div>
        <div t-if="model.metaData.mode === 'bar'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
        </div>
        <div t-if="model.metaData.mode === 'line'" class="btn-group" role="toolbar" aria-label="Change graph">
            <button class="btn btn-secondary fa fa-database o_graph_button" data-tooltip="Stacked" aria-label="Stacked" t-on-click="toggleStacked" t-att-class="{ active: model.metaData.stacked }"/>
            <button class="btn btn-secondary fa fa-signal o_graph_button" data-tooltip="Cumulative" aria-label="Cumulative" t-on-click="toggleCumulated" t-att-class="{ active: model.metaData.cumulated }"/>
        </div>
        <div t-if="model.metaData.mode !== 'pie' and model.metaData.domains.length === 1" class="btn-group" role="toolbar" aria-label="Sort graph" name="toggleOrderToolbar">
            <button class="btn btn-secondary fa fa-sort-amount-desc o_graph_button" data-tooltip="Descending" aria-label="Descending" t-on-click="() =&gt; this.toggleOrder('DESC')" t-att-class="{ active: model.metaData.order === 'DESC' }"/>
            <button class="btn btn-secondary fa fa-sort-amount-asc o_graph_button" data-tooltip="Ascending" aria-label="Ascending" t-on-click="() =&gt; this.toggleOrder('ASC')" t-att-class="{ active: model.metaData.order === 'ASC' }"/>
        </div>
    </t>

    <t t-name="web.GraphView">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-if="model.data">
                    <t t-if="!model.hasData() or model.useSampleModel and props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-component="props.Renderer" model="model" buttonTemplate="props.buttonTemplate"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper">
                    <t t-set="title">Invalid data</t>
                    <t t-set="description">Pie chart cannot mix positive and negative numbers. Try to change your domain to only display positive results</t>
                </t>
            </Layout>
        </div>
    </t>

<t t-name="web.GraphRenderer.CustomTooltip">
        <div class="o_graph_custom_tooltip popover show p-2 pe-none mw-100">
            <table class="overflow-hidden m-0">
                <thead>
                    <tr>
                        <th class="o_measure align-baseline border-0" t-esc="measure"/>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="tooltipItems" t-as="tooltipItem" t-key="tooltipItem_index">
                        <td>
                            <span class="o_square badge p-2 rounded-0 align-middle me-2" t-attf-style="background-color: {{ tooltipItem.boxColor }}"> </span>
                            <span class="o_label text-truncate d-inline-block align-middle" t-attf-style="max-width: {{ maxWidth }}" t-esc="tooltipItem.label"/>
                        </td>
                        <td class="o_value ps-2 text-end fw-bolder">
                            <t t-esc="tooltipItem.value"/>
                            <t t-if="mode === 'pie' and tooltipItem.percentage">
                                (<t t-esc="tooltipItem.percentage"/>%)
                            </t>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    <t t-name="web.GraphRenderer">
        <div t-att-class="'o_graph_renderer o_renderer h-100 d-flex flex-column border-top ' + props.class" t-ref="root">
            <div class="d-flex gap-1 mt-2 mx-3 mb-3">
                <t t-call="{{ props.buttonTemplate }}"/>
            </div>
            <div class="o_graph_canvas_container flex-grow-1 position-relative" t-ref="container">
                <canvas t-ref="canvas"/>
            </div>
        </div>
    </t>

<t t-name="web.KanbanExamplesNotebookTemplate">
        <div t-if="props.description" class="o_kanban_examples_description" t-out="props.description"/>
        <div class="o_kanban_examples d-flex p-2">
            <t t-foreach="columns" t-as="column" t-key="column.title">
                <div class="o_kanban_examples_group flex-grow-1 m-3">
                    <h6><b t-esc="column.title"/></h6>
                    <div t-foreach="column.records" t-as="record" t-key="record.id" class="o_kanban_examples_ghost p-2 border bg-white" t-att-class="{ 'o_collapse': record_index &gt; 0 }">
                        <div class="o_ghost_content pb-3 bg-300"/>
                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                        <span class="ms-2" t-if="record.bullet" t-out="record.bullet"/>
                    </div>
                </div>
            </t>
        </div>
    </t>


    <t t-name="web.KanbanColumnExamplesDialog">
        <Dialog contentClass="'o_kanban_examples_dialog'" title="this.constructor.title">
            <Notebook orientation="'vertical'" pages="pages" onPageUpdate.bind="onPageUpdate"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="applyExamples" t-esc="props.applyExamplesText"/>
                <button class="btn btn-secondary" t-on-click="props.close">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.KanbanColumnQuickCreate">
        <div class="o_column_quick_create flex-shrink-0 flex-grow-1 flex-md-grow-0" t-ref="root">
            <div t-if="props.folded" class="o_quick_create_folded position-sticky z-index-1 my-3 text-nowrap" t-on-click="unfold">
                <button class="o_kanban_add_column btn btn-light w-100" aria-label="Add column" data-tooltip="Add column">
                    <i class="fa fa-plus me-2" role="img"/><t t-out="relatedFieldName"/>
                </button>
            </div>
            <div t-else="" class="o_quick_create_unfolded pt-3 pb-2">
                <div class="o_kanban_header top-0 pb-3">
                    <div class="input-group mb-1">
                        <input type="text" class="form-control bg-view" t-attf-placeholder="{{ relatedFieldName }}..." t-ref="autofocus" t-on-focus="() =&gt; state.hasInputFocused = true" t-on-blur="() =&gt; state.hasInputFocused = false" t-on-keydown="onInputKeydown"/>
                        <button class="btn btn-primary o_kanban_add" type="button" t-on-click="validate">
                            Add
                        </button>
                    </div>
                    <small t-if="!env.isSmall and state.hasInputFocused" class="o_discard_msg text-muted float-end">
                        Press <kbd>Esc</kbd> to discard
                    </small>
                    <t t-if="canShowExamples and !env.isSmall">
                        <button type="button" class="btn btn-link o_kanban_examples p-0" t-on-click="showExamples">See examples</button>
                    </t>
                </div>
                <div t-foreach="[,,,]" t-as="i" t-key="i_index" class="o_kanban_muted_record mb-2 py-5 bg-300 opacity-50"/>
            </div>
        </div>
    </t>

<t t-name="web.KanbanView">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-create-button">
                    <t t-if="canCreate and props.showButtons">
                        <button type="button" class="btn btn-primary o-kanban-button-new" accesskey="c" t-on-click="() =&gt; this.createRecord()" data-bounce-button="">
                            New
                        </button>
                    </t>
                </t>
                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="control-panel-always-buttons">
                    <t t-foreach="headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                        <MultiRecordViewButton t-if="button.display === 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title"/>
                    </t>
                </t>
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-component="props.Renderer" list="model.root" archInfo="props.archInfo" Compiler="props.Compiler" readonly="true" forceGlobalClick="props.forceGlobalClick" deleteRecord.bind="deleteRecord" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp" scrollTop.bind="scrollTop" canQuickCreate="canQuickCreate" quickCreateState="quickCreateState" progressBarState="progressBarState" evalViewModifier.bind="evalViewModifier"/>
            </Layout>
        </div>
    </t>

    <t t-name="web.KanbanView.Buttons">
        <div t-if="props.showButtons" class="o_cp_buttons d-empty-none d-flex align-items-baseline gap-1" role="toolbar" aria-label="Main actions"/>
    </t>

<t t-name="web.KanbanCoverImageDialog">
        <Dialog title="'Set a Cover Image'" size="'lg'">
            <div t-if="attachments.length" class="o_kanban_cover_container bg-100">
                <t t-foreach="attachments" t-as="attachment" t-key="attachment.id">
                    <div class="o_kanban_cover_image position-relative d-inline-block m-2 border bg-white o_cursor_pointer" t-att-class="{                         'o_selected border-primary': state.selectedAttachmentId === attachment.id,                     }">
                        <img t-attf-src="/web/image/{{attachment.id}}?unique=1" class="position-absolute start-0 end-0 top-0 bottom-0 mw-100 mh-100 m-auto" alt="Attachment" t-on-click="() =&gt; this.selectAttachment(attachment, false)" t-on-dblclick="() =&gt; this.selectAttachment(attachment, true)"/>
                    </div>
                </t>
            </div>
            <t t-else="">There is no available image to be set as cover.</t>
            <t t-set-slot="footer" t-slot-scope="dialog">
                <button t-if="attachments.length" class="btn btn-primary" t-on-click="setCover" t-att-disabled="!state.selectedAttachmentId">
                    Select
                </button>
                <FileInput acceptedFileExtensions="'image/*'" onUpload.bind="onUpload" resModel="props.record.resModel" resId="props.record.resId">
                        <button class="btn btn-primary" t-on-click="uploadImage">
                            Upload and Set
                        </button>
                </FileInput>
                <button t-if="hasCoverImage" class="btn btn-secondary" t-on-click="removeCover">
                    Remove Cover Image
                </button>
                <button class="btn btn-secondary" t-on-click="dialog.close">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.KanbanHeader">
        <div class="o_kanban_header position-sticky top-0 z-index-1" t-ref="root" t-attf-class="{{ !env.isSmall and group.isFolded ? 'pt-2' : 'py-2' }}">
            <div class="o_kanban_header_title position-relative d-flex lh-lg">
                <div t-if="group.isFolded" class="o_column_title d-flex align-items-center pt-1 fs-4 lh-1 text-nowrap opacity-50 opacity-100-hover flex-grow-1" t-on-mouseenter="onTitleMouseEnter" t-on-mouseleave="onTitleMouseLeave">
                    <t t-esc="groupName"/>
                    <span class="badge text-bg-500 rounded-pill lh-1 ms-2" t-esc="group.count"/>
                </div>
                <span t-if="!group.isFolded" t-esc="groupName" class="o_column_title flex-grow-1 d-inline-block mw-100 text-truncate fs-4 fw-bold align-top text-900" t-on-mouseenter="onTitleMouseEnter" t-on-mouseleave="onTitleMouseLeave"/>
                <t t-if="env.isSmall or !group.isFolded">
                    <Dropdown class="'o_kanban_config'" togglerClass="'btn px-2'" position="'bottom-end'" container="() =&gt; this._configDropdownContainer">
                        <t t-set-slot="toggler">
                            <i class="fa fa-gear opacity-50 opacity-100-hover" role="img" aria-label="Settings" title="Settings"/>
                        </t>
                        <t t-foreach="configItems" t-as="item" t-key="item.key">
                            <DropdownItem t-if="item.isVisible" class="item.class" onSelected="() =&gt; this[item.method]()">
                                <t t-esc="item.label"/>
                            </DropdownItem>
                        </t>
                    </Dropdown>
                    <button t-if="canQuickCreate()" class="o_kanban_quick_add btn pe-2 me-n2" t-on-click="() =&gt; this.quickCreate()">
                        <i class="fa fa-plus opacity-75 opacity-100-hover" role="img" aria-label="Quick add" title="Quick add"/>
                    </button>
                </t>
                <button t-else="" class="o_column_unfold btn d-flex align-items-center justify-content-between flex-nowrap pt-2 pb-3 transition-base">
                    <i class="fa fa-caret-left lh-lg transition-base" role="img" aria-label="Unfold" title="Unfold"/>
                    <i class="fa fa-caret-right lh-lg" role="img" aria-label="Unfold" title="Unfold"/>
                </button>
            </div>
            <div t-if="(env.isSmall or !group.isFolded) and progressBar" class="o_kanban_counter position-relative d-flex align-items-center justify-content-between" t-att-class="{ 'opacity-25': !group.count }">
                <ColumnProgress group="group" progressBar="progressBar" aggregate="groupAggregate" onBarClicked.bind="onBarClicked"/>
            </div>
        </div>
    </t>

    <t t-name="web.KanbanGroupTooltip">
        <div class="o-tooltip px-2 py-1">
            <t t-foreach="props.tooltip" t-as="entry" t-key="entry_index">
                <t t-esc="entry.title"/>
                <br/>
                <t t-esc="entry.value"/>
                <br t-if="!tooltip_last"/>
            </t>
        </div>
    </t>

<t t-name="web.KanbanRecord">
        <div role="article" t-att-class="getRecordClasses()" t-att-data-id="props.record.id" t-att-tabindex="props.record.model.useSampleModel ? -1 : 0" t-on-click="onGlobalClick" t-ref="root">
            <t t-call="{{ templates[this.constructor.KANBAN_BOX_ATTRIBUTE] }}" t-call-context="this.renderingContext"/>
            <t t-call="{{ this.constructor.menuTemplate }}"/>
        </div>
    </t>
    <t t-name="web.KanbanRecordMenu">
        <t t-if="showMenu">
            <Dropdown class="'o_dropdown_kanban bg-transparent position-absolute end-0'" menuClass="'dropdown-menu'" togglerClass="'btn o-no-caret rounded-0'" position="'bottom-end'" title="'Dropdown menu'">
                <t t-set-slot="toggler">
                    <span class="fa fa-ellipsis-v"/>
                </t>
                <KanbanDropdownMenuWrapper>
                    <t t-call="{{ templates[this.constructor.KANBAN_MENU_ATTRIBUTE] }}" t-call-context="renderingContext"/>
                </KanbanDropdownMenuWrapper>
            </Dropdown>
        </t>
    </t>
<t t-name="web.KanbanRecordQuickCreate">
        <KanbanQuickCreateController t-if="state.isLoaded" t-props="quickCreateProps"/>
    </t>

    <t t-name="web.KanbanQuickCreateController">
        <div class="o_kanban_quick_create o_field_highlight shadow" t-att-class="{ o_disabled: state.disabled, 'w-100 mx-0': props.listIsGrouped }" t-ref="root">
            <t t-component="props.Renderer" class="'o_form_view o_xxs_form_view p-0'" record="model.root" Compiler="props.Compiler" archInfo="props.archInfo"/>
            <div class="d-flex flex-wrap justify-content-end gap-1">
                <button class="btn btn-primary o_kanban_add me-1" t-on-click="() =&gt; this.validate('add')">
                    Add
                </button>
                <button class="btn btn-secondary o_kanban_edit me-1" t-on-click="() =&gt; this.validate('edit')">
                    Edit
                </button>
                <span class="flex-grow-1"/>
                <button class="btn btn-secondary o_kanban_cancel" t-on-click="() =&gt; this.cancel(true)">
                    <i class="fa fa-trash"/>
                </button>
            </div>
        </div>
    </t>

<t t-name="web.KanbanRenderer">
        <div class="o_kanban_renderer o_renderer d-flex" t-attf-class="{{ props.list.isGrouped ? 'o_kanban_grouped align-content-stretch' : 'o_kanban_ungrouped align-content-start flex-wrap justify-content-start' }}" t-ref="root">
            <t t-foreach="getGroupsOrRecords()" t-as="groupOrRecord" t-key="groupOrRecord.key">
                <t t-if="groupOrRecord.group">
                    <t t-set="group" t-value="groupOrRecord.group"/>
                    <t t-set="isGroupProcessing" t-value="isProcessing(group.id)"/>
                    <div class="o_kanban_group flex-shrink-0 flex-grow-1 flex-md-grow-0" t-att-class="getGroupClasses(group, isGroupProcessing)" t-attf-class="{{ !env.isSmall and group.isFolded ? 'opacity-trigger-hover' : '' }}" t-att-data-id="group.id" t-on-click="(ev) =&gt; this.onGroupClick(group, ev)">
                        <KanbanHeader activeActions="props.archInfo.activeActions" canQuickCreate="props.canQuickCreate" deleteGroup="(group) =&gt; this.deleteGroup(group)" dialogClose="dialogClose" group="group" list="props.list" quickCreateState="props.quickCreateState" scrollTop="props.scrollTop" tooltipInfo="props.archInfo.tooltipInfo" progressBarState="props.progressBarState"/>
                        <t t-if="!group.isFolded">
                            <t t-if="group.id === props.quickCreateState.groupId">
                                <KanbanRecordQuickCreate group="group" onCancel="force =&gt; this.cancelQuickCreate(force)" onValidate="(record, mode) =&gt; this.validateQuickCreate(record, mode, group)" quickCreateView="props.quickCreateState.view"/>
                            </t>
                            <t t-foreach="group.list.records" t-as="record" t-key="record.id">
                                <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="!isGroupProcessing and !isProcessing(record.id) and canResequenceRecords" forceGlobalClick="props.forceGlobalClick" group="group" list="props.list" deleteRecord="props.deleteRecord" openRecord="props.openRecord" readonly="props.readonly" record="record" templates="props.archInfo.templateDocs" progressBarState="props.progressBarState"/>
                            </t>
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.loadMore(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                        <t t-elif="env.isSmall">
                            <t t-set="unloadedCount" t-value="getGroupUnloadedCount(group)"/>
                            <div t-if="unloadedCount &gt; 0" class="o_kanban_load_more">
                                <button class="btn btn-outline-primary w-100 mt-4" t-on-click="() =&gt; this.toggleGroup(group)">Load more... (<t t-out="unloadedCount"/> remaining)</button>
                            </div>
                        </t>
                    </div>
                </t>
                <t t-else="">
                    <KanbanRecord archInfo="props.archInfo" Compiler="props.Compiler" canResequence="!isProcessing(groupOrRecord.record.id) and canResequenceRecords" forceGlobalClick="props.forceGlobalClick" list="props.list" deleteRecord="props.deleteRecord" openRecord="props.openRecord" readonly="props.readonly" record="groupOrRecord.record" templates="props.archInfo.templateDocs"/>
                </t>
            </t>
            <t t-if="props.list.isGrouped">
                <t t-if="canCreateGroup()">
                    <KanbanColumnQuickCreate folded="state.columnQuickCreateIsFolded" onFoldChange="folded =&gt; state.columnQuickCreateIsFolded = props.list.groups.length &gt; 0 and folded" onValidate="props.list.createGroup.bind(props.list)" exampleData="exampleData" groupByField="props.list.groupByField"/>

                    <div t-if="props.list.groups.length === 0" class="o_kanban_example_background_container d-flex opacity-50">
                        <div class="o_kanban_example_background flex-grow-1">
                            <div class="o_kanban_examples d-flex p-2">
                                <div t-foreach="ghostColumns" t-as="column" t-key="column.name" class="o_kanban_examples_group flex-grow-1 m-3">
                                    <h6><b t-esc="column.name"/></h6>
                                    <div t-foreach="column.cards" t-as="card" t-key="card_index" class="o_kanban_examples_ghost d-flex flex-wrap justify-content-between mb-3 p-2 border bg-light">
                                        <div class="o_ghost_content w-100 pb-3 bg-300"/>
                                        <div class="o_ghost_content o_ghost_tag d-inline-block w-50 mt-3 pb-3 bg-300"/>
                                        <span class="mt-2 rounded-circle bg-300">
                                            <img class="o_ghost_avatar" src="/base/static/img/avatar.png" alt="Avatar"/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </t>
            </t>
            <t t-else="">

                <div t-foreach="[,,,,,,]" t-as="i" t-key="i_index" class="o_kanban_record o_kanban_ghost flex-grow-1 flex-md-shrink-1 flex-shrink-0 my-0"/>
            </t>
            <t t-if="showNoContentHelper">
                <t t-if="props.noContentHelp" t-call="web.ActionHelper">
                    <t t-set="noContentHelp" t-value="props.noContentHelp"/>
                </t>
                <t t-else="" t-call="web.NoContentHelper"/>
            </t>
        </div>
    </t>

    <t t-name="web.KanbanColorPicker">
        <ul t-if="this.dataState.widget.editable" class="oe_kanban_colorpicker mb-0 ms-2">

            <t t-foreach="this.props.colors" t-as="color" t-key="color_index">
                <li role="menuitem" t-on-click="() =&gt; this.selectColor(color_index)" t-att-title="color" t-att-aria-label="color">
                    <a href="#" t-attf-class="oe_kanban_color_{{ color_index }}"/>
                </li>
            </t>
        </ul>
    </t>

    <t t-name="web.KanbanDropdownMenuWrapper">
        <div t-on-click="onClick" style="display:contents">
            <t t-slot="default"/>
        </div>
    </t>

<t t-name="web.ExportAll">
        <DropdownItem class="'o_export_all_menu'" onSelected.bind="onDirectExportData">
            <i class="fa fa-fw fa-upload me-1"/>Export All
        </DropdownItem>
    </t>

<t t-name="web.ListView.ConfirmationModal">
        <Dialog size="'md'" title="props.title">
            <main role="alert">
                <p>
                    <t t-if="props.isDomainSelected">This update will only consider the records of the current page.<br/><br/></t>
                    <t t-if="props.nbRecords != props.nbValidRecords">
                        Among the <t t-esc="props.nbRecords"/> selected records,
                        <t t-esc="props.nbValidRecords"/> are valid for this update.<br/>
                    </t>
                    Are you sure you want to perform the following update on those <t t-esc="props.nbValidRecords"/> records?
                </p>
                <div class="table-responsive">
                    <table class="o_modal_changes">
                        <tbody>
                            <t t-foreach="props.fields" t-as="field" t-key="field_index">
                                <tr>
                                    <td>Field:</td>
                                    <td><t t-esc="field.label"/></td>
                                </tr>
                                <tr>
                                    <td>Update to:</td>
                                    <td style="pointer-events: none;">
                                        <Field name="field.name" record="props.record" type="field.widget" readonly="true" fieldInfo="field.fieldNode"/>
                                    </td>
                                </tr>
                            </t>
                        </tbody>
                    </table>
                </div>
            </main>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="_confirm" t-ref="autofocus">
                Confirm
                </button>
                <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel">
                Cancel
                </button>
            </t>
        </Dialog>
    </t>

<t t-name="web.ListView">
        <div t-att-class="className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                <t t-set-slot="control-panel-create-button">
                    <t t-if="!model.root.editedRecord and activeActions.create and props.showButtons">
                        <button type="button" class="btn btn-primary o_list_button_add" data-hotkey="c" t-on-click="onClickCreate" data-bounce-button="">
                            New
                        </button>
                    </t>
                </t>

                <t t-set-slot="layout-buttons">
                    <t t-call="{{ props.buttonTemplate }}"/>
                </t>
                <t t-set-slot="control-panel-always-buttons">
                    <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                        <MultiRecordViewButton t-if="button.display === 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title"/>
                    </t>
                </t>

                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar" autofocus="firstLoad"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>

                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu t-if="!nbSelected"/>
                </t>
                <t t-set-slot="control-panel-selection-actions">
                    <div t-if="nbSelected" class="d-flex gap-1">
                        <t t-call="web.ListView.Selection"/>
                        <t t-foreach="archInfo.headerButtons" t-as="button" t-key="button.id" t-if="!evalViewModifier(button.invisible)">
                            <MultiRecordViewButton t-if="button.display !== 'always'" list="model.root" className="button.className" clickParams="button.clickParams" defaultRank="'btn-secondary'" domain="props.domain" icon="button.icon" string="button.string" title="button.title"/>
                        </t>
                        <t t-if="props.info.actionMenus">
                            <ActionMenus getActiveIds="() =&gt; model.root.selection.map((r) =&gt; r.resId)" context="props.context" domain="props.domain" items="actionMenuItems" isDomainSelected="model.root.isDomainSelected" resModel="model.root.resModel" onActionExecuted="() =&gt; model.load()"/>
                        </t>
                    </div>
                </t>
                <t t-component="props.Renderer" list="model.root" activeActions="activeActions" archInfo="archInfo" allowSelectors="props.allowSelectors" editable="editable" onOpenFormView="onOpenFormView" openRecord.bind="openRecord" noContentHelp="props.info.noContentHelp" onAdd.bind="createRecord" onOptionalFieldsChanged.bind="onOptionalFieldsChanged" evalViewModifier.bind="evalViewModifier"/>
            </Layout>
        </div>
    </t>

    <t t-name="web.ListView.Buttons">
        <div t-if="props.showButtons" class="o_list_buttons d-flex gap-1 d-empty-none align-items-baseline" role="toolbar" aria-label="Main actions">
            <t t-if="model.root.editedRecord">
                <button type="button" class="btn btn-primary o_list_button_save" data-hotkey="s" t-on-click.stop="onClickSave">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_list_button_discard" data-hotkey="j" t-on-click.stop="onClickDiscard" t-on-mousedown="onMouseDownDiscard">
                    Discard
                </button>
            </t>
        </div>
    </t>

    <t t-name="web.ListView.Selection">
        <div class="o_list_selection_box list-group flex-row" role="alert">
            <span class="list-group-item active d-flex align-items-center pe-0 py-0 rounded-1 lh-1">
                <span t-if="isDomainSelected">All <b t-esc="isTotalTrustable ? nbTotal : nbRecordsMatchingDomain"/> selected</span>
                <t t-else="">
                    <b class="me-1" t-esc="nbSelected"/> selected
                    <a t-if="isPageSelected and (nbTotal &gt; nbSelected or !isTotalTrustable)" href="#" class="o_list_select_domain ms-3 btn btn-sm btn-info p-1 me-n2 border-0 fw-normal" title="Select all records matching the search" t-on-click="onSelectDomain">
                        <i class="oi oi-fw oi-arrow-right"/>
                        Select all <span t-if="isTotalTrustable" t-esc="nbTotal"/>
                    </a>
                </t>
                <a href="#" title="Unselect All" class="o_list_unselect_all btn btn-link py-0" t-on-click="onUnselectAll">
                    <i class="oi oi-close"/>
                </a>
            </span>
        </div>
    </t>

<t t-name="web.ListRenderer">
        <t t-set="_canSelectRecord" t-value="canSelectRecord"/>
        <div class="o_list_renderer o_renderer table-responsive" t-att-class="uniqueRendererClass" tabindex="-1" t-ref="root">
            <t t-if="showNoContentHelper" t-call="web.ActionHelper">
                <t t-set="noContentHelp" t-value="props.noContentHelp"/>
            </t>
            <table t-attf-class="o_list_table table table-sm table-hover position-relative mb-0 {{props.list.isGrouped ? 'o_list_table_grouped' : 'o_list_table_ungrouped table-striped'}}" t-ref="table">
                <thead>
                    <tr>
                        <th t-if="hasSelectors" class="o_list_record_selector o_list_controller align-middle pe-1 cursor-pointer" tabindex="-1" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" t-on-click.stop="toggleSelection">
                            <CheckBox disabled="!_canSelectRecord" value="selectAll" className="'d-flex m-0'" onChange.bind="toggleSelection"/>
                        </th>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <th t-if="column.type === 'field'" t-att-data-name="column.name" t-att-class="getColumnClass(column) + ' opacity-trigger-hover'" t-on-pointerup="onColumnTitleMouseUp" t-on-click="() =&gt; this.onClickSortColumn(column)" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" t-att-data-tooltip-template="isDebugMode ? 'web.FieldTooltip' : 'web.ListHeaderTooltip'" t-att-data-tooltip-info="makeTooltip(column)" data-tooltip-delay="1000" tabindex="-1">
                                <t t-if="column.hasLabel and column.widget !== 'handle'">
                                <t t-set="isNumeric" t-value="isNumericColumn(column)"/>
                                    <div t-att-class="{'d-flex': true, 'flex-row-reverse': shouldReverseHeader(column)}">
                                        <span class="d-block min-w-0 text-truncate flex-grow-1" t-att-class="isNumeric ? 'o_list_number_th' : ''" t-esc="column.label"/>
                                        <i t-att-class="getSortableIconClass(column)"/>
                                    </div>
                                    <span class="o_resize position-absolute top-0 end-0 bottom-0 ps-1 bg-black-25 opacity-0 opacity-50-hover z-index-1" t-on-pointerdown.stop.prevent="onStartResize"/>
                                </t>
                            </th>
                            <th t-else="" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" t-att-class="{o_list_button: column.type === 'button_group'}"/>
                        </t>
                        <th t-if="props.onOpenFormView" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" class="o_list_open_form_view"/>
                        <th t-if="displayOptionalFields or activeActions.onDelete" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)" class="o_list_controller o_list_actions_header position-sticky end-0">
                            <Dropdown t-if="displayOptionalFields" class="'o_optional_columns_dropdown text-center border-top-0'" togglerClass="'btn p-0'" skipTogglerTabbing="true" listRendererClass="uniqueRendererClass" position="'bottom-end'">
                                <t t-set-slot="toggler">
                                    <i class="o_optional_columns_dropdown_toggle oi oi-fw oi-settings-adjust"/>
                                </t>

                                <t t-foreach="optionalFieldGroups" t-as="group" t-key="group_index">
                                    <div t-if="!group_first" role="separator" class="dropdown-divider"/>
                                    <DropdownItem t-if="group.displayName" parentClosingMode="'none'" onSelected="() =&gt; this.toggleOptionalFieldGroup(group.id)">
                                        <div class="fw-bold" t-esc="group.displayName"/>
                                    </DropdownItem>
                                    <t t-foreach="group.optionalFields" t-as="field" t-key="field_index">
                                        <DropdownItem parentClosingMode="'none'" onSelected="() =&gt; this.toggleOptionalField(field.name)">
                                            <CheckBox onChange="() =&gt; this.toggleOptionalField(field.name)" value="field.value" name="field.name">
                                                <span class="d-flex align-items-center"><span class="text-truncate" t-esc="field.label"/><span class="ps-1" t-if="env.debug" t-esc="' (' + field.name + ')'"/></span>
                                            </CheckBox>
                                        </DropdownItem>
                                    </t>
                                </t>
                            </Dropdown>
                        </th>
                    </tr>
                </thead>
                <tbody class="ui-sortable">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="props.list"/>
                    </t>
                </tbody>
                <tfoot t-on-click="() =&gt; props.list.leaveEditMode()" class="o_list_footer cursor-default" t-att-class="{o_sample_data_disabled: props.list.model.useSampleModel}">
                    <tr>
                        <td t-if="hasSelectors"/>
                        <t t-foreach="state.columns" t-as="column" t-key="column.id">
                            <t t-set="aggregate" t-value="aggregates[column.name]"/>
                            <td t-if="aggregate" class="o_list_number">
                                <span t-esc="aggregate.value" t-att-data-tooltip="aggregate.help"/>
                            </td>
                            <td t-else=""/>
                        </t>
                        <td t-if="props.onOpenFormView"/>
                        <td t-if="displayOptionalFields or activeActions.onDelete"/>
                    </tr>
                </tfoot>
            </table>
        </div>
    </t>

    <t t-name="web.ListRenderer.Rows">
        <t t-if="!list.isGrouped">
            <t t-foreach="list.records" t-as="record" t-key="record.id">
                <t t-call="{{ constructor.recordRowTemplate }}"/>
            </t>
            <tr t-if="displayRowCreates">
                <td t-if="withHandleColumn"/>
                <td t-att-colspan="withHandleColumn ? nbCols - 1 : nbCols" class="o_field_x2many_list_row_add" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, null)">
                    <t t-foreach="creates" t-as="create" t-key="create_index">
                        <a t-if="create.type === 'create'" href="#" role="button" t-att-class="create_index !== 0 ? 'ml16' : ''" t-att-tabindex="props.list.editedRecord ? '-1' : '0'" t-on-click.stop.prevent="() =&gt; this.add({ context: create.context })">
                            <t t-esc="create.string"/>
                        </a>
                        <ViewButton t-if="create.type === 'button'" className="\`\${create.className} \${create_index !== 0 ? 'ml16' : ''}\`" clickParams="create.clickParams" icon="create.icon" record="props.list" string="create.string" title="create.title" tabindex="props.list.editedRecord ? '-1' : '0'"/>
                    </t>
                </td>
            </tr>
            <t t-if="!props.list.isGrouped">
                <tr t-foreach="getEmptyRowIds" t-as="emptyRowId" t-key="emptyRowId">
                    <td t-att-colspan="nbCols">​</td>
                </tr>
            </t>
        </t>
        <t t-else="">
            <t t-foreach="list.groups" t-as="group" t-key="group.id">
                <t t-call="{{ constructor.groupRowTemplate }}"/>
                <t t-if="!group.isFolded">
                    <t t-call="{{ constructor.rowsTemplate }}">
                        <t t-set="list" t-value="group.list"/>
                    </t>
                    <tr t-if="!group.list.isGrouped and props.editable and canCreate">
                        <td t-if="hasSelectors"/>
                        <td t-att-colspan="hasSelectors ?  nbCols - 1 : nbCols" class="o_group_field_row_add">
                            <a href="#" role="button" t-on-click.stop.prevent="() =&gt; group.addNewRecord({}, props.editable === 'top')" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev)">
                                Add a line
                            </a>
                        </td>
                    </tr>
                </t>
            </t>
        </t>
    </t>

    <t t-name="web.ListRenderer.GroupRow">
        <tr t-attf-class="{{group.count &gt; 0 ? 'o_group_has_content' : ''}} o_group_header {{!group.isFolded ? 'o_group_open' : ''}} cursor-pointer" t-on-click="() =&gt; this.toggleGroup(group)">
            <th t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" tabindex="-1" t-attf-class="o_group_name fs-6 fw-bold {{!group.isFolded ? 'text-900' : 'text-700'}}" t-att-colspan="getGroupNameCellColSpan(group)">
                <div class="d-flex align-items-center">
                    <span t-attf-class="o_group_caret fa fa-fw {{group.isFolded ? 'fa-caret-right' : 'fa-caret-down' }} me-1" t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"/>
                    <t t-esc="getGroupDisplayName(group)"/> (<t t-esc="group.count"/>)
                    <div t-if="(groupByButtons[group.groupByField.name] and !group.isFolded and group.record.resId)" class="o_group_buttons">
                        <t t-foreach="groupByButtons[group.groupByField.name]" t-as="button" t-key="button.id">
                            <t t-if="!evalInvisible(button.invisible, group.record)">
                                <t t-if="button.clickParams.type === 'edit'">
                                    <button t-att-title="button.title" class="btn" t-on-click="() =&gt; this.editGroupRecord(group)" tabindex="-1">
                                        <i t-attf-class="fa fa-fw {{button.icon}} o_button_icon"/>
                                    </button>
                                </t>
                                <t t-else="">
                                    <ViewButton className="button.className" clickParams="button.clickParams" icon="button.icon" record="group.record" string="button.string" title="button.title" tabindex="'-1'"/>
                                </t>
                            </t>
                        </t>
                    </div>
                    <div t-if="showGroupPager(group)" t-on-click.stop="" class="ms-auto">
                        <Pager t-props="getGroupPagerProps(group)"/>
                    </div>
                </div>
            </th>
            <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" t-foreach="getAggregateColumns(group)" t-as="column" t-key="column.id" t-att-class="{'o_list_number': column.type === 'field'}">
                <t t-if="column.type === 'field'" t-esc="formatAggregateValue(group, column)"/>
            </td>
            <t t-set="groupPagerColspan" t-value="getGroupPagerCellColspan(group)"/>
            <th t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group)" t-if="groupPagerColspan &gt; 0" t-att-colspan="groupPagerColspan"/>
        </tr>
    </t>

    <t t-name="web.ListRenderer.RecordRow">
        <tr class="o_data_row" t-att-class="getRowClass(record)" t-att-data-id="record.id" t-on-click.capture="(ev) =&gt; this.onClickCapture(record, ev)" t-on-mouseover.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseout.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-mouseenter.capture="(ev) =&gt; this.ignoreEventInSelectionMode(ev)" t-on-touchstart="(ev) =&gt; this.onRowTouchStart(record, ev)" t-on-touchend="() =&gt; this.onRowTouchEnd(record)" t-on-touchmove="() =&gt; this.onRowTouchMove(record)">
            <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-if="hasSelectors" class="o_list_record_selector user-select-none" t-on-click.stop="() =&gt; this.toggleRecordSelection(record)" tabindex="-1">
                <CheckBox disabled="!_canSelectRecord" value="record.selected" onChange.alike="() =&gt; this.toggleRecordSelection(record)"/>
            </td>
            <t t-foreach="getColumns(record)" t-as="column" t-key="column.id">
                <t t-if="column.type === 'field'">
                    <t t-set="isInvisible" t-value="evalInvisible(column.invisible, record) or !(column.name in record.data)"/>
                    <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell cursor-pointer" t-att-class="getCellClass(column, record)" t-att-name="column.name" t-att-colspan="column.colspan" t-att-data-tooltip="!isInvisible ? getCellTitle(column, record) : false" data-tooltip-delay="1000" t-on-click="(ev) =&gt; this.onCellClicked(record, column, ev)" tabindex="-1">
                        <t t-if="!isInvisible">
                            <t t-if="canUseFormatter(column, record)" t-out="getFormattedValue(column, record)"/>
                            <Field t-else="" name="column.name" record="record" type="column.widget" class="getFieldClass(column)" fieldInfo="column" t-props="getFieldProps(record, column)"/>
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'button_group'">
                    <td t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" class="o_data_cell cursor-pointer" t-att-class="getCellClass(column, record)" t-on-click="(ev) =&gt; this.onButtonCellClicked(record, column, ev)" tabindex="-1">
                        <t t-foreach="column.buttons" t-as="button" t-key="button.id">
                            <ViewButton t-if="!evalInvisible(button.invisible, record)" className="button.className" clickParams="button.clickParams" defaultRank="button.defaultRank" disabled="button.disabled" icon="button.icon" record="record" string="button.string" title="button.title" tabindex="props.list.editedRecord ? '-1' : '0'" onClick="isX2Many and record.isNew ? displaySaveNotification.bind(this) : ''"/>
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'widget'">
                    <td class="o_data_cell" t-att-class="getCellClass(column, record)">
                        <Widget t-props="column.props" record="record"/>
                    </td>
                </t>
            </t>

            <t t-if="props.onOpenFormView">
                <td class="o_list_record_open_form_view text-center" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-on-click.stop="() =&gt; isX2Many and record.isNew ? this.displaySaveNotification() : props.onOpenFormView(record)" tabindex="-1">
                    <button class="btn btn-link align-top text-end" name="Open in form view" aria-label="Open in form view" tabindex="-1">View</button>
                </td>
            </t>

            <t t-set="useUnlink" t-value="'unlink' in activeActions"/>
            <t t-set="hasX2ManyAction" t-value="isX2Many and (useUnlink ? activeActions.unlink : activeActions.delete)"/>
            <t t-if="displayOptionalFields or hasX2ManyAction">
                <t t-if="hasX2ManyAction">
                    <td class="o_list_record_remove text-center" t-on-keydown="(ev) =&gt; this.onCellKeydown(ev, group, record)" t-on-click.stop="(ev) =&gt; this.onDeleteRecord(record, ev)" tabindex="-1">
                        <button class="fa" t-att-class="{                                 'fa-trash-o': !useUnlink and activeActions.delete,                                 'fa-times': useUnlink and activeActions.unlink,                             }" name="delete" aria-label="Delete row" tabindex="-1"/>
                    </td>
                </t>
                <td t-else="" tabindex="-1"/>
            </t>
        </tr>
    </t>

    <t t-name="web.ListRenderer.OptionalFieldsDropdown">
    <div class="o-dropdown dropdown" t-att-class="props.class" t-attf-class="         {{ state.directionCaretClass || ''}}         {{ state.open ? 'show' : ''}}         {{ !showCaret ? 'o-dropdown--no-caret' : '' }}       " t-ref="root">
      <button t-if="props.toggler !== 'parent'" type="button" class="dropdown-toggle" t-attf-class="           {{props.togglerClass || ''}}           {{parentDropdown ? 'dropdown-item' : ''}}         " t-att-disabled="props.disabled" t-on-click.stop="onTogglerClick" t-on-mouseenter="onTogglerMouseEnter" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att-data-tooltip="props.tooltip" t-att-tabindex="props.skipTogglerTabbing ? -1 : 0" t-att-aria-expanded="state.open ? 'true' : 'false'" t-ref="togglerRef">
        <t t-slot="toggler" open="state.open"/>
      </button>
      <div t-if="state.open" t-attf-class="           o-dropdown--menu dropdown-menu           {{ parentDropdown ? 'o-dropdown--menu-submenu' : '' }}           {{ props.menuDisplay }}         " t-att-class="props.menuClass" role="menu" t-ref="menuRef" t-on-pointerenter="() =&gt; props.holdOnHover and position.lock()" t-on-pointerleave="() =&gt; props.holdOnHover and position.unlock()" t-on-scroll="props.onScroll" t-portal="\`.\${props.listRendererClass}\`" class="o_optional_columns_dropdown">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

<t t-name="web.ListHeaderTooltip">
        <t t-esc="field.label"/>
        <div t-if="field.help" class="mt-2" t-esc="field.help"/>
    </t>

<t t-name="web.ActionHelper">
        <div class="o_view_nocontent">
            <div class="o_nocontent_help">
                <t t-out="noContentHelp"/>
            </div>
        </div>
    </t>

    <t t-name="web.NoContentHelper">
        <div class="o_view_nocontent" role="alert">
            <div class="o_nocontent_help">
                <p class="o_view_nocontent_empty_folder">
                    <t t-if="title" t-esc="title"/>
                    <t t-else="">No data to display</t>
                </p>
                <p>
                <t t-if="description" t-esc="description"/>
                <t t-else="">Try to add some records, or make sure that there is no
                    active filter in the search bar.</t>
                </p>
            </div>
        </div>
    </t>

<t t-name="web.PivotView.Buttons">
        <div class="o_pivot_buttons d-flex gap-1 mt-2 mx-3 mb-3">
            <div class="btn-group" role="toolbar" aria-label="Main actions">
                <t t-call="web.ReportViewMeasures">
                    <t t-set="measures" t-value="model.metaData.measures"/>
                    <t t-set="activeMeasures" t-value="model.metaData.activeMeasures"/>
                </t>
            </div>
            <div class="btn-group" role="toolbar" aria-label="Pivot settings">
                <t t-set="noDataDisplayed" t-value="!model.hasData() || !model.metaData.activeMeasures.length"/>
                <button class="btn btn-secondary fa fa-exchange o_pivot_flip_button" t-on-click="onFlipButtonClicked" data-tooltip="Flip axis" aria-label="Flip axis" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
                <button class="btn btn-secondary fa fa-arrows o_pivot_expand_button" t-on-click="onExpandButtonClicked" data-tooltip="Expand all" aria-label="Expand all" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
                <button class="btn btn-secondary fa fa-download o_pivot_download" t-on-click="onDownloadButtonClicked" data-tooltip="Download xlsx" aria-label="Download xlsx" t-attf-disabled="{{noDataDisplayed ? 'disabled' : false}}"/>
            </div>
        </div>
    </t>

    <t t-name="web.PivotView">
        <div t-att-class="props.className" t-ref="root">
            <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="props.display">
                <t t-set-slot="control-panel-additional-actions">
                    <CogMenu/>
                </t>
                <t t-set-slot="layout-actions">
                    <SearchBar t-if="searchBarToggler.state.showSearchBar"/>
                </t>
                <t t-set-slot="control-panel-navigation-additional">
                    <t t-component="searchBarToggler.component" t-props="searchBarToggler.props"/>
                </t>
                <t t-set="displayNoContent" t-value="                     props.info.noContentHelp !== false and (                         !(model.hasData() and model.metaData.activeMeasures.length) or                         model.useSampleModel                     )"/>
                <t t-if="displayNoContent">
                    <t t-if="props.info.noContentHelp" t-call="web.ActionHelper">
                        <t t-set="noContentHelp" t-value="props.info.noContentHelp"/>
                    </t>
                    <t t-else="" t-call="web.NoContentHelper"/>
                </t>
                <t t-component="props.Renderer" model="model" buttonTemplate="props.buttonTemplate"/>
            </Layout>
        </div>
    </t>

<t t-name="web.PivotGroupByMenu">
        <Dropdown class="'o_group_by_menu btn-group'" togglerClass="'btn btn-light'" t-props="dropdownProps">
            <t t-set-slot="toggler">
                <i class="me-1" t-att-class="icon"/>
                <span class="o_dropdown_title">Group By<t t-if="props.showCaretDown"> <i class="fa fa-caret-down ms-1"/></t></span>
            </t>
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.id">
                <t t-if="currentGroup !== null and currentGroup !== item.groupNumber">
                    <div class="dropdown-divider" role="separator"/>
                </t>
                <t t-if="item.fieldType === 'properties'">
                    <PropertiesGroupByItem item="item" onGroup.bind="onGroupBySelected"/>
                </t>
                <t t-elif="item.options">
                    <Dropdown togglerClass="'o_menu_item' + (item.isActive ? ' selected' : '')">
                        <t t-set-slot="toggler">
                            <t t-esc="item.description"/>
                        </t>
                        <t t-set="subGroup" t-value="null"/>
                        <t t-foreach="item.options" t-as="option" t-key="option.id">
                            <t t-if="subGroup !== null and subGroup !== option.groupNumber">
                                <div class="dropdown-divider" role="separator"/>
                            </t>
                            <CheckboxItem class="{ o_item_option: true, selected: option.isActive }" checked="option.isActive ? true : false" parentClosingMode="'none'" t-esc="option.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id, optionId: option.id})"/>
                            <t t-set="subGroup" t-value="option.groupNumber"/>
                        </t>
                    </Dropdown>
                </t>
                <t t-else="">
                    <CheckboxItem class="{ o_menu_item: true, selected: item.isActive }" checked="item.isActive" parentClosingMode="'none'" t-esc="item.description" onSelected="() =&gt; this.onGroupBySelected({ itemId: item.id })"/>
                </t>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
            <t t-if="!hideCustomGroupBy and fields.length">
                <div t-if="items.length" role="separator" class="dropdown-divider"/>
                <CustomGroupByItem fields="fields" onAddCustomGroup.bind="onAddCustomGroup"/>
            </t>
        </Dropdown>
    </t>

<t t-name="web.PivotRenderer">
        <t t-call="{{ props.buttonTemplate }}"/>
        <div t-if="model.hasData() and model.metaData.activeMeasures.length" t-att-class="env.isSmall ? 'table-responsive' : ''" class="o_pivot mx-3">
            <table class="table-hover table table-sm table-bordered table-borderless" t-att-class="{ o_enable_linking: !model.metaData.disableLinking }" t-ref="table">
                <thead>
                    <tr t-foreach="table.headers" t-as="row" t-key="'header_' + row_index" class="border-top-0">
                        <t t-foreach="row" t-as="cell" t-key="'header_row_' + cell_index">
                            <t t-if="cell.measure" t-call="web.PivotMeasure"/>
                            <t t-elif="cell.isLeaf !== undefined" t-call="web.PivotHeader">
                                <t t-set="isXAxis" t-value="true"/>
                                <t t-set="isInHead" t-value="true"/>
                            </t>
                            <th t-else="" t-att-colspan="cell.width" t-att-rowspan="cell.height" class="border-0 bg-100 fw-normal" t-att-class="{ 'border-0': cell_index != 0 }"/>
                        </t>
                    </tr>
                </thead>
                <tbody>
                    <tr t-foreach="table.rows" t-as="row" t-key="'row_' + row_index">
                        <t t-call="web.PivotHeader">
                            <t t-set="isXAxis" t-value="false"/>
                            <t t-set="cell" t-value="row"/>
                        </t>
                        <t t-foreach="row.subGroupMeasurements" t-as="cell" t-key="'row_cell_' + cell_index">
                            <td class="o_pivot_cell_value bg-100" t-att-class="{                                     o_empty: cell.value === undefined,                                     'cursor-pointer': cell.value !== undefined,                                     'fw-bold': cell.isBold,                                 }" t-on-click="() =&gt; this.onOpenView(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
                                <t t-if="cell.value !== undefined">
                                    <div t-if="cell.originIndexes.length &gt; 1" class="o_variation" t-att-class="{                                              'o_positive text-success': cell.value &gt; 0,                                              'o_negative text-danger': cell.value &lt; 0,                                              o_null: cell.value === 0,                                         }" t-esc="getFormattedVariation(cell)"/>
                                    <div t-elif="model.metaData.measures[cell.measure].type === 'boolean'" class="o_value">
                                        <CheckBox disabled="true" value="cell.value"/>
                                    </div>
                                    <div t-else="1" class="o_value" t-esc="getFormattedValue(cell)"/>
                                </t>
                            </td>
                        </t>
                    </tr>
                </tbody>
            </table>
        </div>
    </t>

    <t t-name="web.PivotHeader">
        <th class="bg-view text-nowrap cursor-pointer fw-normal user-select-none" t-att-colspan="isXAxis ? cell.width : undefined" t-att-rowspan="isXAxis ? cell.height : undefined" t-att-class="{                 o_pivot_header_cell_closed: cell.isLeaf,                 o_pivot_header_cell_opened: !cell.isLeaf,                 'border-top': isInHead,                             }" t-attf-style="{{                 isXAxis                     ? undefined                     : l10n.direction === 'ltr'                         ? 'padding-left: ' + getPadding(cell) + 'px;'                         : 'padding-right: ' + getPadding(cell) + 'px;'             }}" t-att-data-tooltip="cell.label" t-attf-data-tooltip-position="{{ l10n.direction === 'ltr' ? 'right' : 'left' }}" t-on-click.prevent="() =&gt; this.onHeaderClick(cell, isXAxis ? 'col' : 'row')">
            <t t-if="cell.isLeaf and !cell.isFolded">
                <PivotGroupByMenu toggler="'parent'" position="isXAxis ? 'bottom-start' : 'bottom-end'" cell="cell" customGroupBys="model.metaData.customGroupBys" onItemSelected="(payload) =&gt; this.onGroupBySelected(isXAxis ? 'col' : 'row', payload)" onAddCustomGroupBy="fieldName =&gt; this.onAddCustomGroupBy(isXAxis ? 'col' : 'row', cell.groupId, fieldName)"/>
            </t>
            <i t-attf-class="fa fa-{{ cell.isLeaf ? 'plus-square' : 'minus-square-o' }} me-1"/>
            <span t-esc="cell.title"/>
        </th>
    </t>

    <t t-name="web.PivotMeasure">
        <th class="bg-view text-muted text-center text-nowrap fw-normal" t-att-colspan="cell.width" t-att-rowspan="cell.height" t-att-class="{                 'o_pivot_origin_row cursor-pointer user-select-none': cell.originIndexes,                 'o_pivot_measure_row cursor-pointer user-select-none': !cell.originIndexes,                 o_pivot_sort_order_asc: cell.order === 'asc',                 o_pivot_sort_order_desc: cell.order === 'desc',             }" t-on-click.prevent="() =&gt; this.onMeasureClick(cell)" t-on-mouseover="onMouseEnter" t-on-mouseout="onMouseLeave">
            <t t-esc="cell.title"/>
            <i t-if="cell.order === 'asc' || cell.order ==='desc'" t-attf-class="fa fa-caret-{{ cell.order === 'asc' ? 'up' : 'down' }} ms-1"/>
        </th>
    </t>

<t t-name="web.View">
      <WithSearch t-props="withSearchProps" t-slot-scope="search">
        <t t-component="Controller" t-on-click="handleActionLinks" t-props="componentProps" context="search.context" domain="search.domain" groupBy="search.groupBy" orderBy="search.orderBy" comparison="search.comparison" display="search.display"/>
      </WithSearch>
  </t>

  <t t-name="web.ReportViewMeasures">
    <Dropdown togglerClass="'btn btn-primary'">
            <t t-set-slot="toggler">
                Measures <i class="fa fa-caret-down ms-1"/>
            </t>
            <t t-foreach="measures" t-as="measure" t-key="measure_value.name">
                <div t-if="!measure_first and measure == '__count'" role="separator" class="dropdown-divider"/>
                <DropdownItem class="{ o_menu_item: true, selected: activeMeasures.includes(measure) }" parentClosingMode="'none'" t-esc="measures[measure].string" onSelected="() =&gt; this.onMeasureSelected({ measure: measure_value.name })"/>
            </t>
        </Dropdown>
  </t>
<t t-name="views.ViewButton">
    <t t-tag="props.tag" t-att="props.attrs" t-att-id="props.id" t-att-class="getClassName()" t-att-disabled="disabled" t-att-name="props.clickParams.name" t-att-special="props.clickParams.special" t-att-href="props.tag === 'a' and '#'" t-att-style="props.style" t-att-type="clickParams.type" t-att-data-tooltip-template="hasBigTooltip ? 'views.ViewButtonTooltip' : false" t-att-data-tooltip-info="hasBigTooltip ? tooltip : false" t-att-data-tooltip="hasSmallToolTip ? props.title : false" t-att-tabindex="props.tabindex" t-on-click.stop="onClick">
      <t t-if="icon" t-tag="icon.tag" t-att-class="icon.class + (props.string ? ' me-1' : '')" t-att-src="icon.src"/>
      <t t-slot="contents"><span t-if="props.string" t-esc="props.string"/></t>
    </t>
  </t>

  <t t-name="views.ViewButtonTooltip">
      <t t-if="debug || button.help">
        <div class="o-tooltip--string" t-if="debug || button.string" role="tooltip">
            <t t-if="debug">
                Button
                <t t-if="button.string">: </t>
                <t t-if="!button.string"> (no string)</t>
            </t>
            <t t-esc="button.string"/>
        </div>
        <p t-if="button.title" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.title"/>
        </p>
        <p t-if="button.help" class="o-tooltip--help" role="tooltip">
            <t t-esc="button.help"/>
        </p>
        <ul t-if="debug" class="o-tooltip--technical" role="tooltip">
            <li data-item="object">
                <span class="o-tooltip--technical--title">Object:</span>
                <t t-esc="model"/>
            </li>
            <li t-if="button.context" data-item="context">
                <span class="o-tooltip--technical--title">Context:</span>
                <t t-esc="button.context || context"/>
            </li>
            <li t-if="'invisible' in button" data-item="invisible">
                <span class="o-tooltip--technical--title">Invisible:</span>
                <t t-esc="button.invisible"/>
            </li>
            <li t-if="'column_invisible' in button" data-item="column_invisible">
                <span class="o-tooltip--technical--title">Column invisible:</span>
                <t t-esc="button.column_invisible"/>
            </li>
            <li t-if="'required' in button" data-item="required">
                <span class="o-tooltip--technical--title">Required:</span>
                <t t-esc="button.required"/>
            </li>
            <li t-if="'readonly' in button" data-item="readonly">
                <span class="o-tooltip--technical--title">Readonly:</span>
                <t t-esc="button.readonly"/>
            </li>
            <li t-if="button.special" data-item="special">
                <span class="o-tooltip--technical--title">Special:</span>
                <t t-esc="button.special"/>
            </li>
            <t t-set="button_type" t-value="button.type"/>
            <li t-if="button_type" data-item="button_type">
                <span class="o-tooltip--technical--title">Button Type:</span>
                <t t-esc="button_type"/>
            </li>
            <li t-if="button_type === 'object'" data-item="button_method">
                <span class="o-tooltip--technical--title">Method:</span>
                <t t-esc="button.name"/>
            </li>
            <li t-if="button_type === 'action'" data-item="button_action">
                <span class="o-tooltip--technical--title">Action ID:</span>
                <t t-esc="button.name"/>
            </li>
        </ul>
      </t>
  </t>
<t t-name="web.AnimatedNumber">
        <div class="o_animated_number ms-2 text-900 text-nowrap cursor-default" t-att-class="state.value !== props.value and props.animationClass" t-att-title="props.title">
            <t t-slot="prefix"/>
            <span t-if="props.currency and props.currency.position === 'before'" t-esc="props.currency.symbol" class="ms-1"/>
            <b t-esc="format(state.value)"/>
            <span t-if="props.currency and props.currency.position === 'after'" t-esc="props.currency.symbol" class="ms-1"/>
        </div>
    </t>

<t t-name="web.ColumnProgress">
        <div class="o_column_progress progress bg-300 w-75">
            <t t-set="maxWidth" t-value="100 - Math.max(0, props.progressBar.bars.filter(x =&gt; x.count &gt; 0).length - 1) * 5"/>
            <t t-foreach="props.progressBar.bars" t-as="bar" t-key="bar.value">
                <t t-set="progressWidth" t-value="Math.max(5, bar.count / (props.group.count or 1) * 100)"/>
                <div t-if="bar.count &gt; 0" role="progressbar" class="progress-bar o_bar_has_records cursor-pointer" t-att-class="{ 'progress-bar-animated progress-bar-striped': props.progressBar.activeBar === bar.value, 'border border-white': !props.group.isFolded and props.progressBar.activeBar }" t-attf-class="bg-{{ bar.color }}" t-attf-style="width: {{ Math.min(progressWidth, maxWidth) }}%;" aria-valuemin="0" t-att-aria-valuemax="props.group.count" t-att-aria-valuenow="bar.count" aria-label="Progress bar" t-attf-data-tooltip="{{ bar.count }} {{ bar.string }}" data-tooltip-delay="0" t-on-click="() =&gt; this.onBarClick(bar)"/>
            </t>
        </div>
        <AnimatedNumber value="props.aggregate.value" title="props.aggregate.title" duration="1000" currency="props.aggregate.currency" animationClass="props.aggregate.value &gt; 999 ? 'o_animated_grow' : 'o_animated_grow_huge'"/>
    </t>

<t t-name="web.ViewScaleSelector">
        <Dropdown t-if="Object.keys(props.scales).length &gt; 1" class="\`btn-group o_view_scale_selector \${props.dropdownClass || ''}\`" togglerClass="'btn btn-secondary scale_button_selection'" hotkey="'v'" showCaret="true">
            <t t-set-slot="toggler">
                <t t-esc="props.scales[props.currentScale].description"/>
            </t>
            <t t-foreach="scales" t-as="scale" t-key="scale.key">
                <DropdownItem class="\`o_scale_button_\${scale.key} \${scale.key === props.currentScale ? 'active' : ''}\`" hotkey="scale.hotkey or scale.key[0]" onSelected="() =&gt; this.props.setScale(scale.key)">
                    <t t-esc="scale.description"/>
                </DropdownItem>
            </t>
            <div t-if="this.props.isWeekendVisible !== undefined" class="dropdown-divider" role="separator"/>
            <DropdownItem t-if="this.props.isWeekendVisible !== undefined" class="\`\${props.isWeekendVisible ? 'active' : ''}\`" onSelected="props.toggleWeekendVisibility">
                Show weekends
            </DropdownItem>
        </Dropdown>
    </t>

<t t-name="web.DeleteExportListDialog">
        <Dialog title="'Confirmation'" size="'md'">
            <div t-esc="props.text"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onDelete">Delete</button>
                <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Cancel</button>
            </t>
        </Dialog>
    </t>

    <t t-name="web.ExportDataItem">
        <div t-att-data-field_id="props.field.id" t-attf-class="o_export_tree_item cursor-pointer position-relative ps-4 {{ state.subfields.length ? 'o_expanded mb-2' : '' }} {{ props.field.parent ? '' : 'pe-3'}}" role="treeitem" t-on-click.stop="() =&gt; this.toggleItem(props.field.id, true)" t-on-dblclick="() =&gt; this.onDoubleClick(props.field.id)">
            <div t-attf-class="o_tree_column d-flex align-items-center {{ props.field.required ? 'fw-bolder' : ''}}">
                <span t-if="props.isFieldExpandable(props.field.id)" t-attf-class="ms-n3 float-start o_expand_parent small oi {{ state.subfields.length ? 'oi-chevron-down' : 'oi-chevron-right' }}" role="img" aria-label="Show sub-fields" title="Show sub-fields"/>
                <span t-if="props.isDebug and props.field.id" class="overflow-hidden w-100" t-esc="\`\${props.field.string} (\${props.field.id})\`"/>
                <span t-else="" class="overflow-hidden w-100" t-esc="props.field.string"/>
                <span title="Select field" t-attf-class="fa fa-plus float-end m-1 o_add_field {{ isFieldSelected(props.field.id) ? 'o_inactive opacity-25' : '' }}" t-on-click.stop="(ev) =&gt; !this.isFieldSelected(this.props.field.id) and this.props.onAdd(this.props.field.id)"/>
            </div>
                <t t-foreach="state.subfields" t-as="field" t-key="field.id">
                    <ExportDataItem t-props="props" field="field"/>
                </t>
        </div>
    </t>

    <t t-name="web.ExportDataDialog">
        <Dialog contentClass="'o_export_data_dialog'" title="title" size="'lg'">
            <div class="row w-100">
                <div class="o_left_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap">
                    <div class="o_import_compat">
                        <CheckBox className="'o_import_compat'" id="'o-update-data'" value="state.isCompatible" onChange.bind="onToggleCompatibleExport">
                            I want to update data (import-compatible export)
                        </CheckBox>
                    </div>
                    <h4 class="mt-3">Available fields</h4>
                    <input t-ref="search" type="search" class="form-control mb-3 o_export_search_input" id="o-export-search-filter" placeholder="Search" t-on-input="onSearch"/>
                    <div class="o_left_field_panel h-100 overflow-auto border">
                        <div class="o_field_tree_structure">
                            <t t-if="fieldsAvailable">
                                <t t-foreach="rootFields" t-as="field" t-key="field.id + '_' + state.search.length + '_' + state.isCompatible">
                                    <ExportDataItem exportList="state.exportList" field="field" filterSubfields.bind="filterSubfields" isFieldExpandable.bind="isFieldExpandable" isDebug="isDebug" isExpanded="state.search.length &gt; 0" loadFields.bind="loadFields" onAdd.bind="onAddItemExportList"/>
                                </t>
                            </t>
                            <h3 t-else="" class="text-center text-muted mt-5 o_no_match">No match found.</h3>
                        </div>
                    </div>
                </div>
                <div t-attf-class="o_right_panel col-12 col-md-6 {{ state.isSmall ? 'h-50' : 'h-100' }} d-flex flex-column flex-nowrap mt-3 mt-md-0">
                    <div class="o_export_format">
                        <strong>Export Format:</strong>
                        <t t-foreach="availableFormats" t-as="format" t-key="format.tag">
                            <div class="radio form-check-inline ps-5">
                                <input t-att-id="'o_radio' + format.tag" type="radio" t-att-checked="format.tag === availableFormats[state.selectedFormat].tag" name="o_export_format_name" t-att-value="format.tag" class="form-check-input" t-on-change="setFormat"/>
                                <label class="form-check-label ms-1" t-att-for="'o_radio' + format.tag" t-esc="format.label"/>
                            </div>
                        </t>
                    </div>
                    <div class="mt-3">
                        <h4>Fields to export</h4>
                    </div>
                    <div class="o_exported_lists">
                        <div class="input-group mb-3">
                            <t t-if="state.templateId === 'new_template'">
                                <label class="pt-2 mb-0 fw-bold">Save as: </label>
                                <input t-ref="exportList" class="form-control ms-4 o_save_list_name" t-att-placeholder="newTemplateText"/>
                            </t>
                            <t t-else="">
                                <label class="pt-2 mb-0 fw-bold">Template: </label>
                                <select class="form-select ms-4 o_exported_lists_select" t-on-change="onChangeExportList">
                                    <option/>
                                    <t t-foreach="templates" t-as="template" t-key="template.id">
                                        <option t-att-value="template.id" t-esc="template.name or 'undefined'" t-att-selected="state.templateId === template.id"/>
                                    </t>
                                    <option class="fst-italic" value="new_template">New template </option>
                                </select>
                            </t>
                            <t t-if="state.isEditingTemplate">
                                <button t-if="state.templateId === 'new_template'" type="button" class="btn btn-secondary ms-1 o_save_list_btn" t-on-click.stop="onSaveExportTemplate">
                                    <i class="fa fa-floppy-o"/>
                                </button>
                                <button type="button" class="btn btn-secondary ms-1 o_cancel_list_btn" t-on-click.stop="onCancelExportTemplate">
                                    <i t-attf-class="fa {{ state.templateId === 'new_template' ? 'fa-times' : 'fa-undo' }}"/>
                                </button>
                            </t>
                            <t t-else="">
                                <button t-if="state.templateId" type="button" class="btn btn-secondary ms-1 o_delete_exported_list" t-on-click.stop="onDeleteExportTemplate">
                                    <i class="fa fa-trash"/>
                                </button>
                            </t>
                        </div>
                    </div>
                    <div class="o_right_field_panel h-100 px-2 overflow-auto border">
                        <ul class="o_fields_list list-unstyled" t-ref="draggable">
                            <t t-foreach="state.exportList" t-as="field" t-key="field.id">
                                <li t-attf-class="o_export_field d-inline-block w-100 {{ state.isSmall ? '' : 'o_export_field_sortable' }}" t-att-data-field_id="field.id">
                                    <span t-if="!state.isSmall" class="fa fa-sort o_sort_field mx-1" t-attf-style="opacity:{{ state.exportList.length === 1 ? 0 : 1 }}"/>
                                    <span t-esc="isDebug and field.id ? \`\${field.string} (\${field.id})\` : field.string"/>
                                    <span class="fa fa-trash m-1 pe-2 float-end o_remove_field cursor-pointer" t-att-title="removeFieldText" t-on-click.stop="() =&gt; this.onRemoveItemExportList(field.id)"/>
                                </li>
                            </t>
                        </ul>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary o_select_button" data-hotkey="v" t-on-click.stop="onClickExportButton" t-att-disabled="state.disabled">Export</button>
                <button class="btn o_form_button_cancel" t-att-class="(props.disableMultipleSelection &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click.stop="props.close">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.FormViewDialog">
    <Dialog size="props.size" title="props.title" withBodyPadding="false" modalRef="modalRef">
      <View t-props="viewProps"/>
      <t t-set-slot="footer">
        <t t-if="props.preventEdit and props.preventCreate">
          <button class="btn btn-primary" t-on-click="() =&gt; props.close()">Close</button>
        </t>
        <t t-else="">
          <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Ok</button>
        </t>
      </t>
    </Dialog>
  </t>

  <t t-name="web.FormViewDialog.ToMany.buttons">
        <div class="o_cp_buttons d-flex align-items-baseline w-100" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit d-flex gap-1">
                <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
      <button class="btn btn-primary o_form_button_save_new" t-on-click="() =&gt; this.saveButtonClicked({saveAndNew: true})" data-hotkey="n">Save &amp; New</button>
    <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.FormViewDialog.ToOne.buttons">
        <div class="o_cp_buttons d-flex align-items-baseline w-100" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit d-flex gap-1">
                <button class="btn btn-primary o_form_button_save" t-on-click="saveButtonClicked" data-hotkey="c">Save &amp; Close</button>
    <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
    </t>
<t t-name="web.SelectCreateDialog">
        <Dialog title="props.title" withBodyPadding="false">
            <t t-set-slot="header" t-slot-scope="scope">
                <t t-call="web.Dialog.header">
                    <t t-set="dismiss" t-value="scope.close"/>
                    <t t-set="fullscreen" t-value="scope.isFullscreen"/>
                </t>
                <button t-if="this.canUnselect" class="btn o_clear_button" t-on-click="() =&gt; this.unselect()">Clear</button>
            </t>
            <View t-props="viewProps"/>
            <t t-set-slot="footer">
                <t t-if="props.multiSelect">
                    <button class="btn btn-primary o_select_button" t-att-disabled="state.resIds.length === 0" data-hotkey="v" t-on-click="() =&gt; this.select(state.resIds)">
                        Select
                    </button>
                </t>
                <t t-if="!props.noCreate">
                    <button class="btn btn-primary o_create_button" data-hotkey="c" t-on-click="createEditRecord">New</button>
                </t>
                <button class="btn o_form_button_cancel" t-att-class="(!props.multiSelect &amp;&amp; props.noCreate) ? 'btn-primary' : 'btn-secondary'" data-hotkey="z" t-on-click="() =&gt; this.props.close()">Close</button>
            </t>
        </Dialog>
    </t>

<t t-name="web.AttachDocument">
        <button t-attf-class="btn o_attachment_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="() =&gt; this.triggerUpload()">
            <span class="o_attach_document" t-esc="props.string"/>
        </button>
    </t>

<t t-name="web.DocumentationLink">
        <a t-att-href="url" title="Documentation" class="o_doc_link me-2" target="_blank"/>
    </t>
<t t-name="web.NotificationAlert">
        <div t-if="isNotificationBlocked" class="alert alert-primary text-center">
            Odoo Push notifications have been blocked. Go to your browser settings to allow them.
        </div>
    </t>
<t t-name="web.Ribbon">
        <div class="ribbon ribbon-top-right">
            <span t-att-class="classes" t-att-title="props.title">
                <t t-esc="props.text"/>
            </span>
        </div>
    </t>

<t t-name="web.SignatureWidget">
        <button t-attf-class="btn o_sign_button #{props.highlight ? 'btn-primary' : 'btn-secondary'}" t-on-click="onClickSignature">
            <span class="o_sign_label" t-esc="props.string"/>
        </button>
    </t>

<t t-name="web.WeekDays">
        <div class="o_recurrent_weekdays border mt-2 mb-2">
            <table class="table table-responsive mb-0">
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <th class="text-center border fw-bold">
                            <div class="o_recurrent_weekday_label" t-att-data-tooltip="props.record.fields[day].string">
                                <t t-esc="props.record.fields[day].string"/>
                            </div>
                        </th>
                    </t>
                </tr>
                <tr>
                    <t t-foreach="weekdays" t-as="day" t-key="day">
                        <td>
                            <CheckBox disabled="props.readonly" value="data[day]" className="'o_recurrent_weekday_checkbox text-center'" onChange="(checked) =&gt; this.onChange(day, checked)"/>
                        </td>
                    </t>
                </tr>
            </table>
        </div>
    </t>

<t t-name="web.ActionDialog.header">
        <t t-if="fullscreen">
            <button class="btn oi oi-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="dismiss"/>
        </t>
      <DebugMenu t-if="env.debug"/>
        <h4 class="modal-title text-break" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="dismiss"/>
        </t>
    </t>
<t t-name="web.ActionDialog">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen, o_inactive_modal: !data.isActive }" t-ref="modalRef">
                <div class="modal-dialog modal-dialog-centered" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass" t-att-style="contentStyle">
                        <header t-if="props.header" class="modal-header">
                            <t t-call="web.ActionDialog.header">
        <t t-set="fullscreen" t-value="props.isFullscreen"/>
      </t>
    </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-md-start flex-wrap gap-1 w-100" style="order:2">
                            <t t-slot="footer" close="() =&gt; this.data.close()">
                                <button class="btn btn-primary o-default-button" t-on-click="() =&gt; this.data.close()">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}" t-att-class="&#10;        {&quot;o_act_window&quot;: props.actionType === &quot;ir.actions.act_window&quot;}&#10;      ">
                            <t t-if="props.ActionComponent" t-component="props.ActionComponent" t-props="props.actionProps"/>
    </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.BarcodeDialog">
        <Dialog title="'Barcode Scanner'" fullscreen="true" footer="false" contentClass="'o-barcode-modal'">
            <CropOverlay onResize.bind="this.onResize" isReady="state.isReady">
                <video t-ref="videoPreview" muted="true" autoplay="true" playsinline="true" class="w-100 h-100"/>
            </CropOverlay>
        </Dialog>
    </t>
<t t-name="web.CropOverlay">
        <div t-ref="crop-container" t-on-mousedown="pointerDown" t-on-touchstart="pointerDown" t-on-mousemove="pointerMove" t-on-touchmove="pointerMove" t-on-mouseup="pointerUp" t-on-touchend="pointerUp" class="d-grid align-content-center justify-content-center h-100 o_crop_container">
            <t t-slot="default"/>
            <t t-if="props.isReady">
                <div class="o_crop_overlay"/>
                <img class="o_crop_icon" src="/web/static/img/transform.svg" draggable="false"/>
            </t>
        </div>
    </t>
<div t-name="web.BurgerMenu">
    <button class="o_mobile_menu_toggle o_nav_entry o-no-caret d-md-none border-0 pe-3" title="Toggle menu" aria-label="Toggle menu" t-on-click="_openBurger">
        <i class="oi oi-panel-right"/>
    </button>
    <t t-portal="'body'">
      <Transition name="'burgerslide'" visible="state.isBurgerOpened" leaveDuration="200" t-slot-scope="transition">
        <div class="o_burger_menu position-fixed top-0 bottom-0 start-100 d-flex flex-column flex-nowrap" t-att-class="transition.className" t-on-touchstart.stop="_onSwipeStart" t-on-touchend.stop="_onSwipeEnd">
          <div class="o_burger_menu_topbar d-flex align-items-center justify-content-between flex-shrink-0 py-0 fs-4" t-on-click.stop="_toggleUserMenu">
              <small class="o-no-caret dropdown-toggle d-flex align-items-center justify-content-between" t-att-class="{'active bg-view text-body border-end': isUserMenuUnfolded }">
                  <img class="o_burger_menu_avatar o_image_24_cover rounded" t-att-src="'/web/image?model=res.users&amp;field=avatar_128&amp;id=' + user.userId" alt="Menu"/>
                  <span class="o_burger_menu_username px-2"><t t-esc="user.name"/></span>
                  <i t-if="isUserMenuTogglable" class="fa" t-att-class="state.isUserMenuOpened ? 'fa-caret-down' : 'fa-caret-left'"/>
              </small>
              <button class="o_burger_menu_close oi oi-close btn d-flex align-items-center h-100 bg-transparent border-0 fs-2 text-reset" aria-label="Close menu" title="Close menu" t-on-click.stop="_closeBurger"/>
          </div>
          <nav class="o_burger_menu_content flex-grow-1 flex-shrink-1 overflow-auto" t-att-class="{o_burger_menu_app: !isUserMenuUnfolded, 'bg-view': isUserMenuUnfolded}">

              <t t-if="isUserMenuUnfolded">
                  <MobileSwitchCompanyMenu t-if="Object.values(company.allowedCompanies).length &gt; 1"/>
                  <BurgerUserMenu/>
              </t>

                <ul t-if="!isUserMenuUnfolded" class="ps-0 mb-0">
                    <t t-foreach="currentAppSections" t-as="subMenu" t-key="subMenu_index">
                        <t t-call="web.BurgerSection">
                            <t t-set="section" t-value="subMenu"/>
                        </t>
                    </t>
                </ul>
          </nav>
        </div>
      </Transition>
    </t>
    <t t-portal="'body'">
        <div t-if="state.isBurgerOpened" class="o_burger_menu_backdrop modal-backdrop show d-block d-md-none" t-on-click.stop="_closeBurger" t-on-touchstart.stop="_onSwipeStart" t-on-touchend.stop="_onSwipeEnd"/>
    </t>
</div>

<t t-name="web.BurgerSection">
    <li t-if="section.childrenTree.length" class="ps-0">
        <div class="bg-transparent" t-att-class="{                 'fw-bold text-900 pt-3 pb-2': !isNested,                 'border-top': !isNested &amp;&amp; subMenu_index != 0,                 'py-2': isNested,             }" t-att-data-menu-xmlid="section.xmlid" t-esc="section.name"/>
        <ul class="ps-0">
            <t t-foreach="section.childrenTree" t-as="subSection" t-key="subSection_index">
                <t t-call="web.BurgerSection">
                    <t t-set="section" t-value="subSection"/>
                    <t t-set="isNested" t-value="true"/>
                </t>
            </t>
        </ul>
    </li>
    <li t-else="" t-on-click="() =&gt; this._onMenuClicked(section)" t-att-data-menu-xmlid="section.xmlid" t-att-class="{             'fw-bold text-900 py-3': !isNested,             'border-top': !isNested &amp;&amp; subMenu_index != 0,             'py-2': isNested,         }">
        <t t-esc="section.name"/>
    </li>
</t>

<t t-name="web.BurgerUserMenu">
    <div class="o_user_menu_mobile mt-2">
      <t t-foreach="getElements()" t-as="element" t-key="element_index">
          <t t-if="!element.hide">
              <a t-if="element.type == 'item'" class="dropdown-item py-3 fs-4" t-att-href="element.href or ''" t-esc="element.description" t-on-click.stop.prevent="() =&gt; this._onItemClicked(element.callback)"/>
              <CheckBox t-if="element.type == 'switch'" value="element.isChecked" className="'dropdown-item form-switch d-flex flex-row-reverse justify-content-between py-3 fs-4 w-100'" onChange="element.callback">
                  <t t-out="element.description"/>
              </CheckBox>
              <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
          </t>
      </t>
    </div>
  </t>

<t t-name="web.MobileSwitchCompanyMenu">
    <div class="o_burger_menu_companies p-3">
        <div class="o_burger_menu_user_title h6 mb-3">Companies</div>
        <t t-foreach="Object.values(companyService.allowedCompaniesWithAncestors)                       .filter((c) =&gt; !c.parent_id)                       .sort((c1, c2) =&gt; c1.sequence - c2.sequence)                      " t-as="company" t-key="company.id">
            <MobileSwitchCompanyItem company="company" level="0"/>
        </t>
    </div>
</t>

<t t-name="web.MobileSwitchCompanyItem">
    <t t-set="checkIcon" t-value="isCompanySelected ? 'fa-check-square text-primary' : 'fa-square-o'"/>
    <div class="d-flex menu_companies_item" t-att-class="{'disabled': !isCompanyAllowed }" t-att-data-company-id="props.company.id">
        <div class="border-end toggle_company" t-att-class="{'border-primary' : isCurrent}" t-on-click="() =&gt; this.toggleCompany()">
            <span class="btn border-0 p-2" t-att-class="{'disabled': !isCompanyAllowed }">
                <i t-attf-class="fa fa-fw fs-2 m-0 {{checkIcon}}"/>
            </span>
        </div>
        <div class="flex-grow-1 p-2 log_into" t-att-class="{'alert-primary': isCurrent, 'text-muted': !isCompanyAllowed}" t-on-click="() =&gt; this.logIntoCompany()">
            <span t-esc="props.company.name" class="company_label" t-att-class="isCurrent ? 'text-900 fw-bold' : ''" t-att-style="'padding-left:' + (props.level * 10) + 'px';"/>
            <small t-if="isCurrent" class="ms-1">(current)</small>
        </div>
    </div>
    <t t-foreach="props.company.child_ids" t-as="child" t-key="child">
        <MobileSwitchCompanyItem company="companyService.getCompany(child)" level="props.level + 1"/>
    </t>
</t>

<t t-name="web.LoadingIndicator">
        <Transition visible="state.show" name="'o-fade'" t-slot-scope="transition" leaveDuration="400">
            <span class="o_loading_indicator" t-att-class="transition.className">Loading<t t-if="env.debug" t-esc="' (' + state.count + ')'"/></span>
        </Transition>
    </t>

<t t-name="web.AppIconCommand">
    <div class="o_command_default position-relative d-flex align-items-center px-4 py-2 cursor-pointer">
      <img t-if="props.webIconData" class="me-2 o_app_icon position-relative rounded-1" t-attf-src="{{props.webIconData}}"/>
      <div t-else="" class="me-2 o_app_icon d-flex align-items-center justify-content-center" t-attf-style="background-color:{{props.webIcon.backgroundColor}}">
        <i t-att-class="props.webIcon.iconClass" t-attf-style="color:{{props.webIcon.color}}"/>
      </div>
      <t t-slot="name"/>
      <span class="ms-auto flex-shrink-0">
        <t t-slot="focusMessage"/>
      </span>
    </div>
  </t>

<t t-name="web.NavBar">
    <header class="o_navbar" t-ref="root">
      <nav class="o_main_navbar" data-command-category="disabled">

        <t t-call="web.NavBar.AppsMenu">
          <t t-set="apps" t-value="menuService.getApps()"/>
        </t>


        <DropdownItem t-if="currentApp" href="getMenuItemHref(currentApp)" t-esc="currentApp.name" class="'o_menu_brand d-none d-md-flex'" dataset="{ menuXmlid: currentApp.xmlid, section: currentApp.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(currentApp)"/>


        <t t-if="currentAppSections.length" t-call="web.NavBar.SectionsMenu">
          <t t-set="sections" t-value="currentAppSections"/>
        </t>


        <div class="o_menu_systray d-flex flex-shrink-0 ms-auto" role="menu">
          <t t-foreach="systrayItems" t-as="item" t-key="item.key">

            <div t-att-data-index="item.index"/>
            <ErrorHandler onError="error =&gt; this.handleItemError(error, item)">
                <t t-component="item.Component" t-props="item.props"/>
            </ErrorHandler>
          </t>
        </div>
      </nav>
    </header>
  </t>

  <t t-name="web.NavBar.AppsMenu">
    <Dropdown hotkey="'h'" title="'Home Menu'" class="'o_navbar_apps_menu'">
      <t t-set-slot="toggler">
        <i class="oi oi-apps"/>
      </t>
      <DropdownItem t-foreach="apps" t-as="app" t-key="app.id" class="{ 'o_app': true, focus: menuService.getCurrentApp() === app }" href="getMenuItemHref(app)" t-esc="app.name" dataset="{ menuXmlid: app.xmlid, section: app.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(app)"/>
    </Dropdown>
  </t>

  <t t-name="web.NavBar.SectionsMenu">
    <div class="o_menu_sections d-none d-md-flex flex-grow-1 flex-shrink-1 w-0" t-ref="appSubMenus" role="menu">

      <t t-foreach="sections" t-as="section" t-key="section.id">
        <t t-set="sectionsVisibleCount" t-value="(sections.length - currentAppSectionsExtra.length)"/>

        <t t-if="section_index lt Math.min(10, sectionsVisibleCount)">
          <t t-set="hotkey" t-value="((section_index + 1) % 10).toString()"/>
        </t>
        <t t-else="">
          <t t-set="hotkey" t-value="undefined"/>
        </t>

        <t t-if="!section.childrenTree.length">
          <DropdownItem class="'o_nav_entry'" href="getMenuItemHref(section)" hotkey="hotkey" t-esc="section.name" dataset="{ menuXmlid: section.xmlid, section: section.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(section)"/>
        </t>
        <t t-else="">
          <MenuDropdown hotkey="hotkey" xmlid="section.xmlid">
            <t t-set-slot="toggler">
              <span t-esc="section.name" t-att-data-section="section.id"/>
            </t>
            <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
              <t t-set="items" t-value="section.childrenTree"/>
              <t t-set="decalage" t-value="20"/>
            </t>
          </MenuDropdown>
        </t>
      </t>

      <t t-if="currentAppSectionsExtra.length" t-call="web.NavBar.SectionsMenu.MoreDropdown">
        <t t-set="sections" t-value="currentAppSectionsExtra"/>
        <t t-if="sectionsVisibleCount lt 10">
          <t t-set="hotkey" t-value="(sectionsVisibleCount + 1 % 10).toString()"/>
        </t>
      </t>

    </div>
  </t>

  <t t-name="web.NavBar.DropdownItem">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitem" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0" t-att-style="props.style">
      <t t-slot="default"/>
    </t>
  </t>


  <t t-name="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
    <t t-set="style" t-value="\`padding-left: \${decalage}px;\`"/>
    <t t-foreach="items" t-as="item" t-key="item.id">
      <DropdownItem t-if="!item.childrenTree.length" href="getMenuItemHref(item)" class="{           'dropdown-item': true,           o_dropdown_menu_group_entry: decalage gt 20         }" style="style" t-esc="item.name" dataset="{ menuXmlid: item.xmlid, section: item.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(item)"/>

      <t t-else="">
        <div class="dropdown-menu_group dropdown-header" t-att-style="style" t-esc="item.name"/>
        <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
          <t t-set="items" t-value="item.childrenTree"/>
          <t t-set="decalage" t-value="decalage + 12"/>
        </t>
      </t>
    </t>
  </t>

  <t t-name="web.NavBar.SectionsMenu.MoreDropdown">
    <Dropdown class="'o_menu_sections_more'" title="'More Menu'" hotkey="hotkey">
      <t t-set-slot="toggler">
        <i class="fa fa-plus"/>
      </t>
      <t t-foreach="sections" t-as="section" t-key="section.id">

        <t t-if="!section.childrenTree.length">
          <DropdownItem class="'o_more_dropdown_section'" href="getMenuItemHref(section)" t-esc="section.name" dataset="{ menuXmlid: section.xmlid, section: section.id }" onSelected="() =&gt; this.onNavBarDropdownItemSelection(section)"/>
        </t>
        <t t-else="">
          <div class="o_more_dropdown_section o_more_dropdown_section_group dropdown-header bg-100" t-esc="section.name"/>
          <t t-call="web.NavBar.SectionsMenu.Dropdown.MenuSlot">
            <t t-set="items" t-value="section.childrenTree"/>
            <t t-set="decalage" t-value="20"/>
          </t>
        </t>
      </t>
    </Dropdown>
  </t>

<t t-name="web.SettingsBinaryField">
        <t t-if="!props.readonly">
            <t t-if="props.record.data[props.name]">
                <div class="w-100 d-inline-flex gap-1">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t name="download">
                            <button class="btn btn-link btn-sm lh-1 fa fa-download o_download_file_button" data-tooltip="Download" aria-label="Download" t-on-click="onFileDownload">
                            </button>
                        </t>
                        <t t-set-slot="toggler">
                            <input type="text" class="o_input" t-att-value="fileName" readonly="readonly"/>
                            <button class="btn btn-link btn-sm lh-1 fa fa-pencil o_select_file_button" data-tooltip="Edit" aria-label="Edit">
                            </button>
                        </t>
                        <button class="btn btn-link btn-sm lh-1 fa fa-trash o_clear_file_button" data-tooltip="Clear" aria-label="Clear" t-on-click="() =&gt; this.update({})">
                        </button>
                    </FileUploader>
                </div>
            </t>
            <t t-else="">
                <label class="o_select_file_button btn btn-primary">
                    <FileUploader acceptedFileExtensions="props.acceptedFileExtensions" onUploaded.bind="update">
                        <t t-set-slot="toggler">
                            Upload your file
                        </t>
                    </FileUploader>
                </label>
            </t>
        </t>
        <t t-elif="props.record.resId and props.record.data[props.name]">
            <a class="o_form_uri" href="#" t-on-click.prevent="onFileDownload">
                <span class="fa fa-download me-2"/>
                <t t-if="fileName" t-esc="fileName"/>
            </a>
        </t>
    </t>

    <t t-name="web.UpgradeDialog">
        <Dialog size="'md'" title="'Odoo Enterprise'">
            <div class="row" role="status">
                <div class="col-6">
                    Get this feature and much more with Odoo Enterprise!
                    <ul class="list-unstyled">
                        <li><i class="fa fa-check"/> Access to all Enterprise Apps</li>
                        <li><i class="fa fa-check"/> New design</li>
                        <li><i class="fa fa-check"/> Mobile support</li>
                        <li><i class="fa fa-check"/> Upgrade to future versions</li>
                        <li><i class="fa fa-check"/> Bugfixes guarantee</li>
                        <li><a href="http://www.odoo.com/editions?utm_source=db&amp;utm_medium=enterprise" target="_blank"><i class="fa fa-plus"/> And more</a></li>
                    </ul>
                </div>
                <div class="col-6">
                    <img class="img-fluid" t-att-src="'/web/static/img/enterprise_upgrade.jpg'" draggable="false" alt="Upgrade to enterprise"/>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="_confirmUpgrade">Upgrade now</button>
                <button class="btn btn-secondary" t-on-click="this.props.close">Cancel</button>
            </t>
        </Dialog>
    </t>
<t t-name="web.FormLabelHighlightText">
        <label class="o_form_label" t-att-for="props.id" t-att-class="className">
            <HighlightText originalText="props.string"/>
            <t t-if="upgradeEnterprise">
                <span class="badge text-bg-primary oe_inline o_enterprise_label">Enterprise</span>
            </t>
        </label>
    </t>
<t t-name="web.HighlightText">
        <span t-att-searchableText="props.originalText">
            <t t-foreach="splitText" t-as="name" t-key="name_index">
                <b t-if="name_index % 2" t-out="name" t-att-class="constructor.highlightClass"/>
                <t t-else="" t-out="name"/>
            </t>
        </span>
    </t>
<t t-name="web.SettingsRadioField">
        <div role="radiogroup" t-attf-class="o_{{ props.orientation }}" t-att-aria-label="props.label">
            <t t-foreach="items" t-as="item" t-key="item[0]">
                <div class="form-check o_radio_item" aria-atomic="true">
                    <input type="radio" class="form-check-input o_radio_input" t-att-checked="item[0] === value" t-att-disabled="props.readonly" t-att-name="id" t-att-data-value="item[0]" t-att-data-index="item_index" t-att-id="\`\${id}_\${item[0]}\`" t-on-change="() =&gt; this.onChange(item)"/>
                    <label class="form-check-label o_form_label" t-att-for="\`\${id}_\${item[0]}\`">
                <HighlightText originalText="item[1]"/>
            </label>
        </div>
            </t>
        </div>
    </t>

<t t-name="web.SearchableSetting">
        <div t-att-class="classNames" t-ref="setting" t-if="visible()">
            <div class="o_setting_left_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <t t-if="props.fieldName and fieldType==='boolean'">
                    <t t-slot="fieldSlot"/>
                </t>
            </div>
            <div class="o_setting_right_pane" t-att-data-tooltip="props.title" data-tooltip-delay="800">
                <FormLabel t-if="props.fieldName and props.addLabel" notMuttedLabel="notMuttedLabel" fieldName="props.fieldName" id="props.fieldId" string="labelString" record="props.record" fieldInfo="props.fieldInfo"/>
                <t t-if="labelString and !props.fieldName and props.addLabel">
                    <span class="o_form_label"><HighlightText originalText="labelString"/></span>
        </t>
                <t t-if="labelString and props.documentation">
                    <DocumentationLink path="props.documentation"/>
                </t>
                <t t-if="displayCompanyDependentIcon">
                    <span class="fa fa-lg fa-building-o" title="Values set here are company-specific."/>
                </t>
                <t t-if="labelString and props.help">
                    <div class="text-muted"><HighlightText originalText="props.help"/></div>
        </t>
                <div class="mt16">
                    <t t-if="props.fieldName and fieldType!=='boolean'">
                        <t t-slot="fieldSlot"/>
                    </t>
                    <t t-slot="default"/>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.HeaderSetting">
        <div class="app_settings_header d-flex flex-column flex-md-row align-items-baseline gap-1 gap-md-5 py-3 bg-warning bg-opacity-25">
            <label class="o_form_label" t-att-for="props.fieldId">
                <t t-esc="labelString"/>
            </label>
            <div class="input-group align-items-baseline w-auto o_field_highlight">
                <t t-slot="fieldSlot"/>
                <t t-slot="default"/>
            </div>
        </div>
    </t>
<t t-name="web.SettingsApp">
        <div class="app_settings_block" t-if="props.selectedTab === props.key or state.search.value.length !== 0" t-att-string="props.string" t-att-data-key="props.key" t-ref="settingsApp">
            <div class="settingSearchHeader h4" t-if="state.search.value.length !== 0" role="search">
                <img class="icon" t-att-src="props.imgurl" alt="Search"/>
                <span class="appName"><t t-esc="props.string"/></span>
            </div>
            <t t-slot="default"/>
        </div>
    </t>
<t t-name="web.SettingsBlock">
        <h2 t-if="props.title" t-ref="settingsContainerTitle"><HighlightText originalText="props.title"/></h2>
        <h3 t-if="props.tip" class="o_setting_tip text-muted" t-ref="settingsContainerTip"><HighlightText originalText="props.tip"/></h3>
        <div class="row mt16 o_settings_container" t-att-class="props.class" t-ref="settingsContainer">
            <t t-slot="default"/>
        </div>
    </t>
<t t-name="web.SettingsPage">
        <div class="o_setting_container">
            <div class="position-sticky top-0 flex-grow-0 z-index-1">
                <div class="settings_tab h-100 border-end" t-if="!env.isSmall or state.search.value.length === 0" t-ref="settings_tab">
                    <t t-foreach="props.modules" t-as="module" t-key="module.key">
                        <div class="tab" t-if="!module.isVisible" t-att-class="{                                 'selected': state.selectedTab === module.key and state.search.value.length === 0, 'text-bg-primary shadow-none': state.selectedTab === module.key and state.search.value.length === 0 and env.isSmall                              }" t-att-data-key="module.key" role="tab" t-on-click="() =&gt; this.onSettingTabClick(module.key)">
                            <div class="icon d-none d-md-block" t-attf-style="background : url('{{module.imgurl}}') no-repeat center;background-size:contain;"/> <span class="app_name"><t t-esc="module.string"/></span>
                        </div>
                    </t>
                </div>
            </div>
            <ActionSwiper onRightSwipe=" hasRightSwipe() ? {                         action: onRightSwipe.bind(this),                     } : undefined" onLeftSwipe=" hasLeftSwipe() ? {                         action: onLeftSwipe.bind(this),                     } : undefined" animationOnMove="false" animationType="'forwards'" swipeDistanceRatio="6">
                <div class="settings" t-ref="settings">
                    <t t-slot="NoContentHelper" t-if="props.slots['NoContentHelper'].isVisible"/>
                    <t t-slot="default" selectedTab="state.selectedTab"/>
                </div>
            </ActionSwiper>
        </div>
    </t>
<t t-name="web.SettingsConfirmationDialog">
        <Dialog size="'md'" title="props.title" modalRef="modalRef">
            <t t-esc="props.body"/>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="_confirm">
                    Save
                </button>
                <button class="btn btn-secondary" t-on-click="_stayHere">
                    Stay Here
                </button>
                <button class="btn btn-secondary" t-on-click="_cancel">
                    Discard
                </button>
            </t>
        </Dialog>
    </t>
<t t-name="web.SettingsFormView">
        <div t-att-class="className" t-ref="root" class="o-settings-form-view o_field_highlight">
            <div class="o_form_view_container">
                <Layout className="model.useSampleModel ? 'o_view_sample_data' : ''" display="display">
                    <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>

                    <t t-set-slot="layout-buttons">
                        <t t-if="env.inDialog">
                            <t t-if="footerArchInfo">
                                <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="footerArchInfo"/>
                            </t>
                            <t t-else="">
                                <t t-call="{{ props.buttonTemplate }}"/>
                            </t>
                        </t>
                    </t>

                    <t t-set-slot="layout-actions">
                <div class="o_cp_searchview d-flex w-100" role="search">
                    <div class="o_searchview form-control d-flex align-items-center py-1" role="search" aria-autocomplete="list">
                        <i class="o_searchview_icon oi oi-search me-2" role="img" aria-label="Search..." title="Search..."/>
                        <div class="o_searchview_input_container d-flex flex-grow-1 flex-wrap gap-1">
                            <input type="text" class="o_searchview_input o_input flex-grow-1 w-auto border-0" accesskey="Q" placeholder="Search..." role="searchbox" t-model="searchState.value" t-ref="autofocus"/>
                        </div>
                    </div>
                </div>
            </t>
        <t t-set-slot="control-panel-create-button">
                        <t t-if="canCreate">
                            <button type="button" class="btn btn-outline-primary o_form_button_create" data-hotkey="c" t-on-click.stop="create">New</button>
                        </t>
                    </t>
                    <t t-component="props.Renderer" record="model.root" Compiler="props.Compiler" archInfo="archInfo" translateAlert="translateAlert" onNotebookPageChange.bind="onNotebookPageChange" activeNotebookPages="props.state and props.state.activeNotebookPages" initialApp="initialApp">
            <t t-set-slot="NoContentHelper" isVisible="state.displayNoContent">
                <t t-call="web.NoContentHelper">
                    <t t-set="title" t-value="'No setting found'"/>
                    <t t-set="description" t-value="'Try searching for another keyword'"/>
                </t>
            </t></t>
            <t t-set-slot="control-panel-status-indicator">
                <t t-call="{{ props.buttonTemplate }}"/>
            </t>
                </Layout>
            </div>
        </div>
    </t>

    <t t-name="web.SettingsFormView.Buttons">
        <div class="o_cp_buttons d-flex align-items-baseline w-100 order-first w-auto" role="toolbar" aria-label="Main actions" t-ref="cpButtons">
            <div t-if="model.root.isInEdition" class="o_form_buttons_edit d-flex gap-1">
                <button type="button" class="btn btn-primary o_form_button_save" data-hotkey="s" t-on-click.stop="() =&gt; this.saveButtonClicked({closable: true})">
                    Save
                </button>
                <button type="button" class="btn btn-secondary o_form_button_cancel" data-hotkey="j" t-on-click.stop="discard">
                    Discard
                </button>
                <button t-if="props.removeRecord" class="btn btn-secondary o_form_button_remove" t-on-click="props.removeRecord" data-hotkey="x">
                    Remove
                </button>
            </div>
            <div t-elif="canCreate" class="o_form_buttons_view">
                <button type="button" class="btn btn-secondary o_form_button_create" data-hotkey="c" t-on-click.stop="create">
                    New
                </button>
            </div>
        </div>
            <span t-if="model.root.dirty" class="text-muted ms-2 o_dirty_warning">Unsaved changes</span>
    </t>
<div t-name="res_config_dev_tool">
        <div id="developer_tool">
            <t t-set="title">Developer Tools</t>
            <SettingsBlock title="title">
                <Setting addLabel="false">
                        <a t-if="!isDebug" class="d-block" href="?debug=1">Activate the developer mode</a>
                        <a t-if="!isAssets" class="d-block" href="?debug=assets">Activate the developer mode (with assets)</a>
                        <a t-if="!isTests" class="d-block" href="?debug=assets,tests">Activate the developer mode (with tests assets)</a>
                        <a t-if="isDebug" class="d-block" href="?debug=">Deactivate the developer mode</a>
                        <a t-if="isDebug and !isDemoDataActive" t-on-click.prevent="onClickForceDemo" class="o_web_settings_force_demo" href="#">Load demo data</a>
                </Setting>
            </SettingsBlock>
        </div>
    </div>
<div t-name="res_config_edition">
        <Setting addLabel="false">
                <div class="user-heading">
                    <h3 class="px-0">
                        Odoo <t t-esc="serverVersion"/>
                        (Community Edition)
                    </h3>
                </div>
                <div>
                    <div class="tab-content">
                        <div role="tabpanel" id="settings" class="tab-pane active text-muted o_web_settings_compact_subtitle">
                            <small>Copyright © 2004 <a target="_blank" href="https://www.odoo.com" style="text-decoration: underline;">Odoo S.A.</a> <a id="license" target="_blank" href="http://www.gnu.org/licenses/lgpl.html" style="text-decoration: underline;">GNU LGPL Licensed</a></small>
                        </div>
                    </div>
                </div>
        </Setting>
    </div>
<div t-name="res_config_invite_users">
        <p class="o_form_label">Invite New Users</p>

        <div class="d-flex">
            <input t-model="state.emails" t-att-disabled="state.status != 'idle'" class="o_user_emails o_input mt8 text-truncate" t-on-keydown="onKeydownUserEmails" type="text" placeholder="Enter e-mail address"/>
            <button t-att-disabled="state.status != 'idle'" class="btn btn-primary o_web_settings_invite flex-shrink-0" t-on-click="sendInvite"><strong><t t-esc="inviteButtonText"/></strong></button>
        </div>
        <t t-if="state.invite.pending_users.length">
            <p class="o_form_label pt-3">Pending Invitations:</p>
            <span t-foreach="state.invite.pending_users" t-as="pending" t-key="pending[0]">
                <a href="#" class="badge rounded-pill text-primary border border-primary o_web_settings_user" t-on-click.prevent="(ev) =&gt; this.onClickUser(ev, pending)"> <t t-esc="pending[1]"/> </a>
            </span>
            <t t-if="state.invite.pending_users.length &lt; state.invite.pending_count">
                <br/>
                <a href="#" class="o_web_settings_more" t-on-click.prevent="onClickMore"><t t-esc="state.invite.pending_count - state.invite.pending_users.length"/> more </a>
            </t>
        </t>
    </div>
<t t-name="web.SwitchCompanyMenu">
    <Dropdown class="'o_switch_company_menu d-none d-md-block'" position="'bottom-end'">
        <t t-set-slot="toggler">
            <i class="fa fa-building d-lg-none"/>
            <span class="oe_topbar_name d-none d-lg-block" t-esc="companyService.currentCompany.name"/>
        </t>
        <t t-foreach="Object.values(companyService.allowedCompaniesWithAncestors)                       .filter((c) =&gt; !c.parent_id)                       .sort((c1, c2) =&gt; c1.sequence - c2.sequence)                      " t-as="company" t-key="company.id">
            <SwitchCompanyItem company="company" level="0"/>
        </t>
    </Dropdown>
</t>


<t t-name="web.SwitchCompanyItem">
    <DropdownItem class="'p-0'" parentClosingMode="!isCompanyAllowed ? 'none' : 'all'">
        <div class="d-flex" t-att-class="{ 'disabled': !isCompanyAllowed }" data-menu="company" t-att-data-company-id="props.company.id">
            <div role="menuitemcheckbox" t-att-aria-checked="isCompanySelected ? 'true' : 'false'" t-att-aria-label="props.company.name" t-att-title="(isCompanySelected ? 'Hide ' : 'Show ') + props.company.name + ' content.'" tabindex="0" class="border-end toggle_company" t-att-class="{ 'border-primary': isCurrent, 'disabled': !isCompanyAllowed }" t-on-click.stop="() =&gt; this.toggleCompany()">

                <span class="btn border-0 p-2" t-att-class="isCompanyAllowed ? 'btn-link text-primary' : 'disabled'">
                    <i class="fa fa-fw py-2" t-att-class="isCompanySelected ? 'fa-check-square text-primary' : 'fa-square-o'"/>
                </span>
            </div>

            <div role="button" t-att-aria-pressed="isCurrent ? 'true' : 'false'" t-att-aria-label="'Switch to ' + props.company.name " t-att-title="'Switch to ' + props.company.name " tabindex="0" class="d-flex flex-grow-1 align-items-center py-0 log_into ps-2" t-att-class="isCurrent ? 'alert-primary' : 'btn fw-normal border-0 ' + (isCompanyAllowed ? 'btn-link text-primary' : 'disabled')" t-on-click="() =&gt; this.logIntoCompany()">

                <span class="company_label pe-3" t-att-class="isCurrent ? 'text-900 fw-bold' : ''" t-attf-style="padding-left:{{props.level * 20}}px;">
                    <t t-out="props.company.name"/>
                </span>
            </div>
        </div>
    </DropdownItem>
    <t t-foreach="props.company.child_ids" t-as="child" t-key="child">
        <SwitchCompanyItem company="companyService.getCompany(child)" level="props.level + 1"/>
    </t>
</t>

<t t-name="web.UserMenu">
        <Dropdown class="'o_user_menu d-none d-md-block pe-0'" togglerClass="'py-1 py-lg-0'">
            <t t-set-slot="toggler">
                <img class="o_avatar o_user_avatar rounded" t-att-src="source" alt="User"/>
                <small class="oe_topbar_name d-none ms-2 text-start smaller lh-1 text-truncate" t-att-class="{'d-lg-inline-block' : env.debug}" style="max-width: 200px">
                    <t t-esc="user.name"/>
                    <mark class="d-block font-monospace text-truncate">
                        <i class="fa fa-database oi-small me-1"/><t t-esc="user.db.name"/>
                    </mark>
                </small>
            </t>
            <t t-foreach="getElements()" t-as="element" t-key="element_index">
                <t t-if="!element.hide">
                    <DropdownItem t-if="element.type == 'item' || element.type == 'switch'" href="element.href" dataset="{ menu: element.id }" onSelected="element.callback">
                        <CheckBox t-if="element.type == 'switch'" value="element.isChecked" className="'form-switch d-flex flex-row-reverse justify-content-between p-0 w-100'" onChange="element.callback">
                            <t t-out="element.description"/>
                        </CheckBox>
                        <t t-else="" t-out="element.description"/>
                    </DropdownItem>
                    <div t-if="element.type == 'separator'" role="separator" class="dropdown-divider"/>
                </t>
            </t>
        </Dropdown>
    </t>

<t t-name="web.UserMenu.ShortcutsFooterComponent">
        <span>
            <span class="fw-bolder text-primary">TIP</span> — press <span class="fw-bolder text-primary"><t t-esc="runShortcutKey"/></span> on any screen to show shortcut overlays and <span class="fw-bolder text-primary"><t t-esc="runShortcutKey"/> + KEY</span> to trigger a shortcut.
        </span>
    </t>

<t t-name="web.WebClient">
        <t t-if="!state.fullscreen">
            <NavBar/>
        </t>
        <ActionContainer/>
        <MainComponentsContainer/>
    </t>

<t t-name="web.ReportAction">
        <div class="o_action">
            <Layout display="{ controlPanel: { 'top-right' : false, 'bottom-right': false } }">
                <t t-set-slot="control-panel-create-button">
                    <button t-on-click="print" type="button" class="btn btn-primary" title="Print">Print</button>
                </t>
                <iframe t-ref="iframe" t-on-load="onIframeLoaded" class="h-100 w-100 d-block" t-att-src="reportUrl"/>
            </Layout>
        </div>
    </t>

<t t-name="FormButton.tooltip">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            Hit ENTER to
            <t t-esc="title"/>
        </div>
    </div>
</t>

<t t-name="ImportAction">
        <div class="h-100 d-flex flex-column">
            <Layout className="'o_import_action d-flex h-100 overflow-auto'" display="display">
                <t t-set-slot="control-panel-create-button">
                    <t t-if="isPreviewing">
                        <button t-if="!state.isPaused" type="button" class="btn btn-primary" t-on-click="() =&gt; this.handleImport(false)">Import</button>
                        <button t-else="" type="button" class="btn btn-primary" t-on-click="() =&gt; this.handleImport(false)">Resume</button>
                        <button type="button" class="btn btn-secondary" t-on-click="() =&gt; this.handleImport(true)">Test</button>
                    </t>
                    <FileInput acceptedFileExtensions="'.csv, .xls, .xlsx, .xlsm, .ods'" onUpload.bind="(data, files) =&gt; this.handleFilesUpload(files)" resId="model.id" resModel="this.resModel" route="'/base_import/set_file'">
                        <button t-if="isPreviewing" type="button" class="btn btn-secondary">Load File</button>
                        <button t-else="" type="button" class="btn btn-primary o_import_file">Upload File</button>
                    </FileInput>
                    <button t-on-click="() =&gt; this.exit()" type="button" class="btn btn-secondary">Cancel</button>
                </t>
                <t t-if="isPreviewing">
                    <ImportDataSidepanel filename="state.filename" options="importOptions" formattingOptions="formattingOptions" importTemplates="importTemplates" isBatched="isBatched" onOptionChanged.bind="onOptionChanged" onReload.bind="reload"/>
                    <ImportDataContent columns="model.columns" onFieldChanged.bind="onFieldChanged" onOptionChanged.bind="onOptionChanged" options="importOptions" isFieldSet.bind="isFieldSet" previewError="state.previewError" importMessages="model.importMessages"/>
                </t>
                <div t-else="" class="o_view_nocontent">
                    <div class="o_nocontent_help">
                        <p class="o_view_nocontent_smiling_face">
                            Upload an Excel or CSV file to import
                        </p>
                        <p>
                            Excel files are recommended as formatting is automatic.
                        </p>
                        <div class="mt16 mb4">Need Help?</div>
                        <div t-foreach="importTemplates" t-as="template" t-key="template">
                            <a class="btn btn-outline-primary mb32 mt8" t-att-href="template.template" aria-label="Download" data-tooltip="Download">
                                <i class="fa fa-download"/> <span><t t-esc="template.label"/></span>
                            </a>
                        </div>
                        <a href="https://www.odoo.com/documentation/17.0/applications/general/export_import_data.html" target="new">Import FAQ</a>
                    </div>
                </div>
            </Layout>
        </div>
    </t>
<t t-name="base_import.BlockUI">
        <div class="o_blockUI fixed-top d-flex justify-content-center align-items-center flex-column vh-100 bg-black-50">
            <div class="o_spinner mb-4">
                <img src="/web/static/img/spin.svg" alt="Loading..."/>
            </div>
            <div t-if="props.message or props.blockComponent">
                <div class="o_message text-center px-4" t-esc="props.message"/>
                <t t-if="props.blockComponent" t-component="props.blockComponent.class" t-props="props.blockComponent.props"/>
            </div>
        </div>
    </t>

<t t-name="ImportDataColumnError">
        <div class="o_import_report alert alert-danger mb-2">
            <t t-if="props.errors.length &gt; 1">
                <p>
                    <t t-if="props.errors[0].value">No matching records found for the following name </t>
                    <t t-else="">Multiple errors occurred </t>
                      in field <b t-esc="props.fieldInfo.label"/>:
                </p>
                <ul>
                    <t t-foreach="props.errors" t-as="error" t-key="error_index">
                        <a t-if="error_index === 3" href="#" class="o_import_report_count" t-on-click="() =&gt; this.state.isExpanded = !this.state.isExpanded">
                            <i t-attf-class="fa fa-chevron-{{state.isExpanded ? 'up' : 'down'}}"/> <t t-esc="props.errors.length - error_index"/> more
                        </a>
                        <li t-if="isErrorVisible(error_index)" t-attf-class="o_import_report_more p-0 text-{{error.priority}} {{error_index &gt; 2 ? 'list-unstyled' : ''}}">
                            <t t-if="error.rows.from === error.rows.to">
                                <b t-esc="error.value"/> at row <t t-esc="error.rows.from + 1"/>
                                <t t-if="props.resultNames and props.resultNames.length &gt; error.rows.from and props.resultNames[error.rows.from] !== ''">
                                    (<t t-esc="props.resultNames[error.rows.from]"/>)
                                </t>
                            </t>
                            <t t-else=""><b t-esc="error.value || error.message"/> at multiple rows</t>
                        </li>
                    </t>
                </ul>
            </t>
            <p t-else="" t-attf-class="mb-0 p-2 alert-{{props.errors[0].type}}" t-esc="props.errors[0].message"/>
            <t t-if="moreInfo">
                <t t-if="typeof moreInfo === 'string'" t-esc="moreInfo"/>
                <div t-else="" class="o_import_moreinfo" t-on-click="onMoreInfoClicked">
                    <a href="#" class="o_import_see_all">
                        <i class="oi oi-arrow-right"/> See possible values
                    </a>
                </div>
                <ul t-if="state.moreInfoContent" class="o_import_report_more">
                    <li t-foreach="state.moreInfoContent" t-as="msg" t-key="msg_index"><t t-esc="msg"/></li>
                </ul>
            </t>
        </div>
    </t>
<t t-name="ImportDataContent">
        <div class="o_import_data_content flex-grow-1 overflow-auto border-start">
            <div t-if="props.previewError" class="border-bottom p-2">
                <div class="alert alert-danger mb-0">
                    <p>
                        Import preview failed due to: "
                        <t t-esc="props.previewError"/>
                        ".
                    </p>
                    <p>For CSV files, you may need to select the correct separator.</p>
                    <p t-if="props.columns.length &gt; 0">Here is the start of the file we could not import:</p>
                </div>
            </div>
            <div t-if="!props.options.has_headers" class="border-bottom p-2">
                <p class="alert alert-info mb-0">
                    If the file contains
                    the column names, Odoo can try auto-detecting the
                    field corresponding to the column. This makes imports
                    simpler especially when the file has many columns.
                </p>
            </div>
            <div t-if="props.importMessages.length &gt; 0" class="border-bottom p-2">
                <t t-foreach="props.importMessages" t-as="message" t-key="\`\${message.lines[0]}-\${message_index}\`">
                    <p t-att-class="getErrorMessageClass(props.importMessages, message.type, message_index)">
                        <t t-foreach="message.lines" t-as="line" t-key="\`\${line}-\${line_index}\`">
                            <b t-esc="line"/><br/>
                        </t>
                    </p>
                </t>
            </div>
            <table t-if="!props.previewError" class="table table-borderless w-100 bg-view">
                <thead>
                    <tr class="border-bottom">
                        <th scope="col" style="width: 20%;">File Column</th>
                        <th scope="col" style="width: 20%;">Odoo Field</th>
                        <th scope="col">Comments</th>
                    </tr>
                </thead>
                <tbody>
                    <t t-foreach="props.columns" t-as="column" t-key="\`\${column_index}-\${column.id}\`">
                        <tr class="border-bottom align-middle">
                            <td>
                                <div class="o_import_file_column_cell d-flex flex-column user-select-none">
                                    <span class="fw-bold text-truncate">
                                        <span class="text-truncate" t-if="column.name" t-esc="column.name"/>
                                        <span t-else="">Untitled</span>
                                    </span>
                                    <span t-if="props.options.has_headers" class="o_import_preview fst-italic small pe-2" data-tooltip-template="ImportDataContent.tooltip" t-att-data-tooltip-info="getTooltip(column)" data-tooltip-position="right">
                                        <t t-esc="column.preview"/>
                                    </span>
                                </div>
                            </td>
                            <td>
                                <SelectMenu value="column.fieldInfo ? column.fieldInfo.fieldPath : undefined" groups="getGroups(column)" onSelect="(fieldPath) =&gt; this.onFieldChanged(column, fieldPath)" searchPlaceholder="searchPlaceholder" togglerClass="column.fieldInfo ? 'ps-1' : ''">
                                    <t t-if="column.fieldInfo">
                                        <i class="o_import_field_icon border-end" t-att-class="'position-absolute d-inline-block o_import_field_icon_' + column.fieldInfo.type" data-tooltip-template="web.FieldTooltip" t-att-data-tooltip-info="getTooltipDetails(column.fieldInfo)"/>
                                        <span class="ps-5">
                                            <t t-esc="column.fieldInfo.label"/>
                                        </span>
                                    </t>
                                    <span t-else="" class="text-warning">To import, select a field...</span>

                                    <t t-set-slot="choice" t-slot-scope="choice">
                                        <div t-att-class="\`\${choice.data.value and choice.data.value.required ? 'fw-bolder text-decoration-underline' : ''}\`">
                                            <t t-esc="choice.data.label"/>
                                        </div>
                                    </t>
                                </SelectMenu>
                            </td>
                            <td>
                                <t t-foreach="column.comments" t-as="comment" t-key="comment_index">
                                    <p class="m-0 p-2 alert" t-att-class="getCommentClass(column, comment, comment_index)"><t t-out="comment.content"/> <b t-if="comment.fieldName" t-out="comment.fieldName"/></p>
                                </t>
                                <ImportDataColumnError t-if="column.errors.length" errors="column.errors" resultNames="column.resultNames" fieldInfo="column.fieldInfo"/>
                                <ImportDataOptions t-if="column.errors.length or column.importOptions" importOptions="column.importOptions" fieldInfo="column.fieldInfo" onOptionChanged="props.onOptionChanged"/>
                            </td>
                        </tr>
                    </t>
                </tbody>
            </table>
        </div>
    </t>

    <t t-name="ImportDataContent.tooltip">
        <h5 class="text-reset p-2 m-0">Preview</h5>
        <hr class="m-0"/>
        <div class="p-2 pe-3">
            <p t-foreach="lines" t-as="line" t-key="line_index" t-out="line" class="mb-0 fs-6"/>
        </div>
    </t>
<t t-name="ImportDataOptions">
        <div t-if="isVisible and state.options.length &gt; 1" t-attf-class="o_import_dropdown o_import_field_#{props.fieldInfo.type} alert alert-danger mb-2">
            <b>When a value cannot be matched:</b>
            <select class="o_import_create_option form-select w-auto bg-light" t-att-type="props.fieldInfo.type" t-on-change="onSelectionChanged">
                <option t-foreach="state.options" t-as="option" t-key="option" t-att-value="option[0]">
                    <t t-esc="option[1]"/>
                </option>
            </select>
        </div>
    </t>
<t t-name="ImportDataProgress">
        <div t-if="props.importProgress.step &gt; 1" class="o_import_data_progress d-flex align-items-center flex-column">
            <div class="o_import_progress_dialog_batch text-center">
                Batch <span class="o_import_progress_dialog_batch_count"><t t-esc="props.importProgress.step"/></span> out of <span t-esc="props.totalSteps"/>...
                <div t-if="props.importProgress.value and state.timeLeft and !state.isInterrupted" class="o_import_progress_dialog_time_left">
                    <span>Estimated time left:</span>
                    <t t-if="state.timeLeft &gt;= 1">
                        <span class="o_import_progress_dialog_time_left_text mx-1" t-esc="minutesLeft"/><span>minutes</span>
                    </t>
                    <t t-else="">
                        <span class="o_import_progress_dialog_time_left_text mx-1" t-esc="secondsLeft"/><span>seconds</span>
                    </t>
                </div>
            </div>
            <span t-if="state.isInterrupted" class="o_import_progress_dialog_stop">
                Finalizing current batch before interrupting...
            </span>
            <div t-else="" class="d-flex align-items-center mt-2">
                <div class="progress flex-grow-1 rounded-3">
                    <div class="progress-bar progress-bar-striped" role="progressbar" aria-valuenow="props.importProgress" aria-valuemin="0" aria-valuemax="100" aria-label="Progress bar" t-att-style="'width: ' + props.importProgress.value + '%'">
                        <span class="fs-4"><t t-esc="props.importProgress.value"/>%</span>
                    </div>
                </div>
                <a class="o_progress_stop_import ms-2" role="button" t-on-click="interrupt"><i class="fa fa-close fs-2 text-danger" aria-label="Stop Import" title="Stop Import"/></a>
            </div>
        </div>
    </t>
<t t-name="ImportDataSidepanel">
        <div class="o_import_data_sidepanel p-3 overflow-auto bg-view">
            <div class="pb-4">
                <h4>Imported file</h4>
                <div class="mb-2 d-flex align-items-center">
                    <i class="fa fa-file white me-2"/>
                    <div class="fst-italic truncate"><t t-esc="fileName"/></div>
                    <span class="fst-italic"><t t-esc="fileExtension"/></span>
                </div>

                <div t-if="props.options.sheets.length &gt; 0" class="flex-row my-2">
                    <label for="o_import_sheet">Sheet:</label>
                    <select class="o_select o_import_sheet w-100 mb-3 form-select" name="o_import_sheet" t-on-change="ev =&gt; this.props.onOptionChanged('sheet', ev.target.value)" t-att-value="props.options.sheet">
                        <option t-foreach="props.options.sheets" t-as="sheet" t-key="sheet" t-att-value="sheet" t-att-selected="sheet === props.options.sheet">
                            <t t-esc="sheet"/>
                        </option>
                    </select>
                </div>
                <CheckBox value="props.options.has_headers" onChange.bind="isChecked =&gt; this.props.onOptionChanged('has_headers', isChecked)">
                    Use first row as header
                </CheckBox>
            </div>
            <div t-if="fileExtension === '.csv'" class="o_import_formatting pt-3 pb-4 border-top">
                <h4>Formatting</h4>
                <div t-foreach="Object.entries(props.formattingOptions)" t-as="option" t-key="\`\${option[0]}-\${option_index}\`" class="o_import_options">
                    <label t-att-for="\`\${option[0]}-\${option_index}\`">
                        <t t-esc="option[1].label"/>
                        <sup t-if="option[1].help" class="text-info p-1" t-att-data-tooltip="option[1].help" t-esc="'?'"/>
                    </label>
                    <input t-if="option[1].type === 'input'" t-att-id="\`\${option[0]}-\${option_index}\`" t-att-list="option[1].options ? \`list-\${ option_index }\` : null" t-attf-class="o_import_#{option[0]} o_import_dropdown w-100 mb-3" t-att-value="option[1].value" t-on-change="(ev) =&gt; this.setOptionValue(option[0], ev.target.value)"/>
                    <datalist t-if="option[1].type === 'input' and option[1].options" t-att-id="\`list-\${ option_index }\`">
                        <option t-foreach="option[1].options" t-as="opt" t-key="opt_index" t-att-value="opt.value or opt" t-att-selected="opt.value ? opt.value === option[1].value : opt === option[1].value">
                            <t t-esc="opt.label ? opt.label : opt"/>
                        </option>
                    </datalist>
                    <select t-elif="option[1].type === 'select'" t-att-class="\`o_select form-select w-100 mb-3 o_import_\${option[0]} o_import_dropdown\`" t-att-name="\`\${option[0]}-\${option_index}\`" t-on-change="(ev) =&gt; this.setOptionValue(option[0], ev.target.value)">
                        <option t-foreach="option[1].options" t-as="opt" t-key="opt_index" t-att-value="opt.value or opt" t-att-selected="opt.value ? opt.value === option[1].value : opt === option[1].value">
                            <t t-esc="opt.label ? opt.label : opt"/>
                        </option>
                    </select>
                </div>
                <button class="btn btn-primary w-100" t-on-click="() =&gt; this.props.onReload()">Reimport</button>
            </div>
            <div t-if="props.isBatched" class="pt-3 pb-4 border-top">
                <h4>Batch Import</h4>
                <div class="o_import_batch_alert fw-bold pb-2">
                    The file will be imported by batches
                </div>
                <div class="d-flex">
                    <div class="o_import_batch_limit w-50 pe-1">
                        <label class="mb-1" for="o_import_batch_limit">Batch limit</label>
                        <input class="w-100" id="o_import_batch_limit" t-att-value="getOptionValue('limit')" t-on-change="(ev) =&gt; this.setOptionValue('limit', ev.target.value || 1)"/>
                    </div>
                    <div class="w-50 ps-1" data-tooltip="Warning: ignores the labels line, empty lines and lines composed only of empty cells">
                        <label class="mb-1" for="o_import_row_start">Start at line</label>
                        <input class="w-100" id="o_import_row_start" t-att-value="getOptionValue('skip')" t-on-change="onLimitChange"/>
                    </div>
                </div>
            </div>
            <div class="pt-3 pb-4 border-top">
                <h4>Help</h4>
                <t t-foreach="props.importTemplates" t-as="template" t-key="template">
                    <a class="d-block my-2" t-att-href="template.template" aria-label="Download" data-tooltip="Download">
                        <i class="fa fa-download"/> <span><t t-esc="template.label"/></span>
                    </a>
                </t>
                <a href="https://www.odoo.com/documentation/17.0/applications/general/export_import_data.html" target="new">
                    <i class="fa fa-external-link"/>
                    Go to Import FAQ
                </a>
            </div>
            <div t-if="env.debug" class="o_import_debug_options pt-3 pb-4 border-top">
                <h4>Advanced</h4>
                <div data-tooltip="If the model uses openchatter, history tracking will set up subscriptions and send notifications during the import, but lead to a slower import.">
                    <CheckBox value="!props.options.tracking_disable" onChange.bind="(isChecked) =&gt; this.props.onOptionChanged('tracking_disable', !isChecked)">
                        Track history during import
                    </CheckBox>
                </div>
                <CheckBox value="props.options.advanced" onChange.bind="(isChecked) =&gt; this.props.onOptionChanged('advanced', isChecked)">
                    Allow matching with subfields
                </CheckBox>
            </div>
        </div>
    </t>
<t t-name="base_import.ImportRecords">
        <DropdownItem class="'o_import_menu'" onSelected.bind="importRecords">
            <i class="fa fa-fw fa-download me-1"/>Import records
        </DropdownItem>
    </t>

<t t-name="iap.ActionButtonsWidget">
        <div class="row">
            <div class="col-sm">
                <button t-on-click="onBuyLinkClicked" class="btn btn-link buy_credits px-0 o-hidden-ios text-nowrap"><i class="oi oi-arrow-right"/> Buy credits</button><br/>
                <button t-if="props.showServiceButtons" t-on-click="onViewServicesClicked" class="btn btn-link px-0 o-hidden-ios text-nowrap"><i class="oi oi-arrow-right"/> View My Services</button>
            </div>
        </div>
    </t>

<t t-name="iap.InsufficientCreditDialog">
        <Dialog>
            <div t-att-style="style">
                <t t-if="props.errorData.body">
                    <div t-raw="props.errorData.body"/>
                </t>
                <t t-if="!props.errorData.body">
                    <t t-if="props.errorData.message">
                        <span t-esc="props.errorData.message"/>
                    </t>
                    <t t-if="!props.errorData.message">
                        <span>Insufficient credit to perform this service.</span>
                    </t>
                </t>
                <t t-set-slot="footer">
                    <button class="btn btn-primary" t-on-click="buyCredits" t-esc="buttonMessage"/>
                    <button class="btn" t-on-click="close">Cancel</button>
                </t>
            </div>
        </Dialog>
    </t>
<t t-name="web_editor.HistoryDialog">
        <Dialog size="size" title="title">
            <div class="dialog-container html-history-dialog">
                <div class="revision-list d-flex flex-column align-content-stretch">
                    <t t-if="!state.revisionsData.length">
                        <div class="text-center w-100 pb-2 pt-0 px-0 fw-bolder">No history</div>
                    </t>

                    <t t-foreach="state.revisionsData" t-as="rev" t-key="rev.revision_id">
                        <a type="object" href="#" role="button" t-attf-class="btn btn-outline-primary #{state.revisionId === rev.revision_id ? 'active' : ''}" t-on-click="() =&gt; this.updateCurrentRevision(rev.revision_id )">
                            <strong><t t-esc="this.getRevisionDate(rev)"/></strong>
                            <br/>
                            <small><t t-esc="rev.create_user_name"/></small>
                        </a>
                    </t>
                </div>
                <div class="history-container o_notebook">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="history-content" data-bs-toggle="tab" data-bs-target="#history-content-tab" type="button" role="tab" aria-controls="content" aria-selected="true">Content</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="history-comparison" data-bs-toggle="tab" data-bs-target="#history-comparison-tab" type="button" role="tab" aria-controls="comparison" aria-selected="false">Comparison</button>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="history-content-tab" role="tabpanel" aria-labelledby="history-content">
                            <t t-out="state.revisionContent"/>
                        </div>
                        <div class="tab-pane fade" id="history-comparison-tab" role="tabpanel" aria-labelledby="history-comparison">
                            <t t-out="state.revisionComparison"/>
                        </div>
                    </div>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="_onRestoreRevisionClick">Restore history</button>
                <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
            </t>
        </Dialog>
    </t>
<t t-name="web_editor.DocumentAttachment">
    <div class="o_existing_attachment_cell o_we_attachment_highlight card col-2 position-relative mb-2 p-2 opacity-trigger-hover cursor-pointer" t-att-class="{ o_we_attachment_selected: props.selected }" t-on-click="props.selectAttachment">
        <RemoveButton remove="() =&gt; this.remove()"/>
        <div t-att-data-url="props.url" role="img" t-att-aria-label="props.name" t-att-title="props.name" t-att-data-mimetype="props.mimetype" class="o_image d-flex align-items-center justify-content-center"/>
        <small class="o_file_name d-block text-truncate" t-esc="props.name"/>
    </div>
</t>

<t t-name="web_editor.DocumentsListTemplate">
    <div class="o_we_existing_attachments o_we_documents" t-ref="existing-attachments">
        <div t-if="!hasContent" class="o_nocontent_help">
            <p class="o_empty_folder_image">No documents found.</p>
            <p class="o_empty_folder_subtitle">You can upload documents with the button located in the top left of the screen.</p>
        </div>
        <div t-else="" class="d-flex flex-wrap gap-2">
            <t t-foreach="state.attachments" t-as="attachment" t-key="attachment.id">
                <DocumentAttachment url="attachment.url" name="attachment.name" mimetype="attachment.mimetype" id="attachment.id" onRemoved="(attachmentId) =&gt; this.onRemoved(attachmentId)" selected="this.selectedAttachmentIds.includes(attachment.id)" selectAttachment="() =&gt; this.onClickDocument(attachment)"/>
            </t>
        </div>
    </div>
</t>
<t t-name="web_editor.FileSelectorControlPanel">
    <div class="o_we_file_selector_control_panel sticky-top d-flex flex-wrap gap-2 mb-1 p-3 align-items-end">
        <SearchMedia searchPlaceholder="props.searchPlaceholder" needle="props.needle" search="props.search"/>
        <div class="d-flex gap-3 justify-content-start align-items-center">
            <div t-if="props.showOptimizedOption" class="flex-shrink-0 form-check form-switch align-items-center" t-on-change="props.changeShowOptimized">
                <input class="o_we_show_optimized form-check-input" type="checkbox" t-att-checked="props.showOptimized" id="o_we_show_optimized_switch"/>
                <label class="form-check-label" for="o_we_show_optimized_switch">
                    Show optimized images
                </label>
            </div>
            <select t-if="showSearchServiceSelect" class="o_input o_we_search_select form-select" t-on-change="ev =&gt; props.changeSearchService(ev.target.value)">
                <option t-att-selected="props.searchService === 'all'" value="all">All</option>
                <option t-att-selected="props.searchService === 'database'" value="database">My Images</option>
                <option t-if="props.useMediaLibrary" t-att-selected="props.searchService === 'media-library'" value="media-library">Illustrations</option>
        <option t-if="props.useUnsplash" t-att-selected="props.searchService === 'unsplash'" value="unsplash">Photos (via Unsplash)</option>
            </select>
        </div>
        <div class="col justify-content-end flex-nowrap input-group has-validation">
            <input type="text" class="form-control o_input o_we_url_input o_we_transition_ease flex-grow-0" t-att-class="{ o_we_horizontal_collapse: !state.showUrlInput, 'w-auto': state.showUrlInput }" name="url" t-att-placeholder="props.urlPlaceholder" t-model="state.urlInput" t-on-input="onUrlInput" t-if="state.showUrlInput"/>
            <button type="button" class="btn o_upload_media_url_button text-nowrap" t-att-class="{ 'btn-primary': state.urlInput, 'btn-secondary': !state.urlInput}" t-on-click="onUrlUploadClick" t-att-disabled="!enableUrlUploadClick">
                    <t t-esc="props.addText"/>
            </button>
            <div class="d-flex align-items-center">
                <span t-if="state.urlInput and state.isValidUrl and state.isValidFileFormat" class="o_we_url_success text-success mx-2 fa fa-lg fa-check" title="The URL seems valid."/>
                <span t-if="state.urlInput and !state.isValidUrl" class="o_we_url_error text-danger mx-2 fa fa-lg fa-times" title="The URL does not seem to work."/>
                <span t-if="props.urlWarningTitle and state.urlInput and state.isValidUrl and !state.isValidFileFormat" class="o_we_url_warning text-warning mx-2 fa fa-lg fa-warning" t-att-title="props.urlWarningTitle"/>
            </div>
        </div>
        <input type="file" class="d-none o_file_input" t-on-change="onChangeFileInput" t-ref="file-input" t-att-accept="props.accept" t-att-multiple="props.multiSelect and 'multiple'"/>
        <div class="col-auto btn-group">
            <button type="button" class="btn btn-primary o_upload_media_button" t-on-click="onClickUpload">
                <t t-esc="props.uploadText"/>
            </button>
        </div>
    </div>
</t>

<t t-name="web_editor.FileSelector">
    <div>
        <FileSelectorControlPanel uploadText="uploadText" accept="fileMimetypes" urlPlaceholder="urlPlaceholder" addText="addText" searchPlaceholder="searchPlaceholder" urlWarningTitle="urlWarningTitle" uploadUrl="(url) =&gt; this.uploadUrl(url)" uploadFiles="(files) =&gt; this.uploadFiles(files)" showOptimizedOption="showOptimizedOption" showOptimized="state.showOptimized" changeShowOptimized="showOptimized =&gt; this.state.showOptimized = !this.state.showOptimized" changeSearchService="service =&gt; this.state.searchService = service" searchService="state.searchService" needle="state.needle" search="(needle) =&gt; this.handleSearch(needle)" useMediaLibrary="props.useMediaLibrary" validateUrl="validateUrl" multiSelect="props.multiSelect" useUnsplash="state.useUnsplash"/>
        <t t-call="{{ constructor.attachmentsListTemplate }}"/>
        <div t-if="state.unsplashError" class="d-flex mt-2 unsplash_error">
            <UnsplashError title="errorTitle" subtitle="errorSubtitle" showCredentials="['key_not_found', 401].includes(state.unsplashError)" submitCredentials="(key, appId)  =&gt; this.submitCredentials(key, appId)" hasCredentialsError="state.unsplashError === 401"/>
        </div>
        <div name="load_more_attachments" class="pt-3 pb-1 text-center mx-auto o_we_load_more" t-ref="load-more-button">
            <button t-if="canLoadMore" class="btn btn-primary o_load_more" type="button" t-on-click="handleLoadMore">
                Load more...
            </button>
            <div t-elif="hasContent" class="mt-2 o_load_done_msg">
                <span><i t-esc="allLoadedText"/></span>
            </div>
        </div>
        <div t-if="this.state.canScrollAttachments" class="position-sticky d-flex align-items-center mx-auto btn btn-primary rounded-circle oi oi-chevron-down o_scroll_attachments" t-on-click="handleScrollAttachments"/>
    </div>
</t>
<t t-name="web_editor.IconSelector">
    <div>
        <div class="o_we_file_selector_control_panel sticky-top d-flex gap-2 align-items-center mb-1 py-4 px-3">
            <SearchMedia searchPlaceholder="searchPlaceholder" search.bind="this.search" needle="state.needle"/>
        </div>
        <div class="font-icons-icons">
            <t t-foreach="state.fonts" t-as="font" t-key="font.base">
                <div t-if="!font.icons.length" class="o_nocontent_help">
                    <p class="o_empty_folder_image">No pictograms found.</p>
                    <p class="o_empty_folder_subtitle">Try searching with other keywords.</p>
                </div>
                <span t-foreach="font.icons" t-as="icon" t-key="icon.id" t-att-title="icon.names[0]" t-att-aria-label="icon.names[0]" role="img" class="font-icons-icon m-2 fs-2 p-3 cursor-pointer text-center" t-att-class="{ o_we_attachment_selected: this.selectedMediaIds.includes(icon.id) }" t-attf-class="{{ font.base }} {{ icon.names[0] }}" t-on-click="() =&gt; this.onClickIcon(font, icon)"/>
            </t>
        </div>
    </div>
</t>
<t t-name="web_editor.AutoResizeImage">
    <div t-ref="auto-resize-image-container" class="o_existing_attachment_cell o_we_image align-items-center justify-content-center me-1 mb-1 opacity-trigger-hover opacity-0 cursor-pointer" t-att-class="{ o_we_attachment_optimized: props.isOptimized, 'o_loaded position-relative opacity-100': state.loaded, o_we_attachment_selected: props.selected, 'position-fixed': !state.loaded }" t-on-click="props.onImageClick">
        <RemoveButton t-if="props.isRemovable" model="props.model" remove="() =&gt; this.remove()"/>
        <div class="o_we_media_dialog_img_wrapper">
            <img t-ref="auto-resize-image" class="o_we_attachment_highlight img img-fluid w-100" t-att-src="props.src" t-att-alt="props.altDescription" t-att-title="props.title" loading="lazy"/>
            <a t-if="props.author" class="o_we_media_author position-absolute start-0 bottom-0 end-0 text-truncate text-center text-primary fs-6 bg-white-50" t-att-href="props.authorLink" target="_blank" t-esc="props.author"/>
        </div>
        <span t-if="props.isOptimized" class="badge position-absolute bottom-0 end-0 m-1 text-bg-success">Optimized</span>
    </div>
</t>

<t t-name="web_editor.ExternalImage">
    <t t-if="record.mediaType == 'libraryMedia'">
        <AutoResizeImage author="record.author" src="record.thumbnail_url" authorLink="record.author_link" title="record.tooltip" altDescription="record.tooltip" minRowHeight="MIN_ROW_HEIGHT" selected="this.selectedMediaIds.includes(record.id)" onImageClick="() =&gt; this.onClickMedia(record)" onLoaded="(imgEl) =&gt; this.onImageLoaded(imgEl, record)"/>
    </t>
        <t t-elif="record.mediaType == 'unsplashRecord'">
            <AutoResizeImage src="record.url" author="record.user.name" authorLink="record.user.links.html" name="record.user.name" title="record.user.name" altDescription="record.alt_description" selected="this.selectedRecordIds.includes(record.id)" onImageClick="() =&gt; this.onClickRecord(record)" minRowHeight="MIN_ROW_HEIGHT" onLoaded="(imgEl) =&gt; this.onImageLoaded(imgEl, record)"/>
        </t>
</t>

<t t-name="web_editor.ImagesListTemplate">
    <div class="o_we_existing_attachments o_we_images d-flex flex-wrap my-0" t-ref="existing-attachments">
        <t t-if="!hasContent and !isFetching">
            <div t-if="state.needle" class="o_nocontent_help">
                <p class="o_empty_folder_image">No images found.</p>
                <p class="o_empty_folder_subtitle">Wow, it feels a bit empty in here. Upload from the button in the top right corner!</p>
            </div>
            <div t-else="" class="o_we_search_prompt">
                <h2>Discover a world of awesomeness in our copyright-free image haven. No legal drama, just nice images!</h2>
            </div>
        </t>
        <t t-else="">
            <t t-if="['all', 'database'].includes(state.searchService)">
                <t t-foreach="state.attachments" t-as="attachment" t-key="attachment.id">
                    <AutoResizeImage t-if="!attachment.original_id or state.showOptimized" id="attachment.id" isOptimized="!!attachment.original_id" isRemovable="true" onRemoved="(attachmentId) =&gt; this.onRemoved(attachmentId)" selected="this.selectedAttachmentIds.includes(attachment.id)" src="attachment.thumbnail_src or attachment.image_src" name="attachment.name" title="attachment.name" altDescription="attachment.altDescription" model="attachment.res_model" minRowHeight="MIN_ROW_HEIGHT" onImageClick="() =&gt; this.onClickAttachment(attachment)" onLoaded="(imgEl) =&gt; this.onImageLoaded(imgEl, attachment)"/>
                </t>
            </t>
            <t id="o_we_media_library_images" t-if="['all', 'unsplash', 'media-library'].includes(state.searchService)">
            <t t-foreach="combinedRecords" t-as="record" t-key="record.id">
                <t t-call="web_editor.ExternalImage"/>
            </t>
        </t>
    <t t-foreach="[...Array(20).keys()]" t-as="i" t-key="i">
                <div class="o_we_attachment_placeholder"/>
            </t>
        </t>
    </div>
</t>
<t t-name="web_editor.MediaDialog">
    <Dialog contentClass="contentClass" size="size" title="title" modalRef="modalRef">
        <Notebook pages="tabs" onPageUpdate.bind="onTabChange" defaultPage="state.activeTab"/>
        <t t-set-slot="footer">
            <button class="btn btn-primary" t-on-click="() =&gt; this.save()" t-ref="add-button">Add</button>
            <button class="btn btn-secondary" t-on-click="() =&gt; this.props.close()">Discard</button>
        </t>
    </Dialog>
</t>
<t t-name="web_editor.VideoOption">
    <div class="mb-1">
        <label class="d-flex align-items-start gap-2 cursor-pointer" t-on-change="props.onChangeOption">
            <div class="o_switch flex-shrink-0">
                <input type="checkbox" t-att-checked="props.value"/>
                <span/>
            </div>
            <span t-esc="props.label"/>
            <span t-if="props.description" class="text-muted" t-esc="props.description"/>
        </label>
    </div>
</t>

<t t-name="web_editor.VideoIframe">
    <iframe t-att-src="this.props.src" class="o_video_dialog_iframe mw-100 mh-100 overflow-hidden shadow" width="1280" height="720" allowfullscreen="allowfullscreen" frameborder="0"/>
</t>

<t t-name="web_editor.VideoSelector">
    <div class="row">
        <div class="col mt-4 o_video_dialog_form">
            <div class="mb-2">
                <label for="o_video_text">
                    <b>Video code </b>(URL or Embed)
                </label>
                <div class="text-start">
                    <small class="text-muted">Accepts <b><i>Youtube</i></b>, <b><i>Vimeo</i></b>, <b><i>Dailymotion</i></b> and <b><i>Youku</i></b> videos</small>
                </div>
                <textarea t-ref="autofocus" t-model="state.urlInput" class="form-control" id="o_video_text" placeholder="Copy-paste your URL or embed code here" t-on-input="onChangeUrl" t-att-class="{ 'is-valid': state.urlInput and !this.state.errorMessage, 'is-invalid': state.urlInput and this.state.errorMessage }"/>
            </div>
            <div t-if="shownOptions.length" class="o_video_dialog_options">
                <VideoOption t-foreach="shownOptions" t-as="option" t-key="option.id" value="option.value" onChangeOption="() =&gt; this.onChangeOption(option.id)" label="option.label" description="option.description"/>
            </div>
            <t t-if="state.vimeoPreviews.length">
                <span class="fw-bold">Suggestions</span>
                <div id="video-suggestion" class="mt-4 d-flex flex-wrap mh-75 overflow-auto">
                    <t t-foreach="state.vimeoPreviews" t-as="vimeoPreview" t-key="vimeoPreview.id">
                        <div class="o_sample_video w-25 mh-100 cursor-pointer" t-on-click="() =&gt; this.onClickSuggestion(vimeoPreview.src)">
                            <img class="mw-100 mh-100 p-1" t-att-src="vimeoPreview.thumbnailSrc"/>
                        </div>
                    </t>
                </div>
            </t>
        </div>
        <div class="col-md-6">
            <div class="o_video_preview position-relative border-0 p-3">
                <div t-if="this.state.src and !this.state.errorMessage" class="o_video_dialog_preview_text mb-2">Preview</div>
                <div class="media_iframe_video">
                    <div class="media_iframe_video_size"/>
                    <VideoIframe t-if="this.state.src and !this.state.errorMessage" src="this.state.src"/>
                    <div t-if="this.state.errorMessage" class="alert alert-warning o_video_dialog_iframe mw-100 mh-100 mb-2 mt-2" t-esc="this.state.errorMessage"/>
                </div>
            </div>
        </div>
    </div>
</t>
<t t-name="web_editor.ProgressBar">
    <small class="text-info d-flex align-items-center me-2">
        <span t-if="!props.hasError and !props.uploaded"><i class="fa fa-circle-o-notch fa-spin me-2"/></span>
        <span class="fst-italic fw-bold text-truncate flex-grow-1 me-2" t-esc="props.name"/>
        <span class="fw-bold text-nowrap" t-esc="props.size"/>
    </small>
    <small t-if="props.uploaded or props.hasError" class="d-flex align-items-center mt-1">
        <span t-if="props.uploaded" class="text-success"><i class="fa fa-check my-1 me-1"/> File has been uploaded</span>
        <span t-else="" class="text-danger"><i class="fa fa-times float-start my-1 me-1"/> <span class="o_we_error_text" t-esc="props.errorMessage ? props.errorMessage : 'File could not be saved'"/></span>
    </small>
    <div t-else="" class="progress">
        <div class="progress-bar bg-info progress-bar-striped progress-bar-animated" role="progressbar" t-attf-style="width: {{this.progress}}%;" aria-label="Progress bar"><span t-esc="this.progress + '%'"/></div>
    </div>
    <hr/>
</t>

<t t-name="web_editor.UploadProgressToast">
    <div class="o_notification_manager o_upload_progress_toast">
        <div t-if="state.isVisible" class="o_notification position-relative show fade mb-2 border border-info bg-white" role="alert" aria-live="assertive" aria-atomic="true">
            <button type="button" class="btn btn-close o_notification_close p-2" aria-label="Close" t-on-click="props.close"/>
            <div class="o_notification_body ps-2 pe-4 py-2">
                <div class="me-auto o_notification_content">
                    <div t-foreach="state.files" t-as="file" t-key="file" class="o_we_progressbar">
                        <ProgressBar progress="file_value.progress" errorMessage="file_value.errorMessage" hasError="file_value.hasError" name="file_value.name" uploaded="file_value.uploaded" size="file_value.size"/>
                    </div>
                </div>
            </div>
        </div>
    </div>
</t>
<t t-name="web_editor.HtmlField">
        <t t-if="props.readonly || props.notEditable || (sandboxedPreview and !state.showCodeView)">
            <t t-if="this.showIframe">
                <iframe t-ref="iframe" t-att-class="{'d-none': !this.state.iframeVisible, 'o_readonly': true}" t-att-sandbox="sandboxedPreview ? 'allow-same-origin allow-popups allow-popups-to-escape-sandbox' : false"/>
            </t>
            <t t-else="">
                <div t-ref="readonlyElement" class="o_readonly" t-out="markupValue"/>
            </t>
        </t>
        <div t-else="" class="h-100" t-ref="spellcheck">
            <t t-if="state.showCodeView">
                <textarea t-ref="codeView" class="o_codeview" t-att-value="markupValue"/>
            </t>
            <t t-else="">
                <t t-component="this.Wysiwyg" t-props="{                     'options': this.wysiwygOptions,                     'startWysiwyg': this.startWysiwyg.bind(this),                     'editingValue': this.currentEditingValue,                 }"/>
            </t>
            <t t-if="isTranslatable">
                <span t-attf-style="font-size: 15px; position: absolute; right: {{this.props.codeview ? '40px' : '5px'}}; top: 5px;">
                    <TranslationButton fieldName="props.name" record="props.record"/>
                </span>
            </t>
        </div>
        <div t-if="state.showCodeView || (sandboxedPreview and !props.readonly and !props.notEditable)" t-ref="codeViewButton" id="codeview-btn-group" class="btn-group" t-on-click="toggleCodeView">
            <button class="o_codeview_btn btn btn-primary">
                <i class="fa fa-code"/>
            </button>
        </div>
    </t>

<t t-name="web_editor.FieldTextHtml.button.translate">
        <div class="btn-group float-end">
            <button t-if="widget.field.translate" class="o_field_translate btn btn-secondary" style="height: 24px; padding: 1px 17px 0px 5px" aria-label="Translate" title="Translate">
                <span class="fa fa-language fa-lg oe_input_icon"/>
            </button>
        </div>
    </t>

    <t t-name="web_editor.FieldTextHtml.fullscreen">
        <span style="margin: 5px; position: fixed; top: 0; right: 0; z-index: 2000;">
            <button class="o_fullscreen btn btn-primary" style="width: 24px; height: 24px; background-color: #337ab7; border: 1px solid #2e6da4; border-radius: 4px; padding: 0; position: relative;">
                <img src="/web_editor/font_to_img/61541/rgb(255,255,255)/16" style="position: absolute; top: 3px; left: 4px;" alt="Fullscreen"/>
            </button>
        </span>
    </t>

<t t-name="web_unsplash.UnsplashError">
    <div class="alert alert-info w-100">
        <h4><t t-esc="props.title"/></h4>
        <p><t t-esc="props.subtitle"/></p>
        <UnsplashCredentials t-if="props.showCredentials" submitCredentials="props.submitCredentials" hasCredentialsError="props.hasCredentialsError"/>
    </div>
</t>

<t t-name="web_unsplash.UnsplashCredentials">
    <div class="d-flex align-items-center flex-wrap">
        <a href="https://www.odoo.com/documentation/17.0/applications/websites/website/optimize/unsplash.html#generate-an-unsplash-access-key" class="me-1" target="_blank">Get an Access key</a>
        and paste it here:
        <input type="text" class="o_input o_required_modifier form-control w-auto mx-2" id="accessKeyInput" placeholder="Paste your access key here" t-model="state.key" t-on-input="() =&gt; this.state.hasKeyError = false" t-att-class="{ 'is-invalid': state.hasKeyError }"/>
        and paste
        <a href="https://www.odoo.com/documentation/17.0/applications/websites/website/optimize/unsplash.html#generate-an-unsplash-application-id" class="mx-1" target="_blank">Application ID</a>
        here:
        <input type="text" class="o_input o_required_modifier form-control w-auto ms-2" placeholder="Paste your application ID here" t-model="state.appId" t-on-input="() =&gt; this.state.hasAppIdError = false" t-att-class="{ 'is-invalid': state.hasAppIdError }"/>
        <button type="button" class="btn btn-primary w-auto ms-3 p-auto save_unsplash" t-on-click="() =&gt; this.submitCredentials()">Apply</button>
    </div>
</t>

<t t-name="web_tour.ToursDialog">
    <Dialog title="title">
        <t t-call="web_tour.ToursDialog.Table">
            <t t-set="caption">Onboarding tours</t>
            <t t-set="tours" t-value="onboardingTours"/>
        </t>
        <t t-if="testingTours.length" t-call="web_tour.ToursDialog.Table">
            <t t-set="caption">Testing tours</t>
            <t t-set="tours" t-value="testingTours"/>
        </t>
        <t t-set-slot="footer">
            <button class="btn btn-primary o-default-button" t-on-click="() =&gt; props.close()">Close</button>
        </t>
    </Dialog>
</t>

<t t-name="web_tour.ToursDialog.Table">
    <div class="table-responsive">
        <table class="table table-sm table-striped">
            <caption style="caption-side: top; font-size: 14px">
                <t t-esc="caption"/>
            </caption>
            <thead>
                <tr>
                    <th>Sequence</th>
                    <th width="50%">Name</th>
                    <th width="50%">Path</th>
                    <th>Start</th>
                    <th>Test</th>
                </tr>
            </thead>
            <tbody>
                <tr t-foreach="tours" t-as="tour" t-key="tour.name">
                    <td><t t-esc="tour.sequence"/></td>
                    <td><t t-esc="tour.name"/></td>
                    <td><t t-esc="tour.url"/></td>
                    <td>
                        <button type="button" class="btn btn-primary fa fa-play o_start_tour" t-on-click.prevent="_onStartTour" t-att-data-name="tour.name" aria-label="Start tour" title="Start tour"/>
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary fa fa-cogs o_test_tour" t-on-click.prevent="_onTestTour" t-att-data-name="tour.name" aria-label="Test tour" title="Test tour"/>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</t>

<t t-name="web_tour.TourPointer">
        <div t-if="props.pointerState.isVisible" t-ref="pointer" t-attf-class="                 o_tour_pointer                 o_{{ position }}                 {{ isOpen ? 'o_open' : (props.bounce ? 'o_bouncing' : '') }}                 {{ props.pointerState.onClick ? 'cursor-pointer' : '' }}             " t-attf-style="                 --TourPointer__width: {{ constructor.width }}px;                 --TourPointer__height: {{ constructor.height }}px;             " t-on-mouseenter="props.pointerState.onMouseEnter or (() =&gt; {})" t-on-mouseleave="props.pointerState.onMouseLeave or (() =&gt; {})" t-on-click="props.pointerState.onClick or (() =&gt; {})">
            <div class="o_tour_pointer_tip position-absolute"/>
            <div class="o_tour_pointer_content rounded overflow-hidden px-3 py-2 w-100 h-100 position-relative" t-att-class="{ invisible: content and !isOpen }">
                <t t-out="content"/>
            </div>
        </div>
    </t>

</templates>`);
                    });